- en: Chapter 1. Installing Docker
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 1 章：安装 Docker
- en: In this chapter, we will find out where to download and how to install Docker
    on various operating systems. Some basic Docker commands will be used so that
    we can verify whether the installation was successful and to interact with Docker
    for the very first time.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将了解如何在各种操作系统上下载和安装 Docker。我们将使用一些基本的 Docker 命令，以便我们可以验证安装是否成功，并第一次与 Docker
    交互。
- en: 'The following topics are covered in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖的主题有：
- en: What is Docker?
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是 Docker？
- en: Docker on Ubuntu Trusty 14.04 LTS
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ubuntu Trusty 14.04 LTS 上的 Docker
- en: Docker on Mac OS X
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mac OS X 上的 Docker
- en: Docker on Windows
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows 上的 Docker
- en: Docker on Amazon EC2
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 亚马逊 EC2 上的 Docker
- en: This book will take you through all the steps, from installing Docker to running
    your own **Platform as a Service** (**PaaS**) so that you can push your code without
    having to think about infrastructure or server provisioning.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本书将带你完成从安装 Docker 到运行自己的**平台即服务**（**PaaS**）的所有步骤，这样你就可以推送代码而无需考虑基础设施或服务器配置。
- en: The theme of this book will be to create a modular web application using an
    isolated web server and a database.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的主题将是使用隔离的 Web 服务器和数据库创建一个模块化的 Web 应用程序。
- en: What is Docker?
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是 Docker？
- en: 'On Docker''s website, [http://www.docker.com](http://www.docker.com), the following
    definition is provided for Docker:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Docker 的官方网站 [http://www.docker.com](http://www.docker.com) 上，提供了以下对 Docker
    的定义：
- en: '*"Docker is an open platform for developers and sysadmins to build, ship, and
    run distributed applications."*'
  id: totrans-12
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*"Docker 是一个开放平台，供开发者和系统管理员构建、运输和运行分布式应用程序。"*'
- en: What this means in a more practical sense is that Docker is a way of enclosing
    services in isolated environments, called **containers**, so that they can be
    packaged with all they need in terms of libraries and dependencies and the developer
    can be certain that the service will run wherever Docker runs.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 更实际的意义是，Docker 是一种将服务封装在隔离环境中（称为**容器**）的方法，这样它们就可以与所需的所有库和依赖项一起打包，并且开发者可以确保该服务将在
    Docker 运行的任何地方运行。
- en: Docker on Ubuntu Trusty 14.04 LTS
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ubuntu Trusty 14.04 LTS 上的 Docker
- en: The OS, flavor and version, where it's easiest to install Docker is in Ubuntu
    Trusty 14.04 LTS. This is a pretty quick task since we can use the built-in package
    manager `apt-get`.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 最容易安装 Docker 的操作系统、版本和发行版是 Ubuntu Trusty 14.04 LTS。这个任务非常快速，因为我们可以使用内置的包管理器`apt-get`。
- en: Note
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Note that Docker is called `docker.io` here and just `docker` on other platforms
    since Ubuntu (and Debian) already has a package named `docker`.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在这里 Docker 被称为`docker.io`，而在其他平台上仅称为`docker`，因为 Ubuntu（和 Debian）已经有一个名为`docker`的包。
- en: 'First we open a terminal and execute these commands one by one:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 首先打开终端并逐一执行这些命令：
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Here, we first update the lists of the packet manager `apt-get` in order to
    get information about all the packages, versions, and dependencies that are available.
    The next line actually installs Docker, and after that, we enable Ubuntu to tab-complete
    our Docker commands.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们首先更新包管理器`apt-get`的包列表，以便获取所有可用的包、版本和依赖项的信息。接下来的命令实际上会安装 Docker，之后，我们启用
    Ubuntu 来自动完成 Docker 命令的补全。
- en: When you've done this without errors, run `sudo docker.io version` just to verify
    that it works as expected.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 当你完成这些操作并没有遇到错误时，运行`sudo docker.io version`，以验证它是否按预期工作。
- en: Note
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Note that this installs the latest released Ubuntu package version, which might
    not necessarily be the latest released Docker version.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这将安装最新发布的 Ubuntu 包版本，但这不一定是最新发布的 Docker 版本。
- en: 'In order to have the latest version from an alternative Docker-maintained repository,
    we can execute the following command:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 为了从 Docker 维护的替代仓库获得最新版本，我们可以执行以下命令：
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This adds an alternative repository maintained by the Docker team and installs
    Docker for you as a much more updated version than the one that comes via the
    Ubuntu repository. Note that the Docker package is named `lxc-docker` when it
    is installed this way. The command used to run Docker commands is still `docker`.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 这将添加一个由 Docker 团队维护的替代仓库，并为你安装比 Ubuntu 仓库中提供的版本更为更新的 Docker。请注意，当以这种方式安装时，Docker
    包名为`lxc-docker`。运行 Docker 命令使用的命令仍然是`docker`。
- en: Upgrading Docker on Ubuntu Trusty 14.04 LTS
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 Ubuntu Trusty 14.04 LTS 上升级 Docker
- en: 'To check and download upgrades, all you have to do is to execute this command
    in a terminal:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查并下载升级，你只需要在终端中执行以下命令：
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: User permissions
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用户权限
- en: For convenience, it's preferred to add our user to the system's Docker user
    group so that we can control Docker without using `sudo`. This gives our user
    permission to execute Docker commands.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 为了方便起见，建议将我们的用户添加到系统的 Docker 用户组中，这样我们就可以无需使用 `sudo` 来控制 Docker。这样会给我们的用户执行
    Docker 命令的权限。
- en: 'Replace `USER` with your username before you run the code:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行代码之前，请将 `USER` 替换为你的用户名：
- en: '[PRE3]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: You might have to log out and log in again for it to work. When you are logged
    back in, run `docker ps` to verify that there are no permission problems.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能需要注销并重新登录才能使其生效。重新登录后，运行 `docker ps` 来验证是否没有权限问题。
- en: Note
  id: totrans-35
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: More detailed information can be found in the official installation guide at
    [https://docs.docker.com/installation/ubuntulinux/](https://docs.docker.com/installation/ubuntulinux/).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 更详细的信息可以在官方安装指南中找到，网址为 [https://docs.docker.com/installation/ubuntulinux/](https://docs.docker.com/installation/ubuntulinux/)。
- en: Docker on Mac OS X
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Mac OS X 上的 Docker
- en: To be able to use Docker on Mac OS X, we have to run the Docker service inside
    a virtual machine (VM) since Docker uses Linux-specific features to run. We don't
    have to get frightened by this since the installation process is very short and
    straightforward.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 为了能够在 Mac OS X 上使用 Docker，我们必须在虚拟机（VM）中运行 Docker 服务，因为 Docker 使用特定于 Linux 的功能来运行。我们不必对此感到害怕，因为安装过程非常简单且直接。
- en: Installation
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装
- en: There is an OS X installer that installs everything we need, that is, VirtualBox,
    boot2docker, and Docker.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个 OS X 安装程序可以安装我们需要的所有工具，即 VirtualBox、boot2docker 和 Docker。
- en: VirtualBox is a virtualizer in which we can run the lightweight Linux distribution,
    and boot2docker is a virtual machine that runs completely in the RAM and occupies
    just about 27 MB of space.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: VirtualBox 是一个虚拟化工具，我们可以在其中运行轻量级的 Linux 发行版，而 boot2docker 是一个完全在内存中运行的虚拟机，占用的空间仅约
    27 MB。
- en: Note
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The latest released version of the OS X installer can be found at [https://github.com/boot2docker/osx-installer/releases/latest](https://github.com/boot2docker/osx-installer/releases/latest).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 最新发布的 OS X 安装程序版本可以在 [https://github.com/boot2docker/osx-installer/releases/latest](https://github.com/boot2docker/osx-installer/releases/latest)
    找到。
- en: 'Now, let''s take a look at how the installation should be done with the following
    steps:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看如何按照以下步骤完成安装：
- en: Download the installer by clicking on the button named **Boot2Docker-1.3.0.pkg**
    to get the `.pkg` file, as shown in the following screenshot:![Installation](img/3946OT_01_01.jpg)
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击名为 **Boot2Docker-1.3.0.pkg** 的按钮下载安装程序，以获取 `.pkg` 文件，如下图所示：![安装](img/3946OT_01_01.jpg)
- en: Double-click on the downloaded `.pkg` file and go through with the installation
    process.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击下载的 `.pkg` 文件并完成安装过程。
- en: Open the **Finder** window and navigate to your `Applications` folder; locate
    **boot2docker** and double-click on it. A terminal window will open and issue
    a few commands, as shown here:![Installation](img/3946OT_01_02.jpg)
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 **Finder** 窗口并导航到 `Applications` 文件夹；找到 **boot2docker** 并双击它。会打开一个终端窗口并执行一些命令，如下所示：![安装](img/3946OT_01_02.jpg)
- en: This runs a Linux VM, named `boot2docker-vm`, that has Docker pre-installed
    in VirtualBox. The Docker service in the VM runs in daemon (background) mode,
    and a Docker client is installed in OS X, which communicates directly with the
    Docker daemon inside the VM via the Docker Remote API.
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这将运行一个名为 `boot2docker-vm` 的 Linux 虚拟机，该虚拟机在 VirtualBox 中预安装了 Docker。虚拟机中的 Docker
    服务以守护进程（后台）模式运行，Docker 客户端安装在 OS X 中，并通过 Docker 远程 API 直接与虚拟机中的 Docker 守护进程通信。
- en: You will see a screen similar to the following screenshot, which tells you to
    set some environment variables:![Installation](img/3946OT_01_03.jpg)
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将看到一个类似于以下截图的界面，提示你设置一些环境变量：![安装](img/3946OT_01_03.jpg)
- en: 'We open up the `~/.bash_profile` file and paste three lines from our output,
    as follows, at the end of this file:'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们打开 `~/.bash_profile` 文件，并将输出的三行代码粘贴到该文件的末尾，如下所示：
- en: '[PRE4]'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The reason why we do this is so that our Docker client knows where to find the
    Docker daemon. If you want to find the IP in the future, you can do so by executing
    the `boot2docker ip` command. Adding the preceding lines will set these variables
    every time a new terminal session starts. When you're done, close the terminal
    window. Then, open a new window and type `echo $DOCKER_HOST` to verify that the
    environment variable is set as it should be. You should see the IP and port your
    boot2docker VM printed.
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们这样做的原因是让 Docker 客户端知道在哪里找到 Docker 守护进程。如果将来你想找到 IP，可以通过执行 `boot2docker ip`
    命令来实现。添加前面这些行将在每次新的终端会话开始时设置这些变量。完成后，关闭终端窗口。然后，打开一个新窗口并输入 `echo $DOCKER_HOST`
    来验证环境变量是否设置正确。你应该能看到你的 boot2docker 虚拟机的 IP 和端口。
- en: Type `docker version` to verify that you can use the Docker command. An output
    that looks similar to the last few lines of the preceding screenshot will mean
    that we have succeeded.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入 `docker version` 来验证你是否可以使用 Docker 命令。如果输出的结果与前面截图的最后几行相似，那就意味着我们成功了。
- en: Upgrading Docker on Mac OS X
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 Mac OS X 上升级 Docker
- en: 'Since Docker is relatively new, there could be a lot happening in every update,
    so make sure that you check for updates on a regular basis. From time to time,
    go to the Mac OS X installer download page and check whether there is an upgrade
    available. If there is, execute these commands to update it:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Docker 相对较新，每次更新时可能会有很多变化，因此确保定期检查更新。时不时地，访问 Mac OS X 安装程序下载页面，检查是否有可用的升级。如果有，请执行以下命令来进行更新：
- en: '[PRE5]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Docker on Windows
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Windows 上的 Docker
- en: Just as we have to install a Linux virtual machine when installing Docker in
    OS X, we have to do the same in Windows in order to run Docker because of the
    Linux kernel features that Docker builds on. OS X has a native Docker client that
    directly communicates with the Docker daemon inside the virtual machine, but there
    isn't one available for Windows yet. There is a native Windows version of the
    Docker client coming, but it will not be available by the time this book is published.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 就像在 OS X 上安装 Docker 时，我们需要安装一个 Linux 虚拟机一样，在 Windows 上运行 Docker 也需要这样做，这是因为
    Docker 构建依赖于 Linux 内核特性。OS X 拥有一个原生的 Docker 客户端，可以直接与虚拟机中的 Docker 守护进程通信，但 Windows
    上目前还没有此类客户端。虽然有一个即将发布的 Windows 版 Docker 客户端，但在本书出版时它仍未发布。
- en: Installation
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装
- en: There is a Windows installer that installs everything we need in order to run
    Docker. For this, go to [https://github.com/boot2docker/windows-installer/releases/latest](https://github.com/boot2docker/windows-installer/releases/latest).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个 Windows 安装程序，可以安装我们运行 Docker 所需的一切。为此，请访问 [https://github.com/boot2docker/windows-installer/releases/latest](https://github.com/boot2docker/windows-installer/releases/latest)。
- en: 'Now, let''s take a look at how the installation should be done with the help
    of the following steps:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们通过以下步骤来看看如何完成安装：
- en: Click on the **docker-install.exe** button to download the `.exe` file, as shown
    in the following screenshot:![Installation](img/3946OT_01_04.jpg)
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **docker-install.exe** 按钮以下载 `.exe` 文件，如下图所示：![Installation](img/3946OT_01_04.jpg)
- en: When the download is complete, run the downloaded installer. Follow through
    the installation process, and you will get VirtualBox, msysGit, and boot2docker
    installed.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载完成后，运行下载的安装程序。按照安装过程操作，你将安装 VirtualBox、msysGit 和 boot2docker。
- en: Go to your `Program Files` folder and click on the newly installed boot2docker
    to start using Docker. If you are prompted to enter a passphrase, just press *Enter*.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往你的 `Program Files` 文件夹，点击新安装的 boot2docker 开始使用 Docker。如果系统提示你输入密码短语，只需按 *Enter*。
- en: Type `docker version` to verify that you can use the Docker command.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入 `docker version` 来验证你是否可以使用 Docker 命令。
- en: Upgrading Docker on Windows
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 Windows 上升级 Docker
- en: 'A new software changes often and to keep `boot2docker` updated, invoke these
    commands:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 新软件经常发生变化，为了保持 `boot2docker` 更新，请执行以下命令：
- en: '[PRE6]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Docker on Amazon EC2
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Amazon EC2 上的 Docker
- en: Throughout this book, I will use an Amazon EC2 instance, and since it is a superb
    place to host your PaaS, I will recommend that you do the same.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我将使用一个 Amazon EC2 实例，鉴于它是托管 PaaS 的理想场所，我会推荐你也这么做。
- en: '**EC2** stands for **E**lastic **C**ompute **C**loud, and it is an infrastructure
    type of service. Amazon EC2 offers virtual servers that are created and available
    within a minute of ordering them.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '**EC2** 代表 **E**lastic **C**ompute **C**loud，它是一种基础设施类型的服务。Amazon EC2 提供的虚拟服务器可以在订购后的一分钟内创建并可用。'
- en: Note
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Amazon has instances named `t[x].micro` that you can use for free for 750 hours
    per month. You can read more about them at [http://aws.amazon.com/free](http://aws.amazon.com/free).
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊提供名为`t[x].micro`的实例，您可以每月免费使用 750 小时。您可以在[http://aws.amazon.com/free](http://aws.amazon.com/free)上了解更多信息。
- en: Amazon has its own Linux named Amazon Linux AMI that can be used to run Docker.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊有自己命名的 Linux 版本——Amazon Linux AMI，可用于运行 Docker。
- en: Installation
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装
- en: 'Let''s see how the installation is done with the following steps:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何按照以下步骤进行安装：
- en: Create an account at [http://aws.amazon.com](http://aws.amazon.com) and go to
    Amazon's **Create EC2 Instance Wizard** at [https://console.aws.amazon.com/ec2/v2/home?#LaunchInstanceWizard](https://console.aws.amazon.com/ec2/v2/home?#LaunchInstanceWizard).
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 [http://aws.amazon.com](http://aws.amazon.com) 上创建一个账户，然后访问亚马逊的**创建 EC2 实例向导**
    [https://console.aws.amazon.com/ec2/v2/home?#LaunchInstanceWizard](https://console.aws.amazon.com/ec2/v2/home?#LaunchInstanceWizard)。
- en: 'The next steps are shown in the screenshot as follows:'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 接下来的步骤如下所示：
- en: '![Installation](img/3946OT_01_05.jpg)'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![Installation](img/3946OT_01_05.jpg)'
- en: Click on **Community AMIs** in the menu on the left-hand side and select the
    latest `amzn-ami-pv`. Make sure that you select the `pv` version and not the `hvm`
    version so that you have a virtualization that is more stable and has less overhead,
    as shown here:![Installation](img/3946OT_01_06.jpg)
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左侧菜单中点击**社区 AMI**，选择最新的 `amzn-ami-pv`。确保选择 `pv` 版本，而不是 `hvm` 版本，以便使用更稳定、开销更小的虚拟化，如下所示：![Installation](img/3946OT_01_06.jpg)
- en: 'When it''s time to choose an instance type, you can choose **t1.micro** or
    **t2.micro** for now if they are available. The micro instances are very limited
    in their performance, but since they are available in the free usage tier in some
    regions and this is not for a live site at the moment, we can use them. Click
    on **Next: Configure Instance Details** and then click on the **Review and Launch**
    button, as shown in the following screenshot:![Installation](img/3946OT_01_07.jpg)'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择实例类型时，如果有可用的 **t1.micro** 或 **t2.micro**，可以选择它们。微型实例的性能非常有限，但由于在一些区域它们属于免费使用层，并且目前不用于实际站点，因此我们可以使用它们。点击**下一步：配置实例详细信息**，然后点击**审查并启动**按钮，如下所示：![Installation](img/3946OT_01_07.jpg)
- en: Verify all the details on the **summary** page and click on the **Launch Instance**
    button.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**摘要**页面核对所有细节，然后点击**启动实例**按钮。
- en: You will be prompted whether you want to use an existing key-pair or create
    a new one. If this is your first time creating an Amazon EC2 instance, you will
    want to create a new key-pair. This makes it easy to securely connect to your
    instances.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 系统会提示你是否要使用现有的密钥对，还是创建一个新的密钥对。如果这是你第一次创建 Amazon EC2 实例，你应该创建一个新的密钥对。这使得连接到实例更加安全。
- en: Download the new key-pair, move it to your `~/.ssh/` folder, and remove the
    .`txt` extension.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载新的密钥对，将其移动到 `~/.ssh/` 文件夹，并去掉 `.txt` 扩展名。
- en: It's also important to set the correct user permissions on the file or SSH will
    refuse to use it.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置文件的正确用户权限也很重要，否则 SSH 将拒绝使用该文件。
- en: 'In Linux or on a Mac, this is how the terminal command to do this looks:'
  id: totrans-86
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 Linux 或 Mac 上，执行该操作的终端命令如下所示：
- en: '[PRE7]'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: On Windows, save the key anywhere and use a tool such as PuTTYgen to convert
    it to a `.ppk` file, so you can use it when connecting using PuTTY.
  id: totrans-88
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 Windows 上，将密钥保存在任何位置，并使用如 PuTTYgen 这样的工具将其转换为 `.ppk` 文件，以便在使用 PuTTY 连接时使用。
- en: You will be prompted to choose a security group for your instance. Pick the
    default one since this won't be a production server. When it's time to use a production
    server, we might want to add more security to our instance.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 系统会提示你选择一个安全组给你的实例。由于这不是生产服务器，选择默认的安全组即可。当需要使用生产服务器时，我们可能需要为实例添加更多的安全措施。
- en: Now we're up and running! Let's connect to it. Click on the **View Instances**
    button and select your newly created instance in the list, as shown here:![Installation](img/3946OT_01_08.jpg)
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们已经启动并运行了！让我们连接到它。点击**查看实例**按钮，并在列表中选择你新创建的实例，如下所示：![Installation](img/3946OT_01_08.jpg)
- en: 'In the bottom of the screen, you can see some information about the instance.
    You should be looking for the public DNS information. This is how it should look:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在屏幕底部，你可以看到一些关于实例的信息。你应该查找公有 DNS 信息。它应该是这样子的：
- en: '[PRE8]'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'On a Linux or Mac, open a terminal and connect to it:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Linux 或 Mac 上，打开终端并连接到它：
- en: '[PRE9]'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The screenshot is displayed as follows:'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 截图显示如下：
- en: '![Installation](img/3946OT_01_09.jpg)'
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![Installation](img/3946OT_01_09.jpg)'
- en: We use the `ec2-user` user that is the default user for Amazon's Linux instances,
    and `amz.pem` is the key we downloaded earlier. Replace the URL with your public
    DNS information from the last step.
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们使用`ec2-user`用户，这是Amazon Linux实例的默认用户，`amz.pem`是我们之前下载的密钥。用你上一步的公有DNS信息替换URL。
- en: When asked whether you want to continue because of an unknown host, type `yes`.
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当被问及是否因为未知主机继续时，输入`yes`。
- en: On Windows, use PuTTY and make sure that you have specified the converted private
    key from step 4 in the PuTTY Auth tab.
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在Windows上，使用PuTTY，并确保你在PuTTY身份验证选项卡中指定了第4步中转换的私钥。
- en: 'Once you are connected to the instance, install Docker:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦连接到实例，安装Docker：
- en: '[PRE10]'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: To test whether it's working as expected, type `docker version` and make sure
    there's no error. You should see a few lines with the client version, API version,
    and so on.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了测试它是否按预期工作，输入`docker version`并确保没有错误。你应该看到几行信息，包括客户端版本、API版本等。
- en: Open ports
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 打开端口
- en: Amazon's default security policy is to block the default ports used to expose
    services from Docker, so we have to change this.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: Amazon的默认安全策略是阻止暴露服务的默认端口，因此我们需要修改此设置。
- en: We go back to the EC2 dashboard and click on the **Security Groups** option
    in the menu
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们回到EC2仪表盘，点击菜单中的**安全组**选项
- en: Select the security group that your EC2 instance uses and select the **Inbound**
    tab
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择你的EC2实例所使用的安全组，并选择**入站**选项卡
- en: Docker uses ports in a range from **49000 - 50000**, so we add a rule for this,
    as shown in the following screenshot:![Open ports](img/3946OT_01_10.jpg)
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker使用的端口范围是**49000 - 50000**，所以我们需要为此添加一个规则，如下图所示：![打开端口](img/3946OT_01_10.jpg)
- en: Upgrading Docker on Amazon EC2
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Amazon EC2上升级Docker
- en: Upgrading an Amazon Linux AMI instance is as easy as it is for Ubuntu. Type
    `sudo yum update` and confirm whether there's an update waiting. This command
    will list all the available updates and upon your confirmation, install them.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 升级Amazon Linux AMI实例和升级Ubuntu一样简单。输入`sudo yum update`并确认是否有可用的更新。此命令将列出所有可用的更新，并在你确认后进行安装。
- en: User permissions
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用户权限
- en: 'Docker requires commands to be run by users in the `docker` user group. For
    convenience, we add our user to the Docker group so that we can control Docker
    without using `sudo`:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: Docker要求命令由`docker`用户组的用户运行。为了方便，我们将用户添加到Docker组中，这样我们就可以在不使用`sudo`的情况下控制Docker：
- en: '[PRE11]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: You might have to log out and log in again for it to work. When you are logged
    back in, run `docker ps` to verify that there are no permission problems. You
    should see a row of capitalized words, such as **CONTAINER ID IMAGE COMMAND CREATED
    STATUS PORTS NAMES**.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能需要注销并重新登录才能使其生效。重新登录后，运行`docker ps`来验证没有权限问题。你应该看到一行大写字母，类似于**CONTAINER ID
    IMAGE COMMAND CREATED STATUS PORTS NAMES**。
- en: Displaying Hello World
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 显示Hello World
- en: Now that we have Docker running on a machine of our choice, it's time to make
    Docker work for us. Here are a few very basic commands that we can use for some
    basic interaction with the Docker daemon.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经在选择的机器上运行了Docker，接下来是让Docker为我们服务。以下是一些非常基础的命令，可以帮助我们与Docker守护进程进行基本交互。
- en: 'In the next chapter, all the concepts and phrases used in Docker will be explained:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，将解释Docker中使用的所有概念和术语：
- en: '`docker ps`: This lists the running containers'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docker ps`：此命令列出正在运行的容器'
- en: '`docker ps -a`: This lists all the containers, both running and exited'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docker ps -a`：此命令列出所有容器，包括正在运行的和已退出的容器'
- en: '`docker images`: This lists local (downloaded and locally created) images'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docker images`：此命令列出本地（已下载和本地创建的）镜像'
- en: '`docker run`: This will launch a new instance container from an image'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docker run`：此命令从镜像启动一个新的实例容器'
- en: '`docker stop`: This is used to stop a container'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docker stop`：此命令用于停止容器'
- en: 'Let''s try the first one in the screenshot shown below:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试下图中的第一个命令：
- en: '![Displaying Hello World](img/3946OT_01_11.jpg)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![显示Hello World](img/3946OT_01_11.jpg)'
- en: As expected, we have nothing running yet.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 正如预期的那样，我们还没有运行任何内容。
- en: Launching a container is as easy as `docker run [image] [command]`. If the image
    doesn't exist locally, Docker will download it from the Docker Registry Hub and
    launch your container when it's downloaded.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 启动容器就像`docker run [image] [command]`一样简单。如果镜像在本地不存在，Docker会从Docker Registry
    Hub下载它，并在下载完成后启动你的容器。
- en: 'The following steps are displayed as follows:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 以下步骤显示如下：
- en: '![Displaying Hello World](img/3946OT_01_12.jpg)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![显示Hello World](img/3946OT_01_12.jpg)'
- en: 'Type the following command in a terminal to launch a container that prints
    the string **Hello, let me out of here** and then exits:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在终端中输入以下命令，启动一个容器，该容器打印字符串**Hello, let me out of here**，然后退出：
- en: '[PRE12]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: This is not very useful, but we just ran a command in Ubuntu inside the container.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 这并不是非常有用，但我们刚刚在容器内的 Ubuntu 中运行了一个命令。
- en: If we type `docker ps` again, we can see that we still have no running containers
    since we exited the one we just started straightaway. Try using `docker ps -a`
    instead, and try `docker images`.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们再次输入`docker ps`，我们可以看到没有正在运行的容器，因为我们刚刚启动的容器已被立即退出。尝试使用`docker ps -a`，并尝试`docker
    images`。
- en: Summary
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we learned that Docker can be used on most operating systems
    and that the installation process varies a lot depending on the OS. We had our
    first interaction with the Docker daemon and launched our first container in Docker.
    Even though all the container did was write a command, that's how easy it is to
    start and run something inside a guest operating system.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了 Docker 可以在大多数操作系统上使用，并且安装过程根据操作系统的不同差异很大。我们首次与 Docker 守护进程进行了交互，并启动了第一个
    Docker 容器。即使容器所做的只是写入一个命令，但这就是在来宾操作系统中启动和运行某些东西是多么简单。
- en: 'We have also introduced the theme that shows what this book is all about, running
    a multicontainer web app of a web server container and a MySQL container: your
    own PaaS.'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还介绍了本书的主题，即运行一个多容器的 Web 应用程序，包括 Web 服务器容器和 MySQL 容器：你自己的 PaaS。
- en: In the next chapter, we will further explore Docker, its terminology, and the
    community around it.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将进一步探索 Docker、它的术语以及围绕它的社区。
