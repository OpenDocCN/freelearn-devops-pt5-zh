- en: Introduction
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: 'DevOps, as a term, has a wide verity of meanings and consists of different
    stages in the software development life cycle. In this chapter, we''ll be discussing
    what DevOps is and what it means in a software development process, and later
    in maintaining that software. We''ll cover various details about DevOps and mobile
    DevOps in this chapter through the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps 作为一个术语，有着广泛的含义，涵盖了软件开发生命周期中的不同阶段。在本章中，我们将讨论 DevOps 是什么，它在软件开发过程中的含义，以及在软件维护过程中扮演的角色。我们将在本章中通过以下主题讨论关于
    DevOps 和移动 DevOps 的各种细节：
- en: Introduction to DevOps
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DevOps 介绍
- en: Introduction to mobile DevOps
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移动 DevOps 介绍
- en: DevOps versus mobile DevOps
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DevOps 与移动 DevOps 的比较
- en: Challenges of applying DevOps to mobiles
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 DevOps 应用于移动端的挑战
- en: Introduction to DevOps
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DevOps 介绍
- en: '**DevOps** is derived from two different words: development and operations.
    So as the word suggests, it describes a set of practices in a process while developing
    software and managing operations tasks.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**DevOps** 来源于两个不同的词：开发（development）和运维（operations）。因此，正如这个词所暗示的，它描述了在开发软件和管理运维任务的过程中所采用的一套实践。'
- en: DevOps as a term was first coined in 2008 by Andrew Shafer and Patrick Debois,
    who became two of its chief proponents, and since 2009 the term has been widely
    used and promoted with the goal of unifying the process of software development
    and operations.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps 这个术语最早由 Andrew Shafer 和 Patrick Debois 于 2008 年提出，他们成为了这一理念的两位主要倡导者，自
    2009 年以来，该术语已被广泛使用并推广，旨在统一软件开发和运维的过程。
- en: DevOps is not just a set of practices, but also a way of working in the software
    development industry; it's a cultural change in the way development and operations
    work together.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps 不仅是一套实践，它还是软件开发行业的一种工作方式；它是开发与运维合作方式上的一种文化变革。
- en: Delivering technology to your customers at speed, and aligned to their needs,
    is key to future growth; this is a practice and can be achieved using DevOps.
    Adopting DevOps can create a continuous delivery ecosystem that improves the quality
    and velocity of delivery with all the attendant benefits.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 以更快的速度向客户交付技术，并与他们的需求对接，是未来增长的关键；这是一种实践，可以通过 DevOps 来实现。采用 DevOps 可以创建一个持续交付的生态系统，提高交付质量和速度，并带来所有相关的好处。
- en: '![](img/b1fefb3d-2748-4fa9-b40e-e3d888bac8d8.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b1fefb3d-2748-4fa9-b40e-e3d888bac8d8.png)'
- en: In the traditional method, developers write the code as per the requirements,
    in any local environment. Once the application is ready, the QA team test the
    application in an environment that is similar to their production environment.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在传统方法中，开发人员按照需求在任何本地环境中编写代码。一旦应用程序准备好，QA团队会在一个类似生产环境的环境中测试该应用程序。
- en: Once testing is successful and the requirements have been met, the product is
    released to the operations team for deployment. As both teams are working independently,
    there is a high chance that the deployment of a version of an application may
    take a long time and may not work as expected.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦测试成功并且满足需求，产品就会被交给运维团队进行部署。由于两个团队是独立工作的，因此应用程序版本的部署可能会花费很长时间，且可能无法按预期进行。
- en: However, in DevOps, the process is quite different. Here, developers, QA, and
    operations collaborate and use various tools for continuous development, integration,
    delivery, and monitoring, which helps fill a big gap and expedite the process.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在 DevOps 中，过程是完全不同的。在这里，开发人员、QA 和运维合作，使用各种工具进行持续开发、集成、交付和监控，这有助于填补一个巨大的空白并加速过程。
- en: In a way, each and every tool works independently but tightly integrated with
    each other. A faster and automatic release to operations enables stakeholders
    to quickly respond to changes and meet requirements.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 从某种意义上讲，每个工具都独立工作，但又紧密集成。快速和自动的发布到运维能够让相关方迅速响应变化并满足需求。
- en: In the past, software development used to be a totally separate process from
    operations. Releases used to be loosely integrated with the actual development
    process, thus sometimes creating differences in the way the development environment
    and the release or production environment worked.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 过去，软件开发与运维是完全分开的过程。发布往往与实际开发过程松散集成，因此有时会在开发环境与发布或生产环境之间产生差异。
- en: Developers used to finish their development independently from operations, and
    then operations used to take care of the release and post-release tasks for the
    project.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 开发人员过去常常独立完成开发工作，而运维则负责项目的发布和发布后的任务。
- en: This way of working used to work great when the waterfall-style software development
    model was popular, when every step was sequential, and releases used to be a long
    process.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这种工作方式曾在瀑布式软件开发模型流行时表现得非常出色，那时每个步骤都是顺序进行的，发布往往是一个漫长的过程。
- en: In today's world, where agile is the new and popular software development method,
    more frequent releases are the delivery goals, and only an integrated environment
    gives that flexibility with the required stability and service quality.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在今天，敏捷已成为新的流行软件开发方法，更频繁的发布成为交付目标，只有集成化环境才能提供所需的灵活性和稳定性及服务质量。
- en: Cultural aspects of DevOps
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DevOps 的文化方面
- en: The biggest cultural difference DevOps brings is pulling together different
    roles/people into a specific team with the same delivery goal.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps 带来的最大文化差异是将不同角色/人员聚集到一个具有相同交付目标的特定团队中。
- en: People get to do what they are good at and get instant feedback. DevOps enables
    quick solutions in the case of a technical glitch and contributes to team health,
    individual satisfaction, and time efficiency and management.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 人们可以做自己擅长的事情并得到即时反馈。DevOps 能够在技术故障的情况下提供快速解决方案，并有助于团队健康、个人满意度以及时间效率和管理。
- en: For example, a process that used to take months is now executed in minutes.
    It turns environment provisioning from a new problem into a delight, at the press
    of a button.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，过去需要几个月的过程现在可以在几分钟内完成。它将环境配置从一个新问题转变为按下按钮即可解决的愉快体验。
- en: DevOps has given us the facility and flexibility to invent and focus on actual
    business needs, instead of managing hours and weeks and months of operational
    tasks.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps 为我们提供了发明和专注于实际业务需求的能力和灵活性，而不是管理数小时、数周或数月的运维任务。
- en: Sites such as Amazon, Facebook, LinkedIn, and Twitter are known to do deployments
    many times a day (sometimes every minute). To deploy that often, they can't break
    what is already running; they have to complement what is already there.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 像 Amazon、Facebook、LinkedIn 和 Twitter 这样的站点众所周知，每天会进行多次部署（有时每分钟一次）。为了如此频繁地进行部署，他们不能破坏已经运行的系统；必须在现有系统的基础上进行补充。
- en: DevOps helps you to focus on industry logic and what is actually required, instead
    of maintaining, scaling, clusters, deployment, and much more.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps 帮助你专注于行业逻辑和实际需求，而不是维护、扩展、集群、部署等繁琐工作。
- en: DevOps, in a way, represents and promotes a change in IT culture, focusing on
    fast and frequent delivery by adopting agile development, simplifying practices
    in the context of the software development life cycle, including both development
    and operations.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps 在某种程度上代表并推动了 IT 文化的变化，专注于通过采纳敏捷开发来实现快速和频繁的交付，在软件开发生命周期的背景下简化实践，包括开发和运维。
- en: DevOps focuses on people and culture, and seeks to improve collaboration and
    integration between development and operations teams. DevOps implementations utilize
    technologies that ensure integration and quick feedback, and thus ensure quality,
    particularly by using software process automation tools that can leverage an increasingly
    programmable and highly dynamic infrastructure from a development and operations
    life cycle point of view.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps 关注人和文化，致力于改善开发团队和运维团队之间的协作与整合。DevOps 的实施利用了能够确保集成和快速反馈的技术，从而确保质量，特别是通过使用可以利用日益可编程且高度动态的基础设施的自动化软件工具，从开发和运维生命周期的角度来看。
- en: Before DevOps
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DevOps 之前
- en: 'To really understand the benefits and differences of using DevOps, we must
    have an idea of how things used to work before DevOps. As shown here, operations
    used to not be integrated with the rest of the development cycle:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 为了真正理解使用 DevOps 的好处和差异，我们必须了解 DevOps 出现之前的工作方式。如图所示，运维曾经并未与开发周期的其他部分集成：
- en: '![](img/20716e6a-3d0b-4b24-bd0f-1f908a0f56dc.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](img/20716e6a-3d0b-4b24-bd0f-1f908a0f56dc.png)'
- en: After DevOps
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DevOps 之后
- en: In the DevOps way of working, operations are involved in the development process
    from the initial stages. They have a better understanding of issues that might
    arise later and can work in the beginning to avoid them during the production
    stage. Developers get quick feedback and can act on the issues suggested by operations,
    and vice versa.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在 DevOps 工作方式中，运维从最初阶段就参与到开发过程中。他们更好地理解可能在后期出现的问题，并能在早期采取措施，避免它们在生产阶段发生。开发人员得到快速反馈，能够根据运维提出的问题进行调整，反之亦然。
- en: '![](img/81b9f622-affe-4bbc-a583-4dc8a4ac81b3.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](img/81b9f622-affe-4bbc-a583-4dc8a4ac81b3.png)'
- en: Introduction to mobile DevOps
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 移动 DevOps 介绍
- en: Mobile DevOps is quite similar to DevOps, but only applied to mobile. With that
    said, it brings new challenges that come with mobile application deployment and
    maintenance. When talking about mobile application development, there are a lot
    of new things to consider about deployment and feedback.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 移动DevOps与DevOps非常相似，只不过它应用于移动端。尽管如此，它仍然带来了新的挑战，这些挑战与移动应用的部署和维护相关。在讨论移动应用开发时，部署和反馈方面有许多新因素需要考虑。
- en: A web application just needs to be tested and quality-checked on a limited set
    of browsers, but for mobile applications the range is huge and not limited to
    a set of mobile devices or operating system versions. A large number of operating
    system versions available in the market need to be tested and tracked once the
    application goes live in production.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 一个Web应用只需要在有限的浏览器上进行测试和质量检查，但对于移动应用来说，测试的范围非常广泛，并不限于一组特定的移动设备或操作系统版本。一旦应用上线，市场上众多操作系统版本需要进行测试和追踪。
- en: The main difference between DevOps and mobile DevOps is the tooling required
    to achieve the process. In mobile DevOps, the SDKs have to be built into the application
    code to track bug reports and crash reports when in production.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps和移动DevOps之间的主要区别在于实现过程所需的工具。在移动DevOps中，必须将SDK集成到应用代码中，以便在生产环境中跟踪错误报告和崩溃报告。
- en: Feedback mechanisms become even more important because mobile apps have a more
    personal feel to them, and users gives very important feedback that can be then
    worked upon and applied to application improvements.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 反馈机制变得更加重要，因为移动应用具有更强的个人化特点，用户提供的反馈非常重要，可以用于进一步改进应用。
- en: Continuous feedback and continuous development
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 持续反馈和持续发展
- en: Continuous feedback and continuous development have become the most important
    things in mobile application development. Developers have to continuously act
    on the feedback given by customers and there must be tools used to ensure that
    the right customer feedback is received on time and acted upon. Channels have
    to be monitored and monitoring tools have to be kept in place at every stage of
    development and production release, to ensure users' views are understood and
    taken care of. Developers have to know what scenarios might be making the users'
    app crash on their phone, such as which screen users spend the most time on, and
    what activities users don't perform in the application. All this feedback is important
    in mobile application development; to be able to get this feedback, tools should
    be in place, tools that enable continuous feedback and allow developers to have
    a better view of users' experiences.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 持续反馈和持续发展已经成为移动应用开发中最重要的内容。开发者必须不断根据客户的反馈进行调整，并且必须使用工具确保能够及时收到正确的客户反馈并付诸行动。在开发和生产发布的每个阶段，必须监控渠道并使用监控工具，以确保用户的意见能够被理解和照顾。开发者需要了解哪些场景可能导致用户的应用在手机上崩溃，例如用户在哪个页面停留时间最长，用户在哪些功能上没有进行操作。所有这些反馈对于移动应用开发至关重要；为了能够获得这些反馈，必须配备能够实现持续反馈的工具，帮助开发者更好地了解用户体验。
- en: '![](img/8bc0e6f9-a58a-4182-9a14-6f31cc92047e.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8bc0e6f9-a58a-4182-9a14-6f31cc92047e.png)'
- en: Importance of backlog in mobile DevOps
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 移动DevOps中的待办事项重要性
- en: When it comes to mobile applications, app crashes are not the only available
    feedback mechanism. Users can submit feedback directly from the mobile app to
    the developers. Some tools also provide user metrics and custom events, letting
    developers understand how the app is being adopted and used. All this information
    should be utilized to improve your backlog, and developers should always feel
    confident about investing in the right area, based on the data.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 当谈到移动应用时，应用崩溃并不是唯一的反馈机制。用户可以直接从移动应用中提交反馈给开发者。一些工具还提供用户指标和自定义事件，帮助开发者了解应用的接受度和使用情况。所有这些信息都应被用来改进待办事项列表，开发者应该始终根据数据对投资方向充满信心。
- en: '![](img/0779e058-3d72-46e7-8571-f44b5bbe7cf7.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0779e058-3d72-46e7-8571-f44b5bbe7cf7.png)'
- en: DevOps versus mobile DevOps
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DevOps与移动DevOps
- en: DevOps and mobile DevOps are similar, yet different in the sets of tools they
    use to achieve the same goal. To better understand the difference between DevOps
    and mobile DevOps, let's go through each step in the application development and
    operation life cycle, and discuss the differences in approaches.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps和移动DevOps相似，但它们在实现相同目标时使用的工具集有所不同。为了更好地理解DevOps和移动DevOps之间的区别，让我们逐步了解应用开发和运维生命周期中的每个阶段，并讨论两者方法的差异。
- en: Development
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开发
- en: The development phase is almost the same for web and mobile application development,
    but at the same time, in mobile application development developers need to include
    SDKs and tools that will later help them track app crashes and user feedback,
    and better monitor users' activities. Mobile application developers can build
    a feedback mechanism into their application, with which they can ask users to
    submit feedback and even bug reports, which are often provided by the mobile operating
    system. There are even some SDKs mobile app developers can embed into their code
    to help feedback tracking and better end user interaction.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 开发阶段对于Web和移动应用程序开发几乎相同，但在移动应用程序开发中，开发者需要包含SDK和工具，帮助他们跟踪应用崩溃和用户反馈，并更好地监控用户活动。移动应用开发者可以在应用程序中构建反馈机制，借此他们可以要求用户提交反馈，甚至是bug报告，这些通常由移动操作系统提供。甚至一些SDK可以嵌入到移动应用程序代码中，帮助反馈跟踪和改善最终用户的互动。
- en: Tools such as **HockeyApp** provide this integration of user interaction and
    feedback directly to developers.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**HockeyApp**等工具直接将用户交互和反馈整合到开发者手中。'
- en: Testing
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试
- en: When it comes to testing, there is a big difference between the tools used for
    web application testing and mobile application testing. In web applications, the
    resources required to test the application are limited to a set of browsers and
    a limited number of operating system versions.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在测试方面，Web应用程序测试和移动应用程序测试使用的工具差异很大。在Web应用程序中，测试应用程序所需的资源仅限于一组浏览器和有限的操作系统版本。
- en: Manual testing is sometimes enough to ensure great quality products. But when
    it comes to mobile application testing, there are hundreds of different hardware-dependent
    combinations of devices that need to be tested to ensure your app will work fine
    when it goes live. After the rise of Android, there are so many different devices
    with a variety of hardware configurations and different operating systems. To
    ensure a wide user base, developers need to make sure their app is compatible
    with all the different versions and lower-end devices.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 手动测试有时足以确保高质量的产品。但在移动应用程序测试中，有数百种不同的硬件依赖设备组合需要进行测试，以确保应用程序上线时能够正常运行。Android崛起后，出现了各种硬件配置和不同操作系统的设备。为了确保广泛的用户群体，开发者需要确保他们的应用程序与所有不同版本以及低端设备兼容。
- en: To quality-check such things, just testing on emulators is not enough for high-quality
    applications; they need to be tested on real-world devices, which is sometimes
    difficult and off-budget for many organizations. This is where cloud test environments
    such as Xamarin Test Cloud comes into the picture, to automate the process and
    test on real devices at low cost.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 为了保证质量，仅在模拟器上测试是不够的，尤其对于高质量的应用程序；它们需要在真实设备上进行测试，但这对于许多组织来说有时既困难又超预算。这时，像Xamarin
    Test Cloud这样的云测试环境便应运而生，能够自动化该过程，并以低成本在真实设备上进行测试。
- en: Deployment
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署
- en: In a web application deployment, the environment can be controlled and customized
    to our needs, but in mobile application deployment, the application needs to be
    published through some sort of operating system application store, which then
    verifies and publishes the application to be used by users on their devices.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在Web应用程序部署中，环境可以根据我们的需求进行控制和定制，但在移动应用程序部署中，应用程序需要通过某种操作系统应用商店发布，之后该商店会验证并发布应用程序供用户在其设备上使用。
- en: Monitoring
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 监控
- en: To monitor a web application, developers use logs, some tools at the server
    side, and others on the client side to help them identify issues that might arise
    because of network or code quality. But in mobile applications, the area is quite
    wide because of the issues that can occur. Various hardware dependencies, device
    permissions, and other factors can crop up that are difficult to monitor without
    proper tools involved, and that's where mobile DevOps differs from DevOps.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 为了监控Web应用程序，开发者使用日志、服务器端的一些工具和客户端的其他工具来帮助他们识别由于网络或代码质量引发的问题。但在移动应用程序中，由于可能出现的问题，范围相当广泛。各种硬件依赖、设备权限和其他因素可能会出现，如果没有合适的工具，难以监控到这些问题，这就是移动DevOps与DevOps的区别所在。
- en: Continuous delivery
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 持续交付
- en: Continuous delivery sounds very simple and it sure is that way if done properly.
    In DevOps, getting feedback and then working on it, fixing bugs, and then redeploying
    them is much simpler and less time-consuming than in mobile applications. Getting
    crash reports from users, then finding out the issue, and then going through the
    testing phase again can be very time-consuming if not automated.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 持续交付听起来非常简单，如果正确实施，确实是这样。在 DevOps 中，获取反馈并进行处理、修复 bug，然后重新部署，比移动应用程序要简单且节省时间得多。从用户那里获取崩溃报告，然后找出问题，再重新进入测试阶段，如果没有自动化，这个过程可能非常耗时。
- en: Automating the process of development, testing on real-world devices, then signing
    apps and publishing them to the store, and again tracking users' feedback—this
    entire process becomes very complicated if the right tools are not used.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 自动化开发过程、在真实设备上进行测试、签署应用并发布到商店，再次跟踪用户反馈——如果没有使用正确的工具，整个过程变得非常复杂。
- en: Challenges of applying DevOps to mobiles
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将 DevOps 应用于移动设备的挑战
- en: Because of the fast and continuous delivery mindset, DevOps comes with many
    challenges, especially when applying DevOps to the mobile application development
    life cycle.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 由于快速和持续交付的思维方式，DevOps 面临许多挑战，尤其是在将 DevOps 应用于移动应用程序开发生命周期时。
- en: The following are some of the challenges that arise while applying DevOps to
    mobile.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是将 DevOps 应用于移动时出现的一些挑战。
- en: Rapid technology adaptation
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 快速的技术适应
- en: Mobile technologies are rapidly evolving and improving every day, and with mobile
    devices getting released with new features and hardware support every day, it's
    difficult for DevOps tools to keep pace with them.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 移动技术每天都在快速发展和改进，随着每天发布的新设备和硬件支持，DevOps 工具很难跟上它们的步伐。
- en: Multi-platform support
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 跨平台支持
- en: Most mobile applications have multiple platform targets; the operating systems
    have different versions and applications need to support most of them to ensure
    a large user base. With Android, for example, many devices have old versions installed
    and do not get updated to later versions because of hardware limitations, and
    because manufacturers don't update their devices. At the same time, having different
    devices means customizing Android to suit personal taste and changing the user
    interface, and thus applications have to be compatible with all the different
    form factors and UI changes.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数移动应用程序有多个平台目标；操作系统有不同的版本，应用程序需要支持其中的大部分，以确保拥有广泛的用户基础。例如，Android 系统中，许多设备安装的是旧版本，因硬件限制而无法更新到新版本，且制造商不更新其设备。同时，拥有不同设备意味着要定制
    Android 以适应个人喜好并更改用户界面，因此应用程序必须与所有不同的设备形式和 UI 更改兼容。
- en: Keeping up with mobile development
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 跟上移动开发的步伐
- en: Mobile applications are now an integral part of many organizations' frontends,
    and clearly drive changes to backend development as well. Organizations use service
    layers and data layers to do backend operations, but due to integration with mobile
    development, they need to better adapt to, and collaborate with, mobile and web
    development.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 移动应用程序现在已成为许多组织前端的不可或缺的一部分，并显然推动了后端开发的变化。组织使用服务层和数据层来进行后端操作，但由于与移动开发的集成，它们需要更好地适应并与移动和
    Web 开发协作。
- en: Releases
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 发布
- en: Because how releases and updates are consumed over mobile platforms is totally
    different from the web, it becomes more difficult to ensure updates are made and
    care about old versions. On mobile, users have to download the update; the application
    doesn't get updated automatically, as it does on the web whenever users access
    the URL. Most of the time, users choose not to download the update, and sometimes
    they have storage restrictions. So, application developers have to consistently
    make sure everything works on old and new versions.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 由于在移动平台上发布和更新的方式与 Web 完全不同，因此确保更新并关注旧版本变得更加困难。在移动设备上，用户必须下载更新；而不像 Web 一样，用户每次访问
    URL 时，应用程序会自动更新。大多数时候，用户选择不下载更新，有时他们的存储空间有限。因此，应用程序开发者必须不断确保旧版和新版都能正常运行。
- en: Backward compatibility
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向后兼容性
- en: As described earlier, mobile applications need to be working on new and old
    versions of operating systems. Just because you've developed new versions does
    not mean people on older versions are not your responsibility anymore. As it turns
    out, the majority of people who use older versions of operating systems don't
    download the latest updates. App developers have to use the latest features in
    new versions of the OS and at the same time they should make sure apps run perfectly
    fine on older versions as well.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，移动应用需要在新旧版本的操作系统上都能正常运行。仅仅因为你开发了新版本，并不意味着旧版本用户就不再是你的责任。事实证明，大多数使用旧版本操作系统的用户并不会下载最新更新。应用开发者必须在新版本操作系统中使用最新功能，同时确保应用在旧版本上也能完美运行。
- en: Application stores
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应用商店
- en: This is a new method of app distribution, mostly found in the mobile app industry.
    In web apps, you just have your application deployed on your web server and a
    URL where interested people can access your application.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一种新的应用分发方式，主要出现在移动应用行业。在网页应用中，你只需将应用部署到网页服务器上，用户可以通过 URL 访问你的应用。
- en: Fixing issues and deploying patches becomes so easy, since you just have to
    deploy it on your servers and people accessing your web application will receive
    it immediately.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 修复问题和部署补丁变得非常简单，因为你只需将其部署到服务器上，访问你网页应用程序的人就会立即收到更新。
- en: In mobile applications, apps must go through app stores in all different operating
    systems.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在移动应用中，应用程序必须通过所有不同操作系统的应用商店。
- en: They must be verified before they can be published, and even updates and small
    patches need to go through the same route, so fixes are not available to end users
    immediately. This creates an extra step in the complexity of applying DevOps to
    mobile.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 它们必须在发布前经过验证，即使是更新和小补丁也需要通过相同的流程，因此修复不会立即提供给最终用户。这在将 DevOps 应用到移动端时增加了额外的复杂性。
- en: Feedback mechanism
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 反馈机制
- en: In the web and other platforms, since the application is not going to the user
    through an application store, the feedback is personal to the application team.
    User feedback is not visible to other users, and they get to judge and use it
    as they see fit.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在网站和其他平台中，由于应用程序不是通过应用商店提供给用户的，反馈仅限于应用团队。用户的反馈对其他用户不可见，他们可以根据自己的判断来评估和使用它。
- en: In mobile devices, users can give feedback on the application store and if the
    application does not live up to the expectations of users, it gets bad ratings
    that hurt the application in a big way. This sort of quick and visible feedback
    can help an application take off, or see it fail miserably if users don't like
    it. Acting on such feedback becomes very important in mobile DevOps.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在移动设备中，用户可以在应用商店中给予反馈，如果应用程序未能满足用户的期望，它会收到差评，这对应用程序的影响很大。这种快速且显而易见的反馈可以帮助应用程序迅速起飞，或者如果用户不喜欢它，它将惨败。根据这些反馈采取行动在移动
    DevOps 中变得尤为重要。
- en: Summary
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we discussed DevOps and mobile DevOps, what it means to implement
    DevOps, and how it changes the way different teams work together. We also described
    the key difference between DevOps and mobile DevOps in various stages of development
    and operations. In the next chapter, you'll be learning about one of the most
    important aspects of DevOps, which is source code management.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了 DevOps 和移动 DevOps，实施 DevOps 的含义，以及它如何改变不同团队的协作方式。我们还描述了 DevOps 和移动
    DevOps 在不同开发和运营阶段的主要区别。在下一章中，你将学习 DevOps 最重要的一个方面，即源代码管理。
