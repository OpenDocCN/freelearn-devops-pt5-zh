- en: Self-Healing Applied To Infrastructure
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 应用于基础设施的自愈功能
- en: We already saw how Docker Swarm provides self-healing applied to services. If
    a replica of a service goes down, it will be rescheduled on one of the healthy
    nodes. Soon after, the desired number of replicas will be running inside the cluster.
    We combined that feature with volumes attached to network drives so that the state
    of the stateful services is persisted.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到Docker Swarm如何为服务提供自愈功能。如果某个服务的副本出现故障，它将被重新调度到健康的节点之一。很快，集群内将运行所需数量的副本。我们将此功能与附加到网络驱动器的卷结合使用，以便持久化有状态服务的状态。
- en: The time has come to explore how to accomplish the same self-healing features
    applied to infrastructure. We already know how to create a cluster based on the
    *Docker For AWS* template or its equivalent in *Azure*. If you are not using one
    of those hosting vendors, we explored the essential features you should implement
    yourself.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候探索如何为基础设施实现相同的自愈功能了。我们已经知道如何基于*Docker For AWS*模板或其在*Azure*中的等效项创建集群。如果您没有使用这些主机服务提供商，我们已经探索了您应该自己实现的基本功能。
- en: Before we move into infrastructure self-healing, we need to create the cluster
    we destroyed at the end of the previous chapter. We’ll use this opportunity to
    explore how to accomplish the same result without the usage of AWS UI.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在进入基础设施自愈之前，我们需要创建在上一章结尾处销毁的集群。我们将利用这个机会探索如何在不使用AWS UI的情况下实现相同的结果。
- en: Automating Cluster Setup
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 自动化集群设置
- en: The first thing we should do is get the AWS credentials.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要做的第一件事是获取AWS凭证。
- en: Please open the [Amazon EC2 Console](https://console.aws.amazon.com/ec2/), click
    on your name from the top-right menu, and select *My Security Credentials*. You
    will see the screen with different types of credentials. Expand the *Access Keys
    (Access Key ID and Secret Access Key)* section and click the *Create New Access
    Key* button. Expand the *Show Access Key* section to see the keys.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 请打开[Amazon EC2 控制台](https://console.aws.amazon.com/ec2/)，点击右上角菜单中的您的名字，然后选择*我的安全凭证*。您将看到一个包含不同类型凭证的界面。展开*访问密钥（访问密钥ID和秘密访问密钥）*部分，然后点击*创建新访问密钥*按钮。展开*显示访问密钥*部分以查看密钥。
- en: You will not be able to view the keys later on, so this is the only chance you’ll
    have to *Download Key File*.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 之后您将无法再查看这些密钥，因此这是您唯一一次可以*下载密钥文件*的机会。
- en: We’ll put the keys as environment variables that will be used by the [AWS Command
    Line Interface (AWS CLI)](https://aws.amazon.com/cli/).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将密钥作为环境变量放置，这些变量将被[AWS 命令行界面（AWS CLI）](https://aws.amazon.com/cli/)使用。
- en: Please replace `[...]` with your keys before executing the commands that follow.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 请在执行后续命令之前将`[...]`替换为您的密钥。
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
