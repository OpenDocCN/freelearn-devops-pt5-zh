- en: OpenShift HA Design for Single and Multiple DCs
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OpenShift 单数据中心和多数据中心的高可用性设计
- en: In the previous chapter, we briefly touched upon OpenShift HA and **h****igh
    availability** (**HA**) in general. We discussed how OpenShift provides redundancy
    in case of a failure and how you can prevent this from happening by designing
    your OpenShift cluster properly. Finally, we finished the chapter with backup
    and restore methods and procedures in OpenShift.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一章节中，我们简要提到了 OpenShift 高可用性和一般的**高可用性**（**HA**）概念。我们讨论了 OpenShift 如何在发生故障时提供冗余，以及如何通过正确设计
    OpenShift 集群来防止这种情况的发生。最后，我们通过备份和恢复方法和流程结束了章节。
- en: In this chapter, we are going to talk about OpenShift scenarios in single and
    multiple data centers. This chapter will also explain how to properly design OpenShift
    in a distributed and redundant configuration across one or more data centers.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论 OpenShift 在单一和多个数据中心的应用场景。本章还将解释如何在一个或多个数据中心中以分布式和冗余的配置正确设计 OpenShift。
- en: 'After reading this chapter, you will have an understanding of the following
    topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读完本章后，你将了解以下主题：
- en: OpenShift single-DC HA design
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenShift 单数据中心高可用性设计
- en: OpenShift multi-DC HA design
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenShift 多数据中心高可用性设计
- en: OpenShift single-DC HA design
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OpenShift 单数据中心高可用性设计
- en: In the previous chapter, we briefly covered HA and OpenShift HA in general,
    but we did'nt discuss how to practically design OpenShift in your data center
    environment.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一章节中，我们简要讨论了高可用性和 OpenShift 高可用性的一般概念，但我们没有深入探讨如何在你的数据中心环境中实际设计 OpenShift。
- en: '![](img/00095.jpeg)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00095.jpeg)'
- en: 'Let''s recall what main OpenShift components we have and how they provide redundancy:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾一下 OpenShift 的主要组件，并了解它们如何提供冗余：
- en: Openshift infrastructure nodes
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenShift 基础设施节点
- en: OpenShift master nodes
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenShift master 节点
- en: OpenShift nodes
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenShift 节点
- en: Etcd key-value store
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Etcd 键值存储
- en: Persistent storage
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 持久化存储
- en: OpenShift infrastructure nodes
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OpenShift 基础设施节点
- en: 'OpenShift infrastructure nodes are essential components that provide access
    from the outside of an OpenShift cluster. OpenShift infrastructure nodes scale
    horizontally, which means that we can add as many nodes as we need in order to add
    network throughput. If you recall from the previous chapter, we need to consider
    which VIP method to use. We have two main VIP methods:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: OpenShift 基础设施节点是提供外部访问 OpenShift 集群的关键组件。OpenShift 基础设施节点横向扩展，这意味着我们可以根据需要添加任意数量的节点以增加网络吞吐量。如果你记得前一章节的内容，我们需要考虑使用哪种
    VIP 方法。我们有两种主要的 VIP 方法：
- en: '**VIP using an external load balancer**:'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用外部负载均衡器的 VIP**：'
- en: '![](img/00096.jpeg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00096.jpeg)'
- en: '**IP failover using keepalived**:'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**使用 keepalived 的 IP 故障转移**：'
- en: '![](img/00097.jpeg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00097.jpeg)'
- en: Both methods have their own pros and cons, but the one that provides better
    scalability and smooth migration to multi-DC design is the VIP using an external
    load balancer method. This method allows you to dynamically distribute the load
    among all the infra nodes and add them dynamically without any interruption. If
    you are going to distribute the load across multiple data centers, the virtual
    IP with external load balancers method allows you to implement these changes with
    minimum downtime. We are going to discuss multi-DC design later in this chapter.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这两种方法各有优缺点，但提供更好可扩展性并支持平滑迁移到多数据中心设计的是使用外部负载均衡器的 VIP 方法。该方法允许你动态地在所有基础设施节点之间分配负载，并能在不发生中断的情况下动态添加它们。如果你打算在多个数据中心之间分配负载，虚拟
    IP 和外部负载均衡器的方法允许你以最小的停机时间实现这些更改。我们将在本章后面讨论多数据中心设计。
- en: OpenShift masters
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OpenShift master 节点
- en: Similar to OpenShift infrastructure nodes, OpenShift masters require redundancy
    and high availability. Redundancy is easily achieved by the number of horizontally
    scalable master nodes, and high availability is achieved by one of the VIP methods
    that we discussed previously. For the same reason, using an external load balancer
    is a way better and scalable solution compared to the keepalived and DNS method.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于 OpenShift 基础设施节点，OpenShift master 节点也需要冗余和高可用性。冗余通过横向扩展的 master 节点数量轻松实现，而高可用性则通过我们之前讨论过的
    VIP 方法之一来实现。出于同样的原因，使用外部负载均衡器相比 keepalived 和 DNS 方法，是一种更好的、可扩展的解决方案。
- en: OpenShift nodes
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OpenShift 节点
- en: OpenShift nodes do not have any specific HA requirements since they are running
    stateless pods in a redundant fashion. The only HA and redundancy consideration
    is to have enough OpenShift nodes to handle additional workload when a failure
    happens in your data center, whether a server, a rack, or a whole row of racks
    goes down. You need to distribute the workload and make sure that no matter what
    fails, you have redundant components and pods up and running.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: OpenShift 节点没有特定的高可用要求，因为它们以冗余方式运行无状态 pod。唯一需要考虑的高可用性和冗余问题是在数据中心发生故障时，是否有足够的
    OpenShift 节点来处理额外的工作负载，无论是服务器、机架还是整个机架行。你需要分发工作负载，并确保无论发生何种故障，你都有冗余的组件和 pod 运行。
- en: Etcd key-value store
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Etcd 键值存储
- en: OpenShift etcd is a highly distributed key-value store where all critical OpenShift
    cluster-related data is kept. Etcd works in active/active configuration by default,
    which means it provides both redundancy and high availability by default. There
    is a general recommendation to install and configure your etcd cluster on dedicated
    nodes separately from OpenShift masters in a quantity of three, five, or seven
    members.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: OpenShift etcd 是一个高度分布式的键值存储，其中保留了所有关键的 OpenShift 集群相关数据。Etcd 默认以活动/活动配置工作，这意味着它提供了默认的冗余和高可用性。一般建议将您的
    etcd 集群安装和配置在专用节点上，与 OpenShift 主节点分开，数量为三个、五个或七个成员。
- en: Persistent storage
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 持久存储
- en: External storage configuration and design for OpenShift persistent data is out
    of the scope of this book, but general advice is to make sure that you have your
    external storage available in a redundant and scalable fashion, meaning that if
    one or several components fails, it does not affect overall storage performance
    and is always accessible by OpenShift.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 外部存储配置和设计对于 OpenShift 持久数据超出了本书的范围，但一般建议确保您的外部存储以冗余和可扩展的方式可用，这意味着如果一个或多个组件出现故障，不会影响整体存储性能，并且始终可以被
    OpenShift 访问。
- en: Physical placement consideration
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 物理位置考虑
- en: 'Considering that our OpenShift cluster is going to be up and running within
    a single data center, we need to take extra caution and make sure that we follow
    some simple rules:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到我们的 OpenShift 集群将在单个数据中心内运行，我们需要额外小心，并确保遵循一些简单的规则：
- en: The same OpenShift components need to be connected to different switches and
    power circuits, and located in different racks or server rooms if possible
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 相同的 OpenShift 组件需要连接到不同的交换机和电源电路，并尽可能放置在不同的机架或服务器房中。
- en: All hardware should be running on OpenShift components connected to physical
    networking using interface teaming with LACP and MC-LAG on networking switches
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有硬件应该在使用接口组网的 OpenShift 组件上运行，使用网络交换机上的 LACP 和 MC-LAG 进行连接。
- en: An external storage cluster for persistent data should follow the same rules
    and should be connected to different switches and power circuits, and located
    in different racks or server rooms if possible
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于持久数据的外部存储集群应遵循相同的规则，并应连接到不同的交换机和电源电路，并尽可能放置在不同的机架或服务器房中。
- en: Use different load balancer clusters that work independently from each other
    and do not form a single point of failure
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用不同的负载均衡器集群，彼此独立运行，不形成单点故障。
- en: If you want to provide additional reliability for an OpenShift solution, you
    can also use the server hardware RAID for OpenShift OS, ECC-enabled RAM, multiple
    networking cards, dual-socket motherboards, and SSD disks
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您希望为 OpenShift 解决方案提供额外的可靠性，您还可以使用服务器硬件 RAID 用于 OpenShift 操作系统、ECC 启用的 RAM、多个网络卡、双插槽主板和
    SSD 磁盘。
- en: Design considerations
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设计考虑
- en: 'Considering a design like this, you have to ask yourself several questions:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑这样的设计，你需要问自己几个问题：
- en: What happens if any critical component (OpenStack, network, or storage) goes
    down?
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果任何关键组件（如 OpenStack、网络或存储）宕机，会发生什么？
- en: What do I do if the OpenShift cluster upgrades?
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果 OpenShift 集群需要升级，我该怎么办？
- en: What do I do if external storage for OpenShift persistent data becomes unavailable?
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果 OpenShift 持久数据的外部存储不可用，我该怎么办？
- en: How much time does it take to recover an OpenShift cluster if the whole thing
    goes down?
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果整个 OpenShift 集群崩溃，恢复需要多长时间？
- en: There are other questions, of course, that you have to ask yourself, but if
    you are able to answer these questions without any hesitation, then you are on
    the right track.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，还有其他问题，你需要问问自己，但如果你能毫不犹豫地回答这些问题，那么你就在正确的轨道上。
- en: OpenShift multi-DC HA design
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OpenShift 多数据中心高可用设计
- en: 'OpenShift multi-DC is one of the most difficult topics when it comes to OpenShift
    design and implementation in a scalable and distributed environment. This happens
    mainly because there are not that many deployments and best practices developed
    around this topic. It may be relatively easy to deploy an OpenShift cluster in
    a single data center environment, but when it comes to a multi-DC design, this
    is where things will get complicated. The reason is that now we have to consider
    all OpenShift and adjacent components, like networking and storage, to be scalable
    and highly available across multiple data centers as well. There are two main
    HA strategies for a design that involves more than one data center:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: OpenShift多数据中心是OpenShift设计和在可扩展分布式环境中实施时最困难的话题之一。这主要是因为在这个话题周围没有太多的部署和最佳实践。单一数据中心环境中部署OpenShift集群可能相对容易，但当涉及到多数据中心设计时，事情就变得复杂。原因是，现在我们还需要考虑所有OpenShift及其相邻组件（如网络和存储）在多个数据中心之间的可扩展性和高可用性。对于涉及多个数据中心的设计，主要有两种高可用性策略：
- en: Single OpenShift cluster across all data centers (for example, one cluster per
    three DCs)
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 跨所有数据中心使用一个OpenShift集群（例如，三个数据中心对应一个集群）
- en: One OpenShift cluster per data center (for example, three clusters per three
    DCs)
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个数据中心一个OpenShift集群（例如，三个数据中心对应三个集群）
- en: For all of these strategies, we need to use active/active scenarios because
    an active/passive scenario is a waste of resources and money. And although there
    are still many companies utilizing active/passive scenarios, they usually have
    plans to migrate to active/active scenarios.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 对于所有这些策略，我们需要使用主动/主动场景，因为主动/被动场景是资源和金钱的浪费。尽管仍有许多公司使用主动/被动场景，但它们通常有计划迁移到主动/主动场景。
- en: One OpenShift cluster across all data centers
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在所有数据中心之间使用一个OpenShift集群
- en: 'This particular design option is the most natural and the easiest to operate,
    but the most dangerous among all the other options. One data center environment
    brings one set of problems, and if you add another data center, it will give you
    twice as many problems. If you have an unreliable data center interconnect link,
    it will add up alongside the failure risks as well. Some of you may disagree,
    but this is what usually happens if you do not plan and design your solution properly:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 这种设计选项是最自然、最容易操作的，但在所有其他选项中也是最危险的。一个数据中心环境带来一套问题，而如果再增加一个数据中心，问题就会翻倍。如果你有一个不可靠的数据中心互联链接，它将增加故障风险。你们中一些人可能不同意，但如果不正确规划和设计解决方案，通常会发生以下情况：
- en: '![](img/00098.jpeg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00098.jpeg)'
- en: 'Considering a design like the preceding, you will have the following challenges:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑前述设计，你将面临以下挑战：
- en: How do I load balance the traffic across all of these data centers from the
    internet?
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我如何在这些数据中心之间平衡来自互联网的流量？
- en: How do I distribute each and every OpenShift component across these data centers
    so that, in case of a failure, OpenShift is still able to handle all the load?
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我如何在这些数据中心之间分布每一个OpenShift组件，以便在发生故障时，OpenShift仍然能够承载所有负载？
- en: How does my storage solution work across all three data centers?
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我的存储解决方案如何在所有三个数据中心之间工作？
- en: Do I need to extend the same network subnet across all data centers?
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我需要在所有数据中心之间扩展相同的网络子网吗？
- en: How do I solve asymmetric routing problems?
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我如何解决非对称路由问题？
- en: What happens with the OpenShift cluster if there is a split brain scenario?
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果发生脑裂现象，OpenShift集群会怎样？
- en: What happens if any critical component (OpenStack, network, or storage) goes
    down in one of the data centers?
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果其中一个数据中心的任何关键组件（OpenStack、网络或存储）发生故障，会发生什么？
- en: How much time does it take if the whole OpenShift cluster goes down?
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果整个OpenShift集群宕机，恢复需要多长时间？
- en: How do I scale out this solution, for example, if a new data center comes out?
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果一个新数据中心上线，我该如何扩展这个解决方案？
- en: What do I do if an OpenShift cluster upgrades?
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果OpenShift集群需要升级，我该怎么办？
- en: What do I do if external storage for OpenShift persistent data becomes unavailable?
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果OpenShift持久化数据的外部存储不可用，我该怎么办？
- en: So, as you can see, having just a single OpenShift cluster across all your data
    centers adds a lot more questions and problems compared to a single cluster in
    one data center. This solution has one main benefit—having one single OpenShift
    cluster is easier to operate. But you need to ask yourself whether you are building
    a solution that will be easy to operate or a reliable and stable solution that
    is going to be up and running during the most difficult and even catastrophic
    events.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，在所有数据中心只使用一个 OpenShift 集群，相较于在单个数据中心使用一个集群，会增加更多的问题和疑问。这个解决方案有一个主要优点——拥有一个单独的
    OpenShift 集群更容易操作。但你需要问自己，是否在构建一个易于操作的解决方案，还是一个可靠且稳定的解决方案，能够在最困难甚至灾难性的事件中保持运行。
- en: One OpenShift cluster per data center
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 每个数据中心一个 OpenShift 集群
- en: 'While the previous solution has a lot of disadvantages, there is another, not
    so popular, but very stable, predictable, and scalable solution. That solution
    is where you have as many clusters as there are data centers:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管前一种解决方案有许多缺点，但还有另一种不那么流行但非常稳定、可预测且具有良好扩展性的解决方案。该解决方案是每个数据中心都使用一个 OpenShift
    集群：
- en: '![](img/00099.jpeg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00099.jpeg)'
- en: 'The main benefit of this solution is that all of your OpenShift clusters are
    going to be independent of each other and won''t affect other OpenShift clusters
    if something goes wrong. You will still have challenges, but they are a bit different
    from single Openshift clusters across all DCs and easier to solve. Besides, this
    solution scales much better than the other ones. However, you should answer these
    questions before implementing this solution:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 这个解决方案的主要优点是，所有的 OpenShift 集群彼此独立，一个集群出现问题不会影响其他集群。你仍然会遇到挑战，但这些挑战与跨所有数据中心使用单个
    OpenShift 集群的挑战有所不同，而且更容易解决。此外，这个解决方案的扩展性比其他方案更好。然而，在实施此解决方案之前，你应该回答以下问题：
- en: How do I load balance the traffic across all of these data centers from the
    internet?
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我如何在所有这些数据中心之间进行负载均衡？
- en: What happens with the OpenShift cluster if there is a split brain scenario?
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果出现脑裂（split brain）情况，OpenShift 集群会发生什么？
- en: How does my storage data work across all three data centers?
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我的存储数据如何在三个数据中心之间工作？
- en: Do I need database replication across all the data center? If yes, how will
    it work?
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我是否需要在所有数据中心之间进行数据库复制？如果是，如何实现？
- en: What happens if any critical component (OpenStack, network, or storage) goes
    down in one of the data centers?
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果某个数据中心的关键组件（如 OpenStack、网络或存储）出现故障，怎么办？
- en: How much time does it take if the whole OpenShift cluster goes down?
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果整个 OpenShift 集群出现故障，需要多长时间恢复？
- en: How do I scale out this solution, for example, if a new data center comes out?
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果有新数据中心上线，我该如何扩展这个解决方案？
- en: What do I do regarding OpenShift cluster upgrades?
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于 OpenShift 集群升级，我该怎么办？
- en: What do I do if external storage for OpenShift persistent data becomes unavailable?
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果 OpenShift 持久数据的外部存储不可用，我该怎么办？
- en: 'Following is a comparison table to consolidate the main differences in all
    **OpenShift Container Platform** (**OCP**) HA solutions that we have just discussed:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个对比表，总结了我们刚刚讨论的所有 **OpenShift 容器平台**（**OCP**）高可用性解决方案的主要差异：
- en: '| **Name** | **1xOCP-1xDC** | **1xOCP-3xDC** | **3xOCP-3xDC** |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| **名称** | **1xOCP-1xDC** | **1xOCP-3xDC** | **3xOCP-3xDC** |'
- en: '| DC redundancy | No | Yes | Yes |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| 数据中心冗余 | 否 | 是 | 是 |'
- en: '| Intercluster redundancy | No | No | Yes |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| 集群间冗余 | 否 | 否 | 是 |'
- en: '| Intercluster storage isolation | No | No | Yes |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| 集群间存储隔离 | 否 | 否 | 是 |'
- en: '| Scalability | Limited | Limited | Unlimited |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| 扩展性 | 有限 | 有限 | 无限 |'
- en: '| Solution implementation | Easy | Moderate | Hard |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| 解决方案实现 | 简单 | 中等 | 困难 |'
- en: '| Operations | Easy | Easy | Moderate |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| 操作 | 简单 | 简单 | 中等 |'
- en: '| Troubleshooting | Easy | Hard | Moderate |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| 故障排除 | 简单 | 困难 | 中等 |'
- en: '| Cluster seamless Upgrade and recovery | Moderate | Hard | Easy |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| 集群无缝升级与恢复 | 中等 | 困难 | 简单 |'
- en: '| Application development  | Easy | Easy | Easy |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '| 应用开发 | 简单 | 简单 | 简单 |'
- en: '| Application deployment  | Easy | Easy | Moderate  |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '| 应用部署 | 简单 | 简单 | 中等 |'
- en: '| Requires external custom tools | No | No | Yes |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| 是否需要外部自定义工具 | 否 | 否 | 是 |'
- en: 'As you can see, each and every HA solution has their own pros and cons:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，每个高可用性解决方案都有其优缺点：
- en: '**1xOCP-1xDC**: This is easiest to implement, operate, and troubleshoot, but
    suffers from data center or OpenShift cluster failures and has limited scalability.'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**1xOCP-1xDC**：这是最容易实现、操作和故障排除的方案，但它容易受到数据中心或 OpenShift 集群故障的影响，且扩展性有限。'
- en: '**1xOCP-3xDC**: In addition to all the benefits of the previous solution, it
    has better redundancy but adds a lot of troubleshooting effort if something goes
    wrong. This solution is also difficult to perform seamless upgrades and recoveries
    on.'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**1xOCP-3xDC**：除了前一个解决方案的所有好处外，它具有更好的冗余性，但如果出现问题，故障排除的工作量会大大增加。此解决方案也难以进行无缝升级和恢复。'
- en: '**3xOCP-3xDC**: This is a next level solution architecture that is much harder
    to implement, operate, and troubleshoot, but is the most stable, scalable solution
    ever. This solution requires extensive experience and expertise, but ensures that
    you will always have your application up and running.'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**3xOCP-3xDC**：这是一个更高层次的解决方案架构，实施、运营和故障排除更加困难，但它是最稳定、可扩展的解决方案。这个解决方案需要丰富的经验和专业知识，但可以确保您的应用程序始终保持运行。'
- en: 'In order to successfully implement the last solution where we have one OpenShift
    cluster per data center, we are required to take a closer look at the following
    topics:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 为了成功实现最后一个解决方案，其中每个数据中心都有一个 OpenShift 集群，我们需要仔细关注以下几个主题：
- en: Networking
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络
- en: Storage
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储
- en: Application deployment
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用部署
- en: Networking
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络
- en: 'The main problem in networking when you are building a solution like this is
    how to properly load balance the traffic, and when failure happens, how to re-route
    the traffic to other OpenShift clusters. The main technologies we can use here
    are the following:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在构建这样的解决方案时，网络的主要问题是如何正确地负载均衡流量，以及当故障发生时，如何将流量重新路由到其他 OpenShift 集群。我们可以使用的主要技术如下：
- en: '**Anycast ****IP addresses**: In order to effectively load balance the traffic
    across all our data centers, we can use an anycast IP address. This will help
    not only load balance the traffic but also provide IP failover if an application
    becomes unavailable in one of the data centers.'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Anycast IP 地址**：为了有效地在所有数据中心之间进行流量负载均衡，我们可以使用 Anycast IP 地址。这不仅有助于负载均衡流量，还能在某个数据中心的应用程序不可用时提供
    IP 故障转移。'
- en: '**Application health checks**: Application health checks are a must have in
    this solution. They will help you to identify the failure and reroute the traffic
    to other data centers.'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**应用程序健康检查**：应用程序健康检查是这个解决方案中的必备内容。它们将帮助您识别故障并将流量重新路由到其他数据中心。'
- en: '**Dynamic routing protocols**: Make sure that you have IGP/BGP connectivity
    between load balancers and network HW. When failure happens, IGP/BGP will withdraw
    its IP anycast address so that the traffic goes to other data centers.'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**动态路由协议**：确保负载均衡器与网络硬件之间有 IGP/BGP 连接。当发生故障时，IGP/BGP 将撤回其 IP Anycast 地址，使流量转到其他数据中心。'
- en: '**SSL Offloading**: Depending on the implementation, you might need to configure
    SSL offloading on load balancers. This will take traffic decryption off the OpenShift
    cluster:'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SSL 卸载**：根据实现的不同，您可能需要在负载均衡器上配置 SSL 卸载。这将使流量解密从 OpenShift 集群中分离出来：'
- en: '![](img/00100.jpeg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00100.jpeg)'
- en: Storage
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 存储
- en: 'Storage has always from a problem when it comes to geographically distributed
    application deployment across several platforms. Even major cloud providers have
    not solved it yet. This is the prime reason why application instances must be
    able to work independently from each other and be stateless. However, we can suggest
    a few architectures that will point you in the right direction and help solve
    the problem:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 存储一直是跨多个平台进行地理分布式应用部署时的一个问题。即使是主要的云服务提供商也尚未解决这个问题。这是应用程序实例必须能够相互独立运行并保持无状态的主要原因。然而，我们可以建议一些架构，指引您走向正确的方向并帮助解决这个问题：
- en: '**Storage geo-replication**:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '**存储地理复制**：'
- en: '![](img/00101.jpeg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00101.jpeg)'
- en: You can set up Multi-DC storage replication so that you have data consistency
    across all data centers. One example of this is GlusterFS geo-replication, which
    supports different scenarios that should suit your case. As we discussed earlier
    in this book, GlusterFS is a perfect match for OpenShift as a persistent storage.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以设置多数据中心存储复制，以确保所有数据中心之间的数据一致性。一个例子是 GlusterFS 地理复制，它支持不同的场景，应该适合您的需求。正如本书早些时候讨论的，GlusterFS
    作为 OpenShift 的持久存储是一个完美的匹配。
- en: '**Database geo-replication**:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据库地理复制**：'
- en: '![](img/00102.jpeg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00102.jpeg)'
- en: In most cases, the only stateful information you have in OpenShift will be kept
    in databases. Modern databases support multi-site, multi-DC, and multi-region
    replication architectures, such as Cassandra, MongoDB, Kafka, and Hazelcast.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数情况下，您在 OpenShift 中的唯一有状态信息将保存在数据库中。现代数据库支持多站点、多数据中心和多区域复制架构，如 Cassandra、MongoDB、Kafka
    和 Hazelcast。
- en: You will still need to take care of backup and restore procedures if the database
    gets corrupted.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 如果数据库损坏，你仍然需要处理备份和恢复过程。
- en: Application deployment
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应用部署
- en: 'Once you are done with network and storage designs, the final step should be
    taken towards application deployment processes. Since we have several clusters,
    there must be a process regarding how to deliver your applications consistently
    across all OpenShift clusters and all data centers:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦完成网络和存储设计，最后一步应该是关于应用部署流程的。由于我们有多个集群，因此必须有一个流程，确保如何在所有 OpenShift 集群和所有数据中心中一致地交付你的应用：
- en: '![](img/00103.jpeg)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00103.jpeg)'
- en: This is where external tools come into the picture. We can use external CI/CD
    software to automate the application deployment process across all OpenShift clusters,
    or we can build a separate OpenShift cluster with CI/CD to develop, build, test,
    and release applications to production OpenShift clusters.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 这是外部工具发挥作用的地方。我们可以使用外部 CI/CD 软件来自动化整个 OpenShift 集群中的应用部署过程，或者我们可以构建一个单独的 OpenShift
    集群，配合 CI/CD 来开发、构建、测试并将应用发布到生产 OpenShift 集群。
- en: Summary
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we talked about OpenShift scenarios in single and multiple
    data centers. This chapter also explained how to properly design OpenShift in
    a distributed and redundant configuration across one or more data centers.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 本章讨论了单一和多个数据中心中的 OpenShift 场景。本章还解释了如何在一个或多个数据中心中以分布式和冗余的配置正确设计 OpenShift。
- en: In the next chapter, we are going to cover main network aspects while designing
    an OpenShift cluster in one or across multiple data centers. We will also cover
    commonly made mistakes, solutions, and overall guidance from a networking point
    of view.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将讨论在设计一个或多个数据中心的 OpenShift 集群时的主要网络方面。我们还将讨论常见的错误、解决方案以及从网络角度出发的总体指导。
- en: Questions
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: 'Which OpenShift component has built-in HA and works in active/active mode? choose
    one:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个 OpenShift 组件内置高可用性并在主动/主动模式下工作？ 选择一个：
- en: OpenShift Etcd key-value store
  id: totrans-124
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: OpenShift Etcd 键值存储
- en: OpenShift Masters
  id: totrans-125
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: OpenShift 主节点
- en: OpenShift infrastructure nodes
  id: totrans-126
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: OpenShift 基础设施节点
- en: OpenShift nodes
  id: totrans-127
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: OpenShift 节点
- en: 'Which OpenShift HA solution out of the ones listed supports unlimited scalability?
    choose one:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪种 OpenShift 高可用性解决方案支持无限扩展性？ 选择一个：
- en: 1xOSP - 3xDC
  id: totrans-129
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 1xOSP - 3xDC
- en: 3xOSP - 1xDC
  id: totrans-130
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 3xOSP - 1xDC
- en: 3xOSP - 3xDC
  id: totrans-131
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 3xOSP - 3xDC
- en: 1xOSP - 1xDC
  id: totrans-132
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 1xOSP - 1xDC
- en: 'Anycast IP addresses ensure that application traffic is load balanced across
    several data centers:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Anycast IP 地址确保应用流量在多个数据中心之间负载均衡：
- en: 'True'
  id: totrans-134
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 正确
- en: 'False'
  id: totrans-135
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 错误
- en: 'What are the two options to ensure application data consistency in geo-replicated
    OpenShift deployments? choose two:'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在地理复制的 OpenShift 部署中，确保应用数据一致性的两个选项是什么？ 选择两个：
- en: Persistent storage replication
  id: totrans-137
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 持久存储复制
- en: Application database replication
  id: totrans-138
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 应用数据库复制
- en: Openshift cluster replication
  id: totrans-139
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: OpenShift 集群复制
- en: Openshift etcd key-value store replication
  id: totrans-140
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: OpenShift etcd 键值存储复制
- en: Further reading
  id: totrans-141
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'Here are a list of topics with links related to this chapter that you might
    want to deep dive into:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 这里列出了一些与本章节相关的主题链接，你可能想深入了解：
- en: '**OpeShift HA design**: [http://v1.uncontained.io/playbooks/installation/](http://v1.uncontained.io/playbooks/installation/)'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OpenShift 高可用性设计**: [http://v1.uncontained.io/playbooks/installation/](http://v1.uncontained.io/playbooks/installation/)'
- en: '**OpenShift high availability**: [https://docs.openshift.com/enterprise/latest/admin_guide/high_availability.html](https://docs.openshift.com/enterprise/latest/admin_guide/high_availability.html)'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OpenShift 高可用性**: [https://docs.openshift.com/enterprise/latest/admin_guide/high_availability.html](https://docs.openshift.com/enterprise/latest/admin_guide/high_availability.html)'
- en: '**Openshift for single and multiple DCs**: [https://blog.openshift.com/deploying-openshift-applications-multiple-datacenters/](https://blog.openshift.com/deploying-openshift-applications-multiple-datacenters/)'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OpenShift 单数据中心和多个数据中心**: [https://blog.openshift.com/deploying-openshift-applications-multiple-datacenters/](https://blog.openshift.com/deploying-openshift-applications-multiple-datacenters/)'
- en: '**GlusterFS geo-replication**: [https://docs.gluster.org/en/latest/Administrator%20Guide/Geo%20Replication/](https://docs.gluster.org/en/latest/Administrator%20Guide/Geo%20Replication/)'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GlusterFS 地理复制**: [https://docs.gluster.org/en/latest/Administrator%20Guide/Geo%20Replication/](https://docs.gluster.org/en/latest/Administrator%20Guide/Geo%20Replication/)'
