- en: Develop Apps using Web API
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Web API 开发应用程序
- en: Web API is a new feature, introduced for the first time for Dynamics CRM 2016\.
    You can use Dynamics 365 Web API with different programming languages, multiple
    platforms, and devices. Web API in Dynamics 365 uses **Open Data Protocol** (**OData**),
    also known as OData version 4\. As Dynamics 365 Web API is built on open standards,
    it is not necessary to use any assemblies.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Web API 是一项新功能，首次在 Dynamics CRM 2016 中引入。你可以使用 Dynamics 365 Web API，结合不同的编程语言、多个平台和设备。Dynamics
    365 中的 Web API 使用 **开放数据协议**（**OData**），也称为 OData 版本 4。由于 Dynamics 365 Web API
    基于开放标准构建，因此不需要使用任何程序集。
- en: With Dynamics 365, **Organization Data Service** was deprecated and was replaced
    with Web API. The main purpose of the API is to provide parity with organization
    services and try to reduce as many constraints as possible.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Dynamics 365 中，**组织数据服务**已被弃用，并由 Web API 替代。该 API 的主要目的是提供与组织服务的功能对等，并尽量减少约束。
- en: 'The following are the characteristics of Web API:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是 Web API 的特点：
- en: It implements OData version 4.0 for building and consuming RESTful APIs over
    rich data sources such as DOC, HTML, and PDF
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它实现了 OData 版本 4.0，用于构建和消费基于丰富数据源（如 DOC、HTML 和 PDF）的 RESTful API。
- en: It supports a wide variety of programming languages such as .Net, C++, Java,
    Python, devices, and platforms
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它支持多种编程语言，如 .Net、C++、Java、Python、设备和平台。
- en: Request and response have JSON format
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请求和响应采用 JSON 格式
- en: Getting started with Dynamics 365 Web API (client-side JavaScript)
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始使用 Dynamics 365 Web API（客户端 JavaScript）
- en: Dynamics 365 Web API can be called and accessed using JavaScript. You can use
    Web API with HTML web resources, form scripts, and ribbon commands to perform
    various operations on data.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Dynamics 365 Web API 可以通过 JavaScript 调用和访问。你可以将 Web API 与 HTML Web 资源、表单脚本和功能区命令结合使用，对数据执行各种操作。
- en: Web API is very convenient to use with JavaScript as it returns results in the
    form of JSON objects that can be easily converted to JavaScript objects.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Web API 与 JavaScript 一起使用非常方便，因为它返回的结果是 JSON 对象，能够轻松地转换为 JavaScript 对象。
- en: In Dynamics 365, Web API is used mainly with HTML web resources and in Single
    Page Applications.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Dynamics 365 中，Web API 主要用于 HTML Web 资源和单页面应用程序中。
- en: JavaScript web resources
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: JavaScript Web 资源
- en: The main benefit of using Web API in JavaScript web resources is that you will
    not need to authenticate because web resources are a part of the application and
    can be accessed by authenticated users only. You can directly write a code for
    Web API operations in the JavaScript web resource, and perform operations.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在 JavaScript Web 资源中使用 Web API 的主要好处是，你无需进行身份验证，因为 Web 资源是应用的一部分，只能由已认证用户访问。你可以直接在
    JavaScript Web 资源中编写 Web API 操作代码并执行操作。
- en: Single Page Applications
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 单页面应用程序
- en: Single Page Applications are capable of making Dynamics 365 Web API calls. They
    consists of many JavaScript libraries that are running on browsers, which authenticate
    the Dynamics 365 API using **Cross-Origin Resource Sharing** (**CORS**).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 单页面应用程序能够发起 Dynamics 365 Web API 调用。它们包含许多运行在浏览器上的 JavaScript 库，这些库通过 **跨源资源共享**（**CORS**）认证
    Dynamics 365 API。
- en: While using JavaScript in a Single Page Application, the `adal.js` library is
    used to allow the user to authenticate and to access Dynamics 365 from a hosted
    web app. You must also integrate an authorization header that contains an authentication
    token.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在单页面应用程序中使用 JavaScript 时，`adal.js` 库用于允许用户进行身份验证，并通过托管的 Web 应用访问 Dynamics 365。你还必须集成一个包含身份验证令牌的授权头。
- en: Further on, in this chapter, we will look through some examples that use Web
    API for performing CRUD operations using web resources.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章后续部分，我们将通过一些示例，使用 Web API 执行基于 Web 资源的 CRUD 操作。
- en: Dynamics 365 Web API uses `XMLHttpRequest` object to perform operations.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Dynamics 365 Web API 使用 `XMLHttpRequest` 对象来执行操作。
- en: Working with XMLHttpRequest in Dynamics 365 Web API
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Dynamics 365 Web API 中使用 XMLHttpRequest
- en: '**XMLHttpRequest** (**XHR**) is a native object supported by all browsers,
    which enables AJAX techniques for making web pages dynamic.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**XMLHttpRequest**（**XHR**）是所有浏览器支持的本地对象，它使得 AJAX 技术得以在网页中动态交互。'
- en: We will look at a very simple example that uses a Web API and `XMLHttpRequest`
    object.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将查看一个非常简单的示例，该示例使用 Web API 和 `XMLHttpRequest` 对象。
- en: 'The following is the Web API code that will fetch all the opportunities:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是获取所有机会的 Web API 代码：
- en: '[PRE0]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: In the preceding code, you will notice that after initializing a new `XMLHttpRequest`
    object, you need to open it before sending or setting any properties for it. The
    parameters of an `open` method are an HTTP request method (`GET`, `PUT`, `POST`,
    `DELETE`, and so on), a URL, and a Boolean parameter that indicates whether the
    operation is to be performed asynchronously.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述代码中，您会注意到，在初始化一个新的`XMLHttpRequest`对象后，您需要在发送或设置任何属性之前打开它。`open`方法的参数包括HTTP请求方法（`GET`、`PUT`、`POST`、`DELETE`等）、URL以及一个布尔值参数，表示是否异步执行操作。
- en: Web API URL and versions
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Web API URL和版本
- en: 'A Web API URL consists of the following:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Web API的URL由以下部分组成：
- en: '**Protocol**: A protocol in HTTP request can be `http://` or `https://`.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**协议**：HTTP请求中的协议可以是`http://`或`https://`。'
- en: '**Base URL**: A base URL is nothing but the URL of your current organization
    that can be retrieved using the function—`Xrm.Page.context.getClientUrl()`.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基础URL**：基础URL就是当前组织的URL，可以通过函数`Xrm.Page.context.getClientUrl()`获取。'
- en: '**Web API path**: Web API path in Dynamics 365 is API/data.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Web API路径**：Dynamics 365中的Web API路径是API/data。'
- en: '**Version**: It is the version of Web API for Dynamics 365\. The latest version
    is 9.0.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**版本**：这是Dynamics 365 Web API的版本。最新版本是9.0。'
- en: '**Resource**: A resource can be the name of the entity, function, or an action
    you want to perform.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资源**：资源可以是实体的名称、函数或您想执行的操作。'
- en: The URL used in the preceding example is `Xrm.Page.context.getClientUrl() +
    "/api/data/v8.2/opportunities()`.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 上述示例中使用的URL是`Xrm.Page.context.getClientUrl() + "/api/data/v8.2/opportunities()`.
- en: 'HTTP request also supports various **HTTP methods** described as follows:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: HTTP请求还支持各种**HTTP方法**，具体描述如下：
- en: '`GET`: It is used for retrieving data; the status code for a successful call
    is `200 OK`'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`GET`：用于检索数据；成功调用的状态码是`200 OK`'
- en: '`POST`: It is used for the creation of new records'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`POST`：用于创建新记录'
- en: '`PATCH`: It is used for updating or performing `upsert` operations on entity
    records'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PATCH`：用于更新或执行对实体记录的`upsert`操作'
- en: '`DELETE`: It is used for deletion of records'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DELETE`：用于删除记录'
- en: '`PUT`: It is used when updating individual properties of an entity record'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`PUT`：用于更新实体记录的单个属性'
- en: 'For HTTP Request, various HTTP headers are also used that are described as
    follows:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 对于HTTP请求，还使用了各种HTTP头部，具体描述如下：
- en: Dynamics 365 supports only JSON format. So, these following headers can be used
    with Dynamics 365 Web API.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: Dynamics 365仅支持JSON格式。因此，以下头部可与Dynamics 365 Web API一起使用。
- en: For every request, you must include the `Accept` header value of `application/json`,
    which returns body, even in the case of no response. If there is an error, it
    will be returned in JSON format. Your code can work without this header, but it
    is a best practice to use it with your request.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每个请求，必须包括`Accept`头部值`application/json`，即使没有响应，返回的也是正文。如果发生错误，将以JSON格式返回。虽然代码没有这个头部也能正常工作，但在请求中使用它是一种最佳实践。
- en: You must always include headers, `OData-Version` and `OData-Max-Version` set
    to a value of 4.0\. The current version of OData is 4.0, but to avoid ambiguity
    about OData versions in future, you should have these headers included in your
    request.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 您必须始终包含`OData-Version`和`OData-Max-Version`头部，设置为4.0的值。当前的OData版本是4.0，但为了避免未来OData版本的不明确性，您应该在请求中包括这些头部。
- en: 'The properties that do not include any recent changes may include cached data.
    So, to override browser caching of Web API requests, you must include the `If-None-Match:
    null` header in the request body**.**'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '不包含任何最近更改的属性可能包含缓存数据。因此，为了覆盖浏览器缓存Web API请求，必须在请求正文中包含`If-None-Match: null`头部**。**'
- en: After getting a basic idea about Web API in Dynamics 365, we will move toward
    performing various operations using Web API. We will also learn how to create,
    retrieve, update, and delete an entity record using a Web API request. We will
    also go through associate and disassociate request examples.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在对Dynamics 365中的Web API有了基本了解后，我们将开始使用Web API执行各种操作。我们还将学习如何使用Web API请求创建、检索、更新和删除实体记录。我们还会查看关联和取消关联请求的示例。
- en: 'Therefore, at least the following HTTP headers should be included:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，至少应包括以下HTTP头部：
- en: '`Accept: application/json`'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Accept: application/json`'
- en: '`OData-MaxVersion: 4.0`'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`OData-MaxVersion: 4.0`'
- en: '`OData-Version: 4.0`'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`OData-Version: 4.0`'
- en: '`If-None-Match: null`'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`If-None-Match: null`'
- en: Querying data using Dynamics 365 Web API
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Dynamics 365 Web API查询数据
- en: 'While retrieving data from Dynamics 365, you can set various criteria for the
    data you need and can apply various filters for retrieving specific data. For
    this, we will look at an example for querying data, using Web API from Dynamics
    365:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在从 Dynamics 365 检索数据时，您可以设置所需数据的各种条件，并且可以应用多种过滤器来检索特定的数据。为此，我们将通过一个示例来展示如何使用
    Web API 查询数据：
- en: 'In this example, we will use `$set` and `$top` system query options to return
    the `firstname` property of the first five contacts:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在此示例中，我们将使用 `$set` 和 `$top` 系统查询选项返回前五个联系人的 `firstname` 属性：
- en: '[PRE1]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The response to the preceding request will be as follows:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 前述请求的响应如下：
- en: '[PRE2]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'In the next example, we will look at how to limit the number of entity records
    returned for any request. The maximum number of records that can be returned is
    5,000\. You cannot retrieve more than 5,000 records in Dynamics 365:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一个示例中，我们将展示如何限制每个请求返回的实体记录数。最多可以返回 5,000 条记录。您不能在 Dynamics 365 中检索超过 5,000
    条记录：
- en: '[PRE3]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The response to the preceding request will be as follows:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 前述请求的响应如下：
- en: '[PRE4]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Now, we will see how to apply system query options to query data using Dynamics
    365 Web API. The first query option is appended after [`?`] and every proceeding
    option is separated using [`&`]. Query options are case sensitive.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将看到如何使用 Dynamics 365 Web API 应用系统查询选项来查询数据。第一个查询选项附加在 [`?`] 后面，后续每个选项通过
    [`&`] 分隔。查询选项区分大小写。
- en: 'In the next query, we will select the `firstname` and `lastname` of a contact
    whose age is less than `50`:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一个查询中，我们将选择年龄小于 `50` 的联系人的 `firstname` 和 `lastname`：
- en: '[PRE5]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The standard filter operators used in Dynamics 365 Web API are as follows:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: Dynamics 365 Web API 中使用的标准筛选运算符如下所示：
- en: '| **Operator** | **Description** | **Example** |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| **运算符** | **描述** | **示例** |'
- en: '| **Comparison operators** | - | - |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| **比较运算符** | - | - |'
- en: '| `Eq` | Equal | `$filter=age eq 50` |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| `Eq` | 等于 | `$filter=age eq 50` |'
- en: '| `Ne` | Not equal | `$filter=age ne 50` |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| `Ne` | 不等于 | `$filter=age ne 50` |'
- en: '| `Gt` | Greater than | `$filter=age gt 50` |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| `Gt` | 大于 | `$filter=age gt 50` |'
- en: '| `Ge` | Greater than or equal | `$filter=age ge 50` |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| `Ge` | 大于或等于 | `$filter=age ge 50` |'
- en: '| `Lt` | Less than | `$filter=age lt 50` |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| `Lt` | 小于 | `$filter=age lt 50` |'
- en: '| `Le` | Less than or equal | `$filter=age le 50` |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| `Le` | 小于或等于 | `$filter=age le 50` |'
- en: 'The logical operators are as follows:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 逻辑运算符如下所示：
- en: '| **Operator** | **Description** | **Example** |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| **运算符** | **描述** | **示例** |'
- en: '| **Logical operators** | - | - |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| **逻辑运算符** | - | - |'
- en: '| `And` | Logical and | `$filter=age lt 50 and age gt 20` |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| `And` | 逻辑与 | `$filter=age lt 50 and age gt 20` |'
- en: '| `Or` | Logical or | `$filter=contains(firstname,''(sample)'') or contains(firstname,''test'')`
    |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| `Or` | 逻辑或 | `$filter=contains(firstname,''(sample)'') or contains(firstname,''test'')`
    |'
- en: '| `Not` | Logical negation | `$filter=not contains(firstname,''sample'')` |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| `Not` | 逻辑非 | `$filter=not contains(firstname,''sample'')` |'
- en: 'The grouping operators are as follows:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 分组运算符如下所示：
- en: '| **Grouping operators** | - | - |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| **分组运算符** | - | - |'
- en: '| `( )` | Precedence grouping | `(contains(firstname,''sample'') or contains(firstname,''test''))
    and age gt 50` |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| `( )` | 优先级分组 | `(contains(firstname,''sample'') or contains(firstname,''test''))
    and age gt 50` |'
- en: Standard query options
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 标准查询选项
- en: 'The OData string query functions supported by Web API are as follows:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: Web API 支持的 OData 字符串查询函数如下所示：
- en: '| **Function** | **Example** |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| **函数** | **示例** |'
- en: '| `Contains` | `$filter=contains(firstname,''(sample)'')` |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| `Contains` | `$filter=contains(firstname,''(sample)'')` |'
- en: '| `Endswith` | `$filter=endswith(firstname,''Inc.'')` |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| `Endswith` | `$filter=endswith(firstname,''Inc.'')` |'
- en: '| `startswith` | `$filter=startswith(firstname,''a'')` |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| `startswith` | `$filter=startswith(firstname,''a'')` |'
- en: '**Order by query**:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '**排序查询**：'
- en: 'You can order the records in ascending or descending order. The following example
    shows how to order records:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以按升序或降序排序记录。以下示例展示了如何排序记录：
- en: '[PRE6]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Now, after learning to query using Dynamics 365 Web API, we will go through
    CRUD operations. We will look through some examples of performing these operations.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，学习了如何使用 Dynamics 365 Web API 查询数据后，我们将讨论 CRUD 操作。我们将通过一些执行这些操作的示例来进行演示。
- en: CRUD operations using Dynamics 365 Web API
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Dynamics 365 Web API 进行 CRUD 操作
- en: We will look at some basic examples for creating, updating, retrieving, and
    deleting an entity.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将展示一些创建、更新、检索和删除实体的基本示例。
- en: '**Create an entity**'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '**创建实体**'
- en: 'The following is a code for Web API that creates a new record for the `entity`
    account. For that first, we will create a JSON object and set the required properties:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个 Web API 的代码示例，用于为 `entity` 账户创建新记录。首先，我们将创建一个 JSON 对象并设置所需的属性：
- en: '[PRE7]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '**Retrieving list of entity records**'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '**获取实体记录列表**'
- en: 'Next, we will retrieve a list of accounts from Dynamics 365 using a Web API
    request. The following is the code for retrieving a list of entities:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将通过 Web API 请求从 Dynamics 365 中检索账户列表。以下是用于检索实体列表的代码：
- en: '[PRE8]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: These retrieved objects can be easily converted to JavaScript objects. These
    objects can be assigned to a JavaScript array and can be used for further operations.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 这些检索到的对象可以很容易地转换为 JavaScript 对象。这些对象可以分配给 JavaScript 数组，并可用于后续操作。
- en: '**Update an entity record**'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '**更新实体记录**'
- en: 'Now, we will update an `entity` record. For updating a record, you will need
    to pass the GUID of the record you want to update and also a JSON object that
    consists of fields to be updated. Here, we will update `email` and `city` for
    an account record:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将更新一个`entity`记录。更新记录时，你需要传递你想要更新的记录的 GUID，以及包含要更新字段的 JSON 对象。在这里，我们将更新一个账户记录的`email`和`city`：
- en: '[PRE9]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '**Delete an entity record**'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '**删除实体记录**'
- en: 'For deleting an `entity` record, you will need to pass the GUID of the record
    to be deleted. The following is the code to delete an account `entity` record
    from Dynamics 365:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 删除`entity`记录时，你需要传递要删除记录的 GUID。以下是从 Dynamics 365 删除账户`entity`记录的代码：
- en: '[PRE10]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Impersonation in Dynamics 365 Web API
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Dynamics 365 Web API 中进行模拟操作
- en: When you want to execute business logic on behalf of another user, then you
    will need to use impersonation. Sometimes, there are some processes or business
    logic on behalf of a particular Dynamics 365 user that has the appropriate security
    role of that user; for such requirements, impersonation is very useful.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 当你想要代表另一个用户执行业务逻辑时，你需要使用模拟。有时候，某些流程或业务逻辑需要代表特定的 Dynamics 365 用户来执行，并且该用户拥有适当的安全角色；对于这种需求，模拟非常有用。
- en: In the code, whenever you need to create a record on behalf of another user,
    you will use this feature. For that, you will need two user accounts. To use impersonation
    you will need to add one header named `MSCRMCallerID` with a GUID value that is
    equal to the user's system user ID as shown in the next request.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在代码中，当你需要代表其他用户创建记录时，你将使用此功能。为此，你需要两个用户账户。要使用模拟功能，你需要添加一个名为 `MSCRMCallerID`
    的头部，其 GUID 值等于该用户的系统用户 ID，具体如下请求所示。
- en: 'Please refer to the following code:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考以下代码：
- en: '[PRE11]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Retrieving metadata using Web API
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Web API 获取元数据
- en: Microsoft Dynamics 365 is a metadata-driven application, where you will need
    to query metadata for some scenarios and specific requirements. Dynamics 365 Web
    API supports querying metadata. We will use the `EntityDefinitions` entity to
    retrieve the metadata of the `contact` entity.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: Microsoft Dynamics 365 是一个元数据驱动的应用程序，在某些场景和特定需求中，你需要查询元数据。Dynamics 365 Web API
    支持查询元数据。我们将使用`EntityDefinitions`实体来获取`contact`实体的元数据。
- en: 'The following is the request to query metadata:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是查询元数据的请求：
- en: '[PRE12]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Updates for Web API in Dynamics 365 in version 9.0
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Dynamics 365 Web API 在 9.0 版本中的更新
- en: Now, in the newly released version 9.0 for Dynamics 365, there are many remarkable
    changes made to querying data and performing various operations using Dynamics
    365 Web API. With the new release, we will not need to create any requests for
    using Web API, instead, you will use built-in and pre-defined functions for using
    Web API.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在 Dynamics 365 最新发布的 9.0 版本中，对于查询数据和执行各种操作，使用 Dynamics 365 Web API 进行了许多显著的变化。随着新版本的发布，我们将不再需要为使用
    Web API 创建任何请求，而是直接使用内置的预定义函数来使用 Web API。
- en: Using Web API in the new Dynamics 365 version is very simple and easy. Now,
    Dynamics 365 has a new library `Xrm.WebApi` and performs CRUD operations using
    Web API. This library provides functions to perform operations, which we will
    look through in the following examples and sample code.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在新版本的 Dynamics 365 中使用 Web API 变得非常简单和方便。现在，Dynamics 365 引入了新的库`Xrm.WebApi`，并通过
    Web API 执行 CRUD 操作。该库提供了执行操作的函数，接下来我们将在示例和代码中展示这些操作。
- en: '**Create an entity record**'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '**创建实体记录**'
- en: 'Here is a sample code to create a new contact using the `Xrm.WebApi.createRecord()`
    function:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 这是使用`Xrm.WebApi.createRecord()`函数创建新联系人的示例代码：
- en: '[PRE13]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '**Update an entity record**'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '**更新实体记录**'
- en: 'In the following example, we will be updating a record contact by adding a
    new attribute `email`:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下示例中，我们将通过添加一个新的`email`属性来更新联系人记录：
- en: '[PRE14]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '**Delete an entity record**'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '**删除实体记录**'
- en: 'The following is the sample code to delete a contact record:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是删除联系人记录的示例代码：
- en: '[PRE15]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '**Retrieving records**'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '**检索记录**'
- en: 'In the new version, you can directly use fetch XML to retrieve multiple records
    from Dynamics 365 using Web API. In the following example, we will use fetch an
    XML query to fetch/retrieve contacts for a selected account. The following is
    the sample code for retrieving records from Dynamics 365:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在新版本中，你可以直接使用 fetch XML 通过 Web API 从 Dynamics 365 检索多个记录。在下面的示例中，我们将使用 fetch
    XML 查询来获取/检索某个选定账户的联系人。以下是从 Dynamics 365 检索记录的示例代码：
- en: '[PRE16]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Summary
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we saw how to work on Single Page Applications, XMLHttpRequest
    in Dynamics 365 Web API, Web API URL and versions, and Standard Query Options,
    and also saw how to work on CRUD operations using Dynamics 365 Web API.  In the
    next chapter, we will cover Azure integration with Dynamics 365, configure Azure
    integration with Dynamics 365, and write Azure-aware plugins and different listener
    applications.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何在 Dynamics 365 Web API 中处理单页应用程序、XMLHttpRequest、Web API URL 和版本，以及标准查询选项，还学习了如何使用
    Dynamics 365 Web API 进行 CRUD 操作。在下一章中，我们将介绍 Azure 与 Dynamics 365 的集成，如何配置 Azure
    集成与 Dynamics 365，并编写支持 Azure 的插件和不同的监听应用程序。
