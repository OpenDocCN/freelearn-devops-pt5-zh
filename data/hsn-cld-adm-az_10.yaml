- en: Best Practices
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最佳实践
- en: In this final chapter, we are going to review what we have learned so far and
    highlight some best practices. Some simple tips can help you set up things right
    from the start and save you a lot of trouble down the road. Best practices will
    help you in administration and troubleshooting, as you'll be able to track things
    better and notice mistakes easier. We'll add some security tips and how to avoid
    the most common mistakes. We are going to use **infrastructure as code** (**IaC**)
    as a tool that will help us in our daily tasks in Azure. Using Azure Portal is
    simple and great to learn things, but to use Azure to its full capacity, we must
    use ARM templates, Azure PowerShell, or Azure CLI. Finally, to expand IaC, we
    are going to discuss configuration as code and introduce **Desired State Configuration**
    (**DSC**) and Azure Automation.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在这最后一章中，我们将回顾到目前为止所学到的内容，并强调一些最佳实践。一些简单的技巧可以帮助您从一开始就正确设置，并为以后节省大量麻烦。最佳实践将帮助您在管理和故障排除中更好地跟踪事物并注意到错误。我们将添加一些安全提示以及如何避免最常见的错误。我们将使用**基础设施即代码**（**IaC**）作为工具，帮助我们在Azure中的日常任务中取得成功。使用Azure门户简单且有助于学习，但要充分利用Azure，我们必须使用ARM模板、Azure
    PowerShell或Azure CLI。最后，为了扩展IaC，我们将讨论配置即代码，并介绍**期望状态配置**（**DSC**）和Azure自动化。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Azure best practices
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure最佳实践
- en: Infrastructure as code
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基础设施即代码
- en: ARM templates
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ARM模板
- en: Azure PowerShell
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure PowerShell
- en: Azure CLI
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure CLI
- en: Configuration as code
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置即代码
- en: Desired State Configuration
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 期望状态配置
- en: Azure Automation
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure自动化
- en: Technical requirements
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'For this chapter, you''ll need the following:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本章，您将需要以下内容：
- en: An Azure Subscription
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure订阅
- en: PowerShell
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PowerShell
- en: Azure PowerShell
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure PowerShell
- en: The Azure CLI
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure CLI
- en: Azure best practices
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Azure最佳实践
- en: There are a lot of small things that you need to pay attention to, otherwise
    you may end up having issues in the long run. When you're managing a single subscription
    and a small number of resources, it may look simple and not important to create
    some ground rules. But as the number of subscriptions and resources starts increasing,
    you may find chaos and it may be too late to turn back. In these situations, it's
    hard to correct mistakes and get back on the right path.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多细小的事项需要注意，否则可能会在长期内出现问题。当您管理单个订阅和少量资源时，可能看起来很简单，不重要去创建一些基本规则。但随着订阅和资源数量的增加，您可能会遇到混乱，此时纠正错误可能为时已晚。在这些情况下，纠正错误和回到正确的轨道将会很困难。
- en: Naming convention
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 命名约定
- en: It's very important to set the naming convention for subscriptions, resource
    groups, and resources. Your first subscription will probably have a name similar
    to `Pay-as-you-go`. And if you have a single subscription, it's not a big deal.
    But what if you end up with 5, 10, or 100 subscriptions, and all of them are named
    `Pay-as-you-go`? These subscriptions will have different subscription IDs and
    you can use this information to separate them, but it will be difficult and confusing.
    Subscriptions can be renamed and you should definitely use this option. You can
    organize subscriptions in different ways and it depends on your requirements regarding
    how you are going to do this. It can be based on departments, applications, environments,
    and so on.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 对于订阅、资源组和资源设置命名约定非常重要。您的第一个订阅可能会有类似`Pay-as-you-go`的名称。如果您只有一个订阅，这并不重要。但如果您最终拥有5个、10个或100个订阅，并且它们都命名为`Pay-as-you-go`，情况将会变得混乱。这些订阅将具有不同的订阅ID，您可以利用此信息对它们进行区分，但这可能会很困惑。订阅可以重新命名，您应该利用此选项。您可以以不同的方式组织订阅，具体取决于您的需求，如基于部门、应用程序、环境等等。
- en: For example, you can have multiple subscriptions per department. This will help
    you separate cost and consumption and see how much each department is spending
    on resources. In this case, you may want to rename subscriptions to something
    like `HumanResources`, `Finances`, `IT`, and so on. If you have different environments
    for each department for production, testing, and development, you can add the environment
    to the subscription name and have something like `HumanResources-prod`, `HumanResources-test`,
    and `HumanResources-dev`.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，您可以每个部门拥有多个订阅。这将帮助您分离成本和消耗，并查看每个部门在资源上的支出情况。在这种情况下，您可能希望将订阅重命名为类似`HumanResources`、`Finances`、`IT`等。如果每个部门都有不同的生产、测试和开发环境，您可以在订阅名称中添加环境，并类似于`HumanResources-prod`、`HumanResources-test`和`HumanResources-dev`。
- en: You can apply similar principles for naming resource groups, again depending
    on your requirements. Let's say we use a single subscription, and want to add
    the department, environment, or application to the resource group name. In this
    case, we'll have resource groups named like `IT-helpdesk-prod`. Or, if we have
    a subscription per department, the resource group would be named something like `helpdesk-prod`.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以根据需求将类似的原则应用于资源组的命名。假设我们使用一个单一的订阅，并希望将部门、环境或应用程序添加到资源组的名称中。在这种情况下，资源组的名称可能是`IT-helpdesk-prod`。或者，如果我们为每个部门分配一个订阅，资源组的名称可能是`helpdesk-prod`。
- en: But, when you have multiple subscriptions and all of the subscriptions are listed
    in the resource group view, with some resources that have similar names, it can
    get confusing, and it's good idea to include the subscription name in the resource
    group name anyway. For example, you can have the subscriptions `Finance` and `HR`,
    and both of them have applications named `Employees`. If you name both resource
    groups using product and environment, both production resource groups will be
    named `Employees-prod`. They would be in different subscriptions, but when all
    resource groups in all subscriptions are listed, things can get confusing. In
    this scenario, it can be beneficial to include the complete path in the resource
    group name that will include the subscription name as the front part of the resource
    group name.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，当你有多个订阅，并且所有订阅都列在资源组视图中时，如果一些资源有相似的名称，可能会造成混淆，因此最好在资源组名称中包含订阅名称。例如，你可能有`Finance`和`HR`两个订阅，它们各自都有一个名为`Employees`的应用程序。如果你只是使用产品和环境来命名资源组，那么这两个生产环境的资源组将会被命名为`Employees-prod`。它们虽然在不同的订阅中，但当所有订阅中的资源组列出时，可能会造成混乱。在这种情况下，将完整路径包含在资源组名称中，将订阅名称作为资源组名称的前缀，是一个有益的做法。
- en: For resources, it's good to have some kind of naming convention as well. Design
    can depend on different things, but I recommend using all available variables
    to avoid confusion. For example, let's say that our IT department has its own
    subscription and uses an application named `helpdesk`. The application requires
    two VMs (web and database server) and has production, development, and testing
    environments. In this case, we would have six VMs being used by the same application,
    for different purposes and environments. In cases like this, it's good to use
    parameters such as subscription, environment, product, resource type, and resource
    purpose. So, VM names for a production environment would be something like `it-helpdesk-prod-VM-web`
    and `it-helpdesk-prod-VM-db`. There is also a scenario where you have multiple
    VMs with the same role, such as multiple web servers behind a load balancer. In
    this scenario, it's good to add numbers to the name and have something like `it-helpdesk-prod-VM-web-01`,
    `it-helpdesk-prod-VM-web-02`, and so on.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 对于资源，最好也有一定的命名规范。设计可能依赖于不同的因素，但我建议使用所有可用的变量，以避免混淆。例如，假设我们的IT部门有自己的订阅，并使用一个名为`helpdesk`的应用程序。该应用程序需要两个虚拟机（Web和数据库服务器），并且有生产、开发和测试环境。在这种情况下，我们会有六个虚拟机被同一个应用程序使用，用于不同的目的和环境。在这种情况下，使用诸如订阅、环境、产品、资源类型和资源用途等参数会很有帮助。因此，生产环境中的虚拟机名称可能是`it-helpdesk-prod-VM-web`和`it-helpdesk-prod-VM-db`。还有一种情况是你有多个虚拟机具有相同的角色，比如负载均衡器后面的多个Web服务器。在这种情况下，最好在名称中添加数字，像这样`it-helpdesk-prod-VM-web-01`、`it-helpdesk-prod-VM-web-02`，依此类推。
- en: Public endpoints
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 公共端点
- en: It's generally a good idea to avoid exposing public endpoints if it's not required,
    especially when we talk about management and administration. Exposing the endpoint
    of your Web App is something you probably want to do, but why expose the database?
    It will only cause additional security risks and increase the chance of your data
    being breached. The same goes for management; exposing RDP, SSH, or any other
    port that can be used to manage and administrate your resources should be avoided.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，如果没有必要，避免暴露公共端点是一个好主意，尤其是当我们谈论管理和行政时。暴露你的Web应用的端点是你可能希望做的事情，但为什么要暴露数据库呢？这只会带来额外的安全风险，并增加你的数据被泄露的可能性。管理方面也是如此；应该避免暴露RDP、SSH或任何其他可以用来管理和行政资源的端口。
- en: In case we have a database in IaaS, the best practice is to allow access to
    the database over port `1433`, only inside Azure Vnet, or even limit access to
    a specific subnet. Use NSGs and **Application Security Groups** (**ASGs**) to
    set up access and allow access only when it's needed. For example, we can use
    an NSG and an ASG to set up access to a database, but only when traffic is coming
    from a specific subnet (use an NSG) and only when coming from a server that is
    part of the web server group (use an ASG). This isn't limited to port `1433` and
    MS SQL Server; you can apply this approach on any other database you are using
    in IaaS and whatever port these databases are using, such as 1521 for Oracle,
    50000 for IBM DB2, 3306 for MySQL, or any custom port you define.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们使用 IaaS 中的数据库，最佳实践是只允许通过端口 `1433` 在 Azure Vnet 内访问数据库，或者甚至限制访问到特定的子网。使用
    NSG 和 **应用程序安全组**（**ASG**）来设置访问权限，并仅在需要时允许访问。例如，我们可以使用 NSG 和 ASG 设置对数据库的访问，但仅当流量来自特定子网（使用
    NSG）并且来自属于 Web 服务器组的服务器时（使用 ASG）。这一方法不限于端口 `1433` 和 MS SQL Server；您可以将这种方法应用于
    IaaS 中使用的任何其他数据库以及这些数据库使用的任何端口，如 Oracle 的 1521、IBM DB2 的 50000、MySQL 的 3306，或任何您定义的自定义端口。
- en: 'Databases in PaaS, the Azure SQL Database, and other database PaaS options,
    offer firewall protection. With firewall protection, you can limit the IP addresses
    from which you can connect to the database. Make sure that you keep the firewall
    up to date and remove any unnecessary IP addresses. Also, there is one option
    in the Azure SQL database firewall that may create additional risk. There is an
    option to Allow access to Azure services to connect to your Azure SQL Database,
    as shown here:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: PaaS 中的数据库、Azure SQL 数据库以及其他数据库 PaaS 选项提供了防火墙保护。通过防火墙保护，您可以限制能够连接到数据库的 IP 地址。请确保保持防火墙的更新，并移除任何不必要的
    IP 地址。此外，Azure SQL 数据库防火墙中有一个选项可能会带来额外的风险。该选项允许 Azure 服务访问您的 Azure SQL 数据库，如下所示：
- en: '![](img/ad87b1d9-d2e4-4c47-a175-a0c731e23005.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ad87b1d9-d2e4-4c47-a175-a0c731e23005.png)'
- en: This option is ON by default and it may look like it makes sense to leave this
    enabled. Most people would think "Yeah, sure, I want my services in Azure to be
    able to connect to my database". But this option only checks whether a connection
    to the database is coming from Azure; it does not check whether the connection
    is coming from your subscription or even your tenant. Leaving this option ON allows
    someone to create an Azure account and try to access your database, as firewall
    rules will not apply if the connection is coming from Azure.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，此选项是开启的，看起来似乎启用它是有道理的。大多数人会认为：“是的，我希望我的 Azure 服务能够连接到我的数据库。”但这个选项只检查连接是否来自
    Azure；它并没有检查连接是否来自您的订阅或租户。如果保持此选项开启，就允许任何人创建一个 Azure 账户并尝试访问您的数据库，因为如果连接来自 Azure，则防火墙规则将不再适用。
- en: Connecting to the database will still require the username and password, but
    this creates an opportunity. In this case, it's very good for us that Microsoft
    requires credit card information when creating a trial subscription as any account
    can be tracked to the owner. If someone managed to access the database, this way, the person
    can be tracked, but you may want to disable this option to prevent any unauthorized
    access in the first place.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 连接到数据库仍然需要用户名和密码，但这为攻击者提供了机会。在这种情况下，微软要求在创建试用订阅时提供信用卡信息，这对于我们来说是非常有利的，因为任何账户都可以追踪到其所有者。如果有人通过这种方式成功访问数据库，那么该人是可以被追踪的，但您可能想要禁用此选项，以防止任何未经授权的访问。
- en: A similar approach can be taken for other backend services that shouldn't be
    exposed publicly. These can be anything from databases, different connectors,
    and business logic, to various APIs. Don't expose anything that doesn't need to
    be exposed. In IaaS scenarios, use NSGs and ASGs to restrict access. When using
    PaaS, there are different approaches that can be taken. As we mentioned previously,
    an Azure SQL database has a firewall. For a Web App, we can use an isolated App
    Service Plan, that allows access only over an Azure Virtual network. Similar to
    this approach, most PaaS services can be connected to Azure VNet and we can set
    up access to services from inside our Azure Virtual Network. Then, NSG and ASG
    rules can be applied to these services as well.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 对于其他不应公开暴露的后端服务，也可以采用类似的方法。这些服务可以是数据库、不同的连接器、业务逻辑以及各种API等。不要暴露任何不需要暴露的内容。在IaaS场景中，可以使用NSG和ASG来限制访问。当使用PaaS时，也有不同的策略可以采用。如我们之前提到过，Azure
    SQL数据库具有防火墙。对于Web应用程序，我们可以使用隔离的应用服务计划，只允许通过Azure虚拟网络访问。类似地，大多数PaaS服务都可以连接到Azure
    VNet，并且我们可以设置从Azure虚拟网络内部访问服务。然后，NSG和ASG规则也可以应用于这些服务。
- en: Limiting access to the management ports of Azure VMs is another thing that we
    need to pay attention to. For example, exposing RDP access to your VM over the
    internet can have big consequences. I tested leaving the default RDP port open
    and tracked access attempts with Azure Security Center. Over a single month, there
    were over 150,000 unauthorized attempts to access the VM. Most of these attempts
    were using administrator, admin, sysadmin, and root (over 80% of attempts were
    using these four usernames) as a username, so it's a good thing that you are not
    allowed to use these names for your Azure VMs.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 限制对Azure虚拟机管理端口的访问是我们需要注意的另一个事项。例如，公开RDP访问到虚拟机的互联网可能会带来严重后果。我测试了将默认的RDP端口开放，并通过Azure安全中心跟踪访问尝试。在一个月内，有超过150,000次未授权的访问尝试。这些尝试大部分使用的是管理员、admin、sysadmin和root（超过80%的尝试使用了这四个用户名），所以幸运的是Azure虚拟机不允许使用这些名字。
- en: 'There are several ways you can restrict access to the management of Azure VMs:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种方法可以限制对Azure虚拟机管理的访问：
- en: Disable public access for management ports and manage Azure VMs over secure
    connections. This can be P2S, S2S, or Azure ExpressRoute. By using a secure connection,
    you are limiting management access to authorized users from trusted locations.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 禁用管理端口的公共访问，并通过安全连接管理Azure虚拟机。这可以是P2S、S2S或Azure ExpressRoute。通过使用安全连接，您将管理访问限制为来自可信位置的授权用户。
- en: 'If you cannot use a secure connection, restrict access to trusted public IP
    addresses. Use NSGs to limit access to Azure VMs that are to be accessed only from
    IP addresses that are pre-allowed. An example of how to restrict access with NSGs
    is shown in the following screenshot:'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果无法使用安全连接，限制对可信公共IP地址的访问。使用NSG来限制对仅能通过预先允许的IP地址访问的Azure虚拟机的访问。以下截图展示了如何使用NSG限制访问的示例：
- en: '![](img/6b4def9e-8f07-42d7-ac6b-d4fd658bb60b.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6b4def9e-8f07-42d7-ac6b-d4fd658bb60b.png)'
- en: 'Use Just in Time Access for Azure VM access. Setting up Just in Time in Azure
    is simple and fast. When this option is enabled, you need to create a request
    for access from a predetermined IP address and only for a limited time. This way,
    access is blocked unless a specific request is created to allow management access.
    An example of a request to open an RDP port for single hour for user''s current
    IP address is shown here:'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用即时访问（Just in Time Access）来访问Azure虚拟机。在Azure中设置即时访问简单快捷。启用此选项时，您需要创建一个来自预定IP地址并且只限于一段时间的访问请求。这样，除非创建了特定的请求来允许管理访问，否则访问将被阻止。以下是一个示例，展示了如何为用户当前的IP地址开放RDP端口一个小时的请求：
- en: '![](img/c994724b-15a6-46bb-801e-e8f4d68a69de.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c994724b-15a6-46bb-801e-e8f4d68a69de.png)'
- en: Other things to consider
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 其他需要考虑的事项
- en: 'Besides naming standards or endpoint security, there are a lot of little things
    we need to pay attention to:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 除了命名标准或端点安全性，我们还需要注意很多细节：
- en: Use PaaS whenever possible. Microsoft Azure offers a number of options, but
    IaaS will, in general, be more expensive. There are cases where you have no option,
    but using PaaS will keep the cost of your subscription down.
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽可能使用PaaS。Microsoft Azure提供了多种选择，但IaaS通常会更昂贵。在某些情况下，您别无选择，但使用PaaS可以降低订阅成本。
- en: Use monitoring and logging services. Each Azure Service has some sort of logging,
    monitoring, and alerting feature. Try expanding these services with services such
    as Azure Monitor, Azure Network Watcher, or Log Analytics. These tools can help
    you track issues and performance over time.
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用监控和日志记录服务。每个 Azure 服务都有某种形式的日志记录、监控和警报功能。尝试通过 Azure Monitor、Azure Network
    Watcher 或 Log Analytics 等服务扩展这些功能。这些工具可以帮助你跟踪问题和性能变化。
- en: Use Azure Advisor to apply some best practices. Azure Advisor analyzes resources
    in a subscription, compares settings to best practices, and gives recommendations
    that need to be implemented to increase performance or cut cost.
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Azure Advisor 应用一些最佳实践。Azure Advisor 会分析订阅中的资源，比较设置与最佳实践，并提供需要实施的建议，以提高性能或降低成本。
- en: Similar to Azure Advisor, Azure Security Center offers recommendations to increase
    the security of your resources. Security Center compares your current security
    settings and, in combination with security events, creates recommendations to
    increase security.
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 类似于 Azure Advisor，Azure Security Center 提供增强资源安全性的建议。Security Center 会比较你当前的安全设置，并结合安全事件，生成增加安全性的建议。
- en: Encrypt data. Even though most Azure services have default encryption, that
    encryptions is at rest. To secure our data after export or backup, we need to
    apply additional encryption.
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加密数据。尽管大多数 Azure 服务默认启用了加密，但那是静态加密。为了在导出或备份后保护我们的数据，我们需要应用额外的加密。
- en: Encrypt connections and use HTTPS. Securing is pointless if data is exposed
    in transit, so we need to consider this as well.
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加密连接并使用 HTTPS。如果数据在传输过程中暴露，那么安全性就没有意义，因此我们也需要考虑这一点。
- en: Check Azure Service Health if you have issues. This can save you hours of troubleshooting.
    You will be able to notice performance issues or whether a service is unavailable,
    and automatically connect to Azure to see what is wrong. It can be an issue with
    Azure on the global or data center level, and it can save time checking if this
    is the case as the first step.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果遇到问题，检查 Azure 服务健康状态。这可以节省你数小时的故障排除时间。你将能够发现性能问题，或者查看某个服务是否不可用，并自动连接到 Azure
    查看出什么问题。这可能是 Azure 在全球或数据中心级别的问题，作为第一步检查是否是这种情况，可以节省大量时间。
- en: Configure auto scaling when possible. One of the advantages Azure offers is
    that you pay only for what you use. Auto scaling, if set up properly, will increase
    the size/number of instances when the workload increases, and decreases the size
    when the workload decreases. This can save a lot of money over time.
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在可能的情况下配置自动扩展。Azure 提供的一个优势是你只需为实际使用的资源付费。如果正确设置，自动扩展可以在负载增加时增加实例的规模/数量，而在负载减少时减少规模。这可以随着时间的推移节省大量费用。
- en: Use Azure Active Directory authentication whenever possible. Most services can
    be set up to use a different form of authentication or enable you to create local
    accounts only for that specific service. It's hard to audit or keep track of access
    in this case. Using AAD accounts will give you more insight and make tracking
    much easier.
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽可能使用 Azure Active Directory 认证。大多数服务可以设置为使用不同的认证方式，或者仅为特定服务创建本地账户。这种方式很难审计或跟踪访问情况。使用
    AAD 账户可以提供更多的洞察，并使跟踪变得更加容易。
- en: Enable auditing on services. Some services, such as Azure SQL, have an audit
    feature built in. Enable this when possible or use Log Analytics to log everything.
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用服务的审计功能。一些服务，例如 Azure SQL，内置了审计功能。在可能的情况下启用此功能，或者使用 Log Analytics 记录所有内容。
- en: Design for resiliency whenever possible. Having a redundant service can cost
    a lot of money and in some cases even double our cost. However, having a redundant
    service in another Azure data center can increase availability for your services.
    In case there is an issue with a service, regardless of whether it's an issue
    with your service or on the Azure data center level, you can failover to a redundant
    copy.
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽可能设计为具有韧性。拥有冗余服务可能会花费大量资金，在某些情况下甚至会使我们的成本翻倍。然而，将冗余服务部署在另一个 Azure 数据中心可以提高服务的可用性。如果服务出现问题，不论是你的服务问题还是
    Azure 数据中心级别的问题，你都可以切换到冗余副本。
- en: Always plan for failure. This isn't only an Azure or cloud-related best practice—planning
    for failure is an IT best practice. Try to predict different scenarios and what
    would happen if the service fails. Then, try to fix possible issues and prevent
    failure.
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 始终为故障做好规划。这不仅仅是 Azure 或云相关的最佳实践——为故障做规划是 IT 的最佳实践。尝试预测不同的场景以及如果服务失败会发生什么。然后，尽量修复可能的问题并防止故障发生。
- en: Try enabling multi-factor authentication. As this can increase cost, it ins't
    always possible, and the budget might prevent you from accomplishing this. In
    this case, enable MFA at least for administrators; MFA for administrators is free.
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尝试启用多因素认证。由于这可能增加成本，因此并非总是可行，预算也可能会阻止你实现这一目标。在这种情况下，至少为管理员启用 MFA；管理员的 MFA 是免费的。
- en: Install endpoint protection on Azure VMs. Endpoint protection will provide real-time
    protection and prevent malicious or unwanted software from being installed and
    potentially harming your system.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Azure 虚拟机上安装端点保护。端点保护将提供实时保护，防止恶意或不需要的软件被安装，并可能对你的系统造成损害。
- en: 'Install the latest patches for Azure VMs. Regular patch installation has a
    double effect: security patches will increase security and other updates can increase
    performance.'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装 Azure 虚拟机的最新补丁。定期安装补丁有双重效果：安全补丁能提高安全性，其他更新可以提高性能。
- en: Analyze performance regularly. Having auto-scaling in place is sometimes not
    enough. Try to monitor the performance of your resources manually when possible.
    You can spot performance issues or you can see that some services are not utilized.
    You can make your service perform better and save money.
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定期分析性能。仅仅拥有自动扩展有时并不足够。尽量在可能的情况下手动监控资源的性能。你可以发现性能问题，或者看到某些服务没有被充分利用。你可以使你的服务表现得更好，并节省成本。
- en: Infrastructure as code
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基础设施即代码
- en: 'IaC is a very important part in Azure best practices. Using Azure Portal is
    simple and excellent for creating a single resource and learning, but if we want
    to create complex environments, IaC is what we want to use. For example, for creating
    a single Azure VM, Azure Portal is a good choice. It takes 3-5 minutes to go through
    the New VM wizard and complete all of the steps. But what if we need to create
    new VMs on a daily basis or create tens or even hundreds of them? In this case,
    we would probably want to use some kind of automation to simplify our work, and
    this is exactly where IaC comes in. To work with Azure, we have a few options
    available:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 基础设施即代码（IaC）是 Azure 最佳实践中的一个非常重要的部分。使用 Azure 门户简单且非常适合创建单一资源并学习，但如果我们要创建复杂的环境，IaC
    是我们想要使用的工具。例如，创建一个 Azure 虚拟机时，Azure 门户是一个不错的选择。只需 3-5 分钟即可完成新的虚拟机向导并完成所有步骤。但如果我们每天都需要创建新的虚拟机，或者创建数十个甚至数百个虚拟机呢？在这种情况下，我们可能希望使用某种自动化来简化工作，这正是
    IaC 的作用所在。为了在 Azure 上工作，我们有几种可用的选项：
- en: ARM templates
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ARM 模板
- en: Azure PowerShell
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure PowerShell
- en: Azure CLI
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure CLI
- en: We have already mentioned ARM templates. ARM templates are JSON files that hold
    information about Azure resources and can be used for deployment (or editing/updating
    existing resources).
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经提到过 ARM 模板。ARM 模板是存储 Azure 资源信息的 JSON 文件，可以用于部署（或编辑/更新现有资源）。
- en: To answer what Azure PowerShell is, we need to answer what PowerShell is first.
    PowerShell is a task-based, command-line scripting language based on the .NET
    framework. It is used to automate tasks and manage operating systems and processes
    from the command line. Azure PowerShell is a PowerShell module that provides a
    set of `cmdlets` (commands) that allow us to manage Azure resources.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 要回答 Azure PowerShell 是什么，我们首先需要回答 PowerShell 是什么。PowerShell 是一种基于 .NET 框架的任务驱动型命令行脚本语言。它用于自动化任务并通过命令行管理操作系统和进程。Azure
    PowerShell 是一个 PowerShell 模块，提供了一组 `cmdlet`（命令），允许我们管理 Azure 资源。
- en: Azure CLI, or Azure **command-line interface** (**CLI**), is Microsoft's cross-platform
    command-line tool for managing Azure resources. It supports macOS, Linux, and
    Windows, and provides the same experience whatever platform you choose. The first
    version of Azure CLI 1.0 was also called X-Plat CLI and was written in JavaScript.
    It was initially created to support Azure Service Management APIs, and Azure Resource
    Management support was added later. Azure CLI 2.0 was built for ARM from the start
    and was written in Python.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: Azure CLI，或称 Azure **命令行界面** (**CLI**)，是微软的跨平台命令行工具，用于管理 Azure 资源。它支持 macOS、Linux
    和 Windows，并且无论选择哪个平台，都能提供相同的体验。Azure CLI 1.0 的第一个版本也叫做 X-Plat CLI，是用 JavaScript
    编写的。最初，它是为了支持 Azure 服务管理 API 而创建的，后来才添加了 Azure 资源管理支持。Azure CLI 2.0 从一开始就为 ARM
    架构而构建，并且是用 Python 编写的。
- en: Installing tools
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装工具
- en: In this section, we'll be discussing various tools, via which you can begin
    different installations.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论各种工具，通过这些工具你可以开始不同的安装过程。
- en: ARM templates
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ARM 模板
- en: ARM templates don't really require anything, but you can use various tools to
    help you manage them. As they're JSON files, you can create one using any text
    editor, but it would be much easier to use an **integrated development environment**
    (**IDE**). My recommendation would be either Visual Studio or Visual Studio Code.
    Using Visual Studio or Visual Studio Code, you can connect to a repository and
    set up version control, which will allow you to track changes in templates over
    time. However, we can deploy with ARM templates, calling APIs or from Azure Portal without
    any additional tools.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: ARM 模板实际上不需要任何特殊要求，但您可以使用各种工具来帮助管理它们。由于它们是 JSON 文件，您可以使用任何文本编辑器创建一个，但使用**集成开发环境**（**IDE**）会更方便。我的推荐是使用
    Visual Studio 或 Visual Studio Code。通过使用 Visual Studio 或 Visual Studio Code，您可以连接到代码库并设置版本控制，从而跟踪模板随时间的变化。然而，我们也可以使用
    ARM 模板进行部署，通过调用 API 或直接从 Azure 门户进行，无需任何额外的工具。
- en: Azure PowerShell
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Azure PowerShell
- en: 'To install Azure PowerShell, we need Windows PowerShell installed first. Luckily,
    in the client OS, it''s already pre-installed on Windows 7 and newer, and for
    the server OS on Windows Server 2008 R2 and newer. So, all we are missing is the
    Azure PowerShell module. To install the Azure PowerShell module, we need to run
    PowerShell and execute the following:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装 Azure PowerShell，首先需要安装 Windows PowerShell。幸运的是，在客户端操作系统中，Windows 7 及更高版本已经预装了该工具，服务器操作系统则在
    Windows Server 2008 R2 及更高版本中预装。因此，我们缺少的只是 Azure PowerShell 模块。要安装该模块，我们需要运行 PowerShell
    并执行以下命令：
- en: '[PRE0]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'You will receive a message that will ask you to install the module from `PSGallery`,
    so select Yes or Yes to all. After you install the module, we need to import it
    with this command:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 您将收到一条消息，要求您从`PSGallery`安装模块，选择“是”或“全部是”。安装模块后，我们需要使用以下命令导入它：
- en: '[PRE1]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Finally, we can sign in with the following command:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们可以使用以下命令登录：
- en: '[PRE2]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This will open a window where we need to input our credentials and authorize
    access to our subscription.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 这将打开一个窗口，您需要在其中输入凭据并授权访问我们的订阅。
- en: 'As a new version of Azure PowerShell is released every three weeks, you need
    to keep it updated. To install the latest version, we need to run this:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Azure PowerShell 每三周发布一个新版本，您需要保持它的更新。要安装最新版本，我们需要运行以下命令：
- en: '[PRE3]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Azure CLI
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Azure CLI
- en: Installing the Azure CLI depends on the platform that we're using.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 Azure CLI 取决于我们使用的平台。
- en: 'For Windows, we need to download the installer from [https://aka.ms/installazurecliwindows](https://aka.ms/installazurecliwindows) and
    simply run the installer like so:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Windows，我们需要从[https://aka.ms/installazurecliwindows](https://aka.ms/installazurecliwindows)下载安装程序，并像这样运行安装程序：
- en: '![](img/5e231b61-4126-46b9-88fe-704152768cff.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5e231b61-4126-46b9-88fe-704152768cff.png)'
- en: 'To install it on macOS, we need to run this command:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 macOS 上安装，我们需要运行以下命令：
- en: '[PRE4]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Installing on Linux depends on the distribution. For example, on a distribution
    with `yum` (such as RHEL or CentOS), we need to run three commands.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Linux 上的安装依赖于发行版。例如，在使用`yum`的发行版（如 RHEL 或 CentOS）上，我们需要运行三条命令。
- en: 'First, we import the Microsoft repository key:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们导入 Microsoft 仓库密钥：
- en: '[PRE5]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Second, we create the repository information:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 其次，我们创建仓库信息：
- en: '[PRE6]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Finally, we run the installation:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们运行安装：
- en: '[PRE7]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Installation may depend on the platform, but after the installation process
    has completed, running Azure CLI commands is the same on all platforms. To log
    in to Azure with the Azure CLI, we need to run this:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 安装过程可能会依赖于平台，但完成安装过程后，在所有平台上运行 Azure CLI 命令是相同的。要使用 Azure CLI 登录 Azure，我们需要运行以下命令：
- en: '[PRE8]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'This will display a message (shown here) and open a new browser session, where
    you need to authorize access to Azure:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 这将显示一条消息（如下所示），并打开一个新的浏览器会话，您需要授权访问 Azure：
- en: '![](img/95a8cdc3-df3c-412b-871d-80c4325d6e16.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](img/95a8cdc3-df3c-412b-871d-80c4325d6e16.png)'
- en: 'All commands in the Azure CLI start with `az`. To get more information, you
    can run this:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 所有 Azure CLI 的命令都以`az`开头。要获取更多信息，可以运行以下命令：
- en: '[PRE9]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'You will get the following output:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 您将看到以下输出：
- en: '![](img/e25a2066-18b1-471b-a575-6ec89205302d.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e25a2066-18b1-471b-a575-6ec89205302d.png)'
- en: You can combine `--help` with any of the commands in the list to get more information
    on a specific command.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以将`--help`与列表中的任何命令结合使用，以获取有关特定命令的更多信息。
- en: Creating Azure resources with IaC
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用基础设施即代码（IaC）创建 Azure 资源
- en: To better understand how ARM templates, Azure PowerShell, and the Azure CLI
    work, let's see a simple example and create an Azure Web App with each tool.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地理解 ARM 模板、Azure PowerShell 和 Azure CLI 如何工作，我们来看一个简单的例子，并使用每个工具创建一个 Azure
    Web 应用。
- en: Creating an Azure Web App with ARM templates
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 ARM 模板创建 Azure Web 应用
- en: With ARM templates, we need two JSON files. The first file defines what needs
    to be created and the second file contains parameters that are defined during
    deployment. So, basically, the first file holds information on what needs to be
    created (in our example, App Service Plan and Web App), and the second file holds
    information on where, the size of the service, name, and so on.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 ARM 模板，我们需要两个 JSON 文件。第一个文件定义了需要创建的内容，第二个文件包含在部署过程中定义的参数。因此，基本上，第一个文件包含了需要创建的内容（在我们的示例中是应用服务计划和
    Web 应用），而第二个文件包含了服务的部署位置、大小、名称等信息。
- en: 'This is the template file:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 这是模板文件：
- en: '[PRE10]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'This is the parameter file:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 这是参数文件：
- en: '[PRE11]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Save both files. Now, let''s create a resource group for deployment. Create
    a new empty Resource group named `packt-demo-arm`. Open Template deployment and
    select the Custom template. Under Edit template, load the template file and under
    Edit parameter, load the parameter file. Select Subscription and Resource group for
    packt-demo-arm (if you didn''t create it previously, you have the option to do
    so here). All other fields should be automatically loaded from the parameter file,
    like in this example (remember to accept TERMS AND CONDITIONS):'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 保存这两个文件。现在，让我们创建一个资源组来进行部署。创建一个名为 `packt-demo-arm` 的新空资源组。打开模板部署并选择自定义模板。在编辑模板下，加载模板文件，在编辑参数下，加载参数文件。选择订阅和资源组
    `packt-demo-arm`（如果您之前没有创建，您可以在此处创建）。所有其他字段应自动从参数文件加载，如此示例所示（记得接受条款和条件）：
- en: '![](img/3e6578f2-bcab-420e-8b43-fed69c1d5a27.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3e6578f2-bcab-420e-8b43-fed69c1d5a27.png)'
- en: 'After the deployment has completed, you should find the App Service Plan and
    Web App, as shown in the following screenshot:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 部署完成后，您应该能找到应用服务计划和 Web 应用，如下图所示：
- en: '![](img/5584e403-7c23-45d4-8cf4-d1056e42a143.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5584e403-7c23-45d4-8cf4-d1056e42a143.png)'
- en: We can use this same ARM template to deploy new Web App simply by changing the
    resource name or tier in the parameter file; we don't have to go through the deployment
    wizard in Azure portal for each deployment. This can save a lot of time if we
    need to deploy multiple Web Apps.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用相同的 ARM 模板来部署新的 Web 应用，只需更改参数文件中的资源名称或层级；我们不需要在每次部署时都通过 Azure 门户的部署向导。这可以节省大量时间，特别是当我们需要部署多个
    Web 应用时。
- en: Creating an Azure Web App with Azure PowerShell
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Azure PowerShell 创建 Azure Web 应用
- en: 'To create the same resources with Azure PowerShell, we need to execute a single
    script that will create a resource group, App Service Plan, and Web App. The script
    starts with parameters and then executes three `cmdlets` to create everything
    we need for deployment. Make sure you are connected to Azure in Azure PowerShell:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 Azure PowerShell 创建相同的资源，我们需要执行一个脚本，该脚本将创建资源组、应用服务计划和 Web 应用。脚本以参数开始，然后执行三个
    `cmdlets` 来创建我们所需的所有部署内容。请确保您已经连接到 Azure 的 Azure PowerShell：
- en: '[PRE12]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'After executing the script, you should receive the following output:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 执行脚本后，您应该会收到以下输出：
- en: '![](img/e5e3481e-421e-4c21-b799-57be416e4261.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e5e3481e-421e-4c21-b799-57be416e4261.png)'
- en: 'If we go to Azure Portal, we should find a new resource group and new items
    inside it:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们进入 Azure 门户，我们应该能找到一个新的资源组及其中的新项目：
- en: '![](img/566fe50b-925e-4ab6-9e26-9377e5f538cb.png)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![](img/566fe50b-925e-4ab6-9e26-9377e5f538cb.png)'
- en: To start a new deployment, we simply change the parameter values and execute
    again. We can quickly deploy multiple websites by just changing the name of the
    Web App and deploying sites in the same resource group. For example, if I needed
    to deploy four instances of the same site in the same resource group, I could
    just change the value of `$webappname` and change the numbers at the end to `packt-demo-ps-webapp-01`,
    `packt-demo-ps-webapp-02`, `packt-demo-ps-webapp-03`, and `packt-demo-ps-webapp-04`.
    Instead of going through the wizard in Azure Portal each time, I can run the script
    by changing a single value.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 要启动新的部署，我们只需更改参数值并再次执行。我们可以通过仅更改 Web 应用的名称并在同一资源组中部署站点来快速部署多个网站。例如，如果我需要在同一资源组中部署四个相同网站的实例，我可以仅更改
    `$webappname` 的值，并将末尾的数字更改为 `packt-demo-ps-webapp-01`、`packt-demo-ps-webapp-02`、`packt-demo-ps-webapp-03`
    和 `packt-demo-ps-webapp-04`。这样，我就可以通过修改一个值来运行脚本，而不需要每次都经过 Azure 门户的向导。
- en: 'To clean up deployment, you can execute a command that will delete the resource
    group, along with all the resources inside that resource group:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 要清理部署，您可以执行一个命令，删除资源组及其中所有资源：
- en: '[PRE13]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'You should receive output like this, and can verify in Azure Portal that the resource
    group doesn''t exist anymore:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该会收到如下输出，并可以在 Azure 门户中验证资源组是否已经不存在：
- en: '![](img/2c2ea79a-7ed5-4f07-8632-1ba7c45afd37.png)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2c2ea79a-7ed5-4f07-8632-1ba7c45afd37.png)'
- en: Creating an Azure Web App with Azure CLI
  id: totrans-127
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Azure CLI创建Azure Web应用程序
- en: 'Now, let''s repeat the same process using the Azure CLI. You can see that the Azure
    CLI script structure is very similar to Azure PowerShell:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们使用Azure CLI重复相同的过程。 您可以看到Azure CLI脚本结构与Azure PowerShell非常相似：
- en: '[PRE14]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'After executing the script, you should receive a long output that ends like
    this:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 执行脚本后，您应该会收到一个以此结尾的长输出：
- en: '![](img/080a717c-5546-41ce-989c-8ecf1965d8fc.png)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![](img/080a717c-5546-41ce-989c-8ecf1965d8fc.png)'
- en: 'If we go to Azure Portal, we should find the new resource group and new items
    inside it:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们转到Azure门户，应该会找到新的资源组及其中的新项：
- en: '![](img/627e81ac-04f4-4da2-87ea-b29b8e4cce56.png)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![](img/627e81ac-04f4-4da2-87ea-b29b8e4cce56.png)'
- en: 'Similar to Azure PowerShell, to deploy again, we just need to edit the parameter
    values. To clean up deployment, you can execute a command that will delete the resource
    group, along with all the resources inside the resource group:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 与Azure PowerShell类似，要重新部署，只需编辑参数值。 要清理部署，您可以执行一个命令，该命令将删除资源组以及资源组中的所有资源：
- en: '[PRE15]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: You should receive an output message that the command is completed and verify
    in Azure Portal that the resource group doesn't exist anymore.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该收到命令完成的输出消息，并在Azure Portal中验证资源组不再存在。
- en: Deploying multiple resources
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署多个资源
- en: Each of these deployment methods can be used to deploy multiple resources in
    a single script. My personal favorite tool is definitely Azure PowerShell, but
    this is probably because of my system engineering background. I was using Windows
    PowerShell for years and find Azure PowerShell easiest to use. This doesn't mean
    that ARM templates or the Azure CLI are behind Azure PowerShell, and I think developers
    will find these other tools more familiar.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 每种部署方法都可以用来在单个脚本中部署多个资源。 我个人最喜欢的工具肯定是Azure PowerShell，但这可能是因为我的系统工程背景。 多年来，我一直在使用Windows
    PowerShell，并发现Azure PowerShell最易于使用。 这并不意味着ARM模板或Azure CLI比Azure PowerShell落后，我认为开发人员会觉得这些其他工具更为熟悉。
- en: 'For an example on how to deploy multiple resources as simply as possible, I''ll
    create an Azure PowerShell script that will deploy multiple websites in a single
    run. You can do similar things with other tools as well:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，为了尽可能简单地部署多个资源，我将创建一个Azure PowerShell脚本，该脚本将在单次运行中部署多个网站。 您也可以使用其他工具做类似的事情：
- en: '[PRE16]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'In the preceding output, you''ll receive a message for each resource created,
    and you can verify the deployment in Azure Portal. If the script executed successfully,
    you should see all of the resources, like this:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述输出中，您将收到每个创建的资源的消息，并且可以在Azure门户中验证部署。 如果脚本执行成功，您应该能看到所有资源，如下所示：
- en: '![](img/aed8c1d5-4af4-4e0c-b585-0d870d5f8dc0.png)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![](img/aed8c1d5-4af4-4e0c-b585-0d870d5f8dc0.png)'
- en: 'To clean up deployment, you can use the same command that we used previously:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 要清理部署，您可以使用我们之前使用的相同命令：
- en: '[PRE17]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'We can use a similar approach when deploying any type of resource in Azure;
    for example, we can deploy multiple Azure VMs. Let''s execute a similar script,
    this time deploying two web servers:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在Azure中部署任何类型的资源时使用类似的方法； 例如，我们可以部署多个Azure VM。 让我们执行一个类似的脚本，这次部署两台Web服务器：
- en: '[PRE18]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The script should deploy one virtual network, one subnet, and one NSG. These
    resources will be shared between VMs. We don''t want to create unnecessary resources
    as this will enable VMs to communicate. For each VM, we''ll create an NIC and
    disk. An example of the resources created by the script for two servers is shown
    here:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 该脚本应该部署一个虚拟网络、一个子网和一个NSG。 这些资源将在VM之间共享。 我们不希望创建不必要的资源，因为这将使VM能够通信。 对于每个VM，我们将创建一个NIC和一个磁盘。
    此处显示了脚本为两台服务器创建的资源示例：
- en: '![](img/7d201d90-3491-404c-bfea-afeb50f4a64f.png)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7d201d90-3491-404c-bfea-afeb50f4a64f.png)'
- en: We can now edit this script to deploy more servers, deploy to a new resource
    group or a new subnet, or change any number of parameters to influence the deployment
    results.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以编辑此脚本以部署更多服务器，部署到新的资源组或新的子网，或更改任意数量的参数以影响部署结果。
- en: So, using this script, I could deploy and number of servers, from 1 to 100,
    or even more. Now, imagine that you need to deploy 100 VMs in Azure Portal with
    a wizard. Which task will take more time? I think we can recognize that using
    IaC for deployment has multiple benefits and can make our job significantly easier.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，使用此脚本，我可以部署1到100台甚至更多服务器。 现在，想象一下，您需要在Azure Portal中使用向导部署100个VM。 哪个任务需要更多时间？
    我认为我们可以认识到使用IaC进行部署具有多重好处，并且可以显著简化我们的工作。
- en: Configuration as code
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码配置
- en: IaC is only the first step in automation. After we deploy our servers with code,
    we still need to configure them. Configuring servers manually will probably take
    more time than deploying them. Luckily, there is the option for configuration
    as code to complete the configuration steps as well. There are many different
    tools for configuration, but we are going to explore Azure Automation as the Azure-native
    configuration as code tool.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: IaC 仅仅是自动化的第一步。在我们使用代码部署服务器后，仍然需要对其进行配置。手动配置服务器可能比部署它们还要花费更多时间。幸运的是，存在作为代码的配置选项，可以完成配置步骤。有很多不同的配置工具，但我们将探讨
    Azure 自动化，作为 Azure 原生的配置即代码工具。
- en: Azure Automation can be used for automating and scheduling different tasks.
    When talking about configuration as code, Azure Automation uses DSC. DSC is a
    declarative management platform in PowerShell, used for the configuration, deployment,
    and management of systems.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: Azure 自动化可用于自动化和调度不同的任务。谈到作为代码的配置时，Azure 自动化使用 DSC。DSC 是 PowerShell 中的声明式管理平台，用于系统的配置、部署和管理。
- en: Apply DSC with Azure Automation
  id: totrans-154
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Azure 自动化应用 DSC
- en: 'To create a new Azure Automation account, we need to provide the Name for the account,
    Subscription, Resource group, and Location. Another option is to create Run-as-account.
    Run-as-account is a service principal that''s used to authenticate to Azure when
    managing Azure resources through Azure Automation. I strongly recommend that you
    create this as it will be easier to manage with accounts in place. An example
    of creating an Azure Automation account is shown here:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个新的 Azure 自动化帐户，我们需要提供帐户的名称、订阅、资源组和位置。另一种选择是创建“以管理员身份运行帐户”。以管理员身份运行帐户是一个服务主体，用于通过
    Azure 自动化管理 Azure 资源时进行身份验证。我强烈建议您创建这个帐户，这样在有了帐户的情况下管理会更轻松。以下是创建 Azure 自动化帐户的示例：
- en: '![](img/4ad220f5-f44d-4858-9b8c-797494eda1de.png)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4ad220f5-f44d-4858-9b8c-797494eda1de.png)'
- en: With Azure Automation, you can perform various operations, schedule and run
    scripts, manage your resources, and so on. It's important to mention that you
    can manage both Azure and on-premises resources, as well as resources in other
    clouds. Here, we are going to concentrate on applying DSC to Azure VMs.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Azure 自动化，您可以执行各种操作、调度和运行脚本、管理资源等等。值得一提的是，您可以管理 Azure 和本地资源，以及其他云中的资源。在这里，我们将专注于将
    DSC 应用于 Azure 虚拟机。
- en: 'Managing DSC in Azure Automation is done under State configuration (DSC). Here,
    we can manage Nodes, Configurations, and Compiled configurations, and access the
    Gallery. We are going to see each of these settings, except Gallery. Gallery contains
    a number of DSC scripts that you can use or edit, based on your requirements.
    An example of the State configuration (DSC) blade is shown in the following screenshot:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Azure 自动化中管理 DSC 是通过“状态配置（DSC）”来完成的。在这里，我们可以管理节点、配置、已编译的配置，并访问画廊。我们将会看到这些设置中的每一项，除了画廊。画廊包含一些可以使用或编辑的
    DSC 脚本，您可以根据自己的需求进行修改。以下是状态配置（DSC）窗格的示例：
- en: '![](img/9ecd6112-5b9f-4860-9c25-cdb3cec82479.png)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9ecd6112-5b9f-4860-9c25-cdb3cec82479.png)'
- en: DSC uses a script that is applied on selected nodes. Nodes are VMs or groups
    of VMs. These VMs can be both Azure VMs or local VMs.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: DSC 使用一个脚本，该脚本应用于选定的节点。节点可以是虚拟机（VM）或虚拟机组。这些虚拟机可以是 Azure 虚拟机或本地虚拟机。
- en: 'To start a new configuration, we need a DSC script. The script we are going
    to use ensures that the IIS role is installed on the server. Save the script locally
    and make sure that the name of the file is the same as the name of the configuration.
    In our case, the name should be `webserverDSC`:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始新的配置，我们需要一个 DSC 脚本。我们将使用的脚本确保服务器上安装了 IIS 角色。将脚本保存在本地，并确保文件名与配置的名称相同。在我们的示例中，名称应该是
    `webserverDSC`：
- en: '[PRE19]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Under Configurations, select New configuration and import the previously saved
    script:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 在“配置”下，选择“新建配置”，并导入之前保存的脚本：
- en: '![](img/a89046fd-d3fb-42ad-b8d6-fd17f73bf53e.png)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a89046fd-d3fb-42ad-b8d6-fd17f73bf53e.png)'
- en: 'After the script has been imported, it needs to be compiled before we can proceed.
    Select the imported script and a new blade will open. Select Compile and wait
    for the compile to finish. The compile time will depend on the size of the script,
    but in this case, it shouldn''t take more than 2-3 minutes. An example of the configuration
    blade is as follows:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 导入脚本后，需要编译它才能继续。选择已导入的脚本，新的窗口将会打开。选择“编译”，并等待编译完成。编译时间将取决于脚本的大小，但在这种情况下，应该不会超过
    2-3 分钟。以下是配置窗格的示例：
- en: '![](img/f495207a-a7ce-4e9d-8d6e-ed66d0e165e2.png)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f495207a-a7ce-4e9d-8d6e-ed66d0e165e2.png)'
- en: After the script has compiled, we can proceed and apply configuration to the nodes.
    Under Nodes, select New and a new blade will open. In the list of VMs, we can
    select the VMs we want DSC to be applied to. I'm going to select the VM I created
    with the last script in this chapter, packtdemoVM-01.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 在脚本编译完成后，我们可以继续并将配置应用到节点。进入节点页面，选择“新建”，将打开一个新的面板。在虚拟机列表中，我们可以选择希望应用 DSC 的虚拟机。我将选择我在本章中使用上一个脚本创建的虚拟机
    packtdemoVM-01。
- en: 'Under Registration, we can select a few options. We can select which Registration
    key will be used, Node configuration name, Refresh frequency, Configuration Mode
    Frequency, Configuration Mode, Allow Module Override or Reboot Node if Needed,
    and Action after Reboot. I''m going to select the new configuration we just created
    and leave the rest of the settings as the defaults. An example of node registration
    is shown here:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 在注册页面下，我们可以选择几个选项。我们可以选择将使用哪个注册密钥、节点配置名称、刷新频率、配置模式频率、配置模式、是否允许模块覆盖或在需要时重新启动节点，以及重新启动后的操作。我将选择我们刚刚创建的新配置，并将其余设置保持为默认。以下是节点注册的示例：
- en: '![](img/55403cac-2702-4774-a648-6ed95e20288f.png)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![](img/55403cac-2702-4774-a648-6ed95e20288f.png)'
- en: 'After registration is complete, we need to wait for the initial check and for
    configuration to be applied to our server. This can take some time, depending
    on the frequency selected and the complexity of DSC we want to apply. If you monitor
    the node blade, the added node will go from pending to in progress, until it finally
    reaches compliant. An example of a node with configuration applied is shown in
    the following screenshot:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 注册完成后，我们需要等待初步检查并确保配置已应用到我们的服务器。这可能需要一些时间，具体取决于所选的频率以及我们想要应用的 DSC 配置的复杂性。如果你监控节点面板，添加的节点将从待处理状态变为进行中，直到最终达到合规状态。以下截图显示了一个已应用配置的节点：
- en: '![](img/57663866-069f-470e-b864-3646abfe8776.png)'
  id: totrans-171
  prefs: []
  type: TYPE_IMG
  zh: '![](img/57663866-069f-470e-b864-3646abfe8776.png)'
- en: 'After the node becomes compliant, we can verify that the configuration is applied.
    Go to the VM blade that we used in node registration and locate the public IP
    address. Open the browser and try reaching `http://''youripaddress''`. You should
    get the default IIS page, which will confirm that IIS is installed on the server:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 在节点合规后，我们可以验证配置是否已应用。进入我们在节点注册时使用的虚拟机面板，找到公共 IP 地址。打开浏览器，尝试访问 `http://'youripaddress'`。你应该能看到默认的
    IIS 页面，这将确认 IIS 已经在服务器上安装：
- en: '![](img/1bbd9f0d-f344-4909-b9ef-ab1f03d53e38.png)'
  id: totrans-173
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1bbd9f0d-f344-4909-b9ef-ab1f03d53e38.png)'
- en: Summary
  id: totrans-174
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Microsoft Azure is a cloud with a lot of services and options. Combining these
    results in endless possibilities. We mentioned some of the best practices that
    can guide you to create productive and secure cloud environments. Based on these,
    you can expand and create your own rules and practices, depending on your services
    and requirements.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 微软 Azure 是一个拥有众多服务和选项的云平台。将这些服务结合在一起，产生了无限的可能性。我们提到了一些最佳实践，它们可以指导你创建高效且安全的云环境。基于这些，你可以根据自己的服务和需求扩展并创建你自己的规则和实践。
- en: Although we have reached the end of this book, we have covered only a fraction
    of what Azure has to offer. Covering all of the available services would be just
    impossible in a single book, and if we wanted to provide a deep dive into each
    service, it would probably end up with a separate book for each service. This
    book was intended to provide you with an understanding of cloud design, cloud
    services, and best practices in the cloud, in order to give you a solid foundation
    of where you can start your cloud journey and build more, based on the knowledge
    gained here.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们已经完成了本书的内容，但我们所覆盖的仅仅是 Azure 提供的一小部分。涵盖所有可用的服务在一本书中几乎是不可能的，如果我们想要深入探讨每个服务，可能最终每个服务都会成为一本单独的书。本书旨在帮助你理解云设计、云服务以及云中的最佳实践，以便为你提供坚实的基础，帮助你开始云之旅，并在此基础上构建更多的知识。
- en: Learning Azure never stops, as new services and options are added daily. I've
    been using Azure for a long time and almost each time I open Azure Portal, I find
    something new. But, understanding new services is not an issue if you get a grasp
    on cloud patterns and best practices. If you understand the services you are currently
    using, understanding new features and services is not a problem and you will quickly
    find a way to use them to your advantage.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 学习 Azure 是一个持续的过程，因为每天都会添加新的服务和选项。我使用 Azure 已经很长时间了，几乎每次打开 Azure 门户时，我都会发现新的东西。但是，如果你掌握了云计算模式和最佳实践，理解新服务就不是问题。如果你理解了当前使用的服务，理解新功能和服务就不成问题，并且你会很快找到将它们运用到实际中的方法。
- en: I hope you enjoyed this book and gained at least some knowledge from it!
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 希望你喜欢这本书，并至少从中学到了一些知识！
- en: Questions
  id: totrans-179
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: The name of the resource should contain...
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 资源的名称应包含...
- en: As much information as possible
  id: totrans-181
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尽可能多的信息
- en: As little information as possible
  id: totrans-182
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尽可能少的信息
- en: Basic information
  id: totrans-183
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 基本信息
- en: Public endpoints should be...
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 公共终端节点应当是...
- en: Always exposed to internet access
  id: totrans-185
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 始终暴露于互联网访问
- en: Exposed to internet access only when needed
  id: totrans-186
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 仅在需要时暴露于互联网访问
- en: Never exposed to internet access
  id: totrans-187
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 永不暴露于互联网访问
- en: To control management access to Azure VMs, you can use...
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要控制对 Azure 虚拟机的管理访问权限，您可以使用...
- en: NSGs
  id: totrans-189
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 网络安全组（NSGs）
- en: Just in Time access
  id: totrans-190
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 随时访问权限
- en: Both
  id: totrans-191
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 两者
- en: Multi-factor authentication is...
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 多因素认证是...
- en: Free for all users
  id: totrans-193
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 所有用户免费
- en: Free for administrators
  id: totrans-194
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 管理员免费
- en: Payed for all users
  id: totrans-195
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 所有用户收费
- en: Payed for administrators
  id: totrans-196
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 管理员收费
- en: IaC stands for...
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: IaC 代表...
- en: Infrastructure as code
  id: totrans-198
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 基础设施即代码（IaC）
- en: Infrastructure as configuration
  id: totrans-199
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 基础设施即配置
- en: Information as code
  id: totrans-200
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 信息即代码
- en: An ARM template is a...
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: ARM 模板是一个...
- en: Script
  id: totrans-202
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 脚本
- en: JSON file
  id: totrans-203
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: JSON 文件
- en: TXT file
  id: totrans-204
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: TXT 文件
- en: The Azure command-line tool is...
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure 命令行工具是...
- en: Azure PowerShell
  id: totrans-206
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure PowerShell
- en: Azure CLI
  id: totrans-207
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure CLI
- en: Both
  id: totrans-208
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 两者
- en: With IaC, we can...
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 IaC，我们可以...
- en: Deploy a single resource
  id: totrans-210
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 部署单个资源
- en: Deploy multiple resources
  id: totrans-211
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 部署多个资源
- en: Deploy only resources of the same type
  id: totrans-212
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 仅部署相同类型的资源
- en: DSC stands for...
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: DSC 代表...
- en: Desired State Configuration
  id: totrans-214
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 所需状态配置（DSC）
- en: Digital Signature Configuration
  id: totrans-215
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数字签名配置
- en: Desired Scaling Configuration
  id: totrans-216
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 所需的扩展配置
- en: The steps to apply DSC in Azure Automation are...
  id: totrans-217
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Azure 自动化中应用 DSC 的步骤是...
- en: Import script, compile script, and register node
  id: totrans-218
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入脚本、编译脚本并注册节点
- en: Register script, apply to node, and compile configuration
  id: totrans-219
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注册脚本、应用到节点并编译配置
- en: Register node, compile script, and apply configuration
  id: totrans-220
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注册节点、编译脚本并应用配置
