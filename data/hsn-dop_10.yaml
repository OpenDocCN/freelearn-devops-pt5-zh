- en: DevOps for Digital Transformation
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数字化转型中的DevOps
- en: In this chapter, we will explore the digital transformation journey in the light
    of DevOps adoption by systems of big data migration, cloud migration, microservices
    migration, data sciences, authentication security, and the **Internet of Things**
    (**IoT**).
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨数字化转型之旅，重点是DevOps在大数据迁移、云迁移、微服务迁移、数据科学、身份认证安全和**物联网**（**IoT**）等系统中的应用。
- en: 'The following topics will be covered:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 将涵盖以下主题：
- en: Digital transformation
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数字化转型
- en: DevOps for big data
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大数据中的DevOps
- en: DevOps for Cloud
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 云计算中的DevOps
- en: DevOps for microservices
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 微服务中的DevOps
- en: DevOps for data sciences
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据科学中的DevOps
- en: DevOps for authentication systems
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 身份认证系统中的DevOps
- en: DevOps for IoT
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 物联网中的DevOps
- en: Digital transformation
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数字化转型
- en: Journey to digital transformation is unique for every company; hence, the very
    definition will vary. On a broad note, it's about the adoption and integration
    of digital technology making the fundamental shift of business operations to deliver
    value to customers.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 数字化转型之路对每个公司都是独特的，因此定义也会有所不同。从广义上讲，它是指通过采用和集成数字技术，将业务操作进行根本性转变，以便为客户提供价值。
- en: To accomplish this, companies need to adopt a culture to challenge continuously
    the status quo of the long standing established processes, and experiment often
    in favor of relatively new practices that are evolving.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现这一目标，企业需要培养一种文化，持续挑战长期建立的流程现状，并常常进行实验，采用相对较新的、不断发展的实践。
- en: 'The incentives for this digital journey are as follows:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这次数字化旅程的激励因素如下：
- en: According to a Forrester Research report, executives predict that nearly half
    of their revenue will be driven by digital by the year 2020.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 根据Forrester Research的报告，高管们预测到2020年，近一半的收入将由数字化驱动。
- en: According to the MIT Center for Digital Business, *companies that have embraced
    digital transformation are 26 percent more profitable than their average industry
    competitors and enjoy a 12 percent higher market valuation*.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 根据麻省理工学院数字商业中心的研究，*那些拥抱数字化转型的公司比同行业的平均竞争者盈利能力高出26%，并且市场估值高出12%。*
- en: Research shows, *nine out of ten IT decision-makers claim legacy systems are
    preventing them from harnessing the digital technologies they need to grow and
    become more efficient.*
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 研究表明，*九成IT决策者认为遗留系统阻碍了他们利用所需的数字技术来推动增长和提高效率。*
- en: Their customers and internal employees will whole-heartedly support them as
    digital practices have made inroads into people's lives for all facets, such as
    shopping online via mobile devices and remotely adjusting their home heating systems.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 他们的客户和内部员工将全力支持他们，因为数字化实践已经深入人们的生活各个方面，比如通过移动设备在线购物和远程调节家中的暖气系统。
- en: Digital strategy adoption should be considered as a long-lasting cultural, technological
    change and not a tactical means. It's re-evaluation of the software platform and
    architecture, development methodologies, technologies, business processes, roles,
    and responsibilities. It's evolutionary, incremental, and iterative and not meant
    to be revolutionary or disruptive. It's about the alignment of organization to
    the change rather than a push from **Chief Information Officers** (**CIOs**) alone
    to match the competition.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 数字战略的采纳应视为一种持久的文化和技术变革，而非战术手段。它是对软件平台和架构、开发方法、技术、业务流程、角色和职责的重新评估。这是渐进的、逐步的、反复迭代的，而不是革命性的或破坏性的。它关注的是组织与变革的对接，而不仅仅是**首席信息官**（**CIOs**）单方面推动以应对竞争。
- en: 'The steps to a successful digital journey are:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 成功数字化旅程的步骤如下：
- en: Formulating digital strategy for organization
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为组织制定数字战略
- en: People involvement as important as technology
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 人员参与和技术同样重要
- en: Legacy architecture transformation
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 遗留架构转型
- en: Legacy processes and attitudes modernize
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现代化遗留流程和态度
- en: Using mobile as a catalyst for change
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用移动设备作为变革的催化剂
- en: Harnessing  power **application programming interfaces** (**APIs**)
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用**应用程序接口**（**APIs**）的强大功能
- en: Planning to stay secure
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 规划保持安全
- en: 'Digital transformation framework varies widely as per organizations'' specific
    challenges and demands. The common themes for business and technology leaders
    as they embark on digital transformation are often cited to aid in developing
    their own digital transformation strategy, as follows:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 数字化转型框架根据组织的具体挑战和需求有很大的不同。商业和技术领导者在进行数字化转型时常引用以下共同主题，帮助他们制定自己的数字化转型战略：
- en: Customer experience
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户体验
- en: Operational agility
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 操作敏捷性
- en: Culture and leadership
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文化和领导力
- en: Workforce enablement
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 劳动力赋能
- en: Digital technology integration
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数字技术集成
- en: Digital transformation cultural shift for organizations is enabled by the fundamental
    shift in the role of IT.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 组织数字化转型文化的转变，是由IT角色的根本变化所推动的。
- en: A recent report from Harvey Nash and advisory firm KPMG found that, *CEOs are
    focused on IT projects that can make money (63 percent), rather than those that
    save money (37 percent)*.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: Harvey Nash和咨询公司KPMG的最新报告发现，*CEO们关注的是能够赚钱的IT项目（63%），而不是节省成本的项目（37%）*。
- en: Research from Forrester suggests, on average, CIOs spend an average of 72 percent
    of their budgets on existing IT concerns, whereas only 28 percent goes to new
    projects and innovation.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: Forrester的研究表明，CIO平均将72%的预算花费在现有IT问题上，而只有28%的预算用于新项目和创新。
- en: In the past 4 years, long-standing CIO priorities have seen the biggest change
    in priorities of relative importance. For example, increasing operational efficiencies
    has dropped 16 percent, and delivering stable IT performance has dropped 27 percent.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去四年里，长期以来的CIO优先事项在相对重要性上的变化最大。例如，提高运营效率下降了16%，而提供稳定的IT性能下降了27%。
- en: Bryson Koehler, CIO of The Weather Company, says, *There is a very different
    mindset at work when you take IT out of an operating mode of, 'Let's run a bunch
    of packaged solutions that we've bought and stood up' to 'Let's build and create
    new capabilities that didn't exist before'*.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: The Weather Company的CIO Bryson Koehler表示，*当你将IT从“运行我们买来并已部署的封装解决方案”转变为“构建和创造以前不存在的新能力”时，工作思维方式会发生很大的变化*。
- en: '*Marc Carrel-Billiard*, global tech R&D lead on digital transformation at Accenture,
    is quoted as saying in an article for TechCrunch that *Finding ways to help people
    across this digital divide and the culture shock that rapid change brings is going
    to be just as important as the technology we use to get there*.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '*Marc Carrel-Billiard*，埃森哲数字化转型全球技术研发负责人，在TechCrunch的文章中引用的话说，*找到帮助人们跨越数字鸿沟、应对快速变化所带来的文化冲击的方式，将和我们用来实现这些目标的技术一样重要*。'
- en: Dr. David Bray, CIO of the U.S. Federal Communication Commission, speaks on
    how this cultural shift sets the stage for transformation: *Throughout human history,
    the things that we could do with tools changed what we could do as humans, and
    as a result, changed what we could do as cultures*. Bray says, *Our species is
    'smart' because we know how to use tools collaboratively together. At the end
    of the day, when we talk about technology change - whether it's the Internet of
    Everything, big data, or machine learning - it's really about people and organizational
    cultures, first and foremost. Then, it's about how those people get stuff done
    together - and that's really what it comes down to when you talk about transforming
    organizational cultures*.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 美国联邦通信委员会CIO David Bray博士谈到这种文化转变如何为转型奠定基础：*在人类历史中，我们能够用工具做的事情改变了我们作为人类能够做的事，进而改变了我们作为文化能够做的事*。Bray说，*我们物种之所以“聪明”，是因为我们知道如何协作使用工具。归根结底，当我们谈论技术变革——无论是万物互联、大数据，还是机器学习——它首先是关于人和组织文化的。然后，才是这些人如何共同完成任务——这才是当你谈论转型组织文化时的核心内容*。
- en: Nextgov reports, *Around three-quarters of the $80 billion the federal government
    spends on information technology each year is used just to keep legacy systems
    running*.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: Nextgov报道，*大约四分之三的联邦政府每年在信息技术上的80亿美元支出，仅仅用于维持传统系统的运行*。
- en: According to a study by Tiger Text and using research conducted by HIMSS Analytics,
    in the healthcare industry, *Despite widespread use of smartphones and other mobile
    devices among healthcare providers, 90 percent of hospitals still use pagers and
    overpay by 45 percent to maintain legacy paging services*.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 根据Tiger Text的研究，并结合HIMSS Analytics的研究，在医疗行业中，*尽管智能手机和其他移动设备在医疗服务提供者中广泛使用，但90%的医院仍然使用寻呼机，并且为了维持传统寻呼服务，支付费用超出了45%*。
- en: Companies are no longer building software or managing IT for cost savings and
    operations, but rather IT has become the primary enabler and driver for business
    innovation. To embrace adopt the shift company roles need realignment with the
    impact of IT in day-to-day experience. In driving digital transformation strategy,
    though IT will play an important role, the massive changes that go along with
    digital transformation implementation and adaption is everyone's responsibility.
    Digital transformation is primarily related to people, such as shedding of outdated
    processes and legacy technology to adopting agile principles and modernization
    across the business.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 公司不再仅仅为了节省成本和运营而开发软件或管理IT，而是IT已经成为推动商业创新的主要推动力和引擎。为了适应这种转变，公司角色需要与IT在日常体验中的影响进行重新对齐。在推动数字化转型战略时，尽管IT会发挥重要作用，但与数字化转型的实施和适应相关的大规模变化是每个人的责任。数字化转型主要与人有关，比如淘汰过时的流程和遗留技术，转而采纳敏捷原则，并推动全公司范围的现代化。
- en: Big data and DevOps
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 大数据与DevOps
- en: Organizations that tend to consider DevOps as pure process maturity versus big
    data as technology stream tend to treat them in silos, leading to inefficiencies.
    DevOps' goal is to make software production and delivery more efficient, and including
    data subjects within the scope of continuous delivery processes to embrace DevOps
    will be a big asset for accomplishing organizations. Many IT leaders are now under
    increased pressure to produce results for investments in big data and data science
    projects. Big data projects are becoming more challenging. Applications are now
    showing up in big data projects forcing analytics scientists to revamp their algorithms.
    Major changes in analytic models cascades to revised resources and infrastructure
    in short duration. The entire process slows down if the operations team is kept
    out of the loop, negating the competitive advantage that big data analytics provide
    and warranting the need for DevOps collaboration.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 那些倾向于将DevOps视为纯粹的过程成熟度、而将大数据视为技术流的组织，往往会将它们割裂开来，从而导致低效。DevOps的目标是使软件生产和交付更高效，将数据主题纳入持续交付流程的范围，并拥抱DevOps，将成为组织成功的重要资产。许多IT领导者现在面临着更大的压力，需要为大数据和数据科学项目的投资取得成果。大数据项目变得越来越具有挑战性。随着大数据项目中的应用程序的出现，迫使分析科学家重新设计他们的算法。分析模型的重大变化会迅速带来资源和基础设施的调整。如果操作团队未能参与其中，整个过程就会放慢，从而抵消大数据分析所提供的竞争优势，也突显了DevOps协作的必要性。
- en: 'In big data projects, the three big components to consider are:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在大数据项目中，需考虑的三个主要组件是：
- en: Making sure that things are reliable
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保事物是可靠的
- en: Making sure that things are scalable
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保事物具有可扩展性
- en: Making sure that they perform
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保它们的性能
- en: The most challenging thing for big data projects is performance, dealing with
    hundreds and thousands of computers, dealing with huge volumes of data sets, dealing
    with rapid data changes, and simultaneously dealing with multiple things and people.
    That combination of variables makes performance critical for big data systems.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 大数据项目最具挑战性的方面是性能，需要处理成百上千台计算机，处理庞大的数据集，处理快速变化的数据，同时还要处理多个任务和人员。这些变量的组合使得性能对于大数据系统至关重要。
- en: By integrating big data and DevOps, organizations can achieve the following
    benefits.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 通过整合大数据和DevOps，组织可以实现以下好处。
- en: Planning effectively on software updates
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 有效地规划软件更新
- en: Software invariably interacts with data, so while updating, redesigning an app
    includes understanding of the types of data sources. Collaborating with data experts
    along with programmers and writing new code can help plan updates effectively
    from a data perspective.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 软件与数据密切互动，因此在更新和重新设计应用程序时，必须了解数据源的类型。与数据专家和程序员合作并编写新代码，有助于从数据的角度有效地规划更新。
- en: Lower error rates
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 降低错误率
- en: Data handling issues account for a major share of errors with software development
    and testing, which compounds the complexity of application and the variety volume
    of data it handles, increasing the chance of errors. DevOps principle of *shift
    left testing*, which emphasizes to enable testing of code changes early in the
    cycle, referred as *left* part of the development cycle. This is enabled with
    DevOps practice to drive further automation with continuous integration processes.
    Strong collaboration between data teams and the DevOps team is crucial to avoid
    data-related errors in an application, during continuous delivery and deployment
    processes.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 数据处理问题占据了软件开发和测试错误的主要份额，复杂的应用程序和其处理的数据种类繁多，增加了出错的机会。DevOps 原则中的*向左测试*强调在开发周期的早期阶段进行代码变更测试，这也称为开发周期的*左*部分。这一过程通过
    DevOps 实践得以实现，推动了持续集成过程中的进一步自动化。数据团队与 DevOps 团队之间的紧密合作对于避免应用程序中的数据相关错误，尤其是在持续交付和部署过程中至关重要。
- en: Consistency of development and production environments
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开发环境与生产环境的一致性
- en: Big data and DevOps teams working together and being part of the software delivery
    process can help understand the types of data challenges involved in building
    apps quickly to mimic real-world behavior in development and testing environments.
    Types and diversity of data in the real world can vary enormously; DevOps recommends
    non-data specialists be involved in the process.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 大数据和 DevOps 团队共同合作并参与软件交付过程，可以帮助理解在快速构建应用程序以模拟现实世界行为的开发和测试环境中，所涉及的数据挑战。现实世界中的数据类型和多样性可能存在巨大的差异；DevOps
    推荐非数据专家也要参与这一过程。
- en: Prompt feedback from production
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 来自生产环境的快速反馈
- en: A continuous delivery process includes gathering metrics from production environments
    after software release to analyze the strengths and weaknesses and plan further
    updates. Involving data teams to monitor and maintain software in production,
    to analyze production-related data such as app health statistics (CPU time, memory
    usage, and so on), can help the organization better understand the DevOps chain
    for continuous delivery.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 持续交付过程包括在软件发布后从生产环境中收集度量数据，以分析优缺点并规划进一步的更新。让数据团队参与监控和维护生产中的软件，分析与生产相关的数据，如应用健康统计（CPU
    时间、内存使用等），可以帮助组织更好地理解用于持续交付的 DevOps 链。
- en: Agility of big data projects
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 大数据项目的敏捷性
- en: An agile environment facilitates adaptive streaming, and evolutionary development
    facilitates streaming between the software streams. Enterprises are moving their
    big data and data science projects to public cloud services for more agility to
    spin up virtual Hadoop or Spark clusters within minutes. DevOps adoption brings
    agility to projects and businesses, as we have seen in previous chapters.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 一个敏捷的环境有助于适应性流式传输，而进化开发有助于软件流之间的流动。企业将他们的大数据和数据科学项目迁移到公共云服务，以便能够更加灵活地在几分钟内启动虚拟的
    Hadoop 或 Spark 集群。正如我们在前面章节中所看到的，DevOps 的采用为项目和企业带来了敏捷性。
- en: Big Data as a service
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 大数据即服务
- en: The benefits of DevOps to big data can be extended using Docker containers to
    provide big data as a service. Data scientists, through self-service, can spin
    up instant clusters with big data tools, Hadoop, Spark, and so on.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps 对大数据的好处可以通过使用 Docker 容器来扩展，提供大数据即服务。数据科学家通过自服务，可以迅速启动集群并使用大数据工具，如 Hadoop、Spark
    等。
- en: 'Big data processes to be adopted for DevOps are:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 为 DevOps 采用的大数据处理流程包括：
- en: ETL
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ETL
- en: Analytics
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分析
- en: Visualization
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可视化
- en: Security/Kerbos
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全性/Kerberos
- en: Data sciences
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据科学
- en: Monitoring
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 监控
- en: Big data involves migration of a large quantity of data from source systems
    to destination systems; it needs proper design, data extraction, data loading,
    data verification, and data cleansing to accomplish the process. The upcoming
    discussed methodologies, along with the DevOps process, aid the expected migration
    in a short time even with huge data.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 大数据涉及将大量数据从源系统迁移到目标系统；这一过程需要适当的设计、数据提取、数据加载、数据验证和数据清洗来完成。接下来讨论的方法论以及 DevOps
    流程，有助于即使是面对大量数据，也能在短时间内完成预期的迁移。
- en: Big data formats and varieties can be structured, semi-structured, and unstructured
    data contributed by social media, machine data, server logs, and so on, encompassing
    multiple domains including medicine, biology, physics, healthcare monitoring,
    astrometry, transportation, and manufacturing.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 大数据的格式和种类可以是结构化、半结构化和非结构化数据，这些数据来自社交媒体、机器数据、服务器日志等，涵盖了包括医学、生物学、物理学、医疗监控、天体测量学、交通运输和制造业等多个领域。
- en: Big data implementations have multiple options and process methodologies, as
    discussed next, to evaluate and adopt DevOps for both applications and infrastructure.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 大数据实现有多种选项和处理方法，如下所述，用于评估并采纳 DevOps，既适用于应用程序，也适用于基础设施。
- en: The ETL datamodels
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ETL 数据模型
- en: '**Extract**, **Transform**, and **Load** (**ETL**) is the process in which
    the data is extracted from source systems, transformed with business logic, and
    loaded into the system for business usage. Data models and schemas are built in
    accordance with the business rules based on input and output data.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '**提取**、**转换** 和 **加载** (**ETL**) 是将数据从源系统提取、通过业务逻辑进行转换，并加载到系统中供业务使用的过程。数据模型和架构是根据输入和输出数据的业务规则构建的。'
- en: There is an other model named **Extract**, **Load**, and **Transform** (**ELT**),
    where the data is loaded in raw form in the staging layer, and transformation,
    business logic, rules are applied for further usage to business.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一种叫做 **提取**、**加载** 和 **转换** (**ELT**) 的模型，其中数据以原始形式加载到暂存层，随后应用转换、业务逻辑和规则，以便后续的业务使用。
- en: '![](img/4103b1c7-8656-4cf1-83ac-42e1ef6ffa86.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4103b1c7-8656-4cf1-83ac-42e1ef6ffa86.png)'
- en: Methodology 1
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 方法论 1
- en: 'This methodology has the following eight steps: business impact analysis, discovery,
    mapping and design, creation of migration plan, provisioning, pre-migration test,
    migration and cutover, and migration validation:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 该方法论包含以下八个步骤：业务影响分析、发现、映射与设计、迁移计划的创建、资源配置、迁移前测试、迁移与切换、以及迁移验证：
- en: '**Business Impact Analysis** is identifying the business and operational requirements
    for the migration process'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**业务影响分析** 是识别迁移过程中业务和操作需求'
- en: '**Discovery** is about the details of data sources, migration hardware, and
    software environment collected'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**发现** 阶段是关于收集数据源、迁移硬件和软件环境的详细信息'
- en: '**Mapping and design** identifies how and where the data is to be moved'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**映射与设计** 阶段确定数据将如何以及在哪里迁移'
- en: '**Creation of Migration** **Plan** is the blueprint specifying customer expectations
    along with project deliverables'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**迁移计划的创建** 是规定客户期望和项目交付物的蓝图'
- en: '**Provisioning** prepares the destination storage environment for the data
    hosting'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**资源配置** 为数据托管准备目标存储环境'
- en: '**Pre-Migration** **Test** tests and validate migration components'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**迁移前** **测试** 测试并验证迁移组件'
- en: '**Migration & Cutover** is for data from source-to-destination migration'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**迁移与切换** 是指数据从源到目标的迁移'
- en: '**Migration Validation** confirms that all expectations are met in the post-migration
    environment'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**迁移验证** 确认在迁移后环境中满足所有预期要求'
- en: Methodology 2
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 方法论 2
- en: This methodology ensures that data is properly evaluated, reviewed, and restored
    before it is migrated to target systems.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 该方法论确保在数据迁移到目标系统之前，数据得到适当的评估、审查和恢复。
- en: '![](img/eb3bfb7b-4b82-4da9-892f-b2b682755446.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](img/eb3bfb7b-4b82-4da9-892f-b2b682755446.png)'
- en: '**Evaluate** phase analyzes source type, state of media, and effort estimation'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**评估** 阶段分析源类型、介质状态和工作量估算'
- en: '**Review** phase evaluates customer requirements and criteria, and also the
    targeted system'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**审查** 阶段评估客户需求和标准，以及目标系统'
- en: '**Restore** phase identifies and restores individual files and recovers data
    before the data extraction process'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**恢复** 阶段识别并恢复单个文件，并在数据提取过程前恢复数据'
- en: '**Migrate** phase indexes and reduplicates the restored data and migrates data
    to target delivered to customer'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**迁移** 阶段对恢复的数据进行索引和去重，并将数据迁移到目标系统，交付给客户'
- en: Methodology 3
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 方法论 3
- en: This methodology was introduced specially to handle methods, such as the database
    migration readiness stage, migration stage, ETL stage, and application stage.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 该方法论专门用于处理诸如数据库迁移准备阶段、迁移阶段、ETL 阶段和应用程序阶段等方法。
- en: '![](img/be5be495-32fc-4170-a508-b0159df7a23f.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](img/be5be495-32fc-4170-a508-b0159df7a23f.png)'
- en: '**Migration Readiness Stage** creates a business case, evaluates risk, creates
    engagement model, assesses the database environment, infrastructure planning,
    and includes hardware and software.'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**迁移准备阶段** 创建业务案例、评估风险、创建参与模型、评估数据库环境、基础设施规划，并包括硬件和软件。'
- en: '**Migration Stage** analyzes the present database and target database design
    based on business objectives. It builds database objects, such as tables, views,
    and triggers. It transfers data; the prioritized migration roadmap verifies database
    schema and validates that data is migrated aptly.'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**迁移阶段**根据业务目标分析当前数据库和目标数据库的设计。它构建数据库对象，如表、视图和触发器。它进行数据迁移；优先迁移路线图验证数据库模式，并验证数据是否正确迁移。'
- en: '**Extract, Transform, and Load Stage** designs and develops ETL packages to
    handle parallel data load, validates technical accuracy, functionality, and security
    and tests data load performance.'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**提取、转换和加载阶段**设计和开发ETL包，以处理并行数据加载，验证技术准确性、功能性和安全性，并测试数据加载性能。'
- en: '**Application Stage** performs integration testing for the applications and
    user acceptance testing to implement in the production environment.'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**应用阶段**进行应用程序集成测试和用户验收测试，以便在生产环境中实施。'
- en: Methodology 4
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 方法论 4
- en: 'This was introduced by Gershon Pick with four steps:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 这是由 Gershon Pick 提出的，包含四个步骤：
- en: '![](img/207e723a-d712-4feb-bb74-9cafa9825723.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![](img/207e723a-d712-4feb-bb74-9cafa9825723.png)'
- en: '**Requirement / architecture** phase defines high-level requirements such as
    data, performance requirements, and also a detailed project plan.'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**需求/架构**阶段定义高级需求，如数据、性能需求，以及详细的项目计划。'
- en: '**Detailed Specification** phase defines transformation, validations, and structure
    changes.'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**详细规范**阶段定义转换、验证和结构变更。'
- en: '**Construction / Testing** phase builds the migration solution and tests.'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**构建/测试**阶段构建迁移解决方案并进行测试。'
- en: '**Execution** phase ensures the target system validates results to implement
    in production.'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**执行**阶段确保目标系统验证结果以便在生产中实施。'
- en: Methodology 5
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 方法论 5
- en: This was introduced by Dell. It has five steps shown as planning, pre-production
    testing, migration, validation, and cutover.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 这是由戴尔公司提出的，包含五个步骤：规划、生产前测试、迁移、验证和切换。
- en: '![](img/8ee53ab9-1287-46b7-84a0-b6e8101b936f.png)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8ee53ab9-1287-46b7-84a0-b6e8101b936f.png)'
- en: '**Planning** phase defines migration goals and requirements and creates a migration
    plan defines HW/SW and tools.'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**规划阶段**定义迁移目标和要求，创建迁移计划，定义硬件/软件和工具。'
- en: '**Pre-Production Testing** phase tests the migration environment and collects
    and validates data. It validates HW/SW and migration tools, and updates the final
    migration plan.'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**生产前测试**阶段测试迁移环境，收集并验证数据。验证硬件/软件及迁移工具，并更新最终迁移计划。'
- en: '**Migration** phase installs migration software and performs migration based
    on the plan.'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**迁移阶段**安装迁移软件，并根据计划执行迁移。'
- en: '**Validation** phase verifies the completion of the migration, collects migration
    statistics, and prepares a migration report.'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**验证阶段**验证迁移是否完成，收集迁移统计数据，并准备迁移报告。'
- en: '**Cutover** migrates application to the target environment and creates a final
    report.'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**切换**将应用程序迁移到目标环境，并创建最终报告。'
- en: Methodology 6
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 方法论 6
- en: This methodology has eight steps explaining the common and necessary steps involved
    in the migration process.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 该方法论有八个步骤，解释了迁移过程中常见和必要的步骤。
- en: '![](img/83d26662-e517-412a-9a61-97fe8878e962.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![](img/83d26662-e517-412a-9a61-97fe8878e962.png)'
- en: '**Analysis of business impact**: Data is the basic and important aspect that
    should be analyzed to enhance the business process. This step analyzes customers''
    requirements for business.'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**业务影响分析**：数据是增强业务流程的基础和重要方面。此步骤分析客户对业务的需求。'
- en: '**Information gathering** phase collects the details about source and destination
    systems. Software and hardware information collection can be manual or an automatic
    process.'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**信息收集**阶段收集有关源系统和目标系统的详细信息。软件和硬件信息的收集可以是手动的，也可以是自动化的过程。'
- en: '**Mapping and designing** phase maps source and destination systems maintain
    two types of design layouts. One for source and destination layouts is the same,
    and relay layout for source and destination schemas are different.'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**映射与设计**阶段映射源系统和目标系统，维持两种设计布局。一个是源和目标布局相同，另一个是源和目标模式不同的中继布局。'
- en: '**Plan of migration** phase considers business and operational constraints
    to migrate data, along with its attributes and tools for the process.'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**迁移计划**阶段考虑业务和操作约束条件，迁移数据及其属性，并为此过程提供工具。'
- en: '**Provisioning** phase replicates the source structure of files, data volumes,
    and attributes for the environment to receive the streams of actual data.'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**供应阶段**复制源文件结构、数据卷和属性，为环境接收实际数据流做准备。'
- en: '**Test migration** phase ensures that all the presumptions are valid, and tools
    are appropriate to minimize the risk of time and money wasted.'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**测试迁移**阶段确保所有假设是有效的，工具也适合，以最小化时间和资金浪费的风险。'
- en: '**Migration** phase determines data movement from source to destination with
    two possibilities of moving data out of path and into path.'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**迁移**阶段确定数据从源头到目的地的移动方式，包括两种可能性：将数据移出路径或进入路径。'
- en: '**Validation** phases checks data access, file permissions, and structure of
    directories to validate working of applications.'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**验证**阶段检查数据访问、文件权限和目录结构，以验证应用程序的正常运行。'
- en: As we have discussed, every phase of big data migration process from ETL, analytics,
    and visualization can be analyzed as a process methodology to apply DevOps maturity
    and tools at every stage for performance enhancement and productivity improvement.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所讨论的，整个大数据迁移过程的每个阶段，从ETL、分析到可视化，都可以作为一个过程方法论来分析，并在每个阶段应用DevOps成熟度和工具，以提升性能和生产力。
- en: Cloud migration - DevOps
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 云迁移 - DevOps
- en: Cloud migrations can be very expensive if they are not done correctly. Applications
    perform differently in the cloud versus on-premise, especially if it's a complex
    application where matured testing strategy makes the difference. DevOps methodology
    incorporation at each stage of the migration process will surely add multi-facet
    value. Each stage of cloud migration is detailed here for adopting DevOps strategy
    for applications, infrastructure, and tools as per the organization's needs.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 如果云迁移操作不当，成本可能会非常高。与本地环境相比，应用程序在云端的表现不同，特别是对于复杂的应用程序来说，成熟的测试策略能带来不同的结果。在迁移过程的每个阶段引入DevOps方法论，肯定能为多方面价值的提升做出贡献。这里详细介绍了云迁移的每个阶段，并根据组织的需求，采用DevOps策略来处理应用程序、基础设施和工具。
- en: 'Several aspects are to be considered for an application migration to the cloud,
    as follows:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在将应用程序迁移到云时，需要考虑以下几个方面：
- en: '![](img/09deb3aa-03d5-4780-aa34-7fa8cc564e3c.png)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![](img/09deb3aa-03d5-4780-aa34-7fa8cc564e3c.png)'
- en: '**Application feasibility**: This is architectural compatibility of the application
    for cloud hosting.'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**应用可行性**：这是应用程序的架构兼容性，是否适合云托管。'
- en: '**External/internal dependencies**: Applications accessibility of internal
    and external dependencies from cloud to be understood.'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**外部/内部依赖**：需要理解应用程序如何在云端访问内部和外部依赖。'
- en: '**Application class**: High-demand applications from a business perspective
    classified as business-critical and LOB applications require high availability.'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**应用类别**：从业务角度来看，高需求的应用程序被归类为业务关键型和业务部门应用，要求具备高可用性。'
- en: '**Application integration**: This validates application performance with other
    on-premise applications and shared services.'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**应用集成**：这验证了应用程序与其他本地应用程序和共享服务的性能。'
- en: '**Scalability/elasticity**: Application design supports scalability on cloud.'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可扩展性/弹性**：应用程序设计支持云端的可扩展性。'
- en: '**Compliance adherence**: This safeguards enterprise-level compliance, regulations,
    and governance for data moved/stored outside the enterprise''s premises.'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**合规性遵守**：这保障了企业级合规性、法规和治理，适用于迁移或存储在企业场外的数据。'
- en: '**Return on investments**: This helps hosting applications on cloud to be more
    cost-effective for the enterprise.'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**投资回报率**：这有助于将应用程序托管在云端，使企业更加节省成本。'
- en: '**Security**: The same level of security can be provided after migrating to
    cloud as:'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安全性**：迁移到云后，可以提供与之前相同级别的安全性：'
- en: Data security
  id: totrans-140
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据安全
- en: Authentication
  id: totrans-141
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 身份验证
- en: Authorization
  id: totrans-142
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 授权
- en: '**Database compatibility**: The existing database is supported, and it is compatible
    with cloud. Here are ways to maintain application data while migrating an application
    to cloud:'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据库兼容性**：现有数据库受支持，且与云兼容。以下是迁移应用程序到云时保持应用数据的几种方式：'
- en: Residing database on-premise
  id: totrans-144
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本地部署数据库
- en: Creating database on VM
  id: totrans-145
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在虚拟机上创建数据库
- en: Windows database (PaaS)
  id: totrans-146
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows数据库（PaaS）
- en: Migration strategy/approach
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 迁移策略/方法
- en: 'Multiple factors are considered for the migration decision:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 迁移决策需要考虑多个因素：
- en: '**UI analysis**: UI interface to be analyzed for migration to cloud in the
    PaaS model. On-premise web-based applications and services can be mapped to cloud
    with re-engineering to be compatible with cloud services, the non-web applications
    at on-premise are to be rebuilt to move to cloud on as-per-need basis. In addition,
    third-party framework / class library to be compatible with cloud might require
    some modifications or may have to be re-written. With the IaaS model, the entire
    server image will be migrated with minimal code changes between the clouds.'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**UI分析**：UI界面将进行分析，以便在PaaS模型中迁移到云。基于Web的本地应用程序和服务可以重新工程化以适应云服务，而本地非Web应用程序则需要重建以根据需要迁移到云。此外，与云兼容的第三方框架/类库可能需要一些修改或重新编写。使用IaaS模型时，整个服务器镜像将被迁移，云之间的代码更改最小。'
- en: '**Authentication and authorization**: The authentication mechanism in the application
    to be analyzed for compatibility such as using forms-based authentication and
    an access control service, or ACS with integration with enterprise on-premise
    active directory.'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**身份验证和授权**：应用程序中的身份验证机制将进行兼容性分析，如使用基于表单的身份验证和访问控制服务，或ACS与企业本地Active Directory集成。'
- en: '**Interaction with other modules/applications**:'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**与其他模块/应用程序的交互**：'
- en: '**Web services**: These can be hosted either as a web role or worker role,
    left as on-premise services, and can be exposed through APIs'
  id: totrans-152
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Web服务**：这些服务可以作为Web角色或工作角色托管，保留为本地服务，并通过API暴露'
- en: '**Native code**: A managed wrapper package can be created and deployed'
  id: totrans-153
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**原生代码**：可以创建并部署托管包装包'
- en: '**Third-party dependency**: These dependencies are validated to be consumed
    directly from web services'
  id: totrans-154
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**第三方依赖**：这些依赖项已验证可以直接从Web服务中消费'
- en: '**Diagnostics support**: This implements custom logging and saves the log information
    to storage tables:'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**诊断支持**：此项实现自定义日志记录并将日志信息保存到存储表中：'
- en: Push event logs to diagnostics store
  id: totrans-156
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将事件日志推送到诊断存储
- en: Push failed request logs to diagnostic store
  id: totrans-157
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将失败的请求日志推送到诊断存储
- en: Push performance counter data to diagnostics store
  id: totrans-158
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将性能计数器数据推送到诊断存储
- en: '**Miscellaneous**'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**其他事项**'
- en: '**Message queues**: Subscriptions used for message publish and subscribe model'
  id: totrans-160
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**消息队列**：用于消息发布和订阅模型的订阅'
- en: '**Configuration changes**: Applications should not have any hardcoded physical
    disk or network access values'
  id: totrans-161
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**配置变更**：应用程序不应硬编码物理磁盘或网络访问值'
- en: Check for any third-party library or content references
  id: totrans-162
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查任何第三方库或内容引用
- en: Replace static values and application states to handle scalability applications
  id: totrans-163
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 替换静态值和应用程序状态以处理可扩展性应用程序
- en: '**Application log**: This is the management of custom logs'' capture and storage'
  id: totrans-164
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**应用程序日志**：这是自定义日志的捕获和存储管理'
- en: '**Data migration strategy**: Application migration strategy should go hand-in-hand
    with data migration strategy, as most of the applications are data-centric. Applications
    can store data onto disk, or into a database or network storage; however migrating
    applications from on-premise to Cloud demands that users do not see any discrepancy
    in their data.'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据迁移策略**：应用程序迁移策略应与数据迁移策略同步进行，因为大多数应用程序都是以数据为中心的。应用程序可以将数据存储在磁盘、数据库或网络存储中；然而，从本地迁移到云时，要求用户在数据上看不到任何不一致。'
- en: 'Cloud provides the flexibility to persist data in the same way they are stored;
    in the on-premise application. Cloud-hosted applications data can be saved in
    multiple ways:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 云提供了将数据以与本地应用程序中存储方式相同的方式持久化的灵活性。云托管的应用程序数据可以通过多种方式保存：
- en: Data from on-premise database to cloud-based database
  id: totrans-167
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从本地数据库迁移到云数据库
- en: Static content to cloud storage
  id: totrans-168
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 静态内容迁移到云存储
- en: Message queues to cloud queue storage / service bus queue
  id: totrans-169
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 消息队列迁移到云队列存储/服务总线队列
- en: '**Migration execution**:'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**迁移执行**：'
- en: The web application migration from on-premise to cloud is planned component-wise
    in an incremental, independent fashion
  id: totrans-171
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从本地迁移到云的Web应用程序是按组件分步规划的，独立进行
- en: The section that follows explains the migration process for the PaaS and IaaS
    options
  id: totrans-172
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接下来的章节将解释PaaS和IaaS选项的迁移过程
- en: '**Acronym Description**'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**缩写描述**'
- en: '**Access Control Service** (**ACS**)'
  id: totrans-174
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**访问控制服务**（**ACS**）'
- en: '**Active Directory Federation Service** (**ADFS**)'
  id: totrans-175
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Active Directory联合身份验证服务**（**ADFS**）'
- en: '**Infrastructure as a Service** (**IaaS**)'
  id: totrans-176
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基础设施即服务**（**IaaS**）'
- en: '**Platform as a Service** (**PaaS**)'
  id: totrans-177
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**平台即服务**（**PaaS**）'
- en: '![](img/d35238e7-14ea-4be3-8314-cca2677baf31.png)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d35238e7-14ea-4be3-8314-cca2677baf31.png)'
- en: Migration to microservices - DevOps
  id: totrans-179
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 迁移到微服务 - DevOps
- en: DevOps principles and methodology are very appropriate for microservices while
    the latter migration involves architecture, API's, and code development. All of
    them would be under code version system, continuous integration, build, test systems
    till continuous deployment.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps 原则和方法非常适合微服务，而微服务的迁移涉及架构、API 和代码开发。这些都会在代码版本控制系统、持续集成、构建、测试系统中进行，直到持续部署。
- en: Refactoring to microservices from monolithic architecture can be pursued in
    multiple ways. Here are three prime strategies listed.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 从单体架构重构到微服务可以通过多种方式进行。这里列出了三种主要策略。
- en: Strategy 1 - standalone microservice
  id: totrans-182
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 策略 1 - 独立微服务
- en: 'Implementing new functionality to the monolithic application should be put
    up as new code in addition to a standalone microservice, instead of adding to
    monolith application making it more bulky. The following diagram shows the system
    architecture after applying this approach:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 向单体应用中实现新功能应当作为新的代码添加，而不是将其直接添加到单体应用中，以避免应用变得更为臃肿。下图展示了应用此方法后的系统架构：
- en: '![](img/a30a585d-5c63-4616-ac1e-1f89152a6ddd.png)'
  id: totrans-184
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a30a585d-5c63-4616-ac1e-1f89152a6ddd.png)'
- en: In the new architecture, both the new service and the legacy monolith co-exist.
    There are two communication components. A request router handles incoming (HTTP)
    requests similar to the API gateway; the router sends requests corresponding to
    new functionality to the new service routing the legacy requests to the monolith.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 在新架构中，新服务和遗留单体应用共存。这里有两个通信组件。请求路由器处理传入的（HTTP）请求，类似于 API 网关；路由器将请求发送到新的功能服务，将遗留请求路由到单体应用。
- en: The glue code is the second component to integrate the service with the monolith.
    The service needs to access data to read and write to the data owned and processed
    by the monolith application, and the glue code could reside in the monolith application,
    service, or both.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: glue 代码是将服务与单体应用集成的第二个组件。服务需要访问数据以读取和写入单体应用所拥有和处理的数据，glue 代码可以驻留在单体应用、服务或两者中。
- en: 'There are three strategies to access the monolith''s data by the service:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 服务访问单体数据有三种策略：
- en: Monolith applications remote API invoked
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调用单体应用的远程 API
- en: Directly access the monolith's database
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 直接访问单体应用的数据库
- en: The service maintains its own data copy to synchronize regularly with the monolith's
    database
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务维护自身的数据副本，并定期与单体的数据库同步
- en: The glue code is an important function to translate between the two different
    models. The glue code maintains its own pristine domain model. The glue code has
    to prevent its own model from getting polluted by the concepts of the legacy monolith's
    domain model; hence, it's also referred to as an anti-corruption layer.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: glue 代码是用于在两种不同模型之间进行转换的重要功能。glue 代码维护其自身的原始领域模型。glue 代码必须防止其自身的模型被遗留的单体应用的领域模型污染；因此，它也被称为反腐层（anti-corruption
    layer）。
- en: 'This method of implementing new functionality as a lightweight service offers
    the following benefits:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 以轻量级服务的方式实现新功能的方法具有以下优点：
- en: The new functionality/service can be independently developed, deployed, and
    scaled, and not linked with the monolith
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新功能/服务可以独立开发、部署和扩展，而不与单体应用绑定。
- en: The new services created extend the benefits of the microservices architecture
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新创建的服务扩展了微服务架构的优势
- en: It prevents the monolith from becoming bulkier and unmanageable
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它防止单体应用变得更为臃肿且难以管理
- en: Strategy 2 - separate frontend and backend
  id: totrans-196
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 策略 2 - 分离前端和后端
- en: This strategy is to separate the presentation layer from the business logic
    and data access layers in the monolithic application.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 这一策略是将单体应用中的表现层与业务逻辑层和数据访问层分离。
- en: 'An enterprise application comprises at least three different layers, as follows:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 企业应用至少包括以下三个不同的层：
- en: '**Presentation layer**: This is a sophisticated user interface with a substantial
    body of code; it handles HTTP requests with HTML-based web UI or a (REST) API,
    and so on.'
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**表现层**：这是一个复杂的用户界面，包含大量代码；它处理基于 HTML 的 Web UI 或（REST）API 等的 HTTP 请求。'
- en: '**Business logic layer**: This contains the core business rules components
    for the application.'
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**业务逻辑层**：包含应用的核心业务规则组件。'
- en: '**Data-access layer**: This accesses infrastructure components of databases
    and message brokers'
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据访问层**：访问数据库和消息代理等基础设施组件'
- en: In the monolithic model, the division of roles and responsibilities between
    the layers is presentation logic and the business and data-access logic. The business
    tier encapsulates business-logic components with coarse-grained API's. This is
    a natural process to extend for microservices architecture by splitting the monolith
    into two segments. One segment contains the presentation layer and the other contains
    the business and data-access logic layer. Then, the presentation logic segment
    or application makes remote calls to the business logic application or segment,
    as shown in the following diagram for the architecture before and after the change.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 在单体模式中，层之间的角色和责任划分是展示逻辑和业务及数据访问逻辑。业务层封装了具有粗粒度API的业务逻辑组件。这是一个自然的过程，可以通过将单体分成两部分来扩展为微服务架构。一部分包含展示层，另一部分包含业务和数据访问逻辑层。然后，展示逻辑部分或应用程序会远程调用业务逻辑应用程序或部分，如下图所示，展示了变更前后的架构。
- en: '![](img/5ee987ed-10e4-4d8f-9295-95ebcd346b1f.png)'
  id: totrans-203
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5ee987ed-10e4-4d8f-9295-95ebcd346b1f.png)'
- en: The main benefits accrued are to enable, develop, deploy, and scale the two
    application segments independent of one another, such as the user interface from
    the presentation layer, so they can be iteratively and rapidly developed and tested;
    an other benefit of this approach is to expose a remote API for consumption by
    microservices.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 主要的好处是使两个应用程序部分能够独立启用、开发、部署和扩展，例如从展示层分离的用户界面，以便可以进行迭代和快速开发与测试；这种方法的另一个好处是为微服务公开远程API。
- en: In this case, all the three layers are bulky monolith components. This strategy
    is only a partial solution, so the next strategy will be explored.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，三个层都是庞大的单体组件。这种策略只是一个部分解决方案，因此将探索下一种策略。
- en: Strategy 3 - extraction of services
  id: totrans-206
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 策略 3 - 提取服务
- en: Turning existing modules within the monolith into standalone microservices is
    the third refactoring strategy. In this process, every time a module is extracted
    and turned into a service, the monolith gradually shrinks. With adequate conversion
    of modules, the monolith ceases to be an issue, disappears entirely, or becomes
    small enough to be another service.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 将现有的单体模块转化为独立的微服务是第三种重构策略。在这个过程中，每次提取一个模块并将其转化为服务时，单体逐渐缩小。通过足够的模块转换，单体不再是问题，完全消失，或者变得足够小以成为另一个服务。
- en: Prioritizing the modules for conversion to services
  id: totrans-208
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 优先选择要转换为服务的模块
- en: 'A few factors that will facilitate this are as follows:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 促使此过程顺利进行的几个因素如下：
- en: Initiating with a few modules that are easy to extract
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从一些易于提取的模块开始
- en: Identifying the modules that will provide maximum benefit
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确定将提供最大收益的模块
- en: Identifying modules that change frequently
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确定频繁变更的模块
- en: Ranking the modules by benefit or frequency of change
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按照收益或变更频率对模块进行排序
- en: Modules with unique resource requirements compared with other modules in a monolithic
    application, for example, those needing in-memory speed or computationally expensive
    algorithms, to be run on dedicated machines to scale the application quickly and
    easily
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与单体应用中的其他模块相比，具有独特资源需求的模块，例如需要内存速度或计算密集型算法的模块，需要在专用机器上运行，以便快速、轻松地扩展应用程序
- en: Modules with existing coarse-grained boundaries are easier and cheaper to turn
    into services; for example, as a module that communicates with the rest of the
    application only via asynchronous messages
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 具有现有粗粒度边界的模块更容易且成本较低地转化为服务；例如，作为一个仅通过异步消息与其他应用程序通信的模块
- en: Adopting this approach, a complex monolithic application with tens or hundreds
    of modules can be conveniently extracted to microservices module after module,
    and thereafter the service can be developed and deployed independent of the monolith
    to accelerate development.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 采用这种方法后，一个复杂的单体应用程序，包含数十个或数百个模块，可以方便地逐个提取为微服务模块，然后该服务可以独立于单体进行开发和部署，从而加速开发进程。
- en: The process to extract a module
  id: totrans-217
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提取模块的过程
- en: The initial phase to extract a module involves creating a coarse-grained interaction
    between the module and the monolith application, to be a bidirectional API for
    the data exchange between the monolith and the service. As per the tangled dependencies
    and fine-grained interaction patterns, it will be challenging to implement between
    the module and the rest of the application.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 提取模块的初始阶段涉及在模块与单体应用程序之间创建粗粒度交互，作为单体架构与服务之间的数据交换双向API。根据复杂的依赖关系和细粒度交互模式，实现模块与应用程序其他部分的交互将具有挑战性。
- en: Domain model pattern-based business logic with numerous associations of domain
    model class dependencies can be altered with code changes. A coarse-grained module
    conversion into a free-standing service to communicate through **inter-process
    communication** (**IPC**) API enables the monolith and the service.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 基于领域模型模式的业务逻辑，具有大量的领域模型类依赖关系，可以通过代码更改进行调整。将粗粒度模块转换为一个独立的服务，通过**进程间通信**（**IPC**）API进行通信，从而实现单体架构与服务的连接。
- en: 'The architecture before, during, and after the refactoring is listed here:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 在重构之前、期间和之后的架构如下所示：
- en: '![](img/9da582f4-8444-4cd6-8b0d-3ba8110a357b.png)'
  id: totrans-221
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9da582f4-8444-4cd6-8b0d-3ba8110a357b.png)'
- en: In the initial architecture, as seen in the top left of the preceding figure,
    the input process flow is from **Module X** to **Module Z**. Then, **Module Y**
    uses inputs from **Module Z**.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 在最初的架构中，如前面图表的左上角所示，输入过程流是从**模块X**到**模块Z**。然后，**模块Y**使用**模块Z**的输入。
- en: Stage 1
  id: totrans-223
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 阶段1
- en: The refactoring stage defines a pair of coarse-grained APIs
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重构阶段定义了一对粗粒度的API。
- en: The initial interface is an inbound input from **Module X** to invoke **Module
    Z**
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 初始接口是来自**模块X**的输入，调用**模块Z**。
- en: The outbound interface from **Module Z** is consumed to invoke **Module Y**
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模块Z**的输出接口被用来调用**模块Y**。'
- en: Stage 2
  id: totrans-227
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 阶段2
- en: In this refactoring stage, the module is rebased as a standalone service.
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在这个重构阶段，模块被重新构建为一个独立的服务。
- en: The inbound and outbound interactions are implemented using an IPC mechanism
    code-based service by combining **Module Z** with a microservice chassis framework
    that handles service discovery
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 进出交互通过结合**模块Z**与处理服务发现的微服务框架，使用IPC机制代码实现。
- en: After extracting the module, the service can be developed, deployed, and scaled
    independent of the monolith and other services
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在提取模块后，服务可以独立于单体架构和其他服务进行开发、部署和扩展。
- en: The service can be rewritten from scratch with API code as an anticorruption
    layer that translates between the two domain models to integrate the service with
    the monolith
  id: totrans-231
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该服务可以通过API代码重新编写，作为一种反腐层，负责在两个领域模型之间进行翻译，从而将服务与单体架构集成。
- en: Every extracted service is an advance in direction of microservices; eventually
    the monolith will shrink over time with the increasing number of microservices
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个提取的服务都是朝着微服务方向的一次进步；随着微服务数量的增加，单体架构将逐渐缩小。
- en: Apps modernization
  id: totrans-233
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应用现代化
- en: Adoption of microservices is a form of application modernization for migrating
    an existing application into modern platforms. This is incrementally planned,
    and not attempted from scratch, by rewriting the code. As we have seen, the strategies
    involves separating the presentation layer components from the business and data
    access components converting existing modules into services, and implementing
    new features and functionality as microservices to improve the application agility
    and performance.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 微服务的采用是将现有应用程序迁移到现代平台的一种应用现代化形式。这是逐步规划的，并不是从零开始重写代码。正如我们所见，这一策略涉及将展示层组件与业务和数据访问组件分离，将现有模块转换为服务，并作为微服务实施新功能和特性，从而提高应用程序的敏捷性和性能。
- en: Architecture migration approach
  id: totrans-235
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 架构迁移方法
- en: Forrester Research and InfoWorld propose a four-tier engagement/architecture
    platform toward microservices. This architecture model adopts the changes in computing
    and penetration of mobile devices for application development.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: Forrester Research 和 InfoWorld 提出了一个面向微服务的四层参与/架构平台。这个架构模型采用了计算和移动设备渗透的变化，用于应用程序开发。
- en: The foremost consideration is to decide on microservices architecture and design
    the services interaction before optimizing.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 最主要的考虑因素是决定微服务架构，并在优化之前设计服务的交互。
- en: 'The four-tier approach to microservices is broken down into the following different
    layers:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 微服务的四层方法被拆分为以下不同的层级：
- en: '**Client tier**: This is customer experience based on mobile clients and IoT'
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**客户端层**：这是基于移动客户端和物联网的客户体验'
- en: '**Delivery tier**: This optimizes user experience based on the device personalizing
    content by monitoring user choices'
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**交付层**：通过监控用户选择来优化用户体验，根据设备个性化内容'
- en: '**Aggregation tier**: This aggregates data from the services tier a long with
    data protocol translation'
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**聚合层**：这将数据从服务层聚合并进行数据协议转换'
- en: '**Services tier**: This is the usage of existing data services in-house, or
    external services, such as Twilio and Box'
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**服务层**：这是指使用内部现有的数据服务或外部服务，如Twilio和Box'
- en: The biggest difference is the separation of the client tier; based on real-time
    interaction with users the layers underneath can be constantly changing.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 最大的区别是客户端层的分离；基于与用户的实时交互，底层的层次结构可以不断变化。
- en: 'The strategy to adopt microservices can be summarized as the following three
    steps:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 采用微服务的策略可以总结为以下三个步骤：
- en: '**Componentized**: Identifying components from existing applications and creating
    a microservices implementation on a pilot basis'
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**组件化**：从现有应用中识别组件，并基于试点方案创建微服务实现'
- en: '**Collaborate**: New processes and initiatives based on the lessons learned
    from the pilot stage to evaluate with stakeholders, programmers, and developers
    on the team'
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**协作**：基于从试点阶段获得的经验教训，与团队中的利益相关者、程序员和开发人员共同评估新的流程和倡议'
- en: '**Connect**: Adopting microservices application to real-world scenarios'
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**连接**：将微服务应用于现实场景'
- en: Data coupling
  id: totrans-248
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据耦合
- en: Microservices architecture is loosely coupled where the data is often communicated
    through APIs. A microservice could even run with small code, but be focused to
    manage a single task.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 微服务架构是松耦合的，数据通常通过API进行通信。一个微服务甚至可以只运行小量代码，但专注于管理单一任务。
- en: 'Loose coupling is based on following aspects:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 松耦合基于以下方面：
- en: Scope boundary is defined and intelligence built-in.
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 范围边界已定义并内建智能。
- en: Intelligence is separated from the messaging function.
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 智能功能与消息传递功能分离。
- en: Compatible with similar functions' microservices, and tolerance for a wide variety
    of modifications; changes are not forced or coordinated.
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与类似功能的微服务兼容，并能够容忍各种修改；变更不是强制的，也不需要协调。
- en: Services are decoupled with APIs giving them freedom and flexibility. An API
    is a contract for services with specifications on what the services provide and
    also the way programs rely on them.
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务通过API解耦，给予它们自由和灵活性。API是服务的契约，规定了服务提供的内容以及程序依赖于它们的方式。
- en: Microservices scalability
  id: totrans-255
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 微服务可扩展性
- en: 'As per this listed architecture scalability model, these can include:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 根据此列出的架构可扩展性模型，这些可以包括：
- en: Functional decomposition (Y-axis scaling)
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 功能分解（Y轴扩展）
- en: Data partitioning (X-axis scaling)
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据分区（X轴扩展）
- en: Horizontal scaling of individual services (X-axis scaling)
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单个服务的横向扩展（X轴扩展）
- en: '![](img/0dd60b22-5b2c-4ca5-a82f-e7bd5e3923ce.png)'
  id: totrans-260
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0dd60b22-5b2c-4ca5-a82f-e7bd5e3923ce.png)'
- en: Best practices for architectural and implementation considerations
  id: totrans-261
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 架构和实现考虑的最佳实践
- en: 'Migrating to microservices is a strategy, and it needs step-by-step planning,
    as follows:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 迁移到微服务是一种策略，需要逐步规划，具体如下：
- en: Separating classes in a monolithic app
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在单体应用中分离类
- en: Identifying classes that have CRUD-style interfaces with other business methods
  id: totrans-264
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 识别具有CRUD风格接口的类以及其他业务方法
- en: Identifying isolated classes with no dependencies on other classes, apart from
    the code needed to interact with external services, such as Memcache, Cloud Datastore,
    or Task Queue
  id: totrans-265
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 识别与其他类无依赖关系的孤立类，除了与外部服务（如Memcache、Cloud Datastore或Task Queue）交互所需的代码
- en: Identifying sections of code isolated from others with static code analysis
    tools
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用静态代码分析工具识别与其他代码隔离的代码段
- en: Refactor code to remove unwanted dependencies, as circular dependencies are
    the most difficult to address
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重构代码以移除不必要的依赖，循环依赖是最难解决的问题
- en: 'As prerequisite to the move to microservices, refactor legacy codebase in production:'
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为迁移到微服务的前提，重构生产环境中的遗留代码库：
- en: 'Identify common areas for microservices as follows:'
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 识别微服务的共同领域，如下所示：
- en: Account and user information
  id: totrans-270
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 账户和用户信息
- en: Authorization and session management
  id: totrans-271
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 授权和会话管理
- en: Configuration or preferences settings
  id: totrans-272
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置或偏好设置
- en: Notifications and communications services
  id: totrans-273
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通知和通信服务
- en: Photos and media, especially metadata
  id: totrans-274
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 照片和媒体，特别是元数据
- en: The next steps for porting to microservices, post identification of classes
    set
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在识别出类集之后，迁移到微服务的下一步
- en: Rollback option by retaining the existing code operational in the legacy application
  id: totrans-276
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过保留现有代码在遗留应用程序中操作，实现回滚选项
- en: New code repository creation, and copying the classes into it
  id: totrans-277
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建新的代码库，并将类复制到其中
- en: Create HTTP API through view layer to provide the hook to format appropriately
    the response documents
  id: totrans-278
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过视图层创建HTTP API，以提供正确格式化响应文档的钩子
- en: New code creation as a separate application (`exampleapp.yaml`)
  id: totrans-279
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新代码作为独立应用创建（`exampleapp.yaml`）
- en: New microservice deployed as a service or separate project
  id: totrans-280
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新的微服务作为服务或独立项目进行部署
- en: Functional testing of the code
  id: totrans-281
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对代码进行功能测试
- en: Data migration from the legacy app to the new microservice
  id: totrans-282
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从遗留应用程序迁移数据到新的微服务
- en: Legacy application modified to make use of the new microservice application
  id: totrans-283
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 遗留应用程序已修改以使用新的微服务应用程序
- en: Altered legacy application to be deployed
  id: totrans-284
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 已修改的遗留应用程序将被部署
- en: Ensure adequate verifications in functionality and performance
  id: totrans-285
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保功能性和性能的充分验证
- en: Dead code if any from the legacy application is removed
  id: totrans-286
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果遗留应用程序中有死代码，则会被移除
- en: Domain modeling
  id: totrans-287
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 领域建模
- en: At the heart of designing coherent and loosely coupled microservices is domain
    modeling, to ensure isolation and insulation of microservices and their reusability.
    Each application's microservices should be adequately isolated from runtime side
    effects, and also insulated from changes during the implementation of other microservices
    in the system. Proper domain modeling helps avoid the modeling shortcomings in
    the system based on technological or organizational boundaries, resulting in separation
    of services for data, business logic, presentation logic, and so on.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 设计一致且松耦合的微服务的核心是领域建模，以确保微服务的隔离和封装及其可重用性。每个应用程序的微服务应适当隔离，以避免运行时副作用，同时也应隔离系统中其他微服务实现过程中发生的变化。恰当的领域建模有助于避免系统中基于技术或组织边界的建模缺陷，从而实现服务的分离，如数据、业务逻辑、展示逻辑等。
- en: An example could be extraction of promotions services from a monolithic e-commerce
    system to be consumed by various clients using mobile Web, iOS, or Android apps.
    So, the domain model of *promotions,* along with its state entities and logic,
    are to be insulated, and not polluted with cross-domain logic or entities from
    other domains of the system, such as products, customers, or orders.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 一个例子是从单体电子商务系统中提取促销服务，由不同的客户端（如移动Web、iOS或Android应用）使用。因此，*促销*的领域模型及其状态实体和逻辑需要被隔离，并且不应与系统中其他领域（如产品、客户或订单）的跨域逻辑或实体混淆。
- en: Service size
  id: totrans-290
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 服务规模
- en: The right service size for a microservice based on the *Single Responsibility
    Principle* is a driving force for independent operation, and testing advocates
    as small a service size as appropriate, possibly similar to Unix-based utilities
    for small code bases that are easy to maintain and upgrade.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 基于*单一职责原则*的微服务适当服务规模是驱动独立操作的动力，测试主张服务规模尽可能小，类似于基于Unix的小型实用工具，适用于易于维护和升级的小型代码库。
- en: Depending on product type, and based on different business logic, encapsulating
    can become overwhelming, so the better approach is to consider adding more boundaries
    inside the product domains and create further services. Another option is to consider
    the time to replace the microservice with a new implementation or technology and
    accordingly plan for size reworking.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 根据产品类型以及不同的业务逻辑，封装可能变得过于复杂，因此更好的方法是考虑在产品领域内添加更多的边界，并创建更多的服务。另一个选择是考虑替换微服务为新的实现或技术，并据此规划规模的重新调整。
- en: Testing
  id: totrans-293
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试
- en: Testing plays an important role while a monolithic system is progressively transformed
    into a microservice-enabled system; integration testing of the services with the
    monolithic system to be executed and also business operations spanning the pre-existing
    monolithic system continue to perform with new microservices systems. The system-provided
    consumer-driven contracts can be translated into test cases for testing the new
    microservices, in which case automated tests ensure expectations from the system
    are met.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 在将单体系统逐步转变为微服务系统的过程中，测试扮演着重要角色；需要执行与单体系统的服务集成测试，同时跨越预先存在的单体系统的业务操作仍然能够在新的微服务系统上继续执行。系统提供的消费者驱动契约可以转换为新的微服务测试用例，这种情况下，自动化测试确保系统的期望得到满足。
- en: 'A few automated test suites are:'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 一些自动化测试套件：
- en: '`Pact`, a consumer-driven contract testing library, which creates a reusable
    test environment to deploy a test copy of the entire system for testing the microservices'
  id: totrans-296
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Pact`，一种基于消费者驱动的契约测试库，用于创建可重用的测试环境，以部署整个系统的测试副本来测试微服务'
- en: Using an automation tool such as Docker compose, which can containerize the
    entire system in the form of Docker containers orchestrated to quickly deploy
    the test infrastructure of the system to perform integration tests locally
  id: totrans-297
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用自动化工具，如Docker Compose，可以将整个系统容器化为Docker容器，并编排这些容器，以便快速部署系统的测试基础设施，进行本地集成测试。
- en: Service discovery
  id: totrans-298
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 服务发现
- en: A service discovery system enables services to know of each other while accomplishing
    a business function. Each service refers to an external registry with details
    of the other services. This can be accomplished with environment variables for
    a small number of services; service discovery for more sophisticated systems rely
    commonly on Consul and Apache Zookeeper.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 服务发现系统使得各个服务能够在执行业务功能时彼此了解。每个服务都会引用外部注册表，获取其他服务的详细信息。对于少量服务，可以使用环境变量来实现服务发现；对于更复杂的系统，服务发现通常依赖于Consul和Apache
    Zookeeper。
- en: Deployment
  id: totrans-300
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署
- en: The deployment of each microservice should be self-enabled through a runtime
    container or by embedding a container in itself similar to how a JVM-based microservice
    Tomcat can container be embedded eliminating the need for a standalone web application
    server. At any instance, a number of microservices of the similar type (reference
    scale cube X-axis scaling) exist to allow more reliable handling of requests.
    A software load balancer to act as a service registry is included in implementations
    for failover and transparent balancing of requests, such as Netflix Eureka.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 每个微服务的部署应该通过运行时容器自我启用，或者通过将容器嵌入自身来实现，类似于基于JVM的微服务Tomcat可以容器化，避免了需要独立的Web应用服务器。在任何时刻，存在多个相同类型的微服务（参考规模立方体X轴扩展），以便更可靠地处理请求。实现中包括一个软件负载均衡器，作为服务注册表，用于故障切换和请求的透明负载均衡，例如Netflix
    Eureka。
- en: Build and release pipeline
  id: totrans-302
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建和发布管道
- en: Continuous integration and deployment pipelines are highly valuable for implementing
    microservice-based systems with on-demand, build and release, exclusive pipeline
    for each microservice reducing the cost of building and releasing the whole application.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 持续集成和部署管道对于实现基于微服务的系统非常有价值，它为每个微服务提供了按需、构建和发布的专用管道，减少了构建和发布整个应用程序的成本。
- en: Rolling upgrades (or blue-green deployment) should be part of release practices,
    which means if its green the upgrade is successful, otherwise a rollback strategy
    should be implemented. This can also be achieved by maintaining concurrent versions
    of the same microservice running in the production environment at any point in
    time (existing versions along with new builds) to quickly swap as needed. In this
    scenario, an active percentage of the user load can be routed to the new microservice
    version to test its operation, while gradually phasing out the older versions.
    This builds redundancy in the system against failed changes in a microservice
    crippling the system.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 滚动升级（或蓝绿部署）应该成为发布实践的一部分，这意味着如果是绿色的，升级就成功了，否则应该实施回滚策略。这也可以通过在生产环境中始终保持同一微服务的并发版本（现有版本和新构建的版本）来实现，快速根据需要进行切换。在这种情况下，可以将用户负载的一部分路由到新的微服务版本以测试其操作，同时逐步淘汰旧版本。这为系统中的微服务故障提供了冗余，防止了系统瘫痪。
- en: Feature flags
  id: totrans-305
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 特性标志
- en: Microservice patterns include feature flags. It's a configuration parameter
    added to the system to allow toggling on or off to a feature. This pattern in
    the system facilitates to trigger the use of the requisite microservice for the
    feature associated with the flag option (say, turned on). For example, the same
    feature can coexist both in a new microservice and production, the traffic can
    be routed with the feature flag; this enables delivery teams to expedite the build
    cycle time.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 微服务模式包括特性标志。它是一个添加到系统中的配置参数，用于控制某个功能的开关。这种模式使得系统能够触发与标志选项（例如，开启）关联的微服务的使用。例如，同一个功能可以在新微服务和生产环境中共存，流量可以通过特性标志进行路由；这使得交付团队能够加快构建周期时间。
- en: Developer productivity with microservices adoption
  id: totrans-307
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 微服务采用对开发人员生产力的提升
- en: Monolithic architectures allow quick turnaround of new business features on
    a tight schedule, whereas the overall system is small. However, as the system
    becomes bulkier, both development and operations are cumbersome.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 单体架构允许在紧迫的时间表下快速推出新业务功能，而整体系统也相对较小。然而，随着系统变得臃肿，开发和运维都会变得繁琐。
- en: Building new features or systems with the microservices' first approach is complicated,
    with many moving parts. Although it demands strong disciplines around architecture
    and automation, investing is rewarding in terms of creating an environment for
    teams to build microservices quickly and cleanly. One method is to create a standard
    boilerplate project that encapsulates key microservice design principles with
    project structure, test automation, integration with monitoring and instrumentation
    infrastructures, patterns of circuit breakers and timeouts, documentation hooks,
    API frameworks, and so on. These kinds of project templates help focus on building
    business functionality in a microservices-based distributed environment rather
    than scaffolding and glue code. A few interesting approaches are projects such
    as Dropwizard, Spring Boot, and Netflix Karyon, with choices based on architecture
    and developer skill level.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 采用微服务优先的方式构建新功能或系统是复杂的，涉及许多活动部分。虽然它需要在架构和自动化方面具备强大的纪律性，但从长远来看，投资是值得的，因为它为团队快速而干净地构建微服务创造了一个良好的环境。一个方法是创建一个标准的模板项目，将关键的微服务设计原则封装在项目结构、测试自动化、与监控和仪表化基础设施的集成、断路器和超时模式、文档钩子、API框架等方面。这类项目模板有助于团队专注于在微服务基础的分布式环境中构建业务功能，而不是关注脚手架和胶水代码。几个有趣的项目方法包括Dropwizard、Spring
    Boot和Netflix Karyon，选择取决于架构和开发人员的技能水平。
- en: Monitoring and operations
  id: totrans-310
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 监控与运维
- en: Monitoring of coexisting features in both monolithic systems and microservices
    enables better visibility of the performance gains of implementing the new microservice
    implementation. This requires collecting statistics for comprehensive monitoring
    of performance of systems and resources to improve confidence in pursuing further
    migration.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 在单体系统和微服务中共存的特性监控，有助于更好地了解实施新微服务后的性能提升。这需要收集统计数据，对系统和资源的性能进行全面监控，以提高继续迁移的信心。
- en: Organizational considerations
  id: totrans-312
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 组织考虑
- en: Organizational changes are the most challenging components of migrating from
    monolithic systems to microservices, such as building service teams to own all
    aspects of their microservices. To embrace more collective code, ownership requires
    creating multidisciplinary units with developers, testers, and operations staff
    who care about software craftsmanship.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 从单体系统迁移到微服务时，组织变革是最具挑战性的部分，例如建立服务团队来负责微服务的各个方面。为了实现更集中的代码所有权，需要创建由开发人员、测试人员和运维人员组成的多学科团队，这些人关注软件工艺。
- en: DevOps for data science
  id: totrans-314
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据科学中的DevOps
- en: Data science projects involve majorly the multiple streams of roles performing
    different functions of big data engineers, data scientists, and operations teams.
    For data engineers, primary activities include ETL, preparing data sets for analysis,
    and coding for the models developed by data scientists into scripts. Data scientists
    are involved in developing the models, evaluating different algorithms and models
    based on sample test data and validating them with real data.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 数据科学项目主要涉及多个角色流，执行大数据工程师、数据科学家和运维团队不同职能的任务。对于数据工程师来说，主要任务包括ETL、准备数据集以供分析以及将数据科学家开发的模型编码为脚本。数据科学家则参与开发模型、根据样本测试数据评估不同算法和模型，并用真实数据进行验证。
- en: In this silo-working scenario, the team output may be confined to Poc's and
    not extend to big projects. However, even the minor tasks require overlap of skills
    as well as multiple interactions and design sessions with big data engineers,
    data scientists, and operations teams.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种独立工作场景下，团队的产出可能仅限于概念验证（Poc），而无法扩展到大型项目。然而，即使是较小的任务也需要技能的重叠，并且需要与大数据工程师、数据科学家和运维团队进行多次互动和设计会议。
- en: 'DevOps can bridge the gap between the streams for collaborative working by
    adopting best practices:'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps可以通过采用最佳实践来弥合协作工作的差距：
- en: '**Tools and platforms evolution**: Engineers and data scientists should continuously
    evaluate and contribute to the creation of new tools and open source project,
    and base lining Apache Spark/Hadoop ecosystem to be stable and user-friendly for
    day-to-day operations.'
  id: totrans-318
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**工具和平台的演变**：工程师和数据科学家应持续评估并为新工具和开源项目的创建做出贡献，并以Apache Spark/Hadoop生态系统为基础，确保其稳定性和日常操作中的用户友好性。'
- en: '**Cross-skills education**: Data scientists should collaboratively consider
    the realistic, rational, and practical possibility rather than be confined to
    writing code with abstractions, such as the time duration for query and extracted
    data suffices into the storage system.'
  id: totrans-319
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**跨技能教育**：数据科学家应当共同考虑现实的、理性且实际的可能性，而不是局限于编写抽象代码，例如查询时长和提取数据是否能足够存储系统使用。'
- en: '**Process improvement**: DevOps is the way forward not just limited tools implementation
    such as writing Ansible scripts or installing Jenkins. DevOps should aid in invent
    of new tools of self-service for enhanced productivity and reduce hand-off between
    teams.'
  id: totrans-320
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**流程改进**：DevOps是前进的道路，不仅限于工具的实现，如编写Ansible脚本或安装Jenkins。DevOps应当帮助发明新的自助工具，提升生产力，减少团队间的交接。'
- en: The DevOps continuous analytics environment
  id: totrans-321
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DevOps持续分析环境
- en: With maturity of continuous analytics and self-service, data scientist ownership
    extends from the original idea all the way to production for the data project.
    Being autonomous  helps us to dedicate more time to producing actual insights.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 随着持续分析和自助服务的成熟，数据科学家的职责从最初的构思延伸至数据项目的生产阶段。自主性帮助我们将更多时间投入到生成实际见解上。
- en: 'Data scientists operate through the following multiple phases:'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 数据科学家通过以下多个阶段进行操作：
- en: Start with the original business idea and work on data exploration and preparation
  id: totrans-324
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从最初的商业构思开始，进行数据探索和准备工作
- en: Invest in model development
  id: totrans-325
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 投资于模型开发
- en: Deployment and validation of the environment
  id: totrans-326
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 环境的部署和验证
- en: 'Deployment to production: with proper tools, they are equipped to run complete
    iteration multiple times a day themselves, with quicker turnaround'
  id: totrans-327
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署到生产环境：使用合适的工具，他们能够自己完成完整的迭代，每天多次，且周转更快
- en: Big data engineers focus on developing and contributing to tools, such as Spark,
    scalability, and storage optimization, enabling streaming architectures, and providing
    APIs and DSLs needed for the data scientist.
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 大数据工程师专注于开发和贡献工具，如Spark、可扩展性和存储优化，支持流架构，并提供数据科学家所需的API和DSL。
- en: Product engineers can build smart applications for business users based on bundled
    services of analytical models developed by data scientists.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 产品工程师可以基于数据科学家开发的分析模型的捆绑服务，为业务用户构建智能应用程序。
- en: Each person is working with their own abstractions and contributing to the overall
    success in this collaborative mode.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 每个人都在自己的抽象层次上工作，并以这种协作模式为整体成功作出贡献。
- en: DevOps for authentication and security
  id: totrans-331
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DevOps用于身份验证和安全
- en: Data security with Kerberos is listed as the the following process
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: Kerberos数据安全以以下流程列出
- en: An authentication protocol
  id: totrans-333
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一种身份验证协议
- en: Tickets to authenticate
  id: totrans-334
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于身份验证的票据
- en: Avoid locally storing passwords or sending them over the internet
  id: totrans-335
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 避免在本地存储密码或通过互联网传输密码
- en: A trusted third-party validation
  id: totrans-336
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可信第三方验证
- en: Symmetric-key cryptography
  id: totrans-337
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对称密钥加密
- en: Kerberos realm
  id: totrans-338
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Kerberos领域
- en: Kerberos realm is based on policy management definitions; it encompasses all
    that is available to access such as clients, services, hosts, and a **Key Distribution
    Center** (**KDC**) (Authentication Server and the **Ticket Granting Server** (**TGS**)).
    Proof of identity is user/password credentials encrypted with a secret key for
    the particular service requested, and **single sign-on** (**SSO**) authenticates
    ticket created with a new login or with a cache on the system.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: Kerberos领域基于策略管理定义；它包含了所有可供访问的内容，如客户端、服务、主机和**密钥分发中心**（**KDC**）（身份验证服务器和**票据授权服务器**（**TGS**））。身份验证的证明是用户/密码凭证，通过特定服务请求加密的密钥进行加密，**单点登录**（**SSO**）通过新登录或系统上的缓存验证创建的票据。
- en: '![](img/8de5cc5b-2dec-494e-aa88-8a4fc8332ffc.png)'
  id: totrans-340
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8de5cc5b-2dec-494e-aa88-8a4fc8332ffc.png)'
- en: 'Accessing request to a service or host happens through the following interactions:'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 访问请求到服务或主机通过以下交互发生：
- en: The authentication server
  id: totrans-342
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 身份验证服务器
- en: The ticket granting server
  id: totrans-343
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 票据授权服务器
- en: The service or host machine needed to access
  id: totrans-344
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要访问的服务或主机机器
- en: KDC stores all of the secret keys for user machines and services in its database
  id: totrans-345
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: KDC将所有用户机器和服务的秘密密钥存储在其数据库中
- en: The secret keys are passwords along with the hash algorithms
  id: totrans-346
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 秘密密钥是密码和哈希算法的组合
- en: A key is generated during initial setup and memorized on the service/host machine
  id: totrans-347
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在初始设置过程中生成一个密钥，并在服务/主机机器上进行记忆
- en: Secret keys are all stored in the KDC database, based on symmetric-key cryptography
  id: totrans-348
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 秘密密钥都存储在KDC数据库中，基于对称密钥加密
- en: Kerberos can also use public-key cryptography instead of symmetrical key encryption
  id: totrans-349
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kerberos也可以使用公钥加密来代替对称密钥加密
- en: The user and the authentication server
  id: totrans-350
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用户与认证服务器之间
- en: 'The service request authentication between user and server is as follows:'
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 用户和服务器之间的服务请求认证过程如下：
- en: 'Access to an HTTP service needs authentication with the server through TGT
    from the host terminal:'
  id: totrans-352
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问HTTP服务需要通过终端主机的TGT与服务器进行身份验证：
- en: '![](img/58d9e047-876d-4092-be6f-d4bdae78a24f.png)'
  id: totrans-353
  prefs: []
  type: TYPE_IMG
  zh: '![](img/58d9e047-876d-4092-be6f-d4bdae78a24f.png)'
- en: 'The authentication server will check validity in the KDC database, but not
    for the credentials:'
  id: totrans-354
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 认证服务器将在KDC数据库中检查有效性，但不检查凭证：
- en: '![](img/50642f78-5b41-44d9-b48e-ba4be67d4c76.png)'
  id: totrans-355
  prefs: []
  type: TYPE_IMG
  zh: '![](img/50642f78-5b41-44d9-b48e-ba4be67d4c76.png)'
- en: 'Once the validity is established, a session key is created between the user
    and the **Ticket Granting Server** (**TGS**):'
  id: totrans-356
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦有效性确立，用户和**票证授权服务器**（**TGS**）之间会创建会话密钥：
- en: '![](img/ab924282-4d31-412e-97ae-f3ed2dfa2b87.png)'
  id: totrans-357
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ab924282-4d31-412e-97ae-f3ed2dfa2b87.png)'
- en: 'A client secret key (password) validates and authorizes:'
  id: totrans-358
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 客户端密钥（密码）进行验证和授权：
- en: '![](img/f40d7d2e-74c4-4f91-b72b-6e8a0eb3d0ab.png)'
  id: totrans-359
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f40d7d2e-74c4-4f91-b72b-6e8a0eb3d0ab.png)'
- en: 'HTTP service requests also follow the similar process of encrypted authentication:'
  id: totrans-360
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: HTTP服务请求也遵循类似的加密认证过程：
- en: '![](img/db5eee95-528b-40ca-91a7-2cb65812ebbb.png)'
  id: totrans-361
  prefs: []
  type: TYPE_IMG
  zh: '![](img/db5eee95-528b-40ca-91a7-2cb65812ebbb.png)'
- en: 'The TGS will check the KDC database for HTTP service availability:'
  id: totrans-362
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: TGS将检查KDC数据库中的HTTP服务可用性：
- en: '![](img/db4c57c1-b0ce-4740-9aae-633d9503ff35.png)'
  id: totrans-363
  prefs: []
  type: TYPE_IMG
  zh: '![](img/db4c57c1-b0ce-4740-9aae-633d9503ff35.png)'
- en: 'To render the web service page, TGS decrypts the TGT with its secret key:'
  id: totrans-364
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了呈现网页服务，TGS使用其秘密密钥解密TGT：
- en: '![](img/ab924282-4d31-412e-97ae-f3ed2dfa2b87.png)'
  id: totrans-365
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ab924282-4d31-412e-97ae-f3ed2dfa2b87.png)'
- en: 'The TGS randomly generates the HTTP service session key, prepares the HTTP
    service ticket, and encrypts it with the HTTP service secret key:'
  id: totrans-366
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: TGS随机生成HTTP服务会话密钥，准备HTTP服务票证，并使用HTTP服务密钥加密：
- en: '![](img/db5eee95-528b-40ca-91a7-2cb65812ebbb.png)'
  id: totrans-367
  prefs: []
  type: TYPE_IMG
  zh: '![](img/db5eee95-528b-40ca-91a7-2cb65812ebbb.png)'
- en: 'TGS sends the encrypted HTTP service ticket; however, the machine waits for
    the HTTP service secret key:'
  id: totrans-368
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: TGS发送加密的HTTP服务票证；然而，机器等待HTTP服务的密钥：
- en: '![](img/69b0d7b4-df1f-4551-8a85-4a6ab1834875.png)'
  id: totrans-369
  prefs: []
  type: TYPE_IMG
  zh: '![](img/69b0d7b4-df1f-4551-8a85-4a6ab1834875.png)'
- en: Client and the HTTP service
  id: totrans-370
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 客户端和HTTP服务
- en: 'The service request between HTTP service and client node is as following:'
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: HTTP服务与客户端节点之间的服务请求如下：
- en: 'To access the HTTP service, the client machine prepares another authenticator
    message and is encrypted with the HTTP service session key:'
  id: totrans-372
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了访问HTTP服务，客户端机器准备另一个认证消息，并使用HTTP服务会话密钥进行加密：
- en: '![](img/c47e79a6-15bf-4ed8-8727-7fac58f4e64e.png)'
  id: totrans-373
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c47e79a6-15bf-4ed8-8727-7fac58f4e64e.png)'
- en: 'The HTTP service then decrypts the ticket with its secret key to obtain the
    HTTP service session key and decrypt the authenticator message is shared:'
  id: totrans-374
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，HTTP服务使用其密钥解密票证，获取HTTP服务会话密钥并解密共享的认证消息：
- en: '![](img/7a8d4009-f9d5-4030-b9ff-0d59151eff86.png)'
  id: totrans-375
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7a8d4009-f9d5-4030-b9ff-0d59151eff86.png)'
- en: 'Similar to the TGS and the HTTP server sends an authenticator message encrypted
    with the HTTP service session key:'
  id: totrans-376
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 与TGS类似，HTTP服务器发送使用HTTP服务会话密钥加密的认证消息：
- en: '![](img/8eb2fd42-d4fc-43ec-b404-1e92212bf3d1.png)'
  id: totrans-377
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8eb2fd42-d4fc-43ec-b404-1e92212bf3d1.png)'
- en: 'The client machine reads the authenticator message by decrypting with the cached
    HTTP service session key:'
  id: totrans-378
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 客户端机器通过解密缓存的HTTP服务会话密钥读取认证消息：
- en: '![](img/beba1687-8b7b-46d0-95a3-6090575fa677.png)'
  id: totrans-379
  prefs: []
  type: TYPE_IMG
  zh: '![](img/beba1687-8b7b-46d0-95a3-6090575fa677.png)'
- en: 'Future requests use the cached HTTP service ticket, so long as it has not expired
    as defined within the lifetime attribute:'
  id: totrans-380
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 未来的请求使用缓存的HTTP服务票证，只要它没有过期，且符合生命周期属性的定义：
- en: '![](img/ea98c2ea-078d-4603-90eb-b762259203b3.png)'
  id: totrans-381
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ea98c2ea-078d-4603-90eb-b762259203b3.png)'
- en: The security authentication process involves multiple servers, policy, and credentials
    management, which when enabled with DevOps are highly effective for automated
    upgrades, deployments, and so on.
  id: totrans-382
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安全认证过程涉及多个服务器、策略和凭证管理，启用DevOps后，能够有效支持自动化升级、部署等操作。
- en: DevOps for IoT systems
  id: totrans-383
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 物联网系统的DevOps
- en: Feedback drives the value. The fundamental aspect of DevOps is to gain insights
    into performance and usage quickly, which translates to feedback for further refinement
    to design and automate delivery pipelines to improve the quality of our software
    delivery, and to drive the most value for our customers and business. Closer customer
    contacts to solicit feedback and usage metrics analysis, followed by continuous
    improvement, helps agile organizations respond promptly to emerging requirements.
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 反馈驱动价值。DevOps的基本方面是快速获取关于性能和使用情况的洞察，这转化为进一步改进的反馈，设计并自动化交付流水线，以提高软件交付质量，并为我们的客户和业务带来最大价值。更紧密的客户联系以征求反馈并进行使用指标分析，随后通过持续改进，帮助敏捷组织迅速响应新出现的需求。
- en: 'In IoT, we gather feedback about device performance and usage that can help
    us with:'
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 在物联网中，我们收集有关设备性能和使用情况的反馈，这些可以帮助我们：
- en: Preventive maintenance by predicting the need for repair based on actual usage
    characteristics, which reduces the duration of periodic maintenance and improves
    overall maintenance.
  id: totrans-386
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过预测维修需求来进行预防性维护，这基于实际使用特征，从而减少定期维护的持续时间并改善整体维护。
- en: Automatically adjusting settings to improve energy consumption and to improve
    the quality of the service
  id: totrans-387
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动调整设置以改善能源消耗并提升服务质量。
- en: Insights gained from devices that can improve the behaviors of all the connected
    devices.
  id: totrans-388
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从设备中获得的洞察可以改善所有连接设备的行为。
- en: Improvement to products and services over time, based on customers' unique needs
    and actions.
  id: totrans-389
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于客户独特需求和行为，产品和服务随着时间的推移不断改进。
- en: Consumer IoT; constant feedback on devices wearable devices can help improve
    their performance such as battery life span, for example, smartphones, watches,
    fridges, and cars.
  id: totrans-390
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 消费者物联网；可穿戴设备的持续反馈可以帮助提升其性能，比如电池寿命，例如智能手机、手表、冰箱和汽车。
- en: Industrial IoT; consumer, and industrial IoT drive value through the feedback
    loop. Businesses can thus ensure a reliable, compelling, and profitable offering
    that requires the operator and manufacturer have intimate knowledge of device
    performance based on metrics; for example, embedded microprocessors in your thermostat,
    sprinkler systems, and so on.
  id: totrans-391
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工业物联网；消费品和工业物联网通过反馈回路驱动价值。企业因此能够确保提供一个可靠、引人注目且有利可图的产品，这要求操作员和制造商基于指标深入了解设备性能；例如，你的恒温器、喷洒系统等中的嵌入式微处理器。
- en: Vital to the business value chain is listening to the feedback from customers,
    systems, and devices. DevOps agility helps smart organizations address IoT software
    challenges.
  id: totrans-392
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 听取来自客户、系统和设备的反馈对业务价值链至关重要。DevOps的敏捷性帮助智能组织解决物联网软件挑战。
- en: IoT is more than hardware and connectivity. It needs software to be able to
    develop and update it quickly while ensuring its performance securely and efficiently.
    Continuous delivery and continuous deployment are only feasible through automation
    on a wider scale. Mixing agile practices into DevOps accelerates development cycles
    with incremental builds, and frequent releases of small batches of code makes
    for faster and safer releases.
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 物联网（IoT）不仅仅是硬件和连接性。它需要软件来快速开发和更新，同时确保其性能安全高效。持续交付和持续部署只有通过大规模的自动化才能实现。将敏捷实践融入DevOps加速了开发周期，通过增量构建和频繁发布小批量代码，使发布过程更加快速和安全。
- en: Security by design
  id: totrans-394
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安全设计
- en: The new feedback mechanism comes at a cost in terms of security; connected products,
    and systems now expose additional risk from hackers and malware. Safety-critical
    systems are to be developed with *Secure by design* methodology. For example,
    in mobile devices, **trusted platform modules** (**TPMs**) provide a restrictive
    area within the device to handle things, such as encryption, certificates, and
    keys. This impacts battery power, considered a non-functional requirement in DevOps
    parlance. Security is not siloed; it's part of the development cycle, in the similar
    way that product, quality, and performance are in-built. Addressing these significant
    concerns means organizations that use modern development practices are well set
    up to cope with the challenges of IoT.
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 新的反馈机制在安全方面带来了成本；连接的产品和系统现在暴露出更多来自黑客和恶意软件的风险。安全关键系统需要采用*安全设计*方法进行开发。例如，在移动设备中，**受信任平台模块**（**TPM**）为设备内部提供了一个受限区域，用于处理加密、证书和密钥等事项。这对电池电量产生影响，被视为DevOps术语中的非功能性需求。安全不是孤立的，它是开发周期的一部分，就像产品、质量和性能是内置的一样。解决这些重要问题意味着采用现代开发实践的组织能够很好地应对物联网的挑战。
- en: DevOps adoption is more than science; it is an art for the digital transformation
    journey in the light of DevOps adoption to systems of big data, Cloud, microservices,
    data sciences, authentication security, and IoT.
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps的采用不仅仅是科学；它是一门艺术，在DevOps应用于大数据、云、微服务、数据科学、身份验证安全和物联网系统的数字化转型旅程中。
- en: Summary
  id: totrans-397
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we learned about the digital transformation journey with DevOps
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了数字化转型旅程与DevOps的结合。
- en: adoption for complex enterprise systems of big data migration, cloud migration,
    microservices migration, data science, authentication systems, and Internet of
    Things.
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 复杂企业系统的大数据迁移、云迁移、微服务迁移、数据科学、身份验证系统和物联网的采用。
