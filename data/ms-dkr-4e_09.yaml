- en: '*Chapter 9*'
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: '*第九章*'
- en: Portainer – A GUI for Docker
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Portainer – Docker 的图形用户界面
- en: In this chapter, we will take a look at Portainer. Portainer is a tool that
    allows you to manage Docker resources from a web interface.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍 Portainer。Portainer 是一款通过 web 界面管理 Docker 资源的工具。
- en: As Portainer itself is distributed in containers, it is simple to install and
    you can run it anywhere you can launch a container, making it the perfect interface
    for those who would prefer to not manage their containers using the command line
    as we have been doing in the previous chapters.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Portainer 本身是以容器形式分发的，因此它易于安装，你可以在任何可以启动容器的地方运行它，这使得它成为那些不希望像我们在前几章中那样通过命令行管理容器的用户的完美界面。
- en: 'In this chapter, we will be covering the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将覆盖以下主题：
- en: The road to Portainer
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通向 Portainer 的道路
- en: Getting Portainer up and running
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动 Portainer 并使其运行
- en: Using Portainer
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Portainer
- en: Portainer and Docker Swarm
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Portainer 和 Docker Swarm
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: As in previous chapters, we will continue to use our local Docker installations.
    Also, the screenshots in this chapter will be from my preferred operating system,
    macOS. Toward the end of the chapter, we will use Multipass to launch a local
    Docker Swarm cluster.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如同之前的章节一样，我们将继续使用本地安装的 Docker。此外，本章中的截图将来自我偏好的操作系统 macOS。接近本章结束时，我们将使用 Multipass
    启动一个本地 Docker Swarm 集群。
- en: As before, the Docker commands we will be running will work on all three of
    the operating systems we have installed Docker on so far, however, some of the
    supporting commands, which will be few and far between, may only apply to macOS
    and Linux-based operating systems.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 与之前一样，我们将执行的 Docker 命令将在我们安装 Docker 的所有三种操作系统上有效，然而，一些支持命令，虽然很少见，可能仅适用于 macOS
    和 Linux 系统。
- en: 'Check out the following video to see the Code in Action: [https://bit.ly/3jR2HBa](https://bit.ly/3jR2HBa)'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 查看以下视频，了解代码的实际应用：[https://bit.ly/3jR2HBa](https://bit.ly/3jR2HBa)
- en: The road to Portainer
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通向 Portainer 的道路
- en: Before we roll up our sleeves and dive into installing and using Portainer,
    we should discuss the background of the project. The first edition of this book
    covered *Docker UI.* *Docker UI* was written by *Michael Crosby*, who handed the
    project over to *Kevan Ahlquist* after about a year of development. It was at
    this stage, due to trademark concerns, that the project was renamed UI for Docker.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始动手安装和使用 Portainer 之前，应该先讨论一下项目的背景。本书的第一版介绍了*Docker UI*。*Docker UI* 由 *Michael
    Crosby* 编写，经过大约一年的开发后，将项目交给了 *Kevan Ahlquist*。正是在这个阶段，由于商标问题，项目更名为 UI for Docker。
- en: The development of UI for Docker continued up until the point Docker started
    to accelerate the introduction of features such as Swarm mode into the core Docker
    Engine. It was around this time that the UI for Docker project was forked into
    the project that would become Portainer, which had its first major release in
    June 2016\. Since their first public release, the team behind Portainer estimate
    the majority of the code has already been updated or rewritten, and by mid-2017,
    new features were added, such as role-based controls and Docker Compose support.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: UI for Docker 的开发一直持续到 Docker 开始加速引入 Swarm 模式等功能到 Docker 核心引擎中。大约在这个时候，UI for
    Docker 项目被分支出来，成为了后来 Portainer 项目的雏形，并于 2016 年 6 月发布了第一次重大版本。从首次公开发布以来，Portainer
    团队估计大部分代码已经更新或重写，到 2017 年中期，新增了角色权限控制和 Docker Compose 支持等新特性。
- en: In December 2016, a notice was committed to the UI for Docker GitHub repository
    stating that the project was deprecated and that Portainer should be used. Since
    its release, it has been downloaded over 1.3 billion times.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 2016 年 12 月，一条通知被提交到 UI for Docker 的 GitHub 仓库，声明该项目已不再维护，并建议使用 Portainer。自发布以来，Portainer
    已被下载超过 13 亿次。
- en: Now we know a little about the background of Portainer, let's look at the steps
    needed to get it launched and configured.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了 Portainer 的一些背景信息，接下来让我们看看启动和配置它所需的步骤。
- en: Getting Portainer up and running
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启动 Portainer 并使其运行
- en: We are first going to be looking at using Portainer to manage a single Docker
    instance running locally. I am running Docker for Mac so I will be using that,
    but these instructions should also work with other Docker installations.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先查看如何使用 Portainer 来管理一个本地运行的单个 Docker 实例。我正在运行 Docker for Mac，因此将使用它，但这些指令同样适用于其他
    Docker 安装。
- en: 'First of all, to grab the container image from Docker Hub, we just need to
    run the following commands:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，为了从 Docker Hub 获取容器镜像，我们只需运行以下命令：
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'As you may see from the output if you are following along when we run the `docker
    image ls` command, the Portainer image is only 78.6 MB. To launch Portainer, you
    simply have to run the following command if you are running macOS or Linux:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在跟着做，运行 `docker image ls` 命令时，你可以看到 Portainer 镜像只有 78.6 MB。要启动 Portainer，只需在
    macOS 或 Linux 上运行以下命令：
- en: '[PRE1]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Windows users will have to run the following:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Windows 用户需要运行以下命令：
- en: '[PRE2]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: As you can see from the command we have just run, we are mounting the socket
    file for Docker Engine on our Docker host machine. Doing this will allow Portainer
    full, unrestricted access to Docker Engine on our host machine. It needs this
    so it can manage Docker on the host; however, it does mean that your Portainer
    container has full access to your host machine, so be careful in how you give
    access to it and also when publicly exposing Portainer on remote hosts.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们刚才运行的命令所示，我们正在将 Docker 主机上的 Docker 引擎套接字文件挂载到 Portainer。这样做将允许 Portainer
    完全、无任何限制地访问 Docker 引擎。Portainer 需要这样做，以便管理主机上的 Docker；但是，这也意味着你的 Portainer 容器对主机具有完全访问权限，因此在给它访问权限时要小心，尤其是在将
    Portainer 公共暴露到远程主机时。
- en: 'The following screenshot shows this being executed on macOS:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了在 macOS 上执行的情况：
- en: '![Figure 9.1 – Downloading and launching the Portainer container'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 9.1 – 下载并启动 Portainer 容器'
- en: '](img/Figure_9.01_B15659.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_9.01_B15659.jpg)'
- en: Figure 9.1 – Downloading and launching the Portainer container
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.1 – 下载并启动 Portainer 容器
- en: For the most basic type of installation, that is all we need to run. There are
    a few more steps to complete the installation; they are all performed in the browser.
    To complete them, go to [http://localhost:9000/](http://localhost:9000/). The
    first screen you will be greeted by asks you to set a password for the admin user.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 对于最基本的安装类型，以上就是我们需要运行的命令。完成安装还需要几个步骤，这些步骤都在浏览器中完成。要完成这些步骤，请访问 [http://localhost:9000/](http://localhost:9000/)。你将首先看到一个屏幕，要求你为管理员用户设置密码。
- en: 'Once you have set the password, you will be taken to a login page: enter the
    username admin and the password you just configured. Once logged in, you will
    be asked about the Docker instance you wish to manage.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 设置完密码后，你将进入登录页面：输入用户名 admin 和你刚刚配置的密码。登录后，系统会询问你希望管理的 Docker 实例。
- en: 'There are four options:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 有四个选项：
- en: Manage the Docker instance where Portainer is running
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理 Portainer 运行所在的 Docker 实例
- en: Manage a remote Docker instance
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理远程 Docker 实例
- en: Connect to a Portainer Agent
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接到 Portainer 代理
- en: Connect to Microsoft **Azure Container Instances** (**ACI**)
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接到 Microsoft **Azure 容器实例**（**ACI**）
- en: 'For the moment, we want to manage the instance where Portainer is running,
    which is the **Local** option, rather than the default **Remote** one:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，我们想要管理 Portainer 运行的实例，即 **Local** 选项，而不是默认的 **Remote** 选项：
- en: '![Figure 9.2 – Choosing which environment you want to manage with Portainer'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 9.2 – 选择你希望用 Portainer 管理的环境'
- en: '](img/Figure_9.02_B15659.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_9.02_B15659.jpg)'
- en: Figure 9.2 – Choosing which environment you want to manage with Portainer
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.2 – 选择你希望用 Portainer 管理的环境
- en: As we have already taken mounting the Docker socket file into account when launching
    our Portainer container, we can click on **Connect** to complete our installation.
    This will take us straight into Portainer itself, showing us the dashboard. With
    Portainer launched and configured, we can now look at some of the features.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们在启动 Portainer 容器时已经考虑了挂载 Docker 套接字文件，因此我们可以点击 **Connect** 来完成安装。这样我们将直接进入
    Portainer，看到仪表盘。Portainer 启动并配置完毕后，我们现在可以看看一些功能。
- en: Using Portainer
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Portainer
- en: 'Now that we have Portainer running and configured to communicate with our Docker
    installation, we can start to work through the features listed in the left-hand
    side menu, starting at the top with the Dashboard, which is also the default landing
    page of your Portainer installation, as you can see from the following screenshot:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，Portainer 已经启动并配置为与我们的 Docker 安装进行通信，我们可以开始浏览左侧菜单中列出的功能，从顶部的仪表盘开始，仪表盘也是 Portainer
    安装的默认登录页面，如下图所示：
- en: '![Figure 9.3 – Viewing the default page'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 9.3 – 查看默认页面'
- en: '](img/Figure_9.03_B15659.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_9.03_B15659.jpg)'
- en: Figure 9.3 – Viewing the default page
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.3 – 查看默认页面
- en: You are first taken to the list of endpoints. As we only have our local installation,
    click on that and then we can start exploring.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你会进入端点列表。由于我们只有本地安装，点击它，然后就可以开始探索了。
- en: The dashboard
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 仪表盘
- en: 'As you can see from the following screenshot, the dashboard gives us an overview
    of the current state of the Docker instance that Portainer is configured to communicate
    with:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 从以下截图可以看到，仪表板给出了Portainer配置与之通信的Docker实例的当前状态概览：
- en: '![Figure 9.4 – Getting an overview'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '![图9.4 – 获取概览'
- en: '](img/Figure_9.04_B15659.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_9.04_B15659.jpg)'
- en: Figure 9.4 – Getting an overview
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.4 – 获取概览
- en: 'In my case, this shows how many containers I have running, which at the moment
    is just the already running Portainer container, as well as the number of images
    I have downloaded. We can also see the number of **Volumes** and **Networks**
    available on the Docker instance. It will also show the number of running **Stacks**:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 就我而言，这显示了我运行的容器数量，目前只有已经运行的Portainer容器，以及我下载的镜像数量。我们还可以看到Docker实例中可用的**卷**和**网络**数量。它还会显示正在运行的**堆栈**数量：
- en: It also shows basic information on the Docker instance itself; as you can see,
    the Docker instance is running Moby Linux, and has 6 CPUs and 2.1 GB of RAM. This
    is the default configuration for Docker for Mac.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 它还显示了Docker实例本身的基本信息；正如你所看到的，Docker实例正在运行Moby Linux，拥有6个CPU和2.1GB的RAM。这是Docker
    for Mac的默认配置。
- en: The dashboard will adapt to the environment you have Portainer running in, so
    we will revisit it when we look at attaching Portainer to a Docker Swarm cluster.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 仪表板将根据你运行Portainer的环境进行自适应调整，因此我们将在将Portainer附加到Docker Swarm集群时重新审视它。
- en: Application templates
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 应用模板
- en: 'Next up in the left-hand menu, we have **App Templates**. This section is probably
    the only feature not to be a direct feature available in the core Docker Engine;
    it is instead a way of launching common applications using containers downloaded
    from Docker Hub:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，在左侧菜单中，我们有**应用模板**。这一部分可能是唯一一个不直接包含在核心Docker引擎中的功能；它实际上是通过使用从Docker Hub下载的容器启动常见应用程序的方式：
- en: '![Figure 9.5 – Exploring the templates'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '![图9.5 – 探索模板'
- en: '](img/Figure_9.05_B15659.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_9.05_B15659.jpg)'
- en: Figure 9.5 – Exploring the templates
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.5 – 探索模板
- en: 'There are around 25 templates that ship with Portainer by default. The templates
    are defined in JSON format. For example, the NGINX template looks like the following:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Portainer附带大约25个模板。模板是以JSON格式定义的。例如，NGINX模板看起来如下所示：
- en: '[PRE3]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'There are more options you can add, for example, the MariaDB template:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以添加更多的选项，例如MariaDB模板：
- en: '[PRE4]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: As you can see, the templates look similar to a Docker Compose file; however,
    this format is only used by Portainer. For the most part, the options are pretty
    self-explanatory, but we should touch upon the **Name** and **Label** options.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，模板看起来类似于Docker Compose文件；然而，这种格式仅由Portainer使用。大多数选项都非常直观，但我们应该讲一下**名称**和**标签**选项。
- en: 'For containers that typically require options defined by passing custom values
    via environment variables, the **Name** and **Label** options allow you to present
    the user with custom form fields that need to be completed before the container
    is launched, as demonstrated by the following screenshot:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 对于通常需要通过环境变量传递自定义值来定义选项的容器，**名称**和**标签**选项允许你为用户提供自定义表单字段，在容器启动之前需要填写这些字段，如以下截图所示：
- en: '![Figure 9.6 – Launching MariaDB using the template'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '![图9.6 – 使用模板启动MariaDB'
- en: '](img/Figure_9.06_B15659.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_9.06_B15659.jpg)'
- en: Figure 9.6 – Launching MariaDB using the template
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.6 – 使用模板启动MariaDB
- en: 'As you can see, we have a field where we can enter the root password we would
    like to use for our MariaDB container. Filling this in will take that value and
    pass it as an environment variable, building the following command to launch the
    container:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，我们有一个字段，可以在其中输入希望用于MariaDB容器的root密码。填写此字段后，系统会将该值作为环境变量传递，构建以下命令以启动容器：
- en: '[PRE5]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: For more information on app templates, I recommend reviewing the documentation
    – a link to this can be found in the *Further reading* section of this chapter.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 如果想了解更多关于应用模板的信息，我建议查看文档——链接可以在本章的*进一步阅读*部分找到。
- en: Containers
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 容器
- en: 'The next thing we are going to look at in the left-hand menu is **Containers**.
    This is where you launch and interact with the containers running on your Docker
    instance. Clicking on the **Containers** menu entry will bring up a list of all
    of the containers, both running and stopped, on your Docker instance:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 我们接下来要查看的左侧菜单中的内容是**容器**。这是启动和与Docker实例上运行的容器交互的地方。点击**容器**菜单项，将会显示Docker实例上所有容器的列表，包括正在运行和已停止的容器：
- en: '![Figure 9.7 – Listing the containers'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 9.7 – 列出容器'
- en: '](img/Figure_9.07_B15659.jpg)'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_9.07_B15659.jpg)'
- en: Figure 9.7 – Listing the containers
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.7 – 列出容器
- en: As you can see, I currently have only a single container running, and that just
    happens to be the Portainer one. Rather than interacting with that, let's click
    the **+ Add container** button to launch a container running the cluster application
    we used in previous chapters.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，我目前只运行了一个容器，而这个容器恰好是 Portainer 容器。我们不打算与它互动，而是点击**+ 添加容器**按钮，启动一个运行我们在前几章中使用的集群应用的容器。
- en: 'There are several options on the **Create container** page; these should be
    filled in as follows:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '**创建容器**页面有多个选项，这些选项应按照以下方式填写：'
- en: '`cluster`'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cluster`'
- en: '`russmckendrick/cluster`'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`russmckendrick/cluster`'
- en: '**Always pull the image**: On'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**始终拉取镜像**：开'
- en: '**Publish all exposed network ports to random host ports**: On'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**将所有暴露的网络端口发布到随机的主机端口**：开'
- en: 'Finally, add a port mapping from port 8080 on the host to port 80 on the container
    by clicking on **+ publish a new network port**. Your completed form should look
    something like the following screenshot:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，通过点击**+ 发布新的网络端口**，将主机的8080端口映射到容器的80端口。你填写的表单应该类似于以下截图：
- en: '![Figure 9.8 – Launching a container'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 9.8 – 启动一个容器'
- en: '](img/Figure_9.08_B15659.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_9.08_B15659.jpg)'
- en: Figure 9.8 – Launching a container
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.8 – 启动一个容器
- en: 'Once that''s done, click on **Deploy the container**, and after a few seconds,
    the list of running containers will be returned, where you should see your newly
    launched container:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，点击**部署容器**，几秒钟后，正在运行的容器列表将返回，你应该能看到你新启动的容器：
- en: '![Figure 9.9 – Listing the containers'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 9.9 – 列出容器'
- en: '](img/Figure_9.09_B15659.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_9.09_B15659.jpg)'
- en: Figure 9.9 – Listing the containers
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.9 – 列出容器
- en: 'Using the tick box on the left of each container in the list will enable the
    buttons at the top, where you can control the status of your containers. Make
    sure not to **Kill** or **Remove** the Portainer container. Clicking on the name
    of the container in our case cluster will bring up more information on the container
    itself:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在列表中每个容器左侧的勾选框可以启用顶部的按钮，你可以通过这些按钮控制容器的状态。请确保不要**Kill**或**Remove** Portainer
    容器。点击我们所使用的集群容器名称，将显示更多关于容器本身的信息：
- en: '![Figure 9.10 – Drilling down into our container'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 9.10 – 深入查看我们的容器'
- en: '](img/Figure_9.10_B15659.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_9.10_B15659.jpg)'
- en: Figure 9.10 – Drilling down into our container
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.10 – 深入查看我们的容器
- en: 'As you can see, the information about the container is the same information
    you would get if you were to run this command:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，容器的信息与你运行以下命令所得到的信息相同：
- en: '[PRE6]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: You can see the full output of this command by clicking on **Inspect**. You
    will also notice that there are buttons for **Stats**, **Logs**, **Console**,
    and **Attach**, which we will be discussing next.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过点击**Inspect**来查看该命令的完整输出。你还会注意到，有**Stats**、**Logs**、**Console**和**Attach**按钮，我们接下来将讨论这些按钮。
- en: Stats
  id: totrans-100
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Stats
- en: 'The **Stats** page shows the CPU, memory, and network utilization, as well
    as a list of the processes for the container you are inspecting:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '**Stats** 页面显示了 CPU、内存和网络利用率，以及正在检查的容器的进程列表：'
- en: '![Figure 9.11 – Viewing the container stats'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 9.11 – 查看容器的统计信息'
- en: '](img/Figure_9.11_B15659.jpg)'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_9.11_B15659.jpg)'
- en: Figure 9.11 – Viewing the container stats
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.11 – 查看容器的统计信息
- en: 'The graphs will automatically refresh if you leave the page open, and refreshing
    the page will zero the graphs and start afresh. This is because Portainer is receiving
    this information from the Docker API using the following command:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你保持页面打开，图表会自动刷新，而刷新页面会将图表清零并重新开始。这是因为 Portainer 使用以下命令从 Docker API 获取这些信息：
- en: '[PRE7]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Each time the page is refreshed, the command is started from scratch as Portainer
    currently does not poll Docker in the background to keep a record of statistics
    for each of the running containers.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 每次刷新页面时，命令都会从头开始执行，因为 Portainer 当前不会在后台轮询 Docker 来记录每个正在运行的容器的统计信息。
- en: Logs
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 日志
- en: 'Next up, we have the **Logs** page. This shows you the results of running the
    following command:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是**Logs**页面。这里显示了运行以下命令的结果：
- en: '[PRE8]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'It displays both the STDOUT and STDERR logs:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 它显示了 STDOUT 和 STDERR 日志：
- en: '![Figure 9.12 – Viewing the container logs'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 9.12 – 查看容器日志'
- en: '](img/Figure_9.12_B15659.jpg)'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_9.12_B15659.jpg)'
- en: Figure 9.12 – Viewing the container logs
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.12 – 查看容器日志
- en: 'You also have the option of adding timestamps to the output; this is the equivalent
    of running the following:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以选择向输出中添加时间戳；这相当于运行以下命令：
- en: '[PRE9]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: As we have previously discussed, remember that the timestamps may be different
    depending on your host machine's time zone settings.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们之前所讨论的，请记住，根据主机的时区设置，时间戳可能会有所不同。
- en: Console and Attach
  id: totrans-118
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 控制台和附加
- en: 'Next up, we have `/bin/bash , bin/sh, or /bin/ash`, and also which user to
    connect as – root is the default. While the cluster image has both shells installed,
    I choose to use `/bin/bash`:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们有`/bin/bash`、`/bin/sh`或`/bin/ash`，以及选择以哪个用户进行连接——root是默认值。虽然集群镜像中已安装了这两种shell，我选择使用`/bin/bash`：
- en: '![Figure 9.13 – Opening a session to the container'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '![图9.13 – 打开与容器的会话](img/Figure_9.13_B15659.jpg)'
- en: '](img/Figure_9.13_B15659.jpg)'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_9.13_B15659.jpg)'
- en: Figure 9.13 – Opening a session to the container
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.13 – 打开与容器的会话
- en: 'This is the equivalent of running the following command to gain access to your
    container:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 这相当于运行以下命令来访问您的容器：
- en: '[PRE10]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: As you can see from the screenshot, the bash process has a PID of 15\. This
    process was created by the `docker container exec` command, and that will be the
    only process that is terminated once you disconnect from your shell session.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 如您从截图中可以看到，bash进程的PID是15。该进程是由`docker container exec`命令创建的，当您断开与shell会话的连接时，它将是唯一一个被终止的进程。
- en: If we had launched our container with the `TTY` flag, we could have also used
    the `TTY` of the container rather than spawning a shell to attach to, as we did
    when using **Console**, like the like when attaching on the command line your
    process will stop when disconnect.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们在启动容器时使用了`TTY`标志，我们也可以使用容器的`TTY`，而不是像使用**控制台**时那样生成一个shell进行连接，类似于在命令行上附加时，当断开连接时您的进程会停止。
- en: Images
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 镜像
- en: 'Next up in the left-hand menu is **Images**. From here, you can manage, download,
    and upload images:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 左侧菜单中的下一个选项是**镜像**。在这里，您可以管理、下载和上传镜像：
- en: '![Figure 9.14 – Managing your images'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '![图9.14 – 管理您的镜像](img/Figure_9.14_B15659.jpg)'
- en: '](img/Figure_9.14_B15659.jpg)'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_9.14_B15659.jpg)'
- en: Figure 9.14 – Managing your images
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.14 – 管理您的镜像
- en: 'At the top of the page, you have the option of pulling an image. For example,
    simply entering `amazonlinux` into the box and then clicking on **Pull the image**
    will download a copy of the Amazon Linux container image from Docker Hub. The
    command executed by Portainer would be this:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在页面顶部，您可以选择拉取一个镜像。例如，只需在框中输入`amazonlinux`，然后点击**拉取镜像**，就会从Docker Hub下载一份Amazon
    Linux容器镜像。Portainer执行的命令将是：
- en: '[PRE11]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'You can find more information about each image by clicking on the image ID;
    this will take you to a page that nicely renders the output of running this command:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过点击镜像ID来获取关于每个镜像的更多信息；这将带您进入一个页面，页面上会清晰地显示运行此命令的输出：
- en: '[PRE12]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Look at the following screenshot:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 请看以下截图：
- en: '![Figure 9.15 – Getting more information on your image'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '![图9.15 – 获取有关您的镜像的更多信息](img/Figure_9.15_B15659.jpg)'
- en: '](img/Figure_9.15_B15659.jpg)'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_9.15_B15659.jpg)'
- en: Figure 9.15 – Getting more information on your image
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.15 – 获取有关您的镜像的更多信息
- en: Not only do you get all of the information about the image, but you also get
    options to push a copy of the image to your chosen registry or, by default, Docker
    Hub. You also get a complete breakdown of each of the layers contained within
    the image, showing the command that was executed during the build and the size
    of each layer.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 您不仅可以获取关于镜像的所有信息，还可以选择将镜像的副本推送到您选择的注册表，或者默认情况下推送到Docker Hub。您还可以查看镜像中包含的每个层的详细信息，显示在构建过程中执行的命令和每个层的大小。
- en: The next two items in the menu allow you to manage networks and volumes; I am
    not going to go into too much detail here as there is not much to them.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 菜单中的下两个项目允许您管理网络和卷；由于它们并没有太多内容，我这里不打算详细介绍。
- en: Networks
  id: totrans-142
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 网络
- en: Here, you can quickly add a network using the default bridge driver. Clicking
    on **Advanced settings** will take you to a page with more options. These include
    using other drivers, defining the subnets, adding labels, and restricting external
    access to the network. As with other sections, you can also remove networks and
    inspect existing networks.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，您可以使用默认的bridge驱动程序快速添加一个网络。点击**高级设置**将带您到一个页面，其中有更多选项。这些选项包括使用其他驱动程序、定义子网、添加标签和限制对网络的外部访问。与其他部分一样，您还可以删除网络并检查现有的网络。
- en: Volumes
  id: totrans-144
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 卷
- en: There are not many options here other than adding or removing a volume. When
    adding a volume, you get a choice of drivers as well as being able to fill in
    options to pass to the driver, which allows the use of third-party driver plugins.
    Other than that, there is not much to see here, not even an inspect option.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 这里没有太多选项，除了添加或删除卷。当添加卷时，你可以选择驱动程序，并可以填写选项传递给驱动程序，这样就可以使用第三方驱动程序插件。除此之外，几乎没有什么可看的，甚至没有检查选项。
- en: Events
  id: totrans-146
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 事件
- en: 'The events page shows you all of the events from the last 24 hours; you also
    have an option of filtering the results, meaning you can quickly find the information
    you are after:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 事件页面显示了过去24小时内的所有事件；你还可以选择过滤结果，这意味着你可以快速找到你需要的信息：
- en: '![Figure 9.16 – Viewing Docker events'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '![图9.16 – 查看Docker事件'
- en: '](img/Figure_9.16_B15659.jpg)'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_9.16_B15659.jpg)'
- en: Figure 9.16 – Viewing Docker events
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.16 – 查看Docker事件
- en: 'This is the equivalent of running the following command:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 这相当于运行以下命令：
- en: '[PRE13]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: This leaves us with one more option to cover.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 这为我们提供了一个额外的选择需要覆盖。
- en: Host
  id: totrans-154
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 主机
- en: 'The final entry simply shows you the output of the following:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 最后的条目仅显示以下命令的输出：
- en: '[PRE14]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The following shows the output of the command:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 以下显示了命令的输出：
- en: '![Figure 9.17 – Viewing information on the Docker host'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '![图9.17 – 查看Docker主机的信息'
- en: '](img/Figure_9.17_B15659.jpg)'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_9.17_B15659.jpg)'
- en: Figure 9.17 – Viewing information on the Docker host
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.17 – 查看Docker主机的信息
- en: This can be useful if you are targeting multiple Docker instance endpoints and
    need information on the environment the endpoint is running on.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在针对多个Docker实例端点，并且需要了解端点运行的环境，这将非常有用。
- en: 'At this point, we are moving on to looking at Portainer running on Docker Swarm,
    so now would be a good time to remove the running containers and also the volume
    that was created when we first launched Portainer. You can remove the volume using
    the following:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 到这时，我们将开始查看在Docker Swarm上运行的Portainer，所以现在是时候删除正在运行的容器以及我们最初启动Portainer时创建的卷了。你可以使用以下命令删除该卷：
- en: '[PRE15]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Now we have cleaned up, let's look at launching a Docker Swarm cluster.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经清理完毕，接下来让我们来看一下如何启动一个Docker Swarm集群。
- en: Portainer and Docker Swarm
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Portainer与Docker Swarm
- en: In the previous section, we looked at how to use Portainer on a standalone Docker
    instance. Portainer also supports Docker Swarm clusters, and the options in the
    interface adapt to the clustered environment. We should look at spinning up a
    Swarm and then launching Portainer as a service and see what changes.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一节中，我们介绍了如何在独立的Docker实例上使用Portainer。Portainer也支持Docker Swarm集群，界面中的选项会根据集群环境进行调整。我们应该先启动一个Swarm，然后将Portainer作为服务启动，看看有什么变化。
- en: So let's start by launching a new Docker Swarm cluster.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 所以让我们从启动一个新的Docker Swarm集群开始。
- en: Creating the Swarm
  id: totrans-168
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建Swarm
- en: 'As in the Docker Swarm chapter, we are going to be creating the Swarm locally
    using Multipass; to do this, run the following commands to launch the three nodes:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 如同在Docker Swarm章节中，我们将使用Multipass在本地创建Swarm；为此，运行以下命令启动三个节点：
- en: '[PRE16]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Now install Docker:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 现在安装Docker：
- en: '[PRE17]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Once Docker is installed, initialize and create the cluster:`P=$(multipass info
    node1 | grep IPv4 | a`
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完Docker后，初始化并创建集群：`P=$(multipass info node1 | grep IPv4 | a`
- en: '[PRE18]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Make a note of the IP address of `node1` by running the following command:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 通过运行以下命令，记下`node1`的IP地址：
- en: '[PRE19]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Finally, log in to the Swarm manager node:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，登录到Swarm管理节点：
- en: '[PRE20]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: You should now be logged into the primary Swarm node and ready to progress.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在应该已登录到主Swarm节点，并准备继续。
- en: The Portainer service
  id: totrans-180
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Portainer服务
- en: 'Now that we have a Docker Swarm cluster, we can launch a Portainer stack by
    simply running the following:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了Docker Swarm集群，我们可以通过简单地运行以下命令启动Portainer堆栈：
- en: '[PRE21]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'This should give you something that looks like the following output:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该会给你如下所示的输出：
- en: '![Figure 9.18 – Launching the Portainer Stack on our Docker Swarm cluster'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '![图9.18 – 在我们的Docker Swarm集群上启动Portainer Stack'
- en: '](img/Figure_9.18_B15659.jpg)'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_9.18_B15659.jpg)'
- en: Figure 9.18 – Launching the Portainer Stack on our Docker Swarm cluster
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 图9.18 – 在我们的Docker Swarm集群上启动Portainer Stack
- en: Once the stack has been created, you should be able to go to the IP address
    of `node1` with `:9000` at the end in your browser; for example, I opened [http://192.168.64.9:9000](http://192.168.64.9:9000).
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦堆栈创建完成，你应该能够在浏览器中访问`node1`的IP地址，并在末尾加上`:9000`；例如，我打开了[http://192.168.64.9:9000](http://192.168.64.9:9000)。
- en: Swarm differences
  id: totrans-188
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Swarm的区别
- en: As already mentioned, there are a few changes to the Portainer interface when
    it is connected to a Docker Swarm cluster. In this section, we will cover them.
    If a part of the interface is not mentioned, then there is no difference between
    running Portainer in single-host mode or Docker Swarm mode. The first change we
    are going to look at is what changes when you first log in to the newly launched
    Portainer.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，当Portainer连接到Docker Swarm集群时，界面会有一些变化。在本节中，我们将介绍这些变化。如果界面的一部分没有提到，那么在单主机模式和Docker
    Swarm模式下运行Portainer是没有区别的。我们要看的第一个变化是，当您首次登录新启动的Portainer时会发生什么变化。
- en: Endpoints
  id: totrans-190
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 端点
- en: 'The first thing you will have to do when you log in is to select an endpoint.
    As you can see from the following screen, there is a single one called **primary**:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 登录后，您首先需要选择一个端点。正如您在下面的屏幕中看到的，只有一个名为**primary**的端点：
- en: '![Figure 9.19 – Viewing the endpoint'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 9.19 – 查看端点'
- en: '](img/Figure_9.19_B15659.jpg)'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_9.19_B15659.jpg)'
- en: Figure 9.19 – Viewing the endpoint
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.19 – 查看端点
- en: Clicking on the endpoint will take you to the dashboard. We will look at endpoints
    again at the end of the section.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 点击端点将带您进入仪表板。我们将在本节末尾再次查看端点。
- en: The dashboard and Swarm
  id: totrans-196
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 仪表板和Swarm
- en: 'One of the first changes you will notice is that the dashboard now displays
    some information on the Swarm cluster. As you can see in the following screen,
    there is a **Cluster information** section at the top:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 您会注意到的第一个变化是，仪表板现在显示了一些关于Swarm集群的信息。正如您在下面的屏幕中看到的，顶部有一个**集群信息**部分：
- en: '![Figure 9.20 – Getting a cluster overview'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 9.20 – 获取集群概览'
- en: '](img/Figure_9.20_B15659.jpg)'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_9.20_B15659.jpg)'
- en: Figure 9.20 – Getting a cluster overview
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.20 – 获取集群概览
- en: 'Clicking on **Go to cluster vizualizer** will take you to the Swarm page. This
    gives you a visual overview of the cluster, where the only running containers
    are currently the ones needed to provide and support the Portainer service:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**前往集群可视化工具**将带您进入Swarm页面。这为您提供了集群的可视化概览，目前唯一正在运行的容器是提供和支持Portainer服务所需的容器：
- en: '![Figure 9.21 – Visualizing the cluster'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 9.21 – 可视化集群'
- en: '](img/Figure_9.21_B15659.jpg)'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_9.21_B15659.jpg)'
- en: Figure 9.21 – Visualizing the cluster
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.21 – 可视化集群
- en: Stacks
  id: totrans-205
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 堆栈
- en: 'The one item we haven''t covered in the left-hand menu is **Stacks**. From
    here, you can launch stacks as we did when we looked at Docker Swarm. In fact,
    let''s take the Docker Compose file we used, which looks like the following:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还没有覆盖的左侧菜单项是**堆栈**。从这里，您可以启动堆栈，就像我们在查看Docker Swarm时所做的那样。事实上，让我们使用之前的Docker
    Compose文件，它看起来像这样：
- en: '[PRE22]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Click on the `MobyCounter`. Do not add any spaces or special characters to the
    name as this is used by Docker for. Then click on **Deploy the stack**.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 点击`MobyCounter`。不要在名称中添加任何空格或特殊字符，因为这是Docker使用的。然后点击**部署堆栈**。
- en: 'Once deployed, you will be able to click on **MobyCounter** and manage the
    stack:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 部署完成后，您可以点击**MobyCounter**并管理堆栈：
- en: '![Figure 9.22 – Launching a stack'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 9.22 – 启动堆栈'
- en: '](img/Figure_9.22_B15659.jpg)'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_9.22_B15659.jpg)'
- en: Figure 9.22 – Launching a stack
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.22 – 启动堆栈
- en: Stacks are a collection of services. Let's take a look at them next.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 堆栈是服务的集合。接下来，我们将一起查看它们。
- en: Services
  id: totrans-214
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 服务
- en: 'This page is where you can create and manage services; it should already be
    showing several services, including Portainer. So that we don''t cause any problems
    with the running Portainer container, we are going to create a new service. To
    do this, click on the **+ Add Service** button. On the page that loads, enter
    the following:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 此页面是您可以创建和管理服务的地方；它应该已经显示了多个服务，包括Portainer。为了避免与正在运行的Portainer容器发生冲突，我们将创建一个新服务。为此，请点击**+
    添加服务**按钮。在加载的页面上，输入以下内容：
- en: '`cluster`'
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cluster`'
- en: '`russmckendrick/cluster`'
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`russmckendrick/cluster`'
- en: '`Replicated`'
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Replicated`'
- en: '`1`'
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`1`'
- en: 'This time, we need to add a port mapping for port `7000` on the host to map
    to port `80` to the container, this is because some of the common ports we have
    been using previously are already taken on the hosts due to the services and stacks
    we have already launched:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 这一次，我们需要为主机上的端口`7000`添加端口映射，以映射到容器的端口`80`，这是因为由于我们之前已经启动的服务和堆栈，一些常用的端口已经在主机上被占用：
- en: '![Figure 9.23 – Launching a service'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 9.23 – 启动服务'
- en: '](img/Figure_9.23_B15659.jpg)'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_9.23_B15659.jpg)'
- en: Figure 9.23 – Launching a service
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.23 – 启动服务
- en: Once you have entered the information, click on the **Create the service** button.
    You will be taken back to the list of services, which should now contain the cluster
    service we just added. You may have noticed that in the **Scheduling mode** section,
    there is an option to scale. Click on it and increase the number of replicas to
    **6** for our **cluster** service.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 输入完信息后，点击**创建服务**按钮。你将被带回服务列表页面，列表中应该会显示我们刚刚添加的集群服务。你可能已经注意到，在**调度模式**部分，有一个可以进行扩展的选项。点击它，并将我们的**集群**服务的副本数增加到**6**。
- en: 'Clicking on **cluster** in the **Name** section takes us to an overview of
    the service. As you can see, there is a lot of information on the service:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**名称**部分中的**集群**，我们将看到服务的概述。正如你所见，关于服务有大量信息：
- en: '![Figure 9.24 – Viewing details on the service'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 9.24 – 查看服务详情'
- en: '](img/Figure_9.24_B15659.jpg)'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_9.24_B15659.jpg)'
- en: Figure 9.24 – Viewing details on the service
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.24 – 查看服务详情
- en: 'You can make a lot of changes to the service on the fly, including placement
    constraints, the restart policy, adding service labels, and more. Right at the
    bottom of the page is a list of the tasks associated with the service:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在运行时对服务进行很多更改，包括放置约束、重启策略、添加服务标签等等。在页面底部，有一个与服务相关的任务列表：
- en: '![Figure 9.25 – Viewing the tasks'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 9.25 – 查看任务'
- en: '](img/Figure_9.25_B15659.jpg)'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_9.25_B15659.jpg)'
- en: Figure 9.25 – Viewing the tasks
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.25 – 查看任务
- en: 'As you can see, we have six running tasks, two on each of our three nodes.
    Clicking on **Containers** in the left-hand menu may show something different
    than you expect:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，我们有六个正在运行的任务，每个节点上有两个任务。点击左侧菜单中的**容器**可能会显示与预期不同的内容：
- en: '![Figure 9.26 – Listing all of the containers'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 9.26 – 列出所有容器'
- en: '](img/Figure_9.26_B15659.jpg)'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_9.26_B15659.jpg)'
- en: Figure 9.26 – Listing all of the containers
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.26 – 列出所有容器
- en: You can see all of the containers that are running within the cluster, rather
    than just the ones on the node where we deployed Portainer. You may recall that
    when we looked at the cluster visualizer, there were Portainer Agent containers
    running on each of the nodes within the cluster that were launched as part of
    the stack. These are feeding information back, giving us an overall view of our
    cluster.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到集群中所有正在运行的容器，而不仅仅是我们部署 Portainer 的节点上的容器。你可能记得，当我们查看集群可视化工具时，集群内每个节点上都有
    Portainer Agent 容器，这些容器是作为堆栈的一部分启动的。它们会将信息反馈回来，为我们提供集群的整体视图。
- en: 'Going back to the cluster visualizer now shows us that there are a lot more
    containers running:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 返回集群可视化工具后，显示我们现在运行了更多的容器：
- en: '![Figure 9.27– Viewing the visualizer'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 9.27– 查看可视化工具'
- en: '](img/Figure_9.27_B15659.jpg)'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_9.27_B15659.jpg)'
- en: Figure 9.27– Viewing the visualizer
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.27– 查看可视化工具
- en: Let's take a look at what else has changed now we have moved to running Docker
    Swarm.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看迁移到运行 Docker Swarm 后，还有什么变化。
- en: App Templates
  id: totrans-243
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 应用模板
- en: 'Going to the **App Templates** page now shows stacks instead of containers:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 现在进入**应用模板**页面会显示堆栈，而不是容器：
- en: '![Figure 9.28 – Viewing the stack templates'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 9.28 – 查看堆栈模板'
- en: '](img/Figure_9.28_B15659.jpg)'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_9.28_B15659.jpg)'
- en: Figure 9.28 – Viewing the stack templates
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.28 – 查看堆栈模板
- en: 'As you can see, there are quite a few defaults listed, clicking on one, such
    as **Wordpress** will take you to a page where you simply have to enter a few
    details and then click on the **Deploy the stack** button. Once deployed, you
    should be able to then go to the **Stacks** page and view the port that has been
    assigned to the service:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，有许多默认选项，点击其中一个，比如**Wordpress**，将带你进入一个页面，你只需输入一些信息，然后点击**部署堆栈**按钮。部署后，你可以进入**堆栈**页面，查看已分配给服务的端口：
- en: '![Figure 9.29 – Launching Wordpress'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 9.29 – 启动 Wordpress'
- en: '](img/Figure_9.29_B15659.jpg)'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_9.29_B15659.jpg)'
- en: Figure 9.29 – Launching Wordpress
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.29 – 启动 Wordpress
- en: 'Once you know the port, entering the IP address of any of your nodes and the
    port will take you to the application, which, after following the installation
    instructions, looks like the following:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦知道端口，输入任何节点的 IP 地址和端口，你将进入应用程序，按照安装说明操作后，页面应显示如下：
- en: '![Figure 9.30 – WordPress up and running'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 9.30 – WordPress 启动并运行'
- en: '](img/Figure_9.30_B15659.jpg)'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_9.30_B15659.jpg)'
- en: Figure 9.30 – WordPress up and running
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 图 9.30 – WordPress 启动并运行
- en: These templates are hosted on GitHub and you can find a link in the *Further
    reading* section.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 这些模板托管在 GitHub 上，你可以在*进一步阅读*部分找到链接。
- en: Removing the cluster
  id: totrans-257
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 移除集群
- en: 'Once you have finished exploring Portainer on Docker Swarm, you can remove
    the cluster by running the following commands on your local machine:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你完成了对 Docker Swarm 上 Portainer 的探索，你可以通过在本地机器上运行以下命令来移除集群：
- en: '[PRE23]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: It is important to remove your running nodes on your local machine, because
    if you don't, they will continue to run and consume resources.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 在本地机器上移除正在运行的节点非常重要，因为如果不移除，它们将继续运行并消耗资源。
- en: Summary
  id: totrans-261
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: That concludes our deep dive with Portainer. As you can see, Portainer is very
    powerful, yet simple to use, and will only continue to grow and integrate more
    of the Docker ecosystem as features are released. With Portainer, you can do a
    lot of manipulation with not only your hosts but also the containers and services
    running on single or cluster hosts.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们对 Portainer 的深入探讨。如你所见，Portainer 非常强大，且易于使用，随着新特性发布，它将继续发展并整合更多 Docker
    生态系统的功能。使用 Portainer，你不仅可以操作主机，还能管理单机或集群主机上运行的容器和服务。
- en: In the next chapter, we are going to look at another container clustering solution
    supported by Docker called Kubernetes.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将介绍 Docker 支持的另一种容器集群解决方案——Kubernetes。
- en: Questions
  id: totrans-264
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: On a macOS or Linux machine, what is the path to mount the Docker socket file?
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 macOS 或 Linux 机器上，Docker 套接字文件的挂载路径是什么？
- en: What is the default port Portainer runs on?
  id: totrans-266
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Portainer 默认运行在哪个端口？
- en: 'True or false: You can use Docker Compose files as application templates.'
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对还是错：你可以将 Docker Compose 文件用作应用程序模板。
- en: 'True or false: The stats shown in Portainer are only real time, you can''t
    view historical data.'
  id: totrans-268
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对还是错：Portainer 显示的统计数据仅为实时数据，无法查看历史数据。
- en: Further reading
  id: totrans-269
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'You can find more information on Portainer here:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在这里找到更多关于 Portainer 的信息：
- en: 'Main website: [https://www.portainer.io](https://www.portainer.io)'
  id: totrans-271
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '官方网站: [https://www.portainer.io](https://www.portainer.io)'
- en: 'Portainer on GitHub: [https://github.com/portainer/](https://github.com/portainer/)'
  id: totrans-272
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'GitHub 上的 Portainer: [https://github.com/portainer/](https://github.com/portainer/)'
- en: 'Latest documentation: [https://portainer.readthedocs.io/en/latest/index.html](https://portainer.readthedocs.io/en/latest/index.html)'
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '最新文档: [https://portainer.readthedocs.io/en/latest/index.html](https://portainer.readthedocs.io/en/latest/index.html)'
- en: 'Template documentation: [https://portainer.readthedocs.io/en/latest/templates.html](https://portainer.readthedocs.io/en/latest/templates.html)'
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '模板文档: [https://portainer.readthedocs.io/en/latest/templates.html](https://portainer.readthedocs.io/en/latest/templates.html)'
- en: 'Templates: [https://github.com/portainer/templates](https://github.com/portainer/templates)'
  id: totrans-275
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '模板: [https://github.com/portainer/templates](https://github.com/portainer/templates)'
