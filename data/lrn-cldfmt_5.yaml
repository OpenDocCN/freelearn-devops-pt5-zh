- en: Building Lambda Functions Using AWS CloudFormation
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 AWS CloudFormation 构建 Lambda 函数
- en: A serverless solution is a problem-solving technique to address issues regarding
    dynamic infrastructure. In this chapter, we'll explore how to use AWS Lambda to
    apply a serverless solution. We will build an AWS Lambda through the use of AWS
    CloudFormation.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 无服务器解决方案是一种解决动态基础设施问题的技术手段。在本章中，我们将探讨如何使用 AWS Lambda 实现无服务器解决方案。我们将通过 AWS CloudFormation
    构建 AWS Lambda。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Introducing AWS Lambda
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍 AWS Lambda
- en: Building AWS Lambda
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建 AWS Lambda
- en: Creating a CloudFormation template for AWS Lambda functions
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为 AWS Lambda 函数创建 CloudFormation 模板
- en: Deploying AWS Lambda through CloudFormation
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过 CloudFormation 部署 AWS Lambda
- en: Deploying AWS Lambda and DynamoDB with CloudFormation
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过 CloudFormation 部署 AWS Lambda 和 DynamoDB
- en: Deploying AWS Lambda to specific regions through CloudFormation
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过 CloudFormation 将 AWS Lambda 部署到特定区域
- en: Introducing AWS Lambda
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍 AWS Lambda
- en: AWS Lambda is an AWS service that provides a serverless compute service. We
    can build functions with various programming languages, then AWS Lambda will take
    care of our infrastructure and its scaling.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: AWS Lambda 是一种 AWS 服务，提供无服务器计算服务。我们可以使用多种编程语言构建函数，然后 AWS Lambda 将负责我们的基础设施及其扩展。
- en: 'We can access other AWS resources from Lambda function. In the following diagram,
    you can see how a Lambda function accesses AWS resources. Client apps, such as
    on browser, mobile, or CLI, can invoke our Lambda functions:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过 Lambda 函数访问其他 AWS 资源。在下图中，您可以看到 Lambda 函数如何访问 AWS 资源。客户端应用，如浏览器、移动设备或
    CLI，可以调用我们的 Lambda 函数：
- en: '![](img/00108.jpeg)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00108.jpeg)'
- en: 'Figure 5.1: Lambda functions in an internet environment'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.1：互联网环境中的 Lambda 函数
- en: In this chapter, we'll explore Lambda functions with CloudFormation. We'll also
    combine other AWS resources inside the Lambda function.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将使用 CloudFormation 探讨 Lambda 函数。我们还将结合其他 AWS 资源，嵌入 Lambda 函数中。
- en: Next, we'll build a simple Lambda function in order to understand how the Lambda
    function works.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将构建一个简单的 Lambda 函数，以便理解 Lambda 函数如何工作。
- en: Building AWS Lambda
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建 AWS Lambda
- en: Before we build AWS Lambda through CloudFormation, we'll develop the AWS Lambda
    application. The objective is to understand AWS Lambda development, especially
    for readers with no experience of AWS Lambda.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们通过 CloudFormation 构建 AWS Lambda 之前，我们将首先开发 AWS Lambda 应用。目标是让没有 AWS Lambda
    经验的读者了解 AWS Lambda 开发。
- en: AWS Lambda works in various AWS regions. Visit the AWS Lambda Management Console
    at [https://console.aws.amazon.com/lambda/](https://console.aws.amazon.com/lambda/).
     A sample of the AWS Lambda Management Console window can be seen in *Figure 5.2*.
    Then, select your region for AWS Lambda development.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: AWS Lambda 可在多个 AWS 区域中运行。访问 AWS Lambda 管理控制台：[https://console.aws.amazon.com/lambda/](https://console.aws.amazon.com/lambda/)。可以在*图
    5.2*中看到 AWS Lambda 管理控制台窗口的示例。然后，选择您用于 AWS Lambda 开发的区域。
- en: 'For testing, we build a simple AWS Lambda application. We use Node.js for the
    Lambda function. To implement the AWS Lambda function, we do the following three
    tasks:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在测试阶段，我们构建一个简单的 AWS Lambda 应用。我们使用 Node.js 来实现 Lambda 函数。为了实现 AWS Lambda 函数，我们将完成以下三个任务：
- en: Creating the IAM role
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建 IAM 角色
- en: Developing the AWS Lambda function
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 开发 AWS Lambda 函数
- en: Testing AWS Lambda
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试 AWS Lambda
- en: 'These steps will be followed in the next sections. The AWS Lambda Management
    Console is shown as follows:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的章节将遵循这些步骤。AWS Lambda 管理控制台如下所示：
- en: '![](img/00109.jpeg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00109.jpeg)'
- en: Figure 5.2: AWS Lambda Management Console
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.2：AWS Lambda 管理控制台
- en: Creating the IAM role
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建 IAM 角色
- en: Amazon AWS applies security policies on AWS resources. To access the AWS Lambda
    resources, we should apply a policy in order to create and execute AWS Lambda.
    In this section, we create a role on IAM roles section.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊 AWS 对 AWS 资源应用安全策略。为了访问 AWS Lambda 资源，我们需要应用一个策略，以便创建和执行 AWS Lambda。在这一节中，我们将在
    IAM 角色部分创建角色。
- en: 'To create an IAM role, we can follow these steps:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建 IAM 角色，可以按照以下步骤操作：
- en: Open a browser and navigate to [https://console.aws.amazon.com/iam/](https://console.aws.amazon.com/iam/).
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开浏览器并访问 [https://console.aws.amazon.com/iam/](https://console.aws.amazon.com/iam/)。
- en: 'Open a list of IAM roles by clicking on the Roles menu; you should see the
    following screenshot:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“角色”菜单打开 IAM 角色列表；你应该会看到以下截图：
- en: '![](img/00110.jpeg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00110.jpeg)'
- en: Figure 5.3: AWS IAM Management Console
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.3：AWS IAM 管理控制台
- en: To create a role, click on the Create role button to get the screen shown in
    the *Figure 5.4.*
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要创建角色，点击“创建角色”按钮，进入*图 5.4*所示的界面。
- en: 'Select the Lambda option for the AWS service and then click on the Next: Permissions
    button:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '选择 AWS 服务中的 Lambda 选项，然后点击“下一步: 权限”按钮：'
- en: '![](img/00111.jpeg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00111.jpeg)'
- en: Figure 5.4: Selecting a trusted entity
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '图 5.4: 选择受信实体'
- en: After you click the button, you should get the screenshot shown in *Figure 5.5. *You
    will be asked to select permission policies.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击按钮后，您应该会看到 *图 5.5* 中显示的截图。系统会提示您选择权限策略。
- en: 'Select the AWSLambdaFullAccess policy for full access to AWS Lambda resources
    and then click on the Next: Review button:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '选择 `AWSLambdaFullAccess` 策略以便完全访问 AWS Lambda 资源，然后点击“下一步: 审查”按钮：'
- en: '![](img/00112.jpeg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00112.jpeg)'
- en: Figure 5.5: Attaching permission policies on the IAM role
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '图 5.5: 为 IAM 角色附加权限策略'
- en: You get a review screen, which is shown in *Figure 5.6. *Review your input.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您会看到一个审查屏幕，如 *图 5.6* 所示。请检查您的输入。
- en: 'Fill in your new role, for instance, `my-simple-lambda-role`. Once done, click
    on the Create role button to create the IAM role:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写您的新角色名称，例如`my-simple-lambda-role`。完成后，点击“创建角色”按钮以创建 IAM 角色：
- en: '![](img/00113.jpeg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00113.jpeg)'
- en: Figure 5.6: Reviewing the created role
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '图 5.6: 审查已创建的角色'
- en: 'Once done, you can check your new role on IAM Roles. For instance, here is
    my IAM role, `my-simple-lambda-role`:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，您可以在 IAM 角色中查看您的新角色。例如，以下是我的 IAM 角色，`my-simple-lambda-role`：
- en: '![](img/00114.jpeg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00114.jpeg)'
- en: Figure 5.7: A list of IAM roles on IAM Management Console
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '图 5.7: IAM 管理控制台中的 IAM 角色列表'
- en: You have successfully created an IAM role. In the next section, you will develop
    AWS Lambda.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 您已成功创建一个 IAM 角色。在下一部分中，您将开发 AWS Lambda。
- en: Developing AWS Lambda using Web Management Console (WMC)
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Web 管理控制台 (WMC) 开发 AWS Lambda
- en: We have created an IAM role that will be applied on AWS Lambda. In this section,
    we'll develop a simple AWS Lambda function. We use the Node.js application. We
    receive a message input, `msg`, and then send it to the caller.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已创建一个将应用于 AWS Lambda 的 IAM 角色。在本节中，我们将开发一个简单的 AWS Lambda 函数。我们使用 Node.js 应用程序。我们接收一个消息输入
    `msg`，然后将其发送给调用者。
- en: 'Execute the following steps to develop the AWS Lambda function:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤来开发 AWS Lambda 函数：
- en: Open your browser and navigate to the AWS Lambda Management Console at [https://console.aws.amazon.com/lambda/](https://console.aws.amazon.com/lambda/).
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开浏览器，导航至 AWS Lambda 管理控制台：[https://console.aws.amazon.com/lambda/](https://console.aws.amazon.com/lambda/)。
- en: 'Click on the Create function button to create a new Lambda function. Once done,
    you will get the following screen:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“创建函数”按钮来创建一个新的 Lambda 函数。完成后，您将看到以下屏幕：
- en: '![](img/00115.jpeg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00115.jpeg)'
- en: 'Figure 5.8: Creating AWS Lambda'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '图 5.8: 创建 AWS Lambda'
- en: Fill the the Lambda function name, for instance, `my-simple-lambda`.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写 Lambda 函数的名称，例如`my-simple-lambda`。
- en: Select Node.js from Runtime drop-down. In this demo, I use Node.js 6.10\. You
    can use the latest Node.js version.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从运行时下拉菜单中选择 Node.js。在此演示中，我使用的是 Node.js 6.10。您可以使用最新版本的 Node.js。
- en: In the Role drop-down, select the Choose an existing role option, then select
    the IAM role you created.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在角色下拉菜单中，选择“选择现有角色”选项，然后选择您创建的 IAM 角色。
- en: Once done, click on the Create function button to create your Lambda function.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，点击“创建函数”按钮以创建您的 Lambda 函数。
- en: 'You should get a Lambda function with a web editor, as shown in the following
    screenshot:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您应该会得到一个带有 Web 编辑器的 Lambda 函数，如下图所示：
- en: '![](img/00116.jpeg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00116.jpeg)'
- en: Figure 5.9: Writing code for Lambda function
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '图 5.9: 编写 Lambda 函数代码'
- en: 'We write our Node.js program inside the web editor. Write the following scripts:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们在 Web 编辑器中编写我们的 Node.js 程序。请编写以下脚本：
- en: '[PRE0]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Save your function by clicking on the Save button and then publish your Lambda
    function.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“保存”按钮保存您的函数，然后发布您的 Lambda 函数。
- en: 'Click on Publish new version on the Actions drop-down list. You will be asked
    to fill in a version description, as shown in the following screenshot:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在操作下拉菜单中点击“发布新版本”。系统会提示您填写版本描述，如下图所示：
- en: '![](img/00117.jpeg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00117.jpeg)'
- en: Figure 5.10: Providing a release note on publishing AWS Lambda
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '图 5.10: 发布 AWS Lambda 时提供版本说明'
- en: Now, your AWS Lambda has been published. Next, we'll test our AWS Lambda.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您的 AWS Lambda 已发布。接下来，我们将测试我们的 AWS Lambda。
- en: Testing AWS Lambda
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试 AWS Lambda
- en: 'In the previous section, we created and published AWS Lambda using WMC. In
    this section, we will perform testing for our AWS Lambda function. We are going
    to test with two methods:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的部分中，我们使用 WMC 创建并发布了 AWS Lambda。在本节中，我们将对我们的 AWS Lambda 函数进行测试。我们将使用两种方法进行测试：
- en: A test-event tool from AWS Lambda Management Console
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 来自 AWS Lambda 管理控制台的测试事件工具
- en: The AWS CLI
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AWS CLI
- en: 'The first approach is to use AWS Lambda Management Console. Follow these steps:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 第一种方法是使用 AWS Lambda 管理控制台。按照以下步骤操作：
- en: Open your browser and navigate to AWS Lambda Management Console.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开你的浏览器并访问 AWS Lambda 管理控制台。
- en: 'Open your Lambda function, then click on the Test button (see *Figure 5.9*). You
    should get the following screen:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开你的 Lambda 函数，然后点击 Test 按钮（见 *图 5.9*）。你应该会看到以下界面：
- en: '![](img/00118.jpeg)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00118.jpeg)'
- en: 'Figure 5.11: Creating the test event'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.11：创建测试事件
- en: Select the Create new test event option and fill in your event name.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择创建新的测试事件选项并填写事件名称。
- en: 'On the code form, you can write the following script:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在代码表单中，你可以编写以下脚本：
- en: '[PRE1]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Once done, click on the Create button.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，点击 Create 按钮。
- en: 'Test your Lambda function by clicking on the Test button. If successful, you
    should get a response from the Lambda, as shown in the following screenshot:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击 Test 按钮测试你的 Lambda 函数。如果成功，你应该会收到来自 Lambda 的响应，如下所示：
- en: '![](img/00119.jpeg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00119.jpeg)'
- en: Figure 5.12: Showing a test result
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.12：显示测试结果
- en: You have finished testing the Lambda function through the management console.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经通过管理控制台完成了 Lambda 函数的测试。
- en: 'Next, we can perform testing using the AWS CLI. To install the AWS CLI, read
    the instructions at [https://aws.amazon.com/cli/](https://aws.amazon.com/cli/).
    For Windows, you can download it from [https://s3.amazonaws.com/aws-cli/AWSCLI64.msi](https://s3.amazonaws.com/aws-cli/AWSCLI64.msi)
    for 64-bit, and [https://s3.amazonaws.com/aws-cli/AWSCLI32.msi](https://s3.amazonaws.com/aws-cli/AWSCLI32.msi)
    for 32-bit:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们可以使用 AWS CLI 进行测试。要安装 AWS CLI，请阅读 [https://aws.amazon.com/cli/](https://aws.amazon.com/cli/)
    上的说明。对于 Windows，你可以从 [https://s3.amazonaws.com/aws-cli/AWSCLI64.msi](https://s3.amazonaws.com/aws-cli/AWSCLI64.msi)
    下载 64 位版本，或从 [https://s3.amazonaws.com/aws-cli/AWSCLI32.msi](https://s3.amazonaws.com/aws-cli/AWSCLI32.msi)
    下载 32 位版本：
- en: 'If you run with Linux or macOS, you can install the AWS CLI using `pip`. You
    can type the following command:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你使用的是 Linux 或 macOS，可以通过 `pip` 安装 AWS CLI。你可以输入以下命令：
- en: '[PRE2]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Now, we can perform testing for AWS Lambda; the Lambda function name is `my-simple-lambda`.
    Type the following command:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以进行 AWS Lambda 测试；Lambda 函数名称是 `my-simple-lambda`。输入以下命令：
- en: '[PRE3]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Once successful, you should see the following response output:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦成功，你应该看到以下响应输出：
- en: '![](img/00120.jpeg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00120.jpeg)'
- en: Figure 5.13:  Testing AWS Lambda from the AWS CLI
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.13：通过 AWS CLI 测试 AWS Lambda
- en: 'Open the output file, `output.txt`, using your text editor. For instance, I
    use `nano` and type the following command:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开输出文件 `output.txt`，使用你的文本编辑器。例如，我使用 `nano` 并输入以下命令：
- en: '[PRE4]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'You should see the contents of the output file, which is a response from AWS
    Lambda. For instance, here is my output file:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你应该能看到输出文件的内容，这是来自 AWS Lambda 的响应。例如，这是我的输出文件：
- en: '![](img/00121.jpeg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00121.jpeg)'
- en: Figure 5.14: Opening the output file by invoking the Lambda
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.14：通过调用 Lambda 打开输出文件
- en: You have finished testing the AWS Lambda function. Next, we'll build AWS Lambda
    through AWS CloudFormation.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经完成了 AWS Lambda 函数的测试。接下来，我们将通过 AWS CloudFormation 构建 AWS Lambda。
- en: CloudFormation template for AWS Lambda functions
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: AWS Lambda 函数的 CloudFormation 模板
- en: AWS CloudFormation provides an **Infrastructure as Code** (**IaC**) solution
    to build a dynamic infrastructure. In the previous section, we learned how to
    build AWS Lambda. Now, we continue our journey with CloudFormation. We will build
    AWS Lambda through AWS CloudFormation.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: AWS CloudFormation 提供了一个 **基础设施即代码**（**IaC**）解决方案，用于构建动态基础设施。在前一部分中，我们学习了如何构建
    AWS Lambda。现在，我们将继续通过 CloudFormation 来构建 AWS Lambda。
- en: 'The CloudFormation template for AWS Lambda can be found at [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html).
    The template can be described in JSON as follows:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: AWS Lambda 的 CloudFormation 模板可以在 [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html)
    找到。该模板可以用 JSON 描述如下：
- en: '[PRE5]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'For YAML, we can define the CloudFormation template for AWS Lambda as follows:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 YAML，我们可以如下定义 AWS Lambda 的 CloudFormation 模板：
- en: '[PRE6]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Not all attributes from the CloudFormation template of the Lambda are required.
    The following are required attributes:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 并非所有来自 Lambda 的 CloudFormation 模板属性都是必需的。以下是必需的属性：
- en: '`Code`: The contents of the source code from your Lambda function. You can
    put the source code as inline text. You also can put it into Amazon S3.'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Code`：来自 Lambda 函数的源代码内容。你可以将源代码作为内联文本插入，也可以将其放入 Amazon S3。'
- en: '`Handler`:  The name of the Lambda function (within your source code) that
    the Lambda calls to start running your code.'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Handler`：Lambda 函数（在你的源代码中）的名称，Lambda 调用它来启动执行你的代码。'
- en: '`Role`: An IAM role that is applied to execute the AWS Lambda function. It''s
    the **Amazon Resource Name** (**ARN**) of the AWS Identity. Make sure your IAM
    role has access rights to execute the Lambda function, including your other required
    resources.'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Role`：应用于执行 AWS Lambda 函数的 IAM 角色。这是 AWS 身份的 **Amazon 资源名称**（**ARN**）。确保你的
    IAM 角色具有执行 Lambda 函数的权限，包括其他所需资源的权限。'
- en: '`Runtime`: A runtime environment for the Lambda function that you are uploading.
    For instance, it could be Python or Node.js.'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Runtime`：Lambda 函数的运行环境。例如，它可以是 Python 或 Node.js。'
- en: Next, we'll deploy AWS Lambda using CloudFormation.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将使用 CloudFormation 部署 AWS Lambda。
- en: Deploying Lambda functions using AWS CloudFormation
  id: totrans-113
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 AWS CloudFormation 部署 Lambda 函数
- en: In this section, we'll learn how to deploy Lambda functions using AWS CloudFormation.
    Our Lambda function scenario is similar to the `my-simple-lambda` function from
    the previous demo.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们将学习如何使用 AWS CloudFormation 部署 Lambda 函数。我们的 Lambda 函数场景类似于之前示例中的 `my-simple-lambda`
    函数。
- en: First, we make a CloudFormation template to create AWS Lambda. Then, we upload
    the template to CloudFormation. Then, we get AWS Lambda running. We'll perform
    these tasks in the next sections.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们创建一个 CloudFormation 模板来创建 AWS Lambda。然后，我们将模板上传到 CloudFormation。接着，我们启动
    AWS Lambda。在接下来的部分，我们将执行这些任务。
- en: Creating a CloudFormation template for the Lambda function
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为 Lambda 函数创建一个 CloudFormation 模板
- en: Before we deploy the Lambda function through CloudFormation, we should prepare
    the CloudFormation template. We can write the template in JSON or YAML.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在通过 CloudFormation 部署 Lambda 函数之前，我们应该准备 CloudFormation 模板。我们可以使用 JSON 或 YAML
    编写模板。
- en: In this demo, we create the Lambda function as in the previous demo. Our Lambda
    function receives the `msg` input and then passes it to the function output. We
    also define a parameter, `LambdaFunctionName`, to get the Lambda function name.
    For the IAM role, we create a new IAM role, called `TestLambdaExecutionRole`,
    that will be passed to the Lambda function.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我们按照之前的示例创建了 Lambda 函数。我们的 Lambda 函数接收 `msg` 输入，并将其传递给函数输出。我们还定义了一个参数
    `LambdaFunctionName` 来获取 Lambda 函数的名称。对于 IAM 角色，我们创建了一个新的 IAM 角色，名为 `TestLambdaExecutionRole`，它将传递给
    Lambda 函数。
- en: 'The following is a complete CloudFormation template in JSON:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个完整的 CloudFormation 模板（JSON 格式）：
- en: '[PRE7]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Save these scripts into a file called `Lambda-CloudFormation.json`.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 将这些脚本保存到名为 `Lambda-CloudFormation.json` 的文件中。
- en: 'Here is the CloudFormation template in YAML:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是 YAML 格式的 CloudFormation 模板：
- en: '[PRE8]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Save these scripts into a file called `Lambda-CloudFormation.yaml`. After we
    have created the CloudFormation template file, we will deploy it to CloudFormation.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 将这些脚本保存到名为 `Lambda-CloudFormation.yaml` 的文件中。我们创建完 CloudFormation 模板文件后，将其部署到
    CloudFormation。
- en: Deploying AWS Lambda to CloudFormation
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将 AWS Lambda 部署到 CloudFormation
- en: We continue to deploy the AWS Lambda function to CloudFormation. We upload the `Lambda-CloudFormation.json`
    or `CloudFormation.yaml` file for the CloudFormation template. In this section,
    we'll create a CloudFormation stack and then put the template file into the stack.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 我们继续将 AWS Lambda 函数部署到 CloudFormation。我们上传 `Lambda-CloudFormation.json` 或 `CloudFormation.yaml`
    文件作为 CloudFormation 模板。在这一部分，我们将创建一个 CloudFormation 堆栈，然后将模板文件放入堆栈中。
- en: 'To implement our demo, perform the following steps:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现我们的示例，执行以下步骤：
- en: 'Open your browser and navigate to AWS CloudFormation at [https://console.aws.amazon.com/cloudformation/home](https://console.aws.amazon.com/cloudformation/home).
    You should get the following screen:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开浏览器并导航到 AWS CloudFormation 页面：[https://console.aws.amazon.com/cloudformation/home](https://console.aws.amazon.com/cloudformation/home)。你应该看到以下界面：
- en: '![](img/00122.jpeg)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00122.jpeg)'
- en: Figure 5.15: A form from the CloudFormation management console
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.15：来自 CloudFormation 管理控制台的表单
- en: To create a new stack, click on the Create new stack button; you'll get the
    screen shown in *Figure 5.16*.
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要创建一个新堆栈，请点击“创建新堆栈”按钮，你将看到如 *图 5.16* 所示的界面。
- en: Select the Upload a template to Amazon S3 option.
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择“上传模板到 Amazon S3”选项。
- en: 'Select our CloudFormation template file, which has already been created, and
    then click on the Next button:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择我们已经创建好的 CloudFormation 模板文件，然后点击“下一步”按钮：
- en: '![](img/00123.jpeg)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00123.jpeg)'
- en: Figure 5.16: Selecting the CloudFormation template
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.16：选择 CloudFormation 模板
- en: 'You should get the screen shown in *Figure 5.17*. Fill in the stack name and
    function name. For instance, I set my stack name as `test-lambda` and my function
    name as `my-lambda-cloudformation`. Once done, click on the Next button:'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你应该看到如*图 5.17*所示的界面。填写堆栈名称和函数名称。例如，我设置堆栈名称为 `test-lambda`，函数名称为 `my-lambda-cloudformation`。完成后，点击下一步按钮：
- en: '![](img/00124.jpeg)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00124.jpeg)'
- en: Figure 5.17: Filling in the stack and Lambda function names
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.17：填写堆栈和 Lambda 函数名称
- en: 'You should get the following screen. We don''t do anything on this screen.
    Just click on the Next button:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你应该看到以下界面。在此界面上无需执行任何操作。只需点击下一步按钮：
- en: '![](img/00125.jpeg)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00125.jpeg)'
- en: Figure 5.18: Setting the CloudFormation parameters
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.18：设置 CloudFormation 参数
- en: 'You should get the following review screen. Review all input and then click
    on the Create button to create a stack:'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你应该看到以下回顾界面。检查所有输入，然后点击创建按钮以创建堆栈：
- en: '![](img/00126.jpeg)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00126.jpeg)'
- en: Figure 5.19: Review for creating a stack
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.19：创建堆栈的回顾
- en: 'After you have clicked the Create button, you should get the CloudFormation
    dashboard. Ensure your stack has already been created with the CREATE_COMPLETE status.
    The following screenshot confirms my stack was created:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击创建按钮后，你应该看到 CloudFormation 仪表盘。确保你的堆栈已经创建并显示为 CREATE_COMPLETE 状态。以下截图确认了我的堆栈已被创建：
- en: '![](img/00127.jpeg)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00127.jpeg)'
- en: Figure 5.20: Showing the stack status
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.20：显示堆栈状态
- en: You also can verify your Lambda function on AWS Lambda Management Console.
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你也可以在 AWS Lambda 管理控制台验证你的 Lambda 函数。
- en: 'Open your browser and navigate to [https://console.aws.amazon.com/lambda/home](https://console.aws.amazon.com/lambda/home).
    You should see your Lambda function that was created through CloudFormation:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开浏览器，访问 [https://console.aws.amazon.com/lambda/home](https://console.aws.amazon.com/lambda/home)。你应该能看到通过
    CloudFormation 创建的 Lambda 函数：
- en: '![](img/00128.jpeg)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00128.jpeg)'
- en: Figure 5.21: Showing a list of AWS Lambda
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.21：显示 AWS Lambda 列表
- en: 'Now we can test using the AWS CLI. For instance, the Lambda function name is `my-lambda-cloudformation`.
    We can perform this test by typing the following command:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以使用 AWS CLI 进行测试。例如，Lambda 函数名称是 `my-lambda-cloudformation`。我们可以通过输入以下命令来执行此测试：
- en: '[PRE9]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'If successful, you get the following response output:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 如果成功，你将得到以下响应输出：
- en: '![](img/00129.jpeg)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00129.jpeg)'
- en: 'Figure 5.22: Calling the AWS Lambda function from the AWS CLI'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.22：通过 AWS CLI 调用 AWS Lambda 函数
- en: If you have security problems when invoking the Lambda function from the AWS
    CLI, verify your account permissions. You can check on the IAM management console
    at [https://console.aws.amazon.com/iam/](https://console.aws.amazon.com/iam/).
    Your account should have AWSLambdaExecute and/or AWSLambdaRole permissions.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在通过 AWS CLI 调用 Lambda 函数时遇到安全问题，请验证你的账户权限。你可以在 IAM 管理控制台检查：[https://console.aws.amazon.com/iam/](https://console.aws.amazon.com/iam/)。你的账户应该拥有
    AWSLambdaExecute 和/或 AWSLambdaRole 权限。
- en: 'After invoking the Lambda function, open the output file so you get the contents
    of the output file. Type the following command:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 调用 Lambda 函数后，打开输出文件以查看输出文件的内容。输入以下命令：
- en: '[PRE10]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'You should see the following response output:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该看到以下响应输出：
- en: '![](img/00130.jpeg)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00130.jpeg)'
- en: Figure 5.23: Opening the output file, output-lambda.txt
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.23：打开输出文件 output-lambda.txt
- en: You have learned how to build AWS Lambda using CloudFormation. Next, we'll explore
    the AWS Lambda function with the DynamoDB database through the CloudFormation
    template.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经学会了如何使用 CloudFormation 构建 AWS Lambda。接下来，我们将通过 CloudFormation 模板探索与 DynamoDB
    数据库结合的 AWS Lambda 函数。
- en: CloudFormation for AWS Lambda and DynamoDB
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: AWS Lambda 和 DynamoDB 的 CloudFormation
- en: Sometimes we want to build a Lambda function with storage capabilities. Amazon
    AWS provides storage services that we can integrate with AWS Lambda. In this section,
    we'll explore how to use DynamoDB in AWS Lambda.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 有时我们希望构建一个具备存储功能的 Lambda 函数。Amazon AWS 提供了可以与 AWS Lambda 集成的存储服务。在本节中，我们将探索如何在
    AWS Lambda 中使用 DynamoDB。
- en: AWS DynamoDB is a storage service from AWS. It's storage based on NoSQL. You
    can review DynamoDB's features on its official website at [https://aws.amazon.com/dynamodb/](https://aws.amazon.com/dynamodb/).
    AWS DynamoDB provides various SDK APIs to enable you to access DynamoDB in your
    own programs, such as Java, JavaScript, Node.js, .NET, PHP, Python, and Ruby.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: AWS DynamoDB 是 AWS 提供的一项存储服务。它基于 NoSQL 存储。你可以通过访问其官方网站来查看 DynamoDB 的特点：[https://aws.amazon.com/dynamodb/](https://aws.amazon.com/dynamodb/)。AWS
    DynamoDB 提供了多种 SDK API，帮助你在自己的程序中访问 DynamoDB，例如 Java、JavaScript、Node.js、.NET、PHP、Python
    和 Ruby。
- en: Technically, DynamoDB can be operated easily. You can use the DynamoDB Management
    Console at [https://console.aws.amazon.com/dynamodb/](https://console.aws.amazon.com/dynamodb/).
    Then, you can create a table with key attributes. You can deploy DynamoDB in various
    regions. It takes benefits in accessibility from your customers.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 从技术上讲，DynamoDB 操作起来非常简便。你可以使用 DynamoDB 管理控制台，访问 [https://console.aws.amazon.com/dynamodb/](https://console.aws.amazon.com/dynamodb/)。然后，你可以创建一个带有键属性的表。你可以在多个区域部署
    DynamoDB，并且它能够带来客户访问的便利。
- en: 'In this section, we''ll build a Lambda function to insert data into DynamoDB.
    We implement a Lambda function using Node.js through CloudFormation for the deployment
    method:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将构建一个 Lambda 函数，将数据插入 DynamoDB。我们通过 CloudFormation 部署方法，使用 Node.js 实现
    Lambda 函数：
- en: '![](img/00131.jpeg)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00131.jpeg)'
- en: 'Figure 5.24: Lambda and DynamoDB interaction'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.24：Lambda 与 DynamoDB 的交互
- en: 'To implement our demo, we will perform the following tasks:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现我们的演示，我们将执行以下任务：
- en: Creating a CloudFormation template for Lambda and DynamoDB
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为 Lambda 和 DynamoDB 创建 CloudFormation 模板
- en: Deploying the CloudFormation template
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 部署 CloudFormation 模板
- en: Configuring the Lambda-invoking policy
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置 Lambda 调用策略
- en: Testing the Lambda function
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试 Lambda 函数
- en: These tasks will be explored in the next sections.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 这些任务将在接下来的章节中探讨。
- en: Creating the CloudFormation template for AWS DynamoDB
  id: totrans-177
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为 AWS DynamoDB 创建 CloudFormation 模板
- en: 'The CloudFormation template for AWS DynamoDB can be found at [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html).
    The template can be described in JSON as follows:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: AWS DynamoDB 的 CloudFormation 模板可以在 [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dynamodb-table.html)
    找到。该模板可以用 JSON 描述如下：
- en: '[PRE11]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'We can define the template in YAML as follows:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以按如下方式在 YAML 中定义模板：
- en: '[PRE12]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'You should define three required attributes—`AttributeDefinitions`, `KeySchema`,
    and `ProvisionedThroughput`:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该定义三个必需的属性——`AttributeDefinitions`、`KeySchema` 和 `ProvisionedThroughput`：
- en: '`AttributeDefinitions`: This consists of a list of attributes that describe
    the key schema for the table and indexes.'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AttributeDefinitions`：由描述表和索引的键架构的属性列表组成。'
- en: '`KeySchema`: This consists of attributes that make up the primary key for the
    table. You can define the KeySchema type in `HASH` or `RANGE`.'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`KeySchema`：由构成表主键的属性组成。你可以在 `HASH` 或 `RANGE` 中定义 KeySchema 类型。'
- en: '`ProvisionedThroughput`: This describes the throughput values, which are values
    for the `ReadCapacityUnits` and `WriteCapacityUnits` attributes.'
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ProvisionedThroughput`：这描述了吞吐量值，即 `ReadCapacityUnits` 和 `WriteCapacityUnits`
    属性的值。'
- en: Next, we'll create a CloudFormation template to build Lambda and DynamoDB resources.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将创建一个 CloudFormation 模板来构建 Lambda 和 DynamoDB 资源。
- en: Building a CloudFormation template for Lambda and DynamoDB
  id: totrans-187
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为 Lambda 和 DynamoDB 构建 CloudFormation 模板
- en: To build a CloudFormation template for Lambda and DynamoDB, we can modify our
    previous CloudFormation template for Lambda. We add DynamoDB resources and a policy.
    We replace our Lambda function in order to access DynamoDB.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 为了构建 Lambda 和 DynamoDB 的 CloudFormation 模板，我们可以修改之前的 Lambda CloudFormation 模板。我们添加
    DynamoDB 资源和策略，并替换 Lambda 函数以访问 DynamoDB。
- en: Next, we'll start to create the Lambda function.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将开始创建 Lambda 函数。
- en: Accessing DynamoDB from Lambda functions
  id: totrans-190
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从 Lambda 函数访问 DynamoDB
- en: Our scenario in the Lambda function is to get JSON data from the parameter input
    of the Lambda function, and then insert it into DynamoDB.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在 Lambda 函数中的场景是从 Lambda 函数的参数输入中获取 JSON 数据，然后将其插入 DynamoDB。
- en: We can use the `DynamoDB` object from our Node.js application through the AWS
    SDK. After we get data from the Lambda function, we can insert the data into DynamoDB
    using the `putItem()` API. You can read more about this API at [https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_PutItem.html](https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_PutItem.html).
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过 AWS SDK 从 Node.js 应用程序中使用 `DynamoDB` 对象。在从 Lambda 函数获取数据后，我们可以使用 `putItem()`
    API 将数据插入 DynamoDB。你可以在 [https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_PutItem.html](https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_PutItem.html)
    阅读更多关于该 API 的信息。
- en: 'For instance, we insert data into the DynamoDB table, called `mydynamodb`.
    We can implement our Lambda function as follows:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们将数据插入名为 `mydynamodb` 的 DynamoDB 表中。我们可以按如下方式实现我们的 Lambda 函数：
- en: '[PRE13]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: This Lambda function will return the `Insert data was successful` message in
    the event of a successful operation. Otherwise, we get an `Error` message with
    a detailed error description.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 如果操作成功，此 Lambda 函数将返回`Insert data was successful`消息。否则，我们将收到`Error`消息，并附有详细的错误描述。
- en: Creating the CloudFormation template
  id: totrans-196
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建 CloudFormation 模板
- en: We modify our CloudFormation template for the Lambda from the previous section.
    We replace the content of the `Code` attribute with our Lambda function code.
    We also define the DynamoDB resource, called `myDynamoDBTable`.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 我们修改了上一节中的 Lambda CloudFormation 模板。我们将 `Code` 属性的内容替换为我们的 Lambda 函数代码。我们还定义了一个名为
    `myDynamoDBTable` 的 DynamoDB 资源。
- en: Since our Lambda function accesses DynamoDB, we should configure an additional
    policy inside `TestLambdaExecutionRole`. We add the `ManagedPolicyArns` attribute,
    which gives access rights to call the `dynamodb:PutItem` action.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们的 Lambda 函数需要访问 DynamoDB，我们应该在 `TestLambdaExecutionRole` 中配置额外的策略。我们添加了
    `ManagedPolicyArns` 属性，以授予调用 `dynamodb:PutItem` 操作的权限。
- en: 'The following is our modified CloudFormation template for Lambda and DynamoDB
    in JSON (`lambda-dynamodb.json`):'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我们为 Lambda 和 DynamoDB 修改后的 CloudFormation 模板（JSON 格式，`lambda-dynamodb.json`）：
- en: '[PRE14]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The following is the CloudFormation template in YAML (`lambda-dynamodb.yaml`):'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是 CloudFormation 模板的 YAML 版本（`lambda-dynamodb.yaml`）：
- en: '[PRE15]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Save all CloudFormation template files, `lambda-dynamodb.json`, and/or `lambda-dynamodb.yaml`.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 保存所有 CloudFormation 模板文件，`lambda-dynamodb.json` 和/或 `lambda-dynamodb.yaml`。
- en: Next, we'll deploy our the template file to AWS CloudFormation.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将把模板文件部署到 AWS CloudFormation。
- en: Deploying the CloudFormation template
  id: totrans-205
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署 CloudFormation 模板
- en: After we prepare our CloudFormation template file, we can continue to deploy
    the template in AWS CloudFormation. In this section, we'll use CloudFormation
    Management Console.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 准备好 CloudFormation 模板文件后，我们可以继续在 AWS CloudFormation 中部署该模板。在本节中，我们将使用 CloudFormation
    管理控制台。
- en: 'We use the same method to upload the CloudFormation template file to AWS CloudFormation.
    Perform the following steps:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用相同的方法将 CloudFormation 模板文件上传到 AWS CloudFormation。请执行以下步骤：
- en: Open your browser and navigate to CloudFormation Management Console at [https://console.aws.amazon.com/cloudformation](https://console.aws.amazon.com/cloudformation).
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开您的浏览器并访问 CloudFormation 管理控制台，网址为 [https://console.aws.amazon.com/cloudformation](https://console.aws.amazon.com/cloudformation)。
- en: Upload the CloudFormation template file that we have created to access the Lambda
    and DynamoDB resources.
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 上传我们创建的 CloudFormation 模板文件，以访问 Lambda 和 DynamoDB 资源。
- en: You can upload `lambda-dynamodb.json` or `lambda-dynamodb.yaml`.
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以上传 `lambda-dynamodb.json` 或 `lambda-dynamodb.yaml`。
- en: 'Once done, you will be asked to fill in the stack name and the Lambda function
    name:'
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，系统将要求您填写堆栈名称和 Lambda 函数名称：
- en: '![](img/00132.jpeg)'
  id: totrans-212
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00132.jpeg)'
- en: 'Figure 5.25: Creating a new CloudFormation stack'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.25：创建一个新的 CloudFormation 堆栈
- en: Click on the Next button and follow the instructions until the end of the upload
    process.
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“下一步”按钮并按照指示完成上传过程。
- en: 'Once the process is complete, check your CloudFormation status on the CloudFormation
    dashboard:'
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 处理完成后，检查 CloudFormation 仪表板上的 CloudFormation 状态：
- en: '![](img/00133.jpeg)'
  id: totrans-216
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00133.jpeg)'
- en: 'Figure 5.26: The CloudFormation stack was created'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.26：CloudFormation 堆栈已创建
- en: Make sure your CloudFormation stack has the CREATE_COMPLETE status in order
    to continue to the next step.
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保您的 CloudFormation 堆栈具有 CREATE_COMPLETE 状态，以便继续执行下一步。
- en: 'You can verify the DynamoDB table with the name `mydynamodb` on DynamoDB Management
    Console at [https://console.aws.amazon.com/dynamodb/](https://console.aws.amazon.com/dynamodb/).
    You should see your DynamoDB table, `mydynamodb`, as shown in the following screenshot:'
  id: totrans-219
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以在 DynamoDB 管理控制台中验证名为 `mydynamodb`的 DynamoDB 表，地址为 [https://console.aws.amazon.com/dynamodb/](https://console.aws.amazon.com/dynamodb/)。您应该能看到如下截图中的
    DynamoDB 表 `mydynamodb`：
- en: '![](img/00134.jpeg)'
  id: totrans-220
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00134.jpeg)'
- en: 'Figure 5.27: The DynamoDB table, mydynamodb, was created from CloudFormation'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.27：通过 CloudFormation 创建的 DynamoDB 表，mydynamodb
- en: 'Verify your Lambda function on the Lambda Management Console at [https://console.aws.amazon.com/lambda/](https://console.aws.amazon.com/lambda/).
    You should see your Lambda function, lambda-dynamodb-func, in the following screenshot:'
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Lambda 管理控制台（[https://console.aws.amazon.com/lambda/](https://console.aws.amazon.com/lambda/)）中验证您的
    Lambda 函数。您应该能在以下截图中看到您的 Lambda 函数 `lambda-dynamodb-func`：
- en: '![](img/00135.jpeg)'
  id: totrans-223
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00135.jpeg)'
- en: 'Figure 5.28: The Lambda function, lambda-dynamodb-func was created from CloudFormation'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.28：通过 CloudFormation 创建的 Lambda 函数，lambda-dynamodb-func
- en: Now, you have finished deploying your Lambda function with the DynamoDB resource
    through CloudFormation.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你已经完成了通过CloudFormation将Lambda函数与DynamoDB资源部署完成。
- en: Next, we'll configure the user policy in order to invoke the Lambda function.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将配置用户策略以调用Lambda函数。
- en: Configuring the Lambda invocation policy
  id: totrans-227
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置Lambda调用策略
- en: We'll continue to invoke our Lambda function through the AWS CLI. To enable
    invoking the Lambda function, your AWS CLI user should have the access policy
    to access Lambda and DynamoDB.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将继续通过AWS CLI调用Lambda函数。为了能够调用Lambda函数，你的AWS CLI用户应具有访问Lambda和DynamoDB的访问策略。
- en: 'In this section, we add DynamoDB permissions to access this resource. Follow
    these steps:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们添加DynamoDB权限以访问此资源。请按照以下步骤操作：
- en: Open your browser and navigate to IAM Management Console at [https://console.aws.amazon.com/iam/](https://console.aws.amazon.com/iam/).
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开浏览器并访问IAM管理控制台，[https://console.aws.amazon.com/iam/](https://console.aws.amazon.com/iam/)。
- en: Open your account, from the Users menu, and add permissions.
  id: totrans-231
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开你的账户，点击“用户”菜单，然后添加权限。
- en: 'Add AmazonDynamoDBFullAccess permission:'
  id: totrans-232
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加AmazonDynamoDBFullAccess权限：
- en: '![](img/00136.jpeg)'
  id: totrans-233
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00136.jpeg)'
- en: 'Figure 5.29: Adding permission to the IAM user'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.29：向IAM用户添加权限
- en: 'Once done, click on the Next: Review button. You should get the following review
    screen:'
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，点击“下一步：审查”按钮。你应该会看到以下审查界面：
- en: '![](img/00137.jpeg)'
  id: totrans-236
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00137.jpeg)'
- en: 'Figure 5.30: Adding AmazonDynamoDBFullAccess'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.30：添加AmazonDynamoDBFullAccess
- en: 'If you think it''s finished, click on the Add permissions button. Your account
    should have DynamoDB permission:'
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你认为已经完成，点击“添加权限”按钮。你的账户应该拥有DynamoDB权限：
- en: '![](img/00138.jpeg)'
  id: totrans-239
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00138.jpeg)'
- en: 'Figure 5.31: The AmazonDynamoDBFullAccess permission was added to an IAM user'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.31：已将AmazonDynamoDBFullAccess权限添加到IAM用户
- en: You have finished adding permissions to invoke the Lambda function from the
    AWS CLI. Next, we'll test invoking the Lambda function.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经完成了通过AWS CLI调用Lambda函数所需权限的添加。接下来，我们将测试调用Lambda函数。
- en: Testing our Lambda function
  id: totrans-242
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试我们的Lambda函数
- en: 'To test our Lambda function using the AWS CLI, open the Terminal. We send JSON
    data as follows:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用AWS CLI测试我们的Lambda函数，打开终端。我们将发送如下的JSON数据：
- en: '[PRE16]'
  id: totrans-244
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: We pass this data while invoking the AWS Lambda function. The Lambda function
    is `lambda-dynamodb-func`. We also set the output file with `lambda-dynamodb.txt`.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在调用AWS Lambda函数时传递这些数据。Lambda函数是`lambda-dynamodb-func`。我们还设置了输出文件`lambda-dynamodb.txt`。
- en: 'You can type this command to invoke our Lambda function:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以输入此命令来调用我们的Lambda函数：
- en: '[PRE17]'
  id: totrans-247
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'If successful, you should get the following `200` status code:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 如果成功，你应该会看到以下`200`状态码：
- en: '![](img/00139.gif)'
  id: totrans-249
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00139.gif)'
- en: 'Figure 5.32: Invoking the Lambda function'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.32：调用Lambda函数
- en: 'You also get an output file, `lambda-dynamodb.txt`. You can open it using the
    `nano` command:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 你还会得到一个输出文件`lambda-dynamodb.txt`。你可以使用`nano`命令打开它：
- en: '[PRE18]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Then, you should see a response message from our Lambda function. For instance,
    here is my output file:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，你应该看到来自Lambda函数的响应消息。例如，这是我的输出文件：
- en: '![](img/00140.jpeg)'
  id: totrans-254
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00140.jpeg)'
- en: 'Figure 5.33: Displaying the output file, lambda-dynamodb.txt'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.33：显示输出文件`lambda-dynamodb.txt`
- en: 'You can verify the data was inserted into the DynamoDB table. You can open
    DynamoDB Management Console at [https://console.aws.amazon.com/dynamodb/](https://console.aws.amazon.com/dynamodb/).
    You should see the data. You can see my data output in the following screenshot:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以验证数据是否已插入到DynamoDB表中。你可以打开DynamoDB管理控制台，[https://console.aws.amazon.com/dynamodb/](https://console.aws.amazon.com/dynamodb/)查看数据。你可以在以下截图中看到我的数据输出：
- en: '![](img/00141.jpeg)'
  id: totrans-257
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00141.jpeg)'
- en: 'Figure 5.34: Displaying data on the DynamoDB Management Console'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 图5.34：在DynamoDB管理控制台中显示数据
- en: You have finished building the Lambda function with access to DynamoDB through
    CloudFormation.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经完成了通过CloudFormation构建具有DynamoDB访问权限的Lambda函数。
- en: Next, we'll deploy the Lambda function on various regions through CloudFormation.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将通过CloudFormation将Lambda函数部署到不同区域。
- en: Deploying the Lambda function to multiple regions
  id: totrans-261
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将Lambda函数部署到多个区域
- en: We have learned how to deploy Lambda functions through CloudFormation. We also
    accessed DynamoDB resources inside the Lambda function. In this section, we'll
    deploy a Lambda function to various regions with CloudFormation.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经学习了如何通过CloudFormation部署Lambda函数，并且我们还在Lambda函数内部访问了DynamoDB资源。在本节中，我们将通过CloudFormation将Lambda函数部署到不同区域。
- en: You can follow the next steps to implement our demo and deploy the Lambda function
    to multiple regions.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以按照以下步骤实现我们的演示并将Lambda函数部署到多个区域。
- en: Preparation
  id: totrans-264
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: To work with certain regions on CloudFormation, we can use a CloudFormation
    StackSet. You learned about this in [Chapter 4](part0070.html#22O7C0-ff9c6455e1444393ad97060c22881bf4),
    *AWS CloudFormation StackSets*. In this demo, we'll build a Lambda function to
    be deployed to certain regions.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 CloudFormation 中处理特定区域，我们可以使用 CloudFormation StackSet。您在[第4章](part0070.html#22O7C0-ff9c6455e1444393ad97060c22881bf4)，*AWS
    CloudFormation StackSets*中已了解此内容。在此演示中，我们将构建一个 Lambda 函数，部署到特定区域。
- en: To follow this demo, you should have already configured security policies for
    CloudFormation StackSet. You did that in [Chapter 4](part0070.html#22O7C0-ff9c6455e1444393ad97060c22881bf4),
    *AWS CloudFormation StackSets*. You should deploy these template files to CloudFormation
    Stack in the `AWSCloudFormationStackSetAdministrationRole.yml` and `AWSCloudFormationStackSetExecutionRole.yml`
    files.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 要跟随本次演示，您应已为 CloudFormation StackSet 配置了安全策略。您在[第4章](part0070.html#22O7C0-ff9c6455e1444393ad97060c22881bf4)，*AWS
    CloudFormation StackSets*中完成了这一操作。您应将这些模板文件部署到 CloudFormation Stack 中，文件为`AWSCloudFormationStackSetAdministrationRole.yml`和`AWSCloudFormationStackSetExecutionRole.yml`。
- en: 'Please read [Chapter 4](part0070.html#22O7C0-ff9c6455e1444393ad97060c22881bf4), *AWS
    CloudFormation StackSets* to learn how to deploy them to CloudFormation template
    files. In the following screenshot, you can see that the `AWSCloudFormationStackSetAdministrationRole.yml`
    and `AWSCloudFormationStackSetExecutionRole.yml` CloudFormation template files
    were deployed:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 请阅读[第4章](part0070.html#22O7C0-ff9c6455e1444393ad97060c22881bf4)，*AWS CloudFormation
    StackSets*，了解如何将它们部署到 CloudFormation 模板文件中。在以下截图中，您可以看到`AWSCloudFormationStackSetAdministrationRole.yml`和`AWSCloudFormationStackSetExecutionRole.yml`
    CloudFormation 模板文件已被部署：
- en: '![](img/00142.jpeg)'
  id: totrans-268
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00142.jpeg)'
- en: 'Figure 5.35: Applying security permissions for CloudFormation StackSet'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.35：为 CloudFormation StackSet 应用安全权限
- en: Next, we'll develop a CloudFormation template for the Lambda function that targets
    multiple regions.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将为 Lambda 函数开发一个面向多个区域的 CloudFormation 模板。
- en: Developing a CloudFormation template for the Lambda function
  id: totrans-271
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为 Lambda 函数开发 CloudFormation 模板
- en: In this demo, we'll modify our CloudFormation template file `Lambda-CloudFormation.json`/`Lambda-CloudFormation.yaml`.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 在本次演示中，我们将修改我们的 CloudFormation 模板文件`Lambda-CloudFormation.json`/`Lambda-CloudFormation.yaml`。
- en: 'The following is our Lambda function code:'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我们的 Lambda 函数代码：
- en: '[PRE19]'
  id: totrans-274
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: This function returns a message with the region information included. It's done
    by calling the `process.env.AWS_REGION` API. Save the CloudFormation template
    file as `Lambda-multi-regions.json` or `Lambda-multi-regions.yaml`.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数返回包含区域信息的消息。它是通过调用`process.env.AWS_REGION` API 实现的。将 CloudFormation 模板文件保存为`Lambda-multi-regions.json`或`Lambda-multi-regions.yaml`。
- en: Next, we'll deploy this CloudFormation template to a CloudFormation StackSet.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将把这个 CloudFormation 模板部署到 CloudFormation StackSet 中。
- en: Deploying the Lambda function to multiple regions
  id: totrans-277
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将 Lambda 函数部署到多个区域
- en: Once we've prepared a CloudFormation StackSet and created the CloudFormation
    template file, we can continue to deploy the template to StackSet.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们准备好了 CloudFormation StackSet 并创建了 CloudFormation 模板文件，我们就可以继续将模板部署到 StackSet。
- en: 'In this demo, we use the CloudFormation StackSet Management Console. Follow
    these steps:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 在本次演示中，我们使用 CloudFormation StackSet 管理控制台。请按照以下步骤操作：
- en: Open your browser and navigate to the CloudFormation StackSet Management Console
    at [https://console.aws.amazon.com/cloudformation/stacksets/](https://console.aws.amazon.com/cloudformation/stacksets/).
  id: totrans-280
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开浏览器，访问 CloudFormation StackSet 管理控制台：[https://console.aws.amazon.com/cloudformation/stacksets/](https://console.aws.amazon.com/cloudformation/stacksets/)。
- en: 'Click on the Create StackSet button and you should get the following screen:'
  id: totrans-281
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“创建 StackSet”按钮，您应该会看到以下屏幕：
- en: '![](img/00143.jpeg)'
  id: totrans-282
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00143.jpeg)'
- en: 'Figure 5.36: Selecting a template for CloudFormation StackSet'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.36：为 CloudFormation StackSet 选择模板
- en: Select the Upload a template to Amazon S3 option and upload `Lambda-multi-regions.json`
    or `Lambda-multi-regions.yaml` by clicking on the Browse button.
  id: totrans-284
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择“上传模板到 Amazon S3”选项，并通过点击“浏览”按钮上传`Lambda-multi-regions.json`或`Lambda-multi-regions.yaml`。
- en: 'Click on the Next button to get the following screen:'
  id: totrans-285
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“下一步”按钮后，您将看到以下屏幕：
- en: '![](img/00144.jpeg)'
  id: totrans-286
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00144.jpeg)'
- en: 'Figure 5.37: Filling in the StackSet and Lambda function names'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.37：填写 StackSet 和 Lambda 函数名称
- en: 'Fill in the StackSet and Lambda function names and click on the Next button. You
    will get the following screenshot:'
  id: totrans-288
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写 StackSet 和 Lambda 函数名称后，点击“下一步”按钮。您将看到以下截图：
- en: '![](img/00145.jpeg)'
  id: totrans-289
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00145.jpeg)'
- en: 'Figure 5.38: Setting the account and target regions'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.38：设置账户和目标区域
- en: Fill in the ARN code from your account in the Deploy stacks in accounts option.
    You will also be asked to fill in regions for deployment targets. In this demo,
    I selected three regions—US East (N.Virginia), Asia Pacific (Singapore), and EU
    (Frankfurt).
  id: totrans-291
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Deploy stacks in accounts 选项中填写你账户的 ARN 代码。你还需要填写部署目标区域。在本示范中，我选择了三个区域——美国东部（弗吉尼亚州北部）、亚太地区（新加坡）和欧洲（法兰克福）。
- en: 'Click on the Next button until you get the following screen:'
  id: totrans-292
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 Next 按钮，直到你看到以下屏幕：
- en: '![](img/00146.jpeg)'
  id: totrans-293
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00146.jpeg)'
- en: 'Figure 5.39: Reviewing the CloudFormation StackSet'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.39：查看 CloudFormation StackSet
- en: Review all input and, after completing the review, click on the Create button.
  id: totrans-295
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 审查所有输入内容，并在完成审查后点击 Create 按钮。
- en: 'CloudFormation provisions your template for the targeted regions. If successful,
    you should see SUCCEEDED in your StackSet:'
  id: totrans-296
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: CloudFormation 为目标区域提供你的模板。如果成功，你应该在 StackSet 中看到 SUCCEEDED：
- en: '![](img/00147.jpeg)'
  id: totrans-297
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00147.jpeg)'
- en: 'Figure 5.40: CloudFormation StackSet was created with three regions'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.40：CloudFormation StackSet 已创建，包含三个区域
- en: Now you have finished deploying an AWS CloudFormation StackSet with the Lambda
    function. Next, we will invoke this function.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你已经完成了带有 Lambda 函数的 AWS CloudFormation StackSet 部署。接下来，我们将调用这个函数。
- en: Invoking the Lambda function
  id: totrans-300
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调用 Lambda 函数
- en: 'Now, you can invoke your Lambda function. In this demo, I use the AWS CLI.
    We send this data as follows:'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以调用你的 Lambda 函数。在这个示范中，我使用 AWS CLI。我们发送的数据如下：
- en: '[PRE20]'
  id: totrans-302
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The Lambda function is `lambda-multiregions-func`. You can invoke this Lambda
    function from the AWS CLI as follows:'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: Lambda 函数是`lambda-multiregions-func`。你可以通过 AWS CLI 调用这个 Lambda 函数，如下所示：
- en: '[PRE21]'
  id: totrans-304
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'If successful, you''ll get a status code of `200`, as shown in the following
    screenshot:'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 如果成功，你将得到一个状态码 `200`，如下截图所示：
- en: '![](img/00148.jpeg)'
  id: totrans-306
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00148.jpeg)'
- en: 'Figure 5.41: Invoking the Lambda function with the US East region'
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.41：在美国东部区域调用 Lambda 函数
- en: 'Open your output file to get a response from the AWS Lambda function:'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 打开你的输出文件，以获取来自 AWS Lambda 函数的响应：
- en: '[PRE22]'
  id: totrans-309
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The sample output is shown as follows:'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 示例输出如下所示：
- en: '![](img/00149.jpeg)'
  id: totrans-311
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00149.jpeg)'
- en: 'Figure 5.42: Opening the output file'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 图 5.42：打开输出文件
- en: You have finished deploying the Lambda function in certain regions through CloudFormation.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 你已完成通过 CloudFormation 在特定区域部署 Lambda 函数。
- en: Summary
  id: totrans-314
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: We learned how to deploy Lambda functions through CloudFormation. Then, we included
    DynamoDB resources inside Lambda function codes. Finally, we deployed a Lambda
    function to various regions with CloudFormation.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 我们学习了如何通过 CloudFormation 部署 Lambda 函数。接着，我们在 Lambda 函数代码中加入了 DynamoDB 资源。最后，我们通过
    CloudFormation 将 Lambda 函数部署到多个区域。
- en: In the next chapter, we'll learn how to work with an AWS IoT deployment through
    CloudFormation.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习如何通过 CloudFormation 与 AWS IoT 部署进行互动。
- en: Questions
  id: totrans-317
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: 'Use these questions to test your understanding of this chapter:'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这些问题来测试你对本章内容的理解：
- en: List the steps to deploy the AWS Lambda function with CloudFormation.
  id: totrans-319
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 列出通过 CloudFormation 部署 AWS Lambda 函数的步骤。
- en: How do you develop a CloudFormation template for the Lambda function?
  id: totrans-320
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何为 Lambda 函数开发 CloudFormation 模板？
- en: How do you deploy the Lambda function tocertain regions using CloudFormation?
  id: totrans-321
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何使用 CloudFormation 将 Lambda 函数部署到特定区域？
