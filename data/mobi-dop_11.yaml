- en: Case Studies
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 案例研究
- en: In this chapter, we'll be going through the entire process of mobile DevOps,
    from mobile application development and integration, to continuous testing and
    deployment.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将通过整个移动 DevOps 过程，从移动应用开发和集成，到持续测试和部署。
- en: 'We''ll be using two applications as case studies to show the entire process:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用两个应用程序作为案例研究，展示整个过程：
- en: A basic Hello World GUI
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个基本的 Hello World 图形界面
- en: A ButtonWidget
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 ButtonWidget
- en: Case study 1 - Hello World GUI
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 案例研究 1 - Hello World 图形界面
- en: In this case study, we'll be covering the mobile DevOps cycle with a simple
    Android application that will have a MainActivity with a `Hello World` text label
    on it.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个案例研究中，我们将讨论移动 DevOps 生命周期，并通过一个简单的 Android 应用程序来演示，该应用程序的 MainActivity 中包含一个`Hello
    World`文本标签。
- en: This study is going to cover the entire process in brief, and show you a step-by-step
    workflow.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本研究将简要介绍整个过程，并向您展示一个逐步的工作流。
- en: Prerequisites
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前提条件
- en: Since these case studies will be covering all the steps involved in the lifecycle,
    it will not be possible to cover these topics in detail and explain different
    parts of the IDE and Android development fundamentals.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这些案例研究将涵盖生命周期中的所有步骤，因此无法详细介绍这些主题，也无法解释 IDE 和 Android 开发基础的不同部分。
- en: 'The following are the minimum prerequisites to follow this chapter smoothly.
    If you need a greater understanding of any of the following topics, please refer
    to previous chapters:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是顺利完成本章所需的最小前提条件。如果您需要更深入理解以下任何主题，请参阅前面的章节：
- en: It is assumed that you have Visual Studio and Xamarin installed on your computer,
    and configured and ready for Android application development. If you do not have
    Visual Studio and Xamarin installed on your system, please refer to [Chapter 3](1f45b30c-388e-4fd2-b2e6-cfe6d906cd7b.xhtml),
    *Cross-Platform Mobile App Development with Xamarin*, and install them first.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 假设您的计算机上已经安装并配置好了 Visual Studio 和 Xamarin，并准备好进行 Android 应用开发。如果您的系统中没有安装 Visual
    Studio 和 Xamarin，请参考[第 3 章](1f45b30c-388e-4fd2-b2e6-cfe6d906cd7b.xhtml)，*使用 Xamarin
    进行跨平台移动应用开发*，并首先安装它们。
- en: A basic understanding of Visual Studio.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对 Visual Studio 的基本理解。
- en: A basic understanding of Android development fundamentals.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对 Android 开发基础的基本理解。
- en: You should have a working Git account that you are able to access.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您应该拥有一个可以访问的有效 Git 账户。
- en: 'Let''s get started with the following steps to put together a complete practical
    workflow for mobile app development:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们按照以下步骤开始，为移动应用开发构建一个完整的实用工作流：
- en: 'Open Visual Studio and go to File | New| Project:'
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 Visual Studio，选择 文件 | 新建 | 项目：
- en: '![](img/0adef156-b51c-4ae5-8ab3-30c5f99548a6.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0adef156-b51c-4ae5-8ab3-30c5f99548a6.png)'
- en: 'In the next window, select Android from the left-hand pane and then Blank App
    (Android). Give your project a name and also tick the Create a new Git repository
    checkbox (this will create a new Git repository for your project) and click OK:'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一个窗口中，从左侧窗格中选择 Android，然后选择 Blank App (Android)。为您的项目命名，并勾选“创建一个新的 Git 仓库”复选框（这将为您的项目创建一个新的
    Git 仓库），然后点击确定：
- en: '![](img/a50272bb-6a8d-4bd7-9927-a74b4644bf7f.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a50272bb-6a8d-4bd7-9927-a74b4644bf7f.png)'
- en: 'Visual Studio will create a new project called `HelloWorld` for you:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Visual Studio 将为您创建一个名为`HelloWorld`的新项目：
- en: '![](img/8790195b-d895-4cc1-b292-b1b1af866b9a.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8790195b-d895-4cc1-b292-b1b1af866b9a.png)'
- en: 'Once this is done, open Solution Explorer to see the project structure. Go
    to View | Solution Explorer:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，打开解决方案资源管理器查看项目结构。选择 视图 | 解决方案资源管理器：
- en: '![](img/320dbcc4-cc61-4219-b6ab-a04aed94fad2.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](img/320dbcc4-cc61-4219-b6ab-a04aed94fad2.png)'
- en: 'In Solution Explorer, expand the `Resources` folder and the `layout` folder,
    and find a file called `Main.axml`. This is the layout file, or you can say the
    view, of our MainActivity:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在解决方案资源管理器中，展开`Resources`文件夹和`layout`文件夹，找到一个名为`Main.axml`的文件。这是布局文件，或者可以说是我们的
    MainActivity 的视图：
- en: '![](img/90e9a277-33bc-45c8-a177-3d31d88f97c1.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](img/90e9a277-33bc-45c8-a177-3d31d88f97c1.png)'
- en: 'Open `Main.axml` by double-clicking on it. This should open the layout designer
    for you:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击`Main.axml`打开它。这应该会为您打开布局设计器：
- en: '![](img/349c5dd8-f1ea-49f3-b2e2-b080df025fd2.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](img/349c5dd8-f1ea-49f3-b2e2-b080df025fd2.png)'
- en: 'If you are not able to see the toolbox on the left-hand side, go to View |
    Toolbox to make it appear:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您无法在左侧看到工具箱，请前往 视图 | 工具箱 使其显示：
- en: '![](img/1fc79b8a-144a-45ae-9935-064c8a71d46b.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1fc79b8a-144a-45ae-9935-064c8a71d46b.png)'
- en: Now, we will just add a text view on the activity, which says, `HelloWorld`.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将仅在活动中添加一个文本视图，显示`HelloWorld`。
- en: 'From the toolbox on the left, select Text (Medium) from the Form Widgets section
    and drag and drop it to the Activity View:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左侧的工具箱中，从表单小部件部分选择 Text (Medium)，并将其拖放到 Activity View 中：
- en: '![](img/e8a8550d-af30-4b6b-bb6f-9743ab36c66b.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e8a8550d-af30-4b6b-bb6f-9743ab36c66b.png)'
- en: 'Double-click on the text view and change its text to `Hello World`:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击文本视图并将其文本更改为`Hello World`：
- en: '![](img/da8a089b-6d34-40da-9c5c-003436fb5bee.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](img/da8a089b-6d34-40da-9c5c-003436fb5bee.png)'
- en: Awesome, the `HelloWorld` app is done, now we just need to build the solution
    to make sure everything is fine and ready to be deployed on an Android device
    or emulator.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 太棒了，`HelloWorld` 应用程序完成了，现在我们只需构建解决方案，以确保一切正常并准备好在 Android 设备或模拟器上部署。
- en: 'Right-click on the solution and click on Build Solution:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键点击解决方案，点击 Build Solution：
- en: '![](img/b0558428-e2a7-43a4-a069-9e88b7619dcc.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b0558428-e2a7-43a4-a069-9e88b7619dcc.png)'
- en: This will build the solution for you and it should say Build Succeeded in the
    bottom-left corner, on the blue line, when it's done.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将为你构建解决方案，完成时，左下角的蓝色条将显示“Build Succeeded”。
- en: 'To deploy and test the application on an emulator, click on the Android Emulator
    Manager (AVD) icon from the toolbar at the top:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 若要在模拟器上部署和测试应用程序，请点击顶部工具栏中的 Android Emulator Manager (AVD) 图标：
- en: '![](img/9c1f2620-2636-4510-8948-9bb5c01cd9ec.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9c1f2620-2636-4510-8948-9bb5c01cd9ec.png)'
- en: 'This will open Android Emulator Manager, where you can select any existing
    virtual device from the list provided by Visual Studio and hit the Start button:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将打开 Android Emulator Manager，在此你可以从 Visual Studio 提供的列表中选择任何现有的虚拟设备并点击启动按钮：
- en: '![](img/c4c96f52-6a83-4d97-a8d3-c8807bc09fa2.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c4c96f52-6a83-4d97-a8d3-c8807bc09fa2.png)'
- en: 'Then, click on Launch without changing any configurations in the next window:'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，在下一个窗口中点击 Launch，而不更改任何配置：
- en: '![](img/d46dbe0e-ad83-4e39-9a80-971ecacd534a.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d46dbe0e-ad83-4e39-9a80-971ecacd534a.png)'
- en: 'This should start a new AVD on your machine:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这应该会在你的机器上启动一个新的 AVD：
- en: '![](img/29b4a1c9-55e3-4b70-b290-264398e18886.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](img/29b4a1c9-55e3-4b70-b290-264398e18886.png)'
- en: 'Now, come back to Visual Studio after the AVD has started and hit the play
    button by selecting your device from the list to deploy and starting your application
    on the AVD:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在 AVD 启动后返回到 Visual Studio，选择设备并点击播放按钮，将应用程序部署并启动到 AVD 上：
- en: '![](img/522131df-442e-42f8-851a-5a4fd18c657f.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](img/522131df-442e-42f8-851a-5a4fd18c657f.png)'
- en: 'Once the application is deployed, it will be opened on the AVD and you should
    be able to see your Hello World text on the MainActivity screen:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦应用程序部署完成，它将打开在 AVD 上，你应该能在 MainActivity 屏幕上看到你的 Hello World 文本：
- en: '![](img/134f64d5-6a15-4249-8f3d-b250cff31b9c.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](img/134f64d5-6a15-4249-8f3d-b250cff31b9c.png)'
- en: Congratulations, your HelloWorld app is up and running on the emulator!
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 恭喜，你的 HelloWorld 应用程序已经在模拟器上成功运行！
- en: It is time to push our newly created project to the Git remote repository. Remember
    that we have created a local repository already while creating the project, so
    now we need to connect this local repository to a remote Git repository and then
    push the code.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在是时候将我们新创建的项目推送到 Git 远程仓库了。记住，在创建项目时我们已经创建了本地仓库，所以现在需要将本地仓库连接到远程 Git 仓库，然后推送代码。
- en: 'Click on the push logo in the bottom-right corner in Visual Studio. It will
    open Team Explorer, as shown in the following screenshot:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Visual Studio 中点击右下角的推送图标。这将打开 Team Explorer，如下截图所示：
- en: '![](img/7b12e4bf-2550-45e4-b97a-c05c1418888d.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7b12e4bf-2550-45e4-b97a-c05c1418888d.png)'
- en: Now, before publishing we need to create a repository in GitHub to connect to
    this local repository.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在发布之前，我们需要在 GitHub 上创建一个仓库，以连接到这个本地仓库。
- en: Head over to GitHub and log in to your account.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问 GitHub 并登录到你的帐户。
- en: Create a new repository called `HelloWorld` and copy the URL to that repository.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`HelloWorld`的新仓库，并复制该仓库的 URL。
- en: 'Once done, come back to Visual Studio and hit Publish Git Repo, as shown in
    the preceding screenshot, then copy the link to the repository and hit Publish:'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，返回到 Visual Studio 并点击 Publish Git Repo，如前面的截图所示，然后复制仓库链接并点击 Publish：
- en: '![](img/41c3402e-1723-4ef7-8094-fd6701e6fa2d.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](img/41c3402e-1723-4ef7-8094-fd6701e6fa2d.png)'
- en: Visual Studio might ask you to provide your credentials for the first time to
    connect to Git, but once done it should configure the remote repository with the
    local one.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Visual Studio 可能会要求你提供凭证来连接 Git，这是第一次时需要的，但完成后，它应该会将远程仓库与本地仓库配置连接。
- en: After this, click on the edit icon that says Changes (2) to commit your changes
    locally.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，点击显示“Changes (2)”的编辑图标，将更改提交到本地。
- en: 'Make some commit comments and then hit Commit All:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加一些提交备注，然后点击 Commit All：
- en: '![](img/6105f2e9-4052-4bf0-8d8e-dbe48c07d2d3.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6105f2e9-4052-4bf0-8d8e-dbe48c07d2d3.png)'
- en: 'Next, click on the Sync link to share your committed changes with the remote
    repository:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，点击同步链接，将您的提交更改与远程存储库共享：
- en: '![](img/3b6bc70e-07a4-42a2-a8af-3a83f453795f.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3b6bc70e-07a4-42a2-a8af-3a83f453795f.png)'
- en: On the next page, hit Push to push your changes to the GitHub remote repository.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一页上，点击Push以将您的更改推送到GitHub远程存储库。
- en: Since there isn't much to test in this application, we'll be covering that in
    the next case study.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 由于该应用程序没有太多需要测试的内容，我们将在下一个案例研究中介绍。
- en: Case study 2 - ButtonWidget
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 案例研究2 - ButtonWidget
- en: 'In this case study, we''ll be creating a new Android application that will
    have a button which that show a new text view when clicked. We''ll also be writing
    UITest for this application:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在本案例研究中，我们将创建一个新的Android应用程序，该应用程序将在点击时显示一个新的文本视图。我们还将为此应用程序编写UITest：
- en: 'Create a new blank Android application project in Visual Studio, name it `ButtonWidget`,
    and click OK:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Visual Studio中创建一个新的空白Android应用程序项目，命名为`ButtonWidget`，然后点击确定：
- en: '![](img/44e1124c-48aa-4bbd-b076-a79644b5d102.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](img/44e1124c-48aa-4bbd-b076-a79644b5d102.png)'
- en: After creating the project, open the `Main.axml` file from Resources | Layout
    in Solution Explorer.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建项目后，从解决方案资源管理器中的Resources | Layout打开`Main.axml`文件。
- en: Then, add a text view and a button to the view from the Toolbox on the left.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，从左侧的工具箱中添加一个文本视图和一个按钮到视图中。
- en: 'Give each of these IDs to identify them in the code. You can select them, then
    show the property window, and give them IDs there:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为每个ID分配标识以便在代码中识别它们。您可以选择它们，然后显示属性窗口，在那里为它们指定ID：
- en: '![](img/9644673b-558e-4368-bf9a-a68fa792e42d.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9644673b-558e-4368-bf9a-a68fa792e42d.png)'
- en: 'Also, set the visibility of the text view to hidden, because we''ll be showing
    this text only on a button-click:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 同样，将文本视图的可见性设置为隐藏，因为我们将仅在按钮点击时显示此文本：
- en: '![](img/89de4430-dd45-4a53-ac58-7b194ccdea12.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](img/89de4430-dd45-4a53-ac58-7b194ccdea12.png)'
- en: 'Now, open the `MainActivity.cs` file from Solution Explorer:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，从解决方案资源管理器中打开`MainActivity.cs`文件：
- en: '![](img/ee70252c-ca55-41d1-bd4a-b9287031cb93.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ee70252c-ca55-41d1-bd4a-b9287031cb93.png)'
- en: 'In `MainActivtiy.cs`, add code to show the text view when the button is clicked.
    Change your code to match what is shown in the following screenshot:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`MainActivtiy.cs`中，添加代码以在按钮点击时显示文本视图。更改您的代码以匹配以下屏幕截图显示的内容：
- en: '![](img/3bbe63a1-8d91-448c-9d64-54e285a1e336.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3bbe63a1-8d91-448c-9d64-54e285a1e336.png)'
- en: That's it. The coding part is done for the application. Now, the text view will
    be added, but will not be shown in the application until the button is clicked.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 就这样。应用程序的编码部分已完成。现在，将添加文本视图，但在点击按钮之前不会显示在应用程序中。
- en: 'Build your application and hit Run. You''ll see that the text view is not visible
    when the app loads:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建您的应用程序并运行。您会看到应用程序加载时文本视图不可见：
- en: '![](img/10ba6cb1-939a-4388-8f25-61079af598c3.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](img/10ba6cb1-939a-4388-8f25-61079af598c3.png)'
- en: 'Now, click on the button and see that the text view appears:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，点击按钮，查看文本视图是否出现：
- en: '![](img/d24641e8-c35a-4913-bb35-cdf2e3c3c097.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d24641e8-c35a-4913-bb35-cdf2e3c3c097.png)'
- en: Now that the application is working, let's write Xamarin.UITest for it and upload
    it to Xamarin Test Cloud.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在应用程序正常运行，让我们为其编写Xamarin.UITest并将其上传到Xamarin Test Cloud。
- en: 'Add a new test project to the solution:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将一个新的测试项目添加到解决方案中：
- en: '![](img/3565e2ba-8734-433d-9813-3e69d74d84d2.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3565e2ba-8734-433d-9813-3e69d74d84d2.png)'
- en: 'In the Add New Project window, click on Test from the left pane and then select
    UI Test App (Xamarin.UITest | Android). Give the project a name and click OK:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在新增项目窗口中，从左侧窗格点击测试，然后选择UI测试应用程序（Xamarin.UITest | Android）。为项目命名，然后点击确定：
- en: '![](img/4bcdd9d2-d95a-43a0-affe-3ca4fc6c2775.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4bcdd9d2-d95a-43a0-affe-3ca4fc6c2775.png)'
- en: Next, we need to add a reference to the application project, so the `UITest`
    project can build and run the application.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们需要添加对应用程序项目的引用，以便`UITest`项目可以构建和运行应用程序。
- en: 'Right-click on References under the `UITest` project and click on Add Reference:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`UITest`项目下右键单击引用，然后点击添加引用：
- en: '![](img/0b73f11c-3356-4169-9814-632ddad7a0fa.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0b73f11c-3356-4169-9814-632ddad7a0fa.png)'
- en: 'On the next screen, select Projects from the left section and then select the
    ButtonWidget (the application project we want to test) and click on OK:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在接下来的屏幕上，从左侧选择项目，然后选择ButtonWidget（我们要测试的应用程序项目），然后点击确定：
- en: '![](img/38341c66-f34a-4cf2-bd66-13e07bcab24e.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](img/38341c66-f34a-4cf2-bd66-13e07bcab24e.png)'
- en: 'We are all set to start writing our tests for the ButtonWidget app. Open the
    `Tests.cs` file from Solution Explorer under TestProjectName | Tests.cs:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们已准备好开始为ButtonWidget应用程序编写测试了。从解决方案资源管理器中的TestProjectName | Tests.cs打开`Tests.cs`文件：
- en: '![](img/468cda17-f83b-4e41-9f68-56b0278c7f2b.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![](img/468cda17-f83b-4e41-9f68-56b0278c7f2b.png)'
- en: 'Now, change the code to add a new test in the `Tests.cs` file, to test that
    the text view is displayed when the button is pressed:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，修改代码，在`Tests.cs`文件中添加一个新测试，测试按钮按下时是否显示文本视图：
- en: '![](img/b92ab4d2-63aa-4b62-b08b-39ca101d30d1.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b92ab4d2-63aa-4b62-b08b-39ca101d30d1.png)'
- en: 'Now, rebuild and deploy the solution, then click Test | Windows | Test Explorer:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，重新构建并部署解决方案，然后点击“测试 | Windows | 测试资源管理器”：
- en: '![](img/b6038ee3-5ba8-4db2-ab76-d3973f5734de.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b6038ee3-5ba8-4db2-ab76-d3973f5734de.png)'
- en: 'You should be able to see the tests written in the Test Explorer:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你应该能够在测试资源管理器中看到编写的测试：
- en: '![](img/751b7f05-210d-41ef-9aa5-73e6f6d1c66e.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](img/751b7f05-210d-41ef-9aa5-73e6f6d1c66e.png)'
- en: Click on Run All to run the tests.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“运行所有”以运行测试。
- en: Now, to upload these tests to Xamarin Test Cloud, log in to your Xamarin Test
    Cloud account.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，要将这些测试上传到Xamarin Test Cloud，请登录到你的Xamarin Test Cloud帐户。
- en: Go to Account Settings | Teams & Apps.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入帐户设置 | 团队与应用。
- en: Click on the New Team button to create a new team.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“新建团队”按钮以创建新团队。
- en: Add members to the team and then click on New Test Run.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加成员到团队，然后点击“新建测试运行”。
- en: This will open a self-guiding dialog box, where we can select the platform,
    choose devices, and much more.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将打开一个自引导对话框，我们可以在其中选择平台、选择设备等。
- en: Set the operating system as Android and then the devices of your choice, and
    go to the last step.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置操作系统为Android，并选择你希望的设备，然后进入最后一步。
- en: 'You''ll find a screen like the following, where you get a command to upload
    the tests to Xamarin Test Cloud:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将看到如下屏幕，点击命令将测试上传到Xamarin Test Cloud：
- en: '![](img/89bb7340-5521-4a9b-9d5c-2047a7268ebf.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![](img/89bb7340-5521-4a9b-9d5c-2047a7268ebf.png)'
- en: Before you upload your application to Xamarin Test Cloud, it is important to
    build your application in the Release build configuration.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在将应用程序上传到Xamarin Test Cloud之前，确保在发布构建配置中构建应用程序。
- en: Add internet permissions to the project in the project's manifest file.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目的清单文件中添加互联网权限。
- en: Once you have built the project with Release, you are ready to upload your application
    on Xamarin and tune the UITests there. Use the command from the previous step,
    modify `Xamarin.UITest.[version]` to your UITest version, then enter the APK filename
    with the full path to the APK and a relative path to the `UITest` folder, and
    then run it in the root directory of your project.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦你使用发布版本构建了项目，你就可以准备好将应用程序上传到Xamarin，并在那里的UITests中进行调试。使用前一步的命令，将`Xamarin.UITest.[版本]`修改为你的UITest版本，然后输入APK文件的完整路径和`UITest`文件夹的相对路径，然后在项目的根目录中运行。
- en: 'Once you have made these changes to the command, go to the root directory,
    open command prompt windows there, and run the command to upload UITests to Xamarin:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在对命令进行这些更改后，进入根目录，打开命令提示符窗口，并运行命令将UITests上传到Xamarin：
- en: '![](img/3d0b9530-5bc8-4527-a5eb-7bc36037e213.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3d0b9530-5bc8-4527-a5eb-7bc36037e213.png)'
- en: With this, the application is being deployed and tested on Xamarin Test Cloud
    on real physical devices.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过此操作，应用程序正在部署并在Xamarin Test Cloud上进行真实物理设备测试。
- en: You can use this command with your CI tool to automate this process as part
    of continuous integration and continuous testing.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以使用此命令与CI工具一起自动化此过程，作为持续集成和持续测试的一部分。
- en: 'On checking back in Xamarin Test Cloud''s web application, we can see that
    the test has passed on the selected device:'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在返回Xamarin Test Cloud的Web应用程序后，我们可以看到在选定的设备上测试已通过：
- en: '![](img/9189052e-6d35-4595-8823-ca026fad6345.png)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9189052e-6d35-4595-8823-ca026fad6345.png)'
- en: Summary
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we have gone through the entire process of application development,
    deployment, writing test cases, and testing the application by using continuous
    testing on Xamarin Test Cloud. There were two case studies used in this chapter
    to explain the process step by step, from creating a simple Android project to
    writing UITests and using Test Cloud for continuous testing.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们已通过整个应用程序开发、部署、编写测试用例，并通过在Xamarin Test Cloud上进行持续测试来测试应用程序的过程。本章使用了两个案例研究，逐步解释了整个过程，从创建一个简单的Android项目，到编写UITests并使用Test
    Cloud进行持续测试。
