- en: Azure App Service - Hosting Web Applications without a Server
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Azure 应用服务 - 无服务器托管 Web 应用程序
- en: The next step in our cloud journey is PaaS, and we'll introduce Azure App Service.
    Azure App Service is the simplest example of Azure PaaS, and is intended to host
    web applications. We'll see how different hosting applications in IaaS and PaaS
    is.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们云端之旅的下一步是 PaaS，我们将介绍 Azure 应用服务。Azure 应用服务是 Azure PaaS 最简单的例子，旨在托管 Web 应用程序。我们将了解在
    IaaS 和 PaaS 中托管应用程序的区别。
- en: 'In this chapter, we will cover the following:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下内容：
- en: Azure App Service Plans
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure 应用服务计划
- en: Azure Web Apps
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure Web 应用
- en: Traffic Manager
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 流量管理器
- en: App service environment
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用服务环境
- en: Technical requirements
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: For this chapter, you'll need an Azure subscription.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本章需要一个 Azure 订阅。
- en: Azure App Service Plan and Azure Web Apps
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Azure 应用服务计划和 Azure Web 应用
- en: 'PaaS in Azure (or in any public cloud) is more abstract than IaaS. It''s simple
    to understand the IaaS model because it''s not much different from on-premises:
    we create a virtual machine, we configure it any way we want, we install anything
    we want (of course, limited by the OS itself; we can''t install something that
    wouldn''t run on-premises either).'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Azure 中的 PaaS（或任何公共云中的 PaaS）比 IaaS 更抽象。理解 IaaS 模型很简单，因为它与本地环境没什么不同：我们创建虚拟机，按照我们的方式进行配置，安装我们需要的软件（当然，也受限于操作系统本身；我们不能安装一些无法在本地运行的东西）。
- en: After we create our Azure VM, we have complete control over everything on that
    VM. For example, the VMs created in the previous chapter were intended to be used
    as web servers. We can connect to that VM and install all the required roles,
    features, and software in order to start hosting our application.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们创建 Azure 虚拟机后，我们对该虚拟机上的所有内容拥有完全的控制权。例如，在上一章创建的虚拟机旨在作为 web 服务器使用。我们可以连接到该虚拟机并安装所有所需的角色、功能和软件，以开始托管我们的应用程序。
- en: But what if we want to do a similar thing with PaaS?
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，如果我们想用 PaaS 做类似的事情怎么办？
- en: 'An Azure App Service Plan is used to host our web applications in Azure. We
    need to create an Azure App Service Plan and then add Azure Web Apps for our applications.
    A single App Service Plan can host multiple Azure Web Apps. If we install IIS
    on our web server, we can host multiple applications as well. An App Service Plan
    can be compered very much to IIS, but with one big difference: with IIS, we have
    complete control over configuration and with App Service Plan we have a limited
    set of options. This is essentially the difference between IaaS and PaaS.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Azure 应用服务计划用于在 Azure 中托管我们的 web 应用程序。我们需要创建一个 Azure 应用服务计划，然后为我们的应用程序添加 Azure
    Web 应s。一个应用服务计划可以托管多个 Azure Web 应用。如果我们在 web 服务器上安装 IIS，我们也可以托管多个应用。应用服务计划可以与
    IIS 类比，但有一个重要区别：使用 IIS，我们可以完全控制配置，而使用应用服务计划，我们只能选择有限的选项。这本质上是 IaaS 和 PaaS 之间的区别。
- en: With less control comes less maintenance, as many tasks that we needed to perform
    in an on-premises environment are now automated and we don't need to worry about
    them. For example, installing updates in a local environment must be performed
    regularly in order to keep everything up to date and secure. With PaaS, we don't
    need to install any updates as this is done automatically on the host level.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 控制权减少意味着维护工作也减少，因为许多在本地环境中需要执行的任务现在已经自动化，我们不需要担心它们。例如，在本地环境中必须定期安装更新，以确保一切保持最新并保持安全。而在
    PaaS 中，我们不需要安装任何更新，因为这会在主机级别自动完成。
- en: Creating an App Service Plan
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建应用服务计划
- en: 'Let''s start by creating a new App Service Plan. Similar to all Azure resources,
    we need to provide a name, Subscription, Resource Group, and Location. The other
    options available are Operating System and Pricing tier. The options available
    for OS are Windows and Linux. An example of all the information needed to create
    a new App Service Plan is shown in the following screenshot:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从创建一个新的应用服务计划开始。与所有 Azure 资源类似，我们需要提供名称、订阅、资源组和位置。其他可用选项是操作系统和定价层。操作系统的选项有
    Windows 和 Linux。以下截图展示了创建新应用服务计划所需的所有信息示例：
- en: '![](img/41a1f2b3-efad-4093-8541-0b946be61639.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](img/41a1f2b3-efad-4093-8541-0b946be61639.png)'
- en: 'The default value for App Service Plan Pricing tier is S1 Standard or Standard
    1\. If we change this value, a new blade will open with more options. The App
    Service Plan pricing blade is shown in the following screenshot:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 应用服务计划定价层的默认值是 S1 标准或标准 1。如果我们更改此值，将会打开一个新的面板，提供更多选项。以下截图展示了应用服务计划定价面板：
- en: '![](img/b4cbfe4c-6313-4d05-a342-4678f0d7d686.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b4cbfe4c-6313-4d05-a342-4678f0d7d686.png)'
- en: 'App Service Plan pricing is divided into three sections:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: App Service 计划定价分为三个部分：
- en: Dev/Test
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发/测试
- en: Production
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生产环境
- en: Isolated
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 隔离
- en: 'Dev/Test is intended for small workloads in dev/test environments. It has different
    sizes: F1, D1, and Basic (B1, B2, and B3). F1 is free on shared infrstructure,
    has limited compute time per day, and doesn''t support custom domains. D1 has
    more compute hours per day and support for custom domains. The Basic tier has
    dedicated infrastructure and has support for custom domains, SSL, and manual scaling.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 开发/测试适用于开发/测试环境中的小型工作负载。它有不同的大小：F1、D1 和 Basic（B1、B2 和 B3）。F1 是免费的，基于共享基础设施，每天的计算时间有限，并且不支持自定义域名。D1
    每天有更多的计算时间，并支持自定义域名。Basic 层有专用基础设施，并支持自定义域名、SSL 和手动扩展。
- en: Production is intended for bigger workloads in a production environment. It
    comes with Standard and Premium tiers, which each have additional sizes (S1, S2,
    S3, P1, P2, P3, P1v2, P2v2, and P3v2). All sizes in the production section bring
    additional features, like autoscale, slots, backup, and Traffic Manager support.
    The amount of resources available to an App Service Plan depends on size, as each
    size comes with a different amount of memory and number of cores. This also applies
    to the Basic tier, even though it's not intended for production. The main difference
    between the standard and premium tiers is disk type, as standard uses standard
    storage (HDD) and premium uses premium storage (SSD). Premium can also be v1 and
    v2, where v2 has a different processor type and more memory.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 生产环境适用于更大工作负载的生产环境。它提供标准和高级层，每个层都有额外的大小（S1、S2、S3、P1、P2、P3、P1v2、P2v2 和 P3v2）。生产部分的所有大小都带有额外的功能，如自动扩展、插槽、备份和流量管理器支持。App
    Service 计划可用的资源量取决于大小，因为每个大小有不同的内存和核心数。即使 Basic 层不适用于生产环境，这也同样适用。标准层和高级层之间的主要区别在于磁盘类型，标准层使用标准存储（HDD），而高级层使用高级存储（SSD）。高级层还可以分为
    v1 和 v2，其中 v2 使用不同的处理器类型并具有更多的内存。
- en: After an App Service Plan is created, you can start adding Web Apps. It's important
    to say that you can add multiple Web Apps to a single App Service Plan. Billing
    is done on the App Service Plan level and you pay for the entire App Service Plan,
    not for each individual app. The number of apps that can be added to each App
    Service Plan depends on tier and size.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建了 App Service 计划后，你可以开始添加 Web 应用。重要的是要说明，你可以将多个 Web 应用添加到单个 App Service 计划中。计费是在
    App Service 计划级别进行的，你为整个 App Service 计划付费，而不是为每个单独的应用付费。每个 App Service 计划可以添加的应用数量取决于层和大小。
- en: Creating an Azure Web App
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建 Azure Web 应用
- en: To create a new Azure Web App, the standard values that need to be provided
    are App name, Subscription, Resource Group, and Application Insights Location.
    The other required values are OS, App Service plan/Location, and Application Insights.
    The available options for OS are Windows, Linux, and Docker. Values will depend
    on the type of application you want to run. In App Service plan/Location, you
    can create a new App Service Plan or use an existing one.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个新的 Azure Web 应用，需要提供的标准值包括应用名称、订阅、资源组和 Application Insights 位置。其他必需的值包括操作系统、App
    Service 计划/位置和 Application Insights。操作系统的可选值包括 Windows、Linux 和 Docker。具体值将取决于你要运行的应用类型。在
    App Service 计划/位置中，你可以创建一个新的 App Service 计划或使用现有的。
- en: App Service plan/Location will determine the location of your Web App, as it
    needs to be in the same location as the App Service Plan it's associated with.
    Finally, I encourage enabling Application Insights, as this will allow you better
    monitoring and reporting regarding your application usage and performance.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: App Service 计划/位置将决定你的 Web 应用的位置，因为它需要与关联的 App Service 计划位于相同的位置。最后，我鼓励启用 Application
    Insights，因为这将让你更好地监控和报告应用的使用情况和性能。
- en: 'An example of all the information needed to create a Web App is shown in the
    following screenshot:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 Web 应用所需的所有信息示例如下图所示：
- en: '![](img/b74a6380-8375-46f6-862f-5e9031fcba7f.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b74a6380-8375-46f6-862f-5e9031fcba7f.png)'
- en: 'After deployment completes, we can see the following resources created: App
    Service plan, App Service, and Application Insights. This can be a bit confusing
    because different names are used when creating resources and after they are actually
    created. App Service Plan is App Service Plan in both cases.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 部署完成后，我们可以看到以下资源已创建：App Service 计划、App Service 和 Application Insights。这可能有些令人困惑，因为在创建资源时和资源实际创建后使用了不同的名称。App
    Service 计划在两种情况下都是 App Service 计划。
- en: 'In the case of Web App, the name is different. When you want to create a new
    Web App, the blade will show the name Web App, but after it''s created you will
    see it as App Service. To sum up, App Service Plan is referred as App Service
    Plan and Web App is referred to as both Web App and App Service:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Web 应用程序的情况下，名称是不同的。当你想创建一个新的 Web 应用时，面板会显示 Web 应用的名称，但在创建后你会看到它作为应用服务。总结来说，应用服务计划被称为应用服务计划，而
    Web 应用则被称为 Web 应用和应用服务：
- en: '![](img/dfb52210-3323-4318-a2a6-4e864ad77844.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dfb52210-3323-4318-a2a6-4e864ad77844.png)'
- en: Managing Azure Web App
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理 Azure Web 应用
- en: After the deployment of resources is completed, we need to configure them. As
    we don't have direct access and can't install software, roles, or features, we
    have an extended set of preconfigured settings that we can edit. There are more
    options in the App Service blade than in the Virtual Machine Blade, but overall
    we have fewer options as direct configuration isn't available.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 资源部署完成后，我们需要进行配置。由于我们无法直接访问，也不能安装软件、角色或功能，我们有一组可编辑的预配置设置。相比虚拟机面板，应用服务面板中有更多的选项，但总体而言，由于无法进行直接配置，我们的选择会较少。
- en: Let's start with the Azure Web App and continue with configuration.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从 Azure Web 应用程序开始，然后继续配置。
- en: Azure Web App deployment settings
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Azure Web 应用部署设置
- en: The first set of options available for an Azure Web App is deployment. Quickstart
    offers us links to various documents and guides.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: Azure Web 应用的第一组选项是部署。快速入门为我们提供了指向各种文档和指南的链接。
- en: 'We can set the Deployment credentials that will be used for deployment and
    FTP access:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以设置用于部署和 FTP 访问的部署凭据：
- en: '![](img/801f8e06-9957-46dd-b8de-db701dd1e7eb.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](img/801f8e06-9957-46dd-b8de-db701dd1e7eb.png)'
- en: 'Deployment slots is a very interesting feature which allows us to create multiple
    environments for our application. Slots are separate environments, but they can
    be used to swap application versions as well. To create a new slot, we select
    Add a slot and then provide a Name and a Configuration Source. The Configuration
    Source can be one of the existing slots (the configuration of the selected slot
    will be cloned), or we can select not to clone and leave the default values. A
    example of adding a new slot is shown in the following screenshot:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 部署插槽是一个非常有趣的功能，它允许我们为应用程序创建多个环境。插槽是独立的环境，但也可以用于交换应用程序版本。要创建一个新的插槽，我们选择“添加插槽”，然后提供名称和配置源。配置源可以是现有的插槽之一（选定插槽的配置将被克隆），或者我们可以选择不克隆并保留默认值。添加新插槽的示例如下图所示：
- en: '![](img/79fd5e65-27b0-45ca-9028-44a8e608356e.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](img/79fd5e65-27b0-45ca-9028-44a8e608356e.png)'
- en: 'The slot''s name will be formed from the application name with the slot name
    added. For example, I created two slots: staging and test. This is shown in the
    following screenshot:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 插槽的名称将由应用程序名称和插槽名称组成。例如，我创建了两个插槽：staging 和 test。如下图所示：
- en: '![](img/3392330f-93a8-4a4a-abed-4283600c5873.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3392330f-93a8-4a4a-abed-4283600c5873.png)'
- en: A great feature is the option to swap slots. For example, we can have a production
    slot running and have all users pointed to this slot when using the application.
    We can deploy and test on different slots, and this will have no impact on the production
    version of the application that users are currently using. Once we have tested
    everything, we can deploy the new version to the staging slot. The option to swap
    slots allows us to switch between the old production version and the new version
    in a matter of seconds with minimal impact on our users. When we hit swap, everything
    in staging becomes production and the old production becomes staging. Settings
    between slots are not changed, so staging can use a different database than production,
    for example. Another great thing is that we can swap back as well. Even when we
    test and validate, users may experience problems and bugs in new versions of applications.
    In this case, we can simply switch back and return to the previous production
    version, moving it from staging to production and the new version from production
    to staging. This will allow users to continue using the last stable version of
    the application, while we can examine and troubleshoot in staging in order to
    resolve the issue. Once we resolve the issue, simply swap again and the new version
    is back in production.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 一个很棒的功能是交换槽位的选项。例如，我们可以运行一个生产槽，并将所有用户指向此槽位来使用应用程序。我们可以在不同的槽位上进行部署和测试，这不会影响用户当前使用的生产版本。一旦我们测试完毕，就可以将新版本部署到暂存槽。交换槽位的选项使我们能够在几秒钟内在旧的生产版本和新版本之间切换，且对用户的影响最小。当我们点击交换时，暂存中的一切将变成生产版本，旧的生产版本变为暂存。槽位之间的设置不会改变，因此，暂存槽可以使用与生产环境不同的数据库。例如，另一个很棒的功能是我们也可以进行反向交换。即使我们已经进行测试和验证，用户可能会在新版本的应用程序中遇到问题和错误。在这种情况下，我们只需切换回之前的生产版本，将其从暂存槽移动到生产槽，并将新版本从生产槽移到暂存槽。这将允许用户继续使用上一个稳定版本的应用程序，同时我们可以在暂存槽中检查和排查问题。一旦解决了问题，只需再次交换，新的版本就会回到生产环境。
- en: 'An example of slot swapping is shown in the following screenshot:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了一个槽位交换的示例：
- en: '![](img/87543d9d-66e5-4961-b575-b1fc311a847c.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](img/87543d9d-66e5-4961-b575-b1fc311a847c.png)'
- en: 'Deployment option and Deployment Center (Preview) give you options to connect
    to a code repository. Most common repositories are default options, such as Visual
    Studio Team Services, GitHub, or Bitbucket. File shares like OneDrive or Dropbox
    are also an option and you can link to a custom external repository as well, like
    Local Git Repository or Team Foundation Server. The difference is that besides
    connecting a repository, Deployment Center (Preview) gives you the option to establish
    a continuous integration/continuous delivery pipeline. Deployment option sources
    are shown in the following screenshot:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 部署选项和部署中心（预览版）为您提供了连接到代码仓库的选项。最常见的仓库是默认选项，如 Visual Studio Team Services、GitHub
    或 Bitbucket。像 OneDrive 或 Dropbox 这样的文件共享也是一个选项，您也可以链接到自定义的外部仓库，比如本地 Git 仓库或团队基础服务器。不同之处在于，除了连接仓库之外，部署中心（预览版）还为您提供了建立持续集成/持续交付管道的选项。以下截图展示了部署选项的源：
- en: '![](img/900fc5af-d96f-49ce-acf7-81aa954bab26.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](img/900fc5af-d96f-49ce-acf7-81aa954bab26.png)'
- en: Azure Web App general settings
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Azure Web App 一般设置
- en: Azure Web App settings have some similar features to other Azure services, such
    as properties and locks. Also, most Azure services have a Scale up (App Service
    plan) and/or Scale out (App Service plan) option. Some unique settings are Application
    settings, Authentication/Authorization, Application Insights, Managed service
    identity, Backups, Custom domains, SSL settings, Networking, WebJobs, Push notifications,
    and MySQL In App. The Networking option allows us to connect a Web App to an Azure
    VNet, or even create a hybrid connection to our on-premises environment. WebJobs
    allow us to create background processes that can be executed on a schedule or
    triggered by an event. Push notifications are usually used for mobile applications
    in order to send various notifications to the mobile device where the application
    is running, like news, updates, and so on. MySQL In App creates a MySQL instance
    that your application can use.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: Azure Web 应用设置与其他 Azure 服务有一些相似功能，例如属性和锁定。此外，大多数 Azure 服务都有“扩展”（应用服务计划）和/或“扩展”（应用服务计划）选项。一些独特的设置包括应用设置、身份验证/授权、应用洞察、托管服务身份、备份、自定义域名、SSL
    设置、网络、WebJobs、推送通知和 MySQL In App。网络选项允许我们将 Web 应用连接到 Azure VNet，甚至创建与本地环境的混合连接。WebJobs
    允许我们创建可以按计划执行或由事件触发的后台进程。推送通知通常用于移动应用程序，以向正在运行应用程序的移动设备发送各种通知，例如新闻、更新等。MySQL In
    App 创建一个 MySQL 实例，供应用程序使用。
- en: 'However, this is for small workloads and I don''t recommend using this other
    than for development and testing. A list of all settings is shown in the following
    screenshot:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这适用于小型工作负载，我不建议除了用于开发和测试之外使用它。以下截图显示了所有设置的列表：
- en: '![](img/73e0f357-97a7-45ed-a1a2-a625a90a28da.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](img/73e0f357-97a7-45ed-a1a2-a625a90a28da.png)'
- en: General settings have a preconfigured set of options which allow us to change
    framework versions and other settings needed for our application. For example,
    we can switch between different versions of .NET, PHP, Python, or Java. We can
    also switch between 32-bit and 64-bit platforms, turn Websockets on or off, set
    a managed pipeline version to classic or integrated, and so on.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 常规设置提供了一组预配置的选项，允许我们更改框架版本和应用程序所需的其他设置。例如，我们可以在不同版本的 .NET、PHP、Python 或 Java
    之间切换。我们还可以在 32 位和 64 位平台之间切换，打开或关闭 Websockets，设置托管管道版本为经典或集成等。
- en: 'One very important option is always on, and I strongly recommend you set this
    to On. If the application isn''t used for a period of time, it can take some time
    to establish the first connection. For example, if the application is used during
    working hours, it can take some time for first users to connect in the morning
    because the application wasn''t used during the night. Setting Always On will
    ping the application from time to time and keep it active. This way, whenever
    users try to connect, the application will be ready and there will be no wait
    time:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 有一个非常重要的选项始终处于开启状态，我强烈建议您将其设置为开启。如果应用程序在一段时间内未使用，首次连接可能需要一些时间。例如，如果应用程序在工作时间内使用，早晨首次使用时可能需要一些时间才能连接，因为应用程序在晚上未使用。设置为始终开启会定期
    ping 应用程序，保持其活跃。这样，无论何时用户尝试连接，应用程序都会准备就绪，不会有等待时间：
- en: '![](img/de238724-4a41-454b-8e47-43de1f479852.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](img/de238724-4a41-454b-8e47-43de1f479852.png)'
- en: 'The Authentication/Authorization option allows us to set up a user login for
    our application. The default option is anonymous access, but we can set up Azure
    Active Directory, a Microsoft Live account, Facebook, Google, and Twitter. Managed
    Service Identity allows the application to be registered in Azure Active Directory
    and use the registration to communicate with other applications in Azure Active
    Directory. A list of Authentication Providers in the Authentication/Authorization
    blade is shown here:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 身份验证/授权选项允许我们为应用程序设置用户登录。默认选项为匿名访问，但我们可以设置 Azure Active Directory、Microsoft
    Live 账户、Facebook、Google 和 Twitter。托管服务身份允许应用程序在 Azure Active Directory 中注册，并使用该注册与
    Azure Active Directory 中的其他应用程序进行通信。以下是身份验证/授权面板中显示的身份验证提供者列表：
- en: '![](img/385677a6-4fc8-44b8-8c50-8805265ffe5a.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](img/385677a6-4fc8-44b8-8c50-8805265ffe5a.png)'
- en: 'The Backup option allows us to create a backup for our application. We need
    to provide Storage Settings (the storage account where the backup will be stored),
    backup schedule, and retention period. The default retention period is 30 days
    and the default schedule is daily, but you can change these settings. If you set
    up a connection to a code repository, this option is not really necessary as you
    can redeploy the application at any time, but it''s a useful feature if you want
    a quick restore or if you don''t use a code repository:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 备份选项允许我们为应用程序创建备份。我们需要提供存储设置（备份将存储在哪个存储账户）、备份计划和保留期。默认的保留期为 30 天，默认计划为每天一次，但您可以更改这些设置。如果您设置了与代码仓库的连接，则此选项并不真正必要，因为您可以随时重新部署应用程序，但如果您希望快速恢复，或者如果您没有使用代码仓库，它是一个有用的功能：
- en: '![](img/8399ee1f-19f5-4d71-addf-e815c576bdd7.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8399ee1f-19f5-4d71-addf-e815c576bdd7.png)'
- en: Custom domains, certificates, and scaling
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自定义域名、证书和扩展
- en: Custom domains and SSL settings allow us to customize the URL for our application
    and apply certificates to encrypt connections and increase security. These are
    directly connected as you can't apply a valid SSL certificate without a custom
    domain for your Web App.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 自定义域名和 SSL 设置使我们能够自定义应用程序的 URL，并应用证书来加密连接并提高安全性。这些设置是直接关联的，因为没有自定义域名，您无法为 Web
    应用应用有效的 SSL 证书。
- en: An Azure Web App, by default, has the URL `customname.azurewebsites.net` (where
    in `customname` is the name you provided while creating the Web App). In order
    to simplify access, you can use a custom URL that you already own or you can buy
    a new domain. There is even the option to buy a new domain through the Azure portal,
    but the offer is not provided by Microsoft, but by partners. If you buy a new
    domain through the Azure portal, this will be added to your Azure bill.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Azure Web 应用的 URL 为 `customname.azurewebsites.net`（其中 `customname` 是您在创建
    Web 应用时提供的名称）。为了简化访问，您可以使用已经拥有的自定义 URL，或者购买一个新的域名。甚至可以通过 Azure 门户购买新域名，但该服务并非由微软提供，而是由合作伙伴提供。如果您通过
    Azure 门户购买新域名，这将被添加到您的 Azure 账单中。
- en: 'In order to set up a custom domain, domain ownership needs to be verified.
    This is done by adding ether CNAME (`customname.azurewebsites.net`) or a record
    (Azure Web App IP address) on your DNS which will point your custom domain to
    the Azure Web App. Once verification is done, you just need to confirm that you
    want to use that domain for your Azure Web App. Also, you can set up your website
    to use HTTPS only to increase security, especially if you are using SSL. Information
    on CNAME and the IP addresses that need to be added to verify ownership, and later
    to be used to point to your website, can be found on this page:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 为了设置自定义域名，需要验证域名所有权。通过在您的 DNS 中添加 CNAME（`customname.azurewebsites.net`）或记录（Azure
    Web 应用 IP 地址）来完成此验证，这将把您的自定义域名指向 Azure Web 应用。一旦验证完成，您只需确认是否希望使用该域名为您的 Azure Web
    应用。此外，您还可以将网站设置为仅使用 HTTPS，以提高安全性，特别是当您使用 SSL 时。有关 CNAME 和需要添加的 IP 地址的信息，这些信息用于验证所有权，并在稍后指向您的网站，您可以在此页面找到：
- en: '![](img/50a52c1b-9712-4a56-ba78-c4e568780062.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](img/50a52c1b-9712-4a56-ba78-c4e568780062.png)'
- en: 'SSL Configuration allows us to set HTTPS Only again. I strongly advise you
    to use this whenever possible. Another security option is Minimum TLS Version,
    wherein you can choose between 1.0, 1.1 and 1.2\. It is recommended to use TLS
    1.2 as it may be reported insecure otherwise. The Bindings option allows you to
    pair up a custom domain and available certificates. As you can have more custom
    domains point to a single website, all available domains with SSL will be shown
    in the list, as shown here:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: SSL 配置允许我们重新设置为仅支持 HTTPS。我强烈建议在可能的情况下使用此选项。另一个安全选项是最低 TLS 版本，您可以在 1.0、1.1 和
    1.2 之间进行选择。建议使用 TLS 1.2，因为如果不使用，可能会被报告为不安全。绑定选项允许您将自定义域名与可用证书配对。由于您可以让更多自定义域名指向同一个网站，因此所有启用
    SSL 的域名将显示在列表中，如下所示：
- en: '![](img/001af4c7-19de-48ff-b19c-16e246f43acd.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](img/001af4c7-19de-48ff-b19c-16e246f43acd.png)'
- en: 'The Certificates section under SSL settings allows you to manage certificates
    for your website. You can either Import App Service Certificate or Upload Certificate.
    An App Service certificate is an option that allows you to buy a certificate through
    the Azure portal and use that certificate for your applications. This certificate
    will be available to all apps in the tenant. The Upload Certificate option allows
    you to upload an existing certificate that you already have or have bought from
    an external source. Certificates will show under the public or private list, depending
    on the type of certificate you uploaded or imported. You can also request Client
    Certificates if needed. All certificate options are shown in the following screenshot:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: SSL 设置下的证书部分允许您管理网站的证书。您可以选择导入应用服务证书或上传证书。应用服务证书是允许您通过 Azure 门户购买证书并将该证书用于您的应用程序的选项。此证书将对租户中的所有应用程序可用。上传证书选项允许您上传已有的证书，或上传您从外部来源购买的证书。证书会根据您上传或导入的证书类型显示在公共或私有列表中。您还可以根据需要请求客户端证书。所有证书选项如以下截图所示：
- en: '![](img/b1ca8dc0-f0e0-4935-930d-bccc80c5ebd3.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b1ca8dc0-f0e0-4935-930d-bccc80c5ebd3.png)'
- en: 'Automatic scaling for Azure Web Apps is done similarly to a **virtual machine
    scale set** (**VMSS**). Under the Scale out section, you can find a blade that
    is identical to the scale out blade in VMSS. In order to configure scale out rules,
    you need to set up scale out and scale in parameters. For example, you can set
    up a web app to add an additional instance whenever the CPU goes over 70%, and
    then decrease the number of instances if the CPU goes under 25%. You can set up
    the minimum, maximum, and default number of instances. Additional scale out and
    scale in rules can be added that will perform a scale in/out depending on different
    metrics. This will allow you to save money and run the minimum number of instances
    needed without suffering performance issues. An example of scale conditions is
    shown in the following screenshot:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: Azure Web 应用的自动缩放与**虚拟机规模集**（**VMSS**）类似。在“扩展”部分，您可以找到一个与 VMSS 中的扩展面板相同的面板。为了配置扩展规则，您需要设置扩展和缩减的参数。例如，您可以设置
    Web 应用，当 CPU 超过 70% 时，添加一个额外实例；而当 CPU 降低到 25% 以下时，减少实例数量。您可以设置最小、最大和默认实例数。还可以添加更多扩展和缩减规则，根据不同的指标进行扩展或缩减。这将帮助您节省成本，并且仅运行所需的最少实例数量，避免性能问题。以下截图显示了扩展条件的示例：
- en: '![](img/8829b542-cdcc-4897-951f-97eaa925b9b4.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8829b542-cdcc-4897-951f-97eaa925b9b4.png)'
- en: Azure Web App Tools
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Azure Web App 工具
- en: 'Azure Web Apps have some unique tools that are specific to this service: DEVELOPMENT
    TOOLS, MOBILE, and API.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: Azure Web 应用有一些独特的工具，专门针对该服务：开发工具、移动和 API。
- en: DEVELOPMENT TOOLS start with the Clone app option, which allows us to create
    a new instance of the Web App that will be an identical replica of the existing
    app. However, this option is limited only to the Premium tier, and if you are
    using any other tier, this option will not be available unless you upgrade. Console
    gives you web access to the console, where you can browse files and perform actions
    on the command line.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 开发工具以“克隆应用”选项开始，该选项允许我们创建一个新的 Web 应用实例，该实例将与现有的应用程序完全相同。然而，此选项仅限于**高级**等级，如果您使用的是其他等级，则该选项不可用，除非您进行升级。控制台为您提供了对控制台的
    Web 访问，您可以在其中浏览文件并执行命令行操作。
- en: Advanced Tools opens an additional window that contains a few different options,
    like debug console, process explorer, resource explorer, and different information
    for debugging and deployment. We can also add extensions to our Web App and choose
    hundreds of different extensions from the gallery in the site extensions section.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 高级工具会打开一个额外的窗口，包含一些不同的选项，如调试控制台、进程资源管理器、资源浏览器以及用于调试和部署的不同信息。我们还可以向 Web 应用添加扩展，并从网站扩展部分选择数百种不同的扩展。
- en: App Service Editor (Preview) allows you web access to the code editor, wherein
    you can make live changes to application code without any additional tools. Performance
    test allows you to perform load tests on your app and see how it would handle
    any amount of concurrent users. Resource explorer and Extensions are the options
    available in the advanced tools that we talked about.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 应用服务编辑器（预览）允许您访问代码编辑器，您可以在其中直接修改应用程序代码，无需任何额外工具。性能测试允许您对应用进行负载测试，查看它如何处理任意数量的并发用户。资源浏览器和扩展是我们讨论过的高级工具中的选项。
- en: 'A very interesting option is Testing in production. It requires the use of
    slots and allows you to redirect a percentage of users to a different slot for
    user testing. For example, we deployed a new version of the application to the staging
    slot. Using this feature, we can point 10% of users to this slot in order to verify
    that the application is working as expected. Once we verify that 10% of the users
    don''t have any issues, we can increase this to 25%, then to 50%, and then finally
    switch all users to the new version. A list of all development tools is shown
    in the following screenshot:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 一个非常有趣的选项是生产环境中的测试。它需要使用插槽，并允许你将一定比例的用户重定向到不同的插槽进行用户测试。例如，我们将应用程序的新版本部署到暂存插槽。使用此功能，我们可以将
    10% 的用户指向此插槽，以验证应用程序是否按预期工作。一旦确认 10% 的用户没有问题，我们可以将其增加到 25%，然后是 50%，最后将所有用户切换到新版本。以下是所有开发工具的列表：
- en: '![](img/2f9c92e9-4a41-41cd-819b-5a44bb354486.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2f9c92e9-4a41-41cd-819b-5a44bb354486.png)'
- en: 'The other sections available are MOBILE, API, and MONITORING:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 其他可用的部分包括 MOBILE、API 和 MONITORING：
- en: 'MOBILE: This has three options which are intended to be used for mobile applications.
    These options are Easy tables, Easy APIs, and Data connections. Data connections
    defines a connection to the Azure SQL database and is also a requirement for Easy
    tables and Easy APIs. Both Easy tables and Easy APIs require mobile extension
    to be installed on your Web App.'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MOBILE：该部分有三个选项，旨在用于移动应用程序。这些选项包括 Easy tables、Easy APIs 和 Data connections。Data
    connections 定义了与 Azure SQL 数据库的连接，同时也是 Easy tables 和 Easy APIs 的要求。Easy tables
    和 Easy APIs 都需要在 Web 应用上安装移动扩展。
- en: API: The API section contains API Definitions and CORS. API definition lets
    you configure the location of the Swagger 2.0 metadata describing your API. This
    makes it easy for others to discover and consume your API. Note that the URL can
    be a relative or absolute path, but must be publicly accessible. **Cross-Origin
    Resource Sharing** (**CORS**) allows JavaScript code running in a browser on an
    external host to interact with your backend.
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: API：API 部分包含 API 定义和 CORS。API 定义让你可以配置描述 API 的 Swagger 2.0 元数据的位置。这使得其他人能够轻松发现并使用你的
    API。请注意，URL 可以是相对路径或绝对路径，但必须是公开可访问的。**跨域资源共享**（**CORS**）允许在外部主机上的浏览器中运行的 JavaScript
    代码与你的后台进行交互。
- en: 'MONITORING: This is available for other resources, and we already covered most
    of these options. The options available for monitoring are Alerts (Classic), Diagnostic
    logs, Log stream, and Process explorer. In Diagnostic logs, you can set the level
    of logs you want to save. Log stream gives you the option to observe logs live.
    The list of options in the MOBILE, API, and MONITORING sections is shown in the
    following screenshot:'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MONITORING：这适用于其他资源，我们已经涵盖了其中大部分选项。监控选项包括 Alerts（经典）、诊断日志、日志流和进程资源管理器。在诊断日志中，你可以设置要保存的日志级别。日志流则提供了实时查看日志的选项。MOBILE、API
    和 MONITORING 部分中的选项如下所示：
- en: '![](img/c56eea20-5b27-4198-aca5-e955f775788c.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c56eea20-5b27-4198-aca5-e955f775788c.png)'
- en: Monitoring a Web App in Azure
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Azure 中监控 Web 应用
- en: The default options for monitoring Azure Web Apps can be useful, but it's only
    the beginning of the Web App monitoring options. If you want a really powerful
    tool for monitoring and alerting with dashboards and analytics, Application Insights
    is the tool you want to use. Application Insights can be created and linked to
    a Web App while creating the Web App or later.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 默认的 Azure Web 应用监控选项虽然有用，但它仅仅是 Web 应用监控选项的开始。如果你想要一个强大的工具来进行监控和告警，同时提供仪表盘和分析，Application
    Insights 是你想要使用的工具。可以在创建 Web 应用时或之后创建并将 Application Insights 链接到 Web 应用。
- en: Also, you can use a single Application Insight to monitor multiple Azure Web
    Apps. It's interesting that Application Insights is not limited to Azure Web Apps,
    but can be used with an application hosted anywhere, including other cloud providers
    or an on-premises data center.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你还可以使用单个 Application Insights 来监控多个 Azure Web 应用。值得注意的是，Application Insights
    并不限于 Azure Web 应用，它可以与任何托管的应用程序一起使用，包括其他云提供商或本地数据中心。
- en: Application Insights
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Application Insights
- en: 'A first look at Application Insights gives you a few dashboards that show basic
    information on requests, response time, and availability for your application
    in the last two hours. These dashboards can be customized with different time
    frames and to show different metrics altogether. An example of App Insights dashboards
    is shown in the following screenshot:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 初次查看应用程序洞察，你会看到几个仪表板，显示过去两小时内关于请求、响应时间和应用程序可用性的基本信息。这些仪表板可以根据不同的时间框架进行自定义，并显示不同的指标。以下是App
    Insights仪表板的示例：
- en: '![](img/85093542-3db9-476f-bfe8-906c132f7e4d.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](img/85093542-3db9-476f-bfe8-906c132f7e4d.png)'
- en: 'The first set of options under Application Insights is under the INVESTIGATE
    section. In this section, we have multiple metric options which allow us to track
    different performance counters and dependencies. Most of these options can be
    edited and we can extract specific information, as well as create custom dashboards
    and alerts. Some of these metrics can be collected only if the Application Insight
    SDK is installed on your application. A list of all options under the INVESTIGATE section
    is shown in the following screenshot:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在应用程序洞察下的第一个选项组位于调查（INVESTIGATE）部分。在此部分中，我们有多个指标选项，允许我们跟踪不同的性能计数器和依赖项。大多数这些选项可以编辑，我们可以提取特定信息，并创建自定义仪表板和警报。某些指标只有在应用程序中安装了应用程序洞察SDK时才能收集。调查部分下的所有选项列表如下所示：
- en: '![](img/4937a4de-9b14-4922-8e16-db2e025b44bb.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4937a4de-9b14-4922-8e16-db2e025b44bb.png)'
- en: An example of one of these alerts is availability. We can create a test that
    will continuously test our application from different locations in order to confirm
    that the application is available.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这些警报的一个示例是可用性。我们可以创建一个测试，持续从不同的位置测试我们的应用程序，以确认应用程序是否可用。
- en: 'We can edit test frequency, test locations, success criteria, and alerts. If
    the default settings are used, the application will be pinged every 5 minutes
    from five different locations. In case three or more locations fail to contact
    the application, an alert will be triggered and a notification will be sent. An
    example of an availability test is shown in the following screenshot:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以编辑测试频率、测试位置、成功标准和警报。如果使用默认设置，应用程序将在五个不同的位置每5分钟进行一次ping操作。如果三个或更多位置无法联系到应用程序，将触发警报并发送通知。以下截图展示了一个可用性测试的示例：
- en: '![](img/f2041e16-ae29-427b-afca-35482d21d23e.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f2041e16-ae29-427b-afca-35482d21d23e.png)'
- en: 'The USAGE section contains various information on Users, Sessions, Events,
    and User Flows. To get metrics in this section, you need to use the Application
    Insight JavaScript SDK and add JavaScript code snippets to your application. A
    list of all options under users is shown in the following screenshot:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 使用情况（USAGE）部分包含有关用户、会话、事件和用户流程的各种信息。要在此部分获取指标，你需要使用应用程序洞察JavaScript SDK并将JavaScript代码片段添加到你的应用程序中。以下是用户部分下的所有选项列表：
- en: '![](img/aed7b452-8862-4c8e-a850-b09d9cf38698.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![](img/aed7b452-8862-4c8e-a850-b09d9cf38698.png)'
- en: 'Here is an example of a code snippet that needs to be added to an application
    in order to collect usage information:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个需要添加到应用程序中的代码片段示例，以便收集使用情况信息：
- en: '[PRE0]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The CONFIGURE section has a lot of settings that are already included in other
    Application Insights settings (such as Smart Detection settings) and Azure Web
    Apps settings (such as Performance Testing). The most interesting features are
    API Access (which allows you to manage API keys that allow other applications
    to access APIs on your Azure Web App) and Work Items (which allow you to connect
    to Visual Studio Team Services and link work items directly to your application).
    A list of settings under the configuration section in Application Insights is
    shown in the following screenshot:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 配置（CONFIGURE）部分包含许多已经包含在其他应用程序洞察设置（如智能检测设置）和Azure Web应用设置（如性能测试）中的设置。最有趣的功能是API访问（允许你管理API密钥，从而让其他应用程序访问你的Azure
    Web应用上的API）和工作项（允许你连接到Visual Studio Team Services并将工作项直接链接到你的应用程序）。在应用程序洞察的配置部分下的设置列表如下所示：
- en: '![](img/38897b08-b3bb-4f14-97f5-7b780efb246a.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![](img/38897b08-b3bb-4f14-97f5-7b780efb246a.png)'
- en: 'APPLICATION INSIGHTS logs a lot of different metrics. You can create custom
    queries to get different kinds of information in Application Insights Analytics.
    The results of these queries can be displayed as a table or as a chart. A screenshot
    of Application Insight Analytics is shown here:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: APPLICATION INSIGHTS记录了许多不同的指标。你可以在Application Insights Analytics中创建自定义查询，获取不同类型的信息。这些查询的结果可以以表格或图表的形式显示。以下是Application
    Insight Analytics的截图：
- en: '![](img/6bb24688-a954-4e16-af3c-9a42123b58d8.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6bb24688-a954-4e16-af3c-9a42123b58d8.png)'
- en: 'Here is an example of an Application Insights query:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个Application Insights查询的示例：
- en: '[PRE1]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Azure App Service Plan
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Azure App Service Plan
- en: In the process of creating an Azure Web App, we needed to create an Azure App
    Service Plan. Let's take a step back and go over the settings available in the Azure
    App Service Plan.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建Azure Web App的过程中，我们需要创建一个Azure App Service Plan。让我们回顾一下Azure App Service
    Plan中可用的设置。
- en: Under SETTINGS, we have some options that are available in Azure Web Apps, such
    as Networking, Scale up (App Service plan), and Scale out (App Service plan).
    Properties, Locks, and an Automation script are available as well, as in all other
    Azure resources. Note that an App Service Plan can host multiple Azure Web Apps.
    Billing is done for an Azure App Service Plan; you don't pay per Web App. So,
    tier changes on an Azure Web App are directly connected to tier changes in the Azure
    App Service Plan. Scale up/down and scale in/out operations done in the Web App
    blade will be shown here as the tier will not change for the Azure Web App, but
    for the Azure App Service Plan.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在SETTINGS下，我们有一些在Azure Web Apps中可用的选项，如网络、扩展（App Service计划）和扩展（App Service计划）。还有属性、锁定和自动化脚本等选项，和所有其他Azure资源一样。请注意，一个App
    Service Plan可以托管多个Azure Web Apps。计费是按Azure App Service Plan进行的；你不需要按Web App计费。因此，Azure
    Web App的层级变化与Azure App Service Plan中的层级变化是直接相关的。在Web App刀片中进行的扩展/缩减和横向扩展/缩减操作将在此处显示，因为层级不会在Azure
    Web App中变化，而是在Azure App Service Plan中变化。
- en: 'A list of all options under settings in the Azure App Service Plan is shown
    in the following screenshot:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了Azure App Service Plan中的所有设置选项：
- en: '![](img/a157b3c1-9ee3-4105-b237-31da7938d013.png)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a157b3c1-9ee3-4105-b237-31da7938d013.png)'
- en: 'On of the things that is different and unique for an Azure App Service Plan
    is Apps. As already mentioned, more Azure Web Apps can be hosted on a single Azure
    App Service Plan. The Apps option under settings has all these Web Apps listed,
    along with any slots that are created under these Web Apps. An example of an app
    list is shown in the following screenshot:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: Azure App Service Plan的一个不同和独特之处是应用程序。如前所述，可以在单一Azure App Service Plan上托管多个Azure
    Web Apps。设置下的Apps选项列出了所有这些Web Apps，以及在这些Web Apps下创建的任何槽位。以下是应用程序列表的示例：
- en: '![](img/8faf6435-5c52-4a30-8d21-4731e2a099bb.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8faf6435-5c52-4a30-8d21-4731e2a099bb.png)'
- en: 'Another different option is file system storage. Every Azure App Service Plan
    has resource limitations. Under File system storage, we have information on how
    much total and free space is available. A screenshot of File system storage is
    shown here:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个不同的选项是文件系统存储。每个Azure App Service Plan都有资源限制。在文件系统存储下，我们可以查看总空间和可用空间的信息。以下是文件系统存储的截图：
- en: '![](img/f87d8224-7b71-40c0-8275-57e773b4305e.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f87d8224-7b71-40c0-8275-57e773b4305e.png)'
- en: Azure Web App high availability
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Azure Web App高可用性
- en: We have already seen how to set up automatic scaling for Azure Web Apps and
    how to create scale in and out rules. But scaling can improve performance and
    keep the application up if there is an increase in requests and doesn't really
    secure the high availability of the application. If there is an issue in the Azure
    Data Center where the application is located, or maintenance on the host is in
    progress, the application will be unavailable if hosted in a single location.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看过如何为Azure Web Apps设置自动扩展以及如何创建扩展和缩减规则。但是，扩展可以提高性能，并且在请求增加时保持应用程序正常运行，但并不能真正保证应用程序的高可用性。如果Azure数据中心出现问题，或者托管主机正在进行维护，应用程序将在单一位置托管时不可用。
- en: 'In order to achieve high availability, we need to introduce another Azure service:
    Traffic Manager. Azure Traffic Manager operates on the DNS level to direct incoming
    requests to endpoints based on custom routing rules.'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现高可用性，我们需要引入另一个Azure服务：Traffic Manager。Azure Traffic Manager在DNS级别操作，根据自定义路由规则将传入请求定向到端点。
- en: Let's start with creating a new Azure Traffic Manager and go through the configuration
    to show how to set up high availability for Azure Web Apps.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从创建一个新的 Azure 流量管理器开始，并通过配置过程展示如何为 Azure Web 应用设置高可用性。
- en: Creating a Traffic Manager
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建流量管理器
- en: To create a new Azure Traffic Manager, we need to provide the name, routing
    method, subscription resource group, and location. The location will be automatically
    chosen if an existing resource group is used. One option that is specific to Traffic
    Manager is the routing method, and the available options are performance, weighted,
    priority, and geographical.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个新的 Azure 流量管理器，我们需要提供名称、路由方法、订阅资源组和位置。如果使用现有的资源组，位置将自动选择。流量管理器特有的选项是路由方法，提供的可选方法有性能、加权、优先级和地理。
- en: The Performance option is used when you want to point a user to a location that
    will provide the best performance based on response time, network latency, and
    so on.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 性能选项用于当你希望根据响应时间、网络延迟等因素将用户指向提供最佳性能的地点时。
- en: Weighted will distribute requests evenly or according to weight rules. For example,
    the default rule will distribute it evenly, and if we have two endpoints defined
    then half the requests will go to one endpoint and the other half to the second
    endpoint. But weight rules can be defined to have one endpoint receive 70% (or
    any other number) of requests, and the rest will be sent to the second endpoint.
    Of course, you can have more than two endpoints defined (two is the minimum) and
    create rules to weight any ratio you want.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 加权将根据权重规则均匀地分配请求。例如，默认规则会将请求均匀分配，如果我们定义了两个端点，则一半的请求会发送到一个端点，另一半会发送到第二个端点。但可以定义权重规则，使得一个端点接收
    70%（或任何其他数值）的请求，其余请求则发送到第二个端点。当然，你可以定义多个端点（两个是最少的）并创建任何你想要的权重比例规则。
- en: The Geographical option will point users to the closest geographical location.
    For example, we can have two endpoints which are located in West Europe and East
    US. If the geographical routing method is used, users coming from Europe will
    be pointed to the endpoint in West Europe and users coming from the USA will be
    pointed to East US.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 地理选项将引导用户到最近的地理位置。例如，我们可以有两个端点，一个位于西欧，另一个位于东美洲。如果使用地理路由方法，来自欧洲的用户将被引导到西欧的端点，而来自美国的用户将被引导到东美洲的端点。
- en: Finally, the priority routing method is usually used when high availability
    is the goal. One endpoint will be used as the primary endpoint, so all traffic
    will be pointed only to the primary endpoint. In case the primary endpoint becomes
    unavailable, all traffic will be pointed to the secondary instance. Of course,
    you can have more than only two endpoints. More endpoints ensures a bigger chance
    that at least one endpoint will be available and this increases the high availability
    percentage.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，优先级路由方法通常在高可用性是目标时使用。一个端点将作为主端点，因此所有流量只会指向主端点。如果主端点不可用，所有流量将指向备用实例。当然，你可以定义多个端点，而不仅仅是两个。更多的端点确保至少有一个端点是可用的，从而提高高可用性的百分比。
- en: In some cases, the performance method can be used to achieve a similar goal
    to endpoint tracking, and users are pointed to the one that will perform best
    in a given situation. If the endpoint is unavailable, this will be reflected as
    a drop in performance and users will be directed to another endpoint that is giving
    better results. An issue with this approach is that the performance drop can take
    time to be detected, and users may experience issues until the performance of
    the endpoint is recognized to be down and they are redirected to a different endpoint.
    With the priority method, the availability of the endpoint is monitored, an issue
    is detected much faster, and users are pointed to a healthy instance faster and
    with lesser chance of experiencing issues.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，性能方法可以用来实现类似端点跟踪的目标，用户将被引导到在特定情况下表现最佳的端点。如果端点不可用，这将表现为性能下降，用户将被引导到另一个表现更好的端点。使用这种方法的问题是，性能下降的情况可能需要一些时间才能被检测到，用户在性能下降之前可能会遇到问题，直到端点的性能被确认下降并重新定向到其他端点。使用优先级方法时，端点的可用性被监控，问题被更快地检测到，用户将更快地被引导到健康的实例，并且遇到问题的可能性较小。
- en: 'An example of a filled template used to create a new Azure Traffic Manager
    is shown in the following screenshot:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了一个用于创建新的 Azure 流量管理器的填写模板示例：
- en: '![](img/2f321087-2952-4747-8b0f-b12681bc09d0.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2f321087-2952-4747-8b0f-b12681bc09d0.png)'
- en: Traffic Manager configuration and settings
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Traffic Manager 配置和设置
- en: Once an Azure Traffic Manager is created, we can proceed with configuration.
    The SETTINGS specific to Traffic Manager are Configuration, Real user measurements,
    Traffic view, and Endpoints.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦创建了 Azure Traffic Manager，我们可以继续配置。Traffic Manager 特定的设置包括配置、实际用户度量、流量视图和端点。
- en: 'Real user measurements and Traffic view allow you to monitor behavior and see
    where users are pointed and how traffic is flowing. Traffic view will give you
    insights into where requests are coming from, using a map and pointing to request
    origins geographically. Real user measurements can give you more insight into
    requests and traffic, but requires a measurement key and JavaScript snippet to
    be embedded in the application code:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 实际用户度量和流量视图可以让你监控用户行为，查看用户的指向位置以及流量的流动情况。流量视图将为你提供有关请求来源的见解，使用地图并指示请求的地理来源。实际用户度量可以为你提供更多关于请求和流量的见解，但需要一个度量密钥和一个
    JavaScript 代码片段嵌入到应用程序代码中：
- en: '![](img/c571eb3f-2b4a-4ff5-a3e5-b245e6a73e45.png)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c571eb3f-2b4a-4ff5-a3e5-b245e6a73e45.png)'
- en: 'The Endpoint option allows you to register endpoints toward which traffic will
    be directed. These can be either Azure endpoints or external endpoints. In the
    case of external endpoints, only **fully qualified domain name** (**FQDN**) is
    allowed. For Azure endpoints, it can be Cloud Service, App Service, App Service
    slot, or Public IP address. This is another example of naming that creates confusion.
    App Service and the App Service slot are actually Web App and the Web App slot
    in this case. An example of adding an Azure Web App (App Service) is shown in
    the following screenshot:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: Endpoint 选项允许你注册流量将被指向的端点。这些端点可以是 Azure 端点或外部端点。在外部端点的情况下，只允许使用**完全限定域名**（**FQDN**）。对于
    Azure 端点，可以是云服务、应用服务、应用服务插槽或公共 IP 地址。这是另一个可能会引起混淆的命名示例。在这种情况下，应用服务和应用服务插槽实际上是
    Web 应用和 Web 应用插槽。以下截图展示了如何添加一个 Azure Web 应用（应用服务）的示例：
- en: '![](img/b0bfe55b-0643-45db-9534-fde60f7fe4c4.png)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b0bfe55b-0643-45db-9534-fde60f7fe4c4.png)'
- en: 'Having only one endpoint doesn''t really help us to achieve high availability,
    and we need at least one more endpoint. I recommend that the second endpoint is
    located in a different region to resolve possible issues with maintenance or service
    in a single data center. A list of all available endpoints is located under Endpoints,
    with NAME, STATUS, TYPE, and LOCATION. An example is shown in the following screenshot:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 只有一个端点实际上无法帮助我们实现高可用性，我们需要至少再添加一个端点。我建议第二个端点位于不同的区域，以解决单个数据中心可能出现的维护或服务问题。所有可用端点的列表位于端点下，显示名称、状态、类型和位置。以下截图展示了一个示例：
- en: '![](img/0c976a41-0009-4bb2-b2fa-cbf6aa76364d.png)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0c976a41-0009-4bb2-b2fa-cbf6aa76364d.png)'
- en: 'The last step is to create rules under configuration. Note that we can change
    the routing method here, and this option can be changed after creating a Traffic
    Manager. This isn''t the case with all Azure resources, and some settings can''t
    be changed once you create them. For example, no resource in Azure can be renamed:
    the only option is to delete it and create a new one if a name change is required.
    Under the Endpoint monitoring settings, you can choose the Protocol, Port, and
    Path that you want to monitor.'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一步是在配置下创建规则。请注意，我们可以在这里更改路由方式，并且在创建 Traffic Manager 后，该选项仍然可以更改。这并非所有 Azure
    资源的情况，某些设置一旦创建就无法更改。例如，Azure 中的任何资源都不能重命名：如果需要更改名称，唯一的选择是删除该资源并重新创建。你可以在端点监控设置下选择你希望监控的协议、端口和路径。
- en: 'Finally, the Fast endpoint failover settings need to be configured. The Probing
    interval can be set to 10 or 30 seconds, and this determines how often endpoint
    status will be checked. Tolerated number of failures can be set to `0`-`9`, and
    this determines how many times a check can fail before the endpoint is declared
    failed. Probe timeout determines the time needed before the probe times out. This
    value needs to be at least `5`, and less than the probing interval time. Lower
    numbers for these settings mean that issues will be detected faster and failover
    will occur before an issue is detected by users. However, you need to be careful,
    as pinging the application more often than needed and declaring too few tolerated
    failures can cause the application to switch between instances too often and create
    additional issues. An example configuration is shown in the following screenshot:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，需要配置快速端点故障切换设置。探测间隔可以设置为 10 或 30 秒，这决定了端点状态检查的频率。容忍的失败次数可以设置为 `0`-`9`，这决定了在端点被声明为失败之前，检查失败的次数。探测超时时间决定了探测超时之前所需的时间。这个值至少需要为
    `5`，且小于探测间隔时间。这些设置的较低数字意味着问题会更快被检测到，并且故障切换会在用户发现问题之前发生。然而，您需要小心，因为比需要的更频繁地 ping
    应用程序，并设置过少的容忍失败次数，可能会导致应用程序在实例之间切换得过于频繁，进而产生额外的问题。以下截图显示了一个示例配置：
- en: '![](img/ec389e58-9611-46d4-bbaf-b488891d5494.png)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ec389e58-9611-46d4-bbaf-b488891d5494.png)'
- en: Running Azure Web Apps in a dedicated environment
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在专用环境中运行 Azure Web 应用
- en: 'Azure Web Apps use public endpoints and are usually accessed over the internet
    without any restrictions. In a case where more isolated access is needed, there
    is another option: **Azure App Service Environment** (**ASE**). Azure ASE offers
    a fully isolated and dedicated environment for secure applications at high scale.
    Azure ASE is usually used with workloads that require very high scale, isolated
    and secure network access, and high memory utilization. As ASE comes as a dedicated
    environment, this eliminates the problem of noisy neighbors (performance issues
    that may result from another application sharing the same host) and allow you
    to fully utilize all resources.'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: Azure Web 应用使用公共端点，通常通过互联网访问，没有任何限制。在需要更隔离的访问情况下，还有另一个选择：**Azure 应用服务环境**（**ASE**）。Azure
    ASE 为高规模的安全应用程序提供完全隔离的专用环境。Azure ASE 通常用于需要非常高规模、隔离和安全网络访问以及高内存利用率的工作负载。由于 ASE
    作为专用环境提供，这消除了“吵闹邻居”问题（可能由于另一个应用程序共享同一主机而导致的性能问题），并允许您充分利用所有资源。
- en: An Azure App Service Plan can be connected to an Azure VNet, but this requires
    additional work. On other hand, ASE comes automatically connected to a VNet and
    can be accessed only over private connections and private IP addresses.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: Azure 应用服务计划可以连接到 Azure VNet，但这需要额外的工作。另一方面，ASE 会自动连接到 VNet，并且只能通过私有连接和私有 IP
    地址进行访问。
- en: Summary
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: An Azure App Service Plan is the best example of the PaaS model in Microsoft
    Azure. It allows us to host applications without servers and virtual machines.
    Even though management options are simplified and cut down to the minimum, we
    still have a lot of configuration options. Legacy support is next to nothing,
    but the PaaS model is intended for modern applications that require the latest
    features and frameworks. If you need to run legacy software, IaaS is the best
    choice.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: Azure 应用服务计划是 Microsoft Azure 中 PaaS 模式的最佳示例。它允许我们无需服务器和虚拟机即可托管应用程序。尽管管理选项被简化到最小化，但我们仍然有很多配置选项。传统支持几乎为零，但
    PaaS 模式旨在为需要最新功能和框架的现代应用程序提供服务。如果您需要运行传统软件，IaaS 是最佳选择。
- en: We introduced IaaS and PaaS in Azure from the application perspective. But the application
    is nothing without data. In the next chapter, we'll move to Data Platform in Azure
    and show how to create and manage databases in the cloud.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从应用角度介绍了 Azure 中的 IaaS 和 PaaS。但是，**没有数据，应用就无从谈起**。在下一章中，我们将讨论 Azure 中的数据平台，并展示如何在云端创建和管理数据库。
- en: Questions
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: Azure App Service is...
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure 应用服务是...
- en: IaaS
  id: totrans-147
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: IaaS
- en: PaaS
  id: totrans-148
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: PaaS
- en: SaaS
  id: totrans-149
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: SaaS
- en: How much control do we have with an App Service Plan compared to virtual machines?
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 与虚拟机相比，我们在应用服务计划中有多少控制权？
- en: More
  id: totrans-151
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更多
- en: Less
  id: totrans-152
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更少
- en: The same
  id: totrans-153
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 相同
- en: How much administration do we have with an Azure App Service Plan compared to
    virtual machines?
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 与虚拟机相比，我们在 Azure 应用服务计划中的管理权限有多少？
- en: More
  id: totrans-155
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更多
- en: Less
  id: totrans-156
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更少
- en: The same
  id: totrans-157
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 相同
- en: An App Service Plan is used to host...
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 应用服务计划用于托管...
- en: Web applications
  id: totrans-159
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Web 应用
- en: Databases
  id: totrans-160
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数据库
- en: Both
  id: totrans-161
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 两者
- en: Slots are used to...
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 插槽用于...
- en: Host different version of the application
  id: totrans-163
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 托管应用程序的不同版本
- en: Host the application in different regions
  id: totrans-164
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在不同区域托管应用程序
- en: Handle increased workload
  id: totrans-165
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 处理增加的工作负载
- en: An Azure App Service Plan's increased workload is handled by...
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure 应用服务计划的增加工作负载由...处理
- en: Scaling up
  id: totrans-167
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 扩展
- en: Scaling out
  id: totrans-168
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 横向扩展
- en: WebJobs
  id: totrans-169
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: WebJobs
- en: The best monitoring tool for Azure Web Apps is...
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最好的 Azure Web 应用监控工具是...
- en: Splunk
  id: totrans-171
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Splunk
- en: Log analytics
  id: totrans-172
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 日志分析
- en: Application Insights
  id: totrans-173
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 应用洞察
- en: High availability for Azure Web Apps is achieved by...
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure Web 应用的高可用性通过...实现
- en: Scaling up
  id: totrans-175
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 扩展
- en: Scaling out
  id: totrans-176
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 横向扩展
- en: Traffic Manager
  id: totrans-177
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 流量管理器
- en: Traffic Manager supports...
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 流量管理器支持...
- en: Azure endpoints
  id: totrans-179
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure 终结点
- en: External endpoits
  id: totrans-180
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 外部终结点
- en: Both
  id: totrans-181
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 两者
- en: An isolated and dedicated environment for Azure Web Apps is an...
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为 Azure Web 应用提供的隔离和专用环境是...
- en: Azure App Service Plan
  id: totrans-183
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure 应用服务计划
- en: Azure ASE
  id: totrans-184
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure ASE
- en: Azure Virtual Machine
  id: totrans-185
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Azure 虚拟机
