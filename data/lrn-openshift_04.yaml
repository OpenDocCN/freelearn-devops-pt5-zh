- en: OpenShift Overview
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OpenShift概述
- en: In the previous chapter, we briefly covered Container Runtime and Container
    Runtime Interface basics, followed by what CRI-O is and how it works. Finally,
    we installed a Kubernetes cluster with CRI-O as a Container Runtime Interface
    and ran a few simple commands to verify that Kubernetes was working through CRI-O.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们简要介绍了容器运行时和容器运行时接口的基础知识，接着讲解了CRI-O是什么以及它是如何工作的。最后，我们安装了一个以CRI-O作为容器运行时接口的Kubernetes集群，并运行了一些简单的命令，以验证Kubernetes是否通过CRI-O正常工作。
- en: This chapter is focused on giving a brief description of OpenShift as a **Platform
    as a Service** (**PaaS**) Solution. We will describe **Infrastructure as a Service**
    (**IaaS**) and PaaS clouds. As a part of the PaaS cloud descriptions, we will
    provide a basic explanation of OpenShift's business value. In this chapter, you
    will also learn about OpenShift's technical components and available OpenShift
    variants.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章重点简要描述了OpenShift作为**平台即服务**（**PaaS**）解决方案的概况。我们将介绍**基础设施即服务**（**IaaS**）和PaaS云。作为PaaS云描述的一部分，我们将提供OpenShift业务价值的基本解释。在本章中，您还将了解OpenShift的技术组件和可用的OpenShift变体。
- en: 'After reading this chapter, you will have learned about the following:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读本章后，您将了解以下内容：
- en: Cloud technology landscape and the role of PaaS
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 云技术格局与PaaS的角色
- en: OpenShift as an extension of Kubernetes
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenShift作为Kubernetes的扩展
- en: OpenShift business value
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenShift的业务价值
- en: OpenShift flavors
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenShift口味
- en: OpenShift architecture
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenShift架构
- en: Cloud technology landscape and the role of PaaS
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 云技术格局与PaaS的角色
- en: Today, any business expects automation to be a cornerstone of success. Traditional
    approaches are too slow when it comes to delivering innovation at the pace at
    which the business ecosystem changes. This is one of the main reasons why many
    businesses are moving towards automation and DevOps.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 今天，任何企业都期望自动化成为成功的基石。传统方法在应对商业生态系统变化的速度时过于缓慢，这是许多企业向自动化和DevOps转型的主要原因之一。
- en: If we take a look at evolving software delivery technologies, we can easily
    see that old-generation applications were installed first directly on bare metal,
    and then on virtual machines. And with time, these companies started using different
    IaaS cloud platforms. The reason is very obvious—the IaaS platform allows us to
    bring automation to the next level using cloud orchestration tools and exposed
    APIs. The way IaaS automation does this on an infrastructure level is that it
    simplifies virtual networking, storage, and virtual servers. To use IaaS platforms,
    we still need to install and configure applications and it is usually a time-consuming
    process. Imagine that there is a need to install and configure a PHP-based application
    from scratch each and every time you develop a new feature and test it. It takes
    a lot of time even with automation tools.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们看看软件交付技术的演变，可以很容易发现，旧一代应用程序最初是直接安装在裸机上，然后是虚拟机。随着时间的推移，这些公司开始使用不同的IaaS云平台。原因显而易见——IaaS平台通过使用云编排工具和公开的API将自动化带到了一个新层次。IaaS自动化在基础设施层面上实现这一目标的方式是简化虚拟网络、存储和虚拟服务器。使用IaaS平台时，我们仍然需要安装和配置应用程序，这通常是一个耗时的过程。想象一下，每次开发新功能并进行测试时，都需要从头开始安装和配置一个基于PHP的应用程序。即使使用自动化工具，这也需要大量时间。
- en: 'PaaS is the next generation of platforms to deliver applications in a quick
    and automated manner in production. With PaaS, the application delivering process
    looks very simple—there is no need to install and configure an application platform
    for web servers, databases, and so on. It is provided by the platform itself,
    OpenShift in our case. This means that you just need to upload your application
    code and database structures; the rest of it will be taken care of by PaaS:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: PaaS是下一代平台，用于以快速和自动化的方式在生产环境中交付应用程序。通过PaaS，应用程序交付过程看起来非常简单——不需要为Web服务器、数据库等安装和配置应用平台。这些都由平台本身提供，在我们的案例中就是OpenShift。这意味着您只需要上传应用程序代码和数据库结构；其余的将由PaaS处理：
- en: 'The following diagram shows the difference between hosting applications on
    bare-metal, IaaS, and PaaS platforms:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 下图显示了将应用程序托管在裸机、IaaS和PaaS平台上的差异：
- en: '![](img/00033.gif)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00033.gif)'
- en: IaaS, PaaS, and SaaS cloud comparison
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: IaaS、PaaS和SaaS云比较
- en: OpenShift as an extension of Kubernetes
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OpenShift作为Kubernetes的扩展
- en: In previous chapters, we looked at how Kubernetes can simplify the management
    of Docker containers and take care of container deployment. Kubernetes brings
    additional value to container management across multiple nodes, which is very
    important in modern highly available and distributed infrastructure. Despite all
    the advantages Kubernetes has, it has drawbacks, and most of them are rectified
    by OpenShift.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在前几章中，我们讨论了 Kubernetes 如何简化 Docker 容器的管理，并处理容器的部署。Kubernetes 在跨多个节点的容器管理中带来了额外的价值，这在现代高度可用和分布式的基础设施中至关重要。尽管
    Kubernetes 具有许多优势，但它也有缺点，大部分缺点都被 OpenShift 修正。
- en: OpenShift is a PaaS offering from Red Hat that natively integrates Docker and
    Kubernetes to create a powerful container cluster management and orchestration
    system. OpenShift encompasses the architecture, processes, platforms, and services
    needed to empower developers and operations teams. OpenShift increases reliability
    across all environments and meets all customer requirements while reducing infrastructure
    costs.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: OpenShift 是来自 Red Hat 的 PaaS 服务，原生集成 Docker 和 Kubernetes，创建了一个强大的容器集群管理和编排系统。OpenShift
    包括了架构、流程、平台和服务，旨在赋能开发人员和运维团队。OpenShift 提高了所有环境中的可靠性，满足了所有客户需求，同时降低了基础设施成本。
- en: 'OpenShift leverages Kubernetes as a container management platform and adds
    several new important components and capabilities. Some of them are:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: OpenShift 利用 Kubernetes 作为容器管理平台，并添加了多个重要的新组件和功能，其中包括：
- en: Self-service Portal and Service Catalog
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自服务门户和服务目录
- en: Build and application deployment automation
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建和应用部署自动化
- en: Built-in registry service
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内置注册表服务
- en: Extended application routing
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扩展应用路由
- en: '![](img/00034.jpeg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00034.jpeg)'
- en: OpenShift services
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: OpenShift 服务
- en: Understanding OpenShift's business value
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解 OpenShift 的商业价值
- en: 'N-tier design is a standard application design like a three-tier web app with
    web, application, and database tiers. This design slowly evolved into the microservice
    architecture. The microservice architecture influences the industry and forces
    many companies to embrace this new trend and make it a new standard. The microservice
    architecture is much cheaper, scalable, and more secure compared to the monolithic
    and N-tier architectures. That is why containerized applications bring you to
    a whole new level:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: N 层设计是一种标准的应用设计，例如具有 Web、应用和数据库层的三层 Web 应用。这个设计逐步演变成了微服务架构。微服务架构影响了整个行业，迫使许多公司接受这一新趋势，并将其作为新标准。与单体架构和
    N 层架构相比，微服务架构更便宜、更具可扩展性，并且更安全。这就是为什么容器化应用将把你带到全新高度的原因：
- en: '![](img/00035.jpeg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00035.jpeg)'
- en: Application, Infrastructure, and Software development evolution
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 应用、基础设施和软件开发的演变
- en: OpenShift pushes these boundaries even further, allowing both software developers
    and operation teams to utilize powerful microservice architecture and the simplicity
    of OpenShift GUI and the additional features it brings to the table. OpenShift
    is where you can really benefit from automation and DevOps. OpenShift has many
    built-in tools that allow the new microservice architecture to be backward-compatible
    with previous-generation software.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: OpenShift 进一步推动了这些边界，允许软件开发人员和运维团队利用强大的微服务架构，以及 OpenShift GUI 的简便性和它带来的附加功能。OpenShift
    是你真正能够从自动化和 DevOps 中受益的地方。OpenShift 内置了许多工具，使得新的微服务架构与上一代软件兼容。
- en: As we mentioned, the software development approach has also changed; initially,
    software developers followed a waterfall approach, polishing their apps to perfection
    and adding one feature after another, making sure it was bug-free. But it is neither
    time, nor money-efficient. That is why an agile approach came into the picture.
    Business owners needed shorted software development cycles. It was not perfect
    though, because of all the bugs and other shortcomings. The next evolutionary
    step was DevOps. OpenShift leverages modern DevOps processes and makes them simpler
    and more efficient.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所提到的，软件开发方法也发生了变化；最初，软件开发者遵循瀑布模型，精益求精地打磨应用，逐一添加功能，确保应用没有漏洞。但这种方式既不高效，也不节省时间和成本。因此，敏捷方法应运而生。企业主需要更短的软件开发周期。然而，这并不完美，因为存在许多漏洞和其他不足之处。接下来的进化步骤是
    DevOps。OpenShift 利用现代 DevOps 流程，使其变得更加简单和高效。
- en: OpenShift flavors
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OpenShift 版本
- en: 'OpenShift for production comes in several variants:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: OpenShift 的生产版有几个不同的变种：
- en: OpenShift Origin
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenShift Origin
- en: OpenShift Container Platform
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenShift 容器平台
- en: OpenShift Online
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenShift 在线版
- en: OpenShift Dedicated
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenShift 专用版
- en: As with other products under the Red Hat umbrella, OpenShift has an upstream
    project called **OpenShift Origin**. The OpenShift Origin homepage is available
    at [http://openshift.org](http://openshift.org). It has a number of installation
    methods, including the installation of a development environment on a local developer
    machine.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他Red Hat旗下产品类似，OpenShift也有一个上游项目，叫做**OpenShift Origin**。OpenShift Origin的主页可以访问[http://openshift.org](http://openshift.org)。它提供多种安装方法，包括在本地开发者机器上安装开发环境。
- en: '**Red Hat OpenShift Container Platform** is a production-ready build of OpenShift
    Origin with all Red Hat production advantages including official support, certification,
    and so on. OpenShift Container Platform integrates with Red Hat Enterprise Linux
    and is tested via Red Hat''s QA process in order to offer a stable, supportable
    product for customers who want to have their own private or on-site cloud. An
    enterprise might get updates every six months, maintaining stabilization across
    minor updates. OpenShift Container Platform allows for building a private or public
    PaaS cloud on your infrastructure.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**Red Hat OpenShift Container Platform**是OpenShift Origin的生产级版本，拥有所有Red Hat生产优势，包括官方支持、认证等。OpenShift
    Container Platform与Red Hat Enterprise Linux集成，并通过Red Hat的质量保证过程进行测试，旨在为希望拥有自己的私有云或本地云的客户提供一个稳定且可支持的产品。企业可能会每六个月获得一次更新，从而在小版本更新之间保持稳定。OpenShift
    Container Platform允许在您的基础设施上构建私有或公共PaaS云。'
- en: '**Red Hat OpenShift Online** is a multi-tenant public cloud managed by Red
    Hat. OpenShift Online can be a good choice for companies that want to start working
    with OpenShift but don’t want to have their own on-premise infrastructure. This
    platform allows for hosting a small application for free.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**Red Hat OpenShift Online**是一个由Red Hat管理的多租户公共云平台。对于希望使用OpenShift但不想拥有自己本地基础设施的公司，OpenShift
    Online是一个不错的选择。这个平台允许免费托管一个小型应用程序。'
- en: '**Red Hat OpenShift Dedicated** is a single-tenant container application platform
    hosted on **Amazon Web Services** (**AWS**) or Google Cloud Platform and managed
    by Red Hat. It allows application development teams to quickly build, deploy,
    and scale traditional and cloud-native applications. OpenShift Dedicated is built
    on Red Hat Enterprise Linux, Docker container technology, and Google Kubernetes
    for orchestration and management. It securely connects to your data center so
    you can implement a flexible, hybrid cloud IT strategy with minimal infrastructure
    and operating expenses. It can be a good choice for companies who don’t want to
    share the platform with other companies.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**Red Hat OpenShift Dedicated**是一个单租户的容器应用平台，托管在**Amazon Web Services**（**AWS**）或Google
    Cloud Platform上，由Red Hat管理。它允许应用开发团队快速构建、部署和扩展传统和云原生应用。OpenShift Dedicated基于Red
    Hat Enterprise Linux、Docker容器技术和Google Kubernetes进行编排和管理。它安全地连接到您的数据中心，让您能够通过最小的基础设施和运营费用实施灵活的混合云IT策略。如果不希望与其他公司共享平台，这对于公司来说是一个不错的选择。'
- en: OpenShift architecture
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OpenShift架构
- en: 'The OpenShift Container platform is both simple and complex when it comes to
    OpenShift components and overall architecture. It is complex in that it involves
    a lot of components interconnected with each other, but OpenShift is simple in
    the sense that all its components work independently of each other, and work seamlessly
    if something fails:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 就OpenShift组件和整体架构而言，OpenShift容器平台既简单又复杂。它的复杂性在于涉及许多相互连接的组件，但OpenShift的简单性在于所有组件相互独立运行，即使某个部分发生故障，其他部分仍能无缝协作。
- en: '![](img/00036.jpeg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00036.jpeg)'
- en: OpenShift components
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: OpenShift组件
- en: 'OpenShift and Kubernetes have most architecture components in common, such
    as:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: OpenShift和Kubernetes有许多架构组件是相同的，例如：
- en: OpenShift masters
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenShift主节点
- en: OpenShift nodes
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenShift节点
- en: Etcd as a key-value store
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Etcd作为一个键值存储
- en: 'Components that are unique to OpenShift are:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: OpenShift特有的组件包括：
- en: Router as ingress traffic control
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 路由器作为入口流量控制
- en: OpenShift Internal Registry
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenShift内部注册表
- en: 'The following diagram describes the OpenShift container platform from an architectural
    point of view:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表描述了从架构角度看OpenShift容器平台：
- en: '![](img/00037.jpeg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00037.jpeg)'
- en: OpenShift architecture
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: OpenShift架构
- en: 'OpenShift is built on top of Docker and Kubernetes, sometimes referred to as
    Kubernetes++. In addition to the Docker and Kubernetes solution, OpenShift brings
    additional capabilities and features required to provide a stable and production-ready
    PaaS platform. These new capabilities and features are:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: OpenShift建立在Docker和Kubernetes之上，有时被称为Kubernetes++。除了Docker和Kubernetes解决方案外，OpenShift还带来了额外的功能和特性，以提供稳定和生产就绪的PaaS平台。这些新功能和特性包括：
- en: '**Authentication**: OpenShift has several built-in authentication methods to
    allow granular access to OpenShift projects:'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**认证**：OpenShift具有几种内置的认证方法，允许对OpenShift项目进行精细的访问控制。'
- en: Local authentication
  id: totrans-58
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本地认证
- en: LDAP authentication
  id: totrans-59
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: LDAP认证
- en: Request header authentication
  id: totrans-60
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请求头认证
- en: Keystone authentication
  id: totrans-61
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Keystone认证
- en: GitHub authentication
  id: totrans-62
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: GitHub认证
- en: '**Multi-tenancy**: OpenShift''s powerful functionalities allow granular multi-user
    and multi-project access control, a must-have feature for medium and large organizations
    that allows collaboration and access control for different groups.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**多租户**：OpenShift强大的功能允许精细的多用户和多项目访问控制，这是中型和大型组织必备的功能，允许不同组织间的协作和访问控制。'
- en: '**Internal Image Registry**: OpenShift uses an internal registry to store images
    in OpenShift that are ready to be deployed on OpenShift nodes. It is also used
    for S2I builds.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**内部镜像注册表**：OpenShift使用内部注册表存储准备部署到OpenShift节点上的镜像。它还用于S2I构建。'
- en: '**GUI and web console**: OpenShift provides an easy-to-use web interface, powerful
    enough to create, build, deploy, update, and troubleshoot OpenShift projects and
    microservice applications running inside OpenShift.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GUI和Web控制台**：OpenShift提供易于使用的Web界面，功能强大到足以创建、构建、部署、更新和排查OpenShift项目及其内部运行的微服务应用程序。'
- en: '**SCM Integration**: OpenShift has built-in integration with Git. This solution
    is tightly coupled with an image builder.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SCM集成**：OpenShift与Git有内置集成。该解决方案与镜像构建器紧密耦合。'
- en: '**Image builders**: Process that is used to transform image parameters or source
    code into a runnable image.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**镜像构建器**：用于将图像参数或源代码转换为可运行图像的过程。'
- en: '**CI/CD Integration**: OpenShift provides very flexible integration with Jenkins
    for Continuous Integration and Continuous Delivery pipelines. It scales the pipeline
    execution through Jenkins provisioning in containers. This allows Jenkins to run
    as many jobs in parallel as required and scales solutions on demand out of the
    box.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CI/CD集成**：OpenShift与Jenkins提供非常灵活的持续集成和持续交付管道集成。它通过在容器中进行Jenkins provisioning来扩展管道执行。这允许Jenkins并行运行所需数量的作业，并且能够按需扩展解决方案。'
- en: '**Additional Kubernetes resource extensions**: There is a set of resources
    added to Kubernetes by OpenShift:'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**附加的Kubernetes资源扩展**：OpenShift向Kubernetes添加了一组资源：'
- en: '**Deployment Configurations (DC)**: This is a set of pods created from the
    same container image.'
  id: totrans-70
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Deployment Configurations (DC)**：这是从相同容器镜像创建的一组pod。'
- en: '**Build Configurations (BC)**: Primarily used by S2I to build an image from
    source code in Git.'
  id: totrans-71
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Build Configurations (BC)**：主要由S2I用于从Git中的源代码构建镜像。'
- en: '**Routes**: DNS hostname service used by the OpenShift router as an ingress
    point for OpenShift applications,'
  id: totrans-72
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Routes**：OpenShift路由器使用的DNS主机名服务，用作OpenShift应用程序的入口点。'
- en: '**REST API**: In addition to the Kubernetes API, Openshift provides its own
    API interface to leverage all the features of automation and seamless integration
    with external platforms, other automation frameworks, and DevOps solutions.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**REST API**：除了Kubernetes API外，Openshift还提供自己的API接口，以利用所有自动化功能，并与外部平台、其他自动化框架和DevOps解决方案无缝集成。'
- en: Summary
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we discussed, briefly, the difference between IaaS and PaaS
    solutions. We also talked about OpenShift as part of a PaaS solution. We provided
    a basic explanation of OpenShift's business value and the main OpenShift components,
    and talked about OpenShift in general.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们简要讨论了IaaS和PaaS解决方案之间的区别。我们还讨论了OpenShift作为PaaS解决方案的一部分。我们提供了OpenShift业务价值的基本解释，主要OpenShift组件，并总体上谈到了OpenShift。
- en: In the next chapter, we are going to work with OpenShift and learn different
    ways to bring about an OpenShift development environment using the most popular
    methods and tools.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将使用OpenShift并学习使用最流行的方法和工具构建OpenShift开发环境的不同方式。
- en: Questions
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: 'OpenShift is one of the following cloud platforms:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: OpenShift是以下云平台之一：
- en: IaaS
  id: totrans-79
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: IaaS
- en: PaaS
  id: totrans-80
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: PaaS
- en: MaaS
  id: totrans-81
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: MaaS
- en: SaaS
  id: totrans-82
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: SaaS
- en: 'Which two OpenShift flavors can be installed on-premise inside your data center?
    choose 2:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪两个 OpenShift 版本可以在你的数据中心内部署？选择 2 个：
- en: OpenShift Origin
  id: totrans-84
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: OpenShift Origin
- en: OpenShift Dedicated
  id: totrans-85
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: OpenShift 专用版
- en: OpenShift Enterprise
  id: totrans-86
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: OpenShift 企业版
- en: OpenShift Offline
  id: totrans-87
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: OpenShift 离线版
- en: 'OpenShift uses its own container management platform to orchestrate and control
    container deployment:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: OpenShift 使用自己的容器管理平台来编排和控制容器部署：
- en: 'True'
  id: totrans-89
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 正确
- en: 'False'
  id: totrans-90
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 错误
- en: 'Which of the following is NOT a new feature added by OpenShift in comparison
    to Kubernetes? choose one:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪项是 OpenShift 相对于 Kubernetes 增加的新特性？选择一个：
- en: SCM integration
  id: totrans-92
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: SCM 集成
- en: GUI and web console
  id: totrans-93
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: GUI 和 Web 控制台
- en: Multi-tenancy
  id: totrans-94
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 多租户
- en: Persistent storage
  id: totrans-95
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 持久存储
- en: 'Wich two components are unique to OpenShift in comparison to Kubernetes? choose
    two:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 相比 Kubernetes，OpenShift 有哪些独特的组件？选择两个：
- en: Router as an ingress traffic control
  id: totrans-97
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 路由器作为入口流量控制
- en: OpenShift Internal Registry
  id: totrans-98
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: OpenShift 内部注册中心
- en: OpenShift Master
  id: totrans-99
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: OpenShift 主节点
- en: OpenShift Node
  id: totrans-100
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: OpenShift 节点
- en: 'OpenShift provides an additional REST API in addition to the Kubernetes API:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: OpenShift 提供了一个额外的 REST API，除了 Kubernetes API：
- en: 'True'
  id: totrans-102
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 正确
- en: 'False'
  id: totrans-103
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 错误
- en: Further reading
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'The OpenShift development life cycle is every 3 months, which means that, every
    3 months, new features are added. This implies that, by the time this book is
    published, OpenShift might be a bit different. So, it is highly important to keep
    track of these changes. Here is a list of links including further reading:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: OpenShift 的开发生命周期为每 3 个月一次，这意味着每 3 个月都会增加新特性。这也意味着，到本书发布时，OpenShift 可能会有所不同。因此，跟踪这些变化非常重要。以下是一些链接，包括进一步阅读：
- en: '**OpenShift general documentation**: [https://docs.openshift.com/index.html](https://docs.openshift.com/index.html)'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OpenShift 一般文档**：[https://docs.openshift.com/index.html](https://docs.openshift.com/index.html)'
- en: '**OpenShift Origin documentation web page**: [https://docs.openshift.org/](https://docs.openshift.org/)'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OpenShift Origin 文档网页**：[https://docs.openshift.org/](https://docs.openshift.org/)'
- en: '**OpenShift GitHub project**:[ https://github.com/openshift/](https://github.com/openshift/)'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OpenShift GitHub 项目**：[https://github.com/openshift/](https://github.com/openshift/)'
