- en: '*Chapter 1*: Introduction to Docker'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第 1 章*：Docker 简介'
- en: Docker is a technology that allows entire applications and their environments
    to be encapsulated within individual containers. When multiple versions of these
    containers are run on a single machine, they are sandboxed from one another as
    if running on their own dedicated machines.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Docker 是一种技术，允许将整个应用程序及其环境封装在各个容器中。当在一台机器上运行这些容器的多个版本时，它们彼此之间被沙盒化，就像在各自的专用机器上运行一样。
- en: Docker is open source, which fits well with running Linux in containers, as
    well as numerous available open source components that help build complex systems.
    It is the logical progression of technologies used for hosting and backend development
    over the past decade or longer. This progression has moved from a physical kind
    of hosting to a logical one and has been driven by several requirements. These
    requirements include reliability, reachability, scalability, and security.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Docker 是开源的，非常适合在容器中运行 Linux，并且有许多开源组件可以帮助构建复杂的系统。它是过去十年甚至更长时间用于托管和后端开发技术的逻辑发展。这一发展经历了从物理托管到逻辑托管的转变，并受到多个需求的驱动。这些需求包括可靠性、可达性、可扩展性和安全性。
- en: This book is divided into three sections. The first is an introduction to Docker,
    focusing on local development. The second describes the methodology for testing,
    deploying, and scaling applications. The third goes into detail about security
    when using a container-based design.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本书分为三个部分。第一部分是 Docker 的介绍，重点介绍本地开发。第二部分描述了测试、部署和扩展应用程序的方法论。第三部分详细讨论了使用基于容器的设计时的安全性。
- en: In this chapter, we will review the history of hosting and backend solutions
    with a focus on how Docker came to be a widely used technology.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将回顾托管和后端解决方案的历史，重点讲解 Docker 如何成为广泛使用的技术。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Origins of hosting services
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 托管服务的起源
- en: Types of hosting services – co-location
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 托管服务类型 – 共置托管
- en: Types of hosting services – self-hosting
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 托管服务类型 – 自托管
- en: The benefits of data centers
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据中心的优势
- en: How virtualization works
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 虚拟化是如何工作的
- en: The power requirements at data centers
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据中心的电力需求
- en: How virtualization is a solution for data centers and the invention of the cloud
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 虚拟化如何成为数据中心的解决方案以及云计算的发明
- en: How containers are a bigger win for data centers and hosting
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 容器如何为数据中心和托管服务带来更大的优势
- en: The drivers for Docker
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Docker 的驱动因素
- en: The range of hosting services was originally limited to self-hosted servers,
    co-located server hosting, and shared hosting. In 1994 and 1995, Best Internet
    Communications rose from nothing to hosting 18,000+ websites on a pair of Pentium
    servers, which were the most powerful servers of the time. Best also offered dedicated
    server-hosting through co-location, dedicated broadband connectivity, and upscale
    premium services.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 托管服务的种类最初仅限于自托管服务器、共置服务器托管和共享托管。1994年和1995年，Best Internet Communications 从零起步，在一对
    Pentium 服务器上托管超过 18,000 个网站，这些服务器当时是最强大的服务器。Best 还通过共置提供了专用服务器托管、专用宽带连接以及高端优质服务。
- en: Most of the websites hosted by Best were of the shared-hosting variety. All
    of these sites shared the same server, the same hard drives, the same filesystem,
    the same RAM, the same CPUs, the same network connections, and so on.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: Best 托管的大多数网站都是共享托管类型。这些网站共享相同的服务器、相同的硬盘、相同的文件系统、相同的内存、相同的 CPU、相同的网络连接等。
- en: It was not uncommon for any one of these websites to be slashdotted, or containing
    a link to the site from a very popular site to the hosted site. This would cause
    a large spike in traffic to the one out of the approximately 18,000 sites, and
    a performance hit to the others. As the quality of the sites grew and demanded
    more resources, their administrators would move to dedicated co-located hosting
    or self-hosting.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这些网站中的任何一个网站被 Slashdotted（即某个非常流行的网站链接到它）并不罕见。这会导致其中一个大约 18,000 个网站的流量激增，而其他网站的性能受到影响。随着网站质量的提高并且对资源的需求增加，它们的管理员通常会转向专用的共置托管或自托管。
- en: Co-located hosting
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 共置托管
- en: 'With co-located hosting, the customer rents a secure cage within a larger hosting
    facility (data center):'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在共置托管中，客户租用一个位于更大托管设施（数据中心）内的安全笼子：
- en: '![Figure 1.1 – A typical server rack, commonly seen in colocation](img/B11641_01_001.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.1 – 典型的服务器机架，常见于共置托管](img/B11641_01_001.jpg)'
- en: Figure 1.1 – A typical server rack, commonly seen in colocation
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.1 – 典型的服务器机架，常见于共置托管
- en: The customer can install and manage the machines of their choice. Some co-location
    facilities offer, for additional fees, remote hands service, where the customer
    can call the hosting company and one of their engineers does whatever the customer
    requires to the hosted servers. The cages are locked so that other customers can't
    gain access to other customers' equipment.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 客户可以安装和管理自己选择的机器。一些联合托管设施提供额外收费的远程操作服务，客户可以拨打托管公司电话，由公司的工程师执行客户要求的操作。机架被锁定，防止其他客户访问其他客户的设备。
- en: Self-hosting
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自托管
- en: 'With self-hosting, the customer buys a full-time dedicated broadband-style
    connection in a physical location of their choosing:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 通过自托管，客户可以在自己选择的物理位置购买一个全时专用的宽带风格连接：
- en: '![Figure 1.2 – Indian Railway 139 server room (self-hosting) ](img/B11641_01_002.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.2 – 印度铁路 139 服务器机房（自托管）](img/B11641_01_002.jpg)'
- en: Figure 1.2 – Indian Railway 139 server room (self-hosting)
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.2 – 印度铁路 139 服务器机房（自托管）
- en: The customer ends up building their own kind of data center and installs and
    manages servers and other equipment on-premises.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 客户最终建立了自己的一种数据中心，并在本地安装和管理服务器及其他设备。
- en: Data centers
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据中心
- en: 'The benefits of a professional data center are numerous, and ultimately, the
    trend became that just a few companies, relative to all the companies with an
    internet presence, provided data centers, and the remaining companies paid rent
    for dedicated, shared, or premium hosting. A professional data center provides
    rich internet connectivity (more than one provider, faster connections), clean
    power, battery-backed-up power for 24/7/365 uptime, back-up generator-backed-up
    power for longer brownouts or blackouts, fire-suppression systems, a controlled
    climate suitable for keeping equipment at the proper operating temperatures, multiple
    physical locations, a professionally managed **Network Operations Center** (**NOC**)
    and technical support, and security in the form of guards, cameras, and fingerprint,
    handprint, and/or retina scanners:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 专业数据中心的好处是多方面的，最终的趋势是，所有拥有互联网存在的公司中，只有少数几家公司提供数据中心服务，剩下的公司则支付租金来使用专用、共享或高端托管服务。专业数据中心提供丰富的互联网连接（多个提供商、更快的连接），清洁电力，提供
    24/7/365 全天候运行的电池备份电力，在长时间停电或断电的情况下提供备用发电机电力，灭火系统，适合设备正常工作温度的控制气候，多个物理位置，专业管理的**网络操作中心**（**NOC**）和技术支持，以及通过保安、摄像头、指纹、手印和/或视网膜扫描仪提供的安全保障：
- en: '![Figure 1.3 – A server room at CERN (Switzerland)](img/B11641_01_003.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.3 – 欧洲核子研究中心（瑞士）服务器机房](img/B11641_01_003.jpg)'
- en: Figure 1.3 – A server room at CERN (Switzerland)
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.3 – 欧洲核子研究中心（瑞士）服务器机房
- en: The companies that ended up building and running the majority of data centers
    are Google (Google Cloud Platform), Microsoft (Azure), Amazon (**Amazon Web Services**
    (**AWS**)), Yahoo! (once upon a time), and lesser players, which include boutique
    hosting companies, regional hosting companies, and companies that require security
    beyond what a hosting company can provide (for example, banks and financial institutions,
    governments, and so on).
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 最终建造和运营大多数数据中心的公司包括 Google（Google Cloud Platform）、Microsoft（Azure）、Amazon（**Amazon
    Web Services**（**AWS**））、Yahoo!（曾经）以及一些较小的参与者，包括精品托管公司、区域托管公司和需要比托管公司提供更高安全性的公司（例如银行、金融机构、政府等）。
- en: Amazon had a unique need for data centers. They are one of the largest online
    retailers in the world, as well as the largest data center developer/owner. The
    number of servers, the uptime, the security, and the reach that they require drove
    them to build data centers throughout the country and then the world.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊对数据中心有独特的需求。作为全球最大的在线零售商之一，同时也是全球最大的 数据中心开发商/所有者，它们所需的服务器数量、正常运行时间、安全性和覆盖范围促使它们在全国范围内以及全球范围内建设数据中心。
- en: Google has a unique need for data centers as well. They are the largest search
    engine and advertising company in the world. In order to be reachable, Google
    needs servers in as many physical places as possible. In order to be fast, Google
    needs many servers—at least enough servers for distributed search index processing
    in each of its geo-locations.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: Google 对数据中心也有独特的需求。作为世界上最大的搜索引擎和广告公司，为了保持可访问性，Google 需要在尽可能多的物理位置部署服务器。为了保持高速，Google
    需要大量服务器——至少在每个地理位置都有足够的服务器用于分布式搜索索引处理。
- en: Companies such as RackSpace and Level 3 were originally built as data center
    providers. Their specialties included co-location facilities, dedicated server
    hosting, remote hands, NOCs, nationwide-dedicated fiber-optic backbones, clean
    and blackout resistant power, and very rich connectivity to various other networks,
    including AT&T, Verizon, and Comcast. They found themselves with the infrastructure
    to follow the trend toward virtualization and began to offer these cloud services.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 像RackSpace和Level 3这样的公司最初是作为数据中心提供商建立的。它们的专长包括共同托管设施、专用服务器托管、远程服务、网络运营中心（NOCs）、全国性专用光纤骨干网、干净和抗停电电力以及与AT&T、Verizon和Comcast等其他网络的高度连接。它们发现自己拥有足够的基础设施来跟随虚拟化趋势，并开始提供这些云服务。
- en: The highest cost of providing data center services, and this passed on to the
    customer, was initially bandwidth. The providers paid for bandwidth by the megabit,
    plus a monthly cost of maintaining the physical connections that carried this
    bandwidth. As the providers built their own private infrastructure to carry data
    between their own data centers around the world, the cost became a flat rate,
    or a fixed cost, for a significant amount of the total bandwidth used. This allowed
    the price of bandwidth to decline to the point where it became a minimal consideration
    for hosting.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 提供数据中心服务的最高成本，也传递给客户，最初是带宽。提供商按兆比特支付带宽费用，再加上每月维护物理连接的成本。随着提供商在全球范围内建立自己的私有基础设施来传输数据，带宽费用变成了一种固定费用，对总带宽使用量的大部分提供了优惠。这使得带宽的价格降低到了对托管而言变得微不足道的程度。
- en: These companies ended up building a comprehensive infrastructure for dedicated
    hosting. It turns out that this infrastructure is ideally suited for virtualized
    product offerings, too.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 这些公司最终建立了一个专门提供专用托管服务的综合基础设施。事实证明，这种基础设施也非常适合虚拟化产品的提供。
- en: Using virtualization to economize resource usage
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用虚拟化来节约资源使用
- en: Virtualization is the process of exposing a portion of a physical machine as
    a logical or virtual machine that acts enough like a real machine that it supports
    the installation of whole operating systems, their filesystems, and the software
    that runs on the operating system. For example, a machine with 64 GB of RAM and
    4 CPUs could run virtualization software that masquerades as four 16 GB RAM machines
    with 1 CPU each. This machine could run four instances of Linux.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟化是将物理机的一部分作为逻辑或虚拟机暴露出来的过程，其行为类似于真实机器，支持安装整个操作系统、文件系统以及运行在操作系统上的软件。例如，一台拥有64
    GB RAM和4个CPU的机器可以运行虚拟化软件，伪装成四台各有16 GB RAM和1个CPU的机器。这台机器可以运行四个Linux实例。
- en: Virtualization is not a new concept, having been implemented by IBM in the early
    1960s. It likely gained in overall popularity during the 1980s when it was used
    to run MS-DOS, and then Windows by computer systems such as the original Apple
    **Macintosh** (**Mac**) and Unix computers such as the Sun and Silicon Graphics
    workstations.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟化并非一个新概念，IBM在1960年代早期就已实施。它很可能在1980年代普及，当时它被用于运行MS-DOS，后来是Windows，如原始的Apple
    **Macintosh** (**Mac**)和Unix计算机，如Sun和Silicon Graphics工作站。
- en: Initial virtualization software used what features were available on CPUs of
    the time, but often simply emulated the instruction set of the x86 on the 68000
    family or custom CPUs of the professional Unix workstations. SoftPC was one of
    the most popular offerings in the 1980s.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 最初的虚拟化软件利用当时CPU的可用特性，但通常仅在专业Unix工作站的68000系列或自定义CPU上模拟了x86的指令集。SoftPC是1980年代最受欢迎的产品之一。
- en: SoftPC was quite slow, but the ability to run Windows or MS-DOS applications
    on a Mac computer allowed the use of these machines in business and education
    environments. Instead of adding Microsoft Office compatibility to all the programs
    on the Mac to support exchanging files between Windows/MS-DOS users and Mac users,
    users could run Microsoft Office.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: SoftPC运行速度相当慢，但能够在Mac电脑上运行Windows或MS-DOS应用程序，使得这些机器在商业和教育环境中得以应用。用户可以运行Microsoft
    Office，而不是将所有Mac上的程序添加Microsoft Office兼容性，以支持Windows/MS-DOS用户和Mac用户之间的文件交换。
- en: People saw it in action and saw the value in it. Windows was the dominant operating
    system for home and business, and to fit in with Windows in the corporate environment,
    something like SoftPC was needed. The problem with SoftPC is that it was pure
    software emulation, which was quite slow in actual use. Virtualization is superior
    to emulation in terms of performance!
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 人们看到了它的实际效果，并意识到它的价值。Windows是家庭和商务中的主流操作系统，为了适应Windows在企业环境中的使用，需要类似SoftPC的东西。SoftPC的问题在于它是纯软件模拟，在实际使用中速度非常慢。虚拟化在性能上优于模拟！
- en: Entire companies were founded around providing consumer or business virtualization
    solutions. VMWare, founded in 1998, was one of the first of these companies.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 整个公司围绕提供消费级或商业虚拟化解决方案而成立。VMWare成立于1998年，是最早的此类公司之一。
- en: Innotek developed VirtualBox and released it as open source in 2007, and was
    then acquired by Sun Microsystems in 2008\. Then, Sun was acquired by Oracle in
    2010\. Parallels, a virtualization solution for Mac, was developed in 2004 and
    became mainstream in 2006\.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: Innotek公司开发了VirtualBox，并于2007年将其发布为开源软件，随后于2008年被Sun Microsystems收购。然后，Sun在2010年被Oracle收购。Parallels是一个为Mac提供的虚拟化解决方案，于2004年开发，并在2006年成为主流。
- en: The value of virtualization encouraged chip makers to gradually add CPU support
    for virtualization. With CPU support, an x86-based system could run virtualized
    machines or software at close enough to native speed to be much more tolerable.
    This, in turn, led the workstation companies (such as Apple, Sun, and Silicon
    Graphics) to move to x86 CPUs.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟化的价值促使芯片制造商逐渐增加对虚拟化的CPU支持。通过CPU支持，基于x86的系统可以运行虚拟化的机器或软件，接近本地速度，从而更加可接受。这反过来促使工作站公司（如苹果、Sun和硅谷图形公司）转向x86
    CPU。
- en: A key component of virtualization software is the hypervisor. The hypervisor
    presents the virtual machine to the chosen operating system and then manages the
    resources and execution of the virtual machines over time. The virtual machines
    themselves are configurable, at least regarding the amount of RAM, the number
    of logical CPU cores, graphics card memory, the host operating system disk files
    to act as virtual disk drives in the virtual machine, the mounting and unmounting
    of CD-ROM in the virtual CD-ROM drive, and so on. The hypervisor assures that
    these resources are truly available and that no virtual machine starves the other
    virtual machines for the host machine's resources.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟化软件的一个关键组件是虚拟机监控程序（hypervisor）。虚拟机监控程序将虚拟机呈现给所选操作系统，然后管理虚拟机的资源和执行。虚拟机本身是可配置的，至少在内存大小、逻辑CPU核心数、显卡内存、作为虚拟硬盘驱动器的主机操作系统磁盘文件、虚拟CD-ROM驱动器中的CD-ROM挂载和卸载等方面是可配置的。虚拟机监控程序确保这些资源确实可用，并且不会让某个虚拟机占用主机的所有资源，导致其他虚拟机无法获得所需资源。
- en: For the enterprise, the requirements were somewhat different. Instead of providing
    virtual machines via a general-purpose host operating system such as Linux, the
    entire operating system itself could be optimized just for being the hypervisor.
    VMWare offered its **Elastic Sky X Integrated** (**ESXi**) operating system in
    2004\. The University of Cambridge computer laboratory developed the Xen hypervisor
    in the late 1990s, and the first stable version was released in 2003\. Xen was
    originally the hypervisor used by Amazon for its Elastic Compute Cloud offering,
    before moving to KVM.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 对于企业来说，要求有所不同。与通过像Linux这样的通用主机操作系统提供虚拟机不同，整个操作系统本身可以专门优化为虚拟机监控程序。VMWare于2004年推出了其**Elastic
    Sky X集成**（**ESXi**）操作系统。剑桥大学计算机实验室在1990年代末开发了Xen虚拟机监控程序，首个稳定版本于2003年发布。Xen最初是亚马逊为其弹性计算云（Elastic
    Compute Cloud）提供服务时使用的虚拟机监控程序，后来转向使用KVM。
- en: KVM is a virtualization solution supported directly by the Linux kernel. The
    kernel can act as the hypervisor under KVM. KVM can additionally emulate processors
    other than the host's native CPU, which is typically x86\. This allows KVM to
    be used to emulate targets such as the Raspberry Pi.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: KVM是一个由Linux内核直接支持的虚拟化解决方案。内核可以充当KVM下的虚拟机监控程序。KVM还可以模拟与主机本地CPU不同的处理器，通常是x86。这使得KVM可以用于模拟像Raspberry
    Pi这样的目标平台。
- en: Scaling a dedicated hosted website can be problematic. It's possible to simply
    upgrade to a larger and more powerful server to handle growing traffic and services.
    At some point, however, there is no server that is large and powerful! To scale
    up from that point requires distributing services across multiple servers.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 扩展专用托管网站可能会遇到问题。虽然可以通过升级到更大、更强大的服务器来应对不断增长的流量和服务，但到了一定时点，就没有更大或更强的服务器了！从这个点起，要实现扩展就需要将服务分布到多个服务器上。
- en: Addressing the increasing power requirements
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应对日益增加的电力需求
- en: The trend toward virtualization created a demand for a new breed of servers
    to be housed at the data centers. Where a customer might have rented or installed
    their own dedicated server with 16 GB of RAM, the virtual server provider could
    rent a portion of a 128 GB RAM server and share that server with multiple customers.
    These bigger servers required more CPU cores, so the virtual servers could have
    reasonable computing capabilities.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟化趋势催生了对新型服务器的需求，这些服务器被部署在数据中心。客户可能曾租用或安装自己的专用服务器，配备16GB的内存，而虚拟服务器提供商则可以租用128GB内存服务器的一部分，并将该服务器与多个客户共享。这些更大的服务器需要更多的CPU核心，以确保虚拟服务器拥有合理的计算能力。
- en: 'Fitting these specialized servers into the same space as the smaller and less
    capable dedicated servers created a new challenge: power. Instead of using 400
    watts of power for the dedicated server, the cloud servers might use 1,600 watts;
    the power requirements would be four times more. In addition to the power requirements
    of the machines themselves, it took more power to run the air conditioners to
    cool the machines.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 将这些专用服务器放入与较小且功能较弱的专用服务器相同的空间，带来了新的挑战：电力问题。专用服务器可能只需要400瓦的电力，而云服务器可能需要1600瓦；电力需求将是原来的四倍。除了机器本身的电力需求外，还需要更多的电力来驱动空调冷却机器。
- en: The power cost requirements changed the equation for dedicated hosting, so bandwidth
    pricing was virtually free, while the power requirements of the servers were charged
    at a very high price.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 电力成本要求改变了专用托管的计算方式，因此带宽定价几乎是免费的，而服务器的电力需求则以非常高的价格收费。
- en: To help mitigate the cost of power, data centers have been built to provide
    some of their own power. Solar panels, building near a river that can drive turbines,
    wind turbines, and building in places with cool or cold climates are among some
    of the techniques used. Data centers do use batteries for back-up power, and diesel-powered
    generators as well.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助降低电力成本，数据中心已开始自给自足，提供一部分电力。太阳能电池板、靠近能够驱动涡轮机的河流建设、风力涡轮机，以及建设在气候寒冷或凉爽地区都是一些常见的方法。数据中心确实使用电池作为备用电源，同时也使用柴油发电机。
- en: Energy efficiency is another way to mitigate power costs. The use of lower-powered
    CPUs and other computer parts is one means to this end. The CPU manufacturers
    have had a heavy focus on producing lower-powered CPUs for both data center and
    laptop use.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 能效是降低电力成本的另一种方式。使用低功率的CPU和其他计算机部件是实现这一目标的一种手段。CPU制造商一直致力于生产低功耗的CPU，供数据中心和笔记本电脑使用。
- en: The hosting companies would supply a 60 watt power supply for each co-location
    cage. If you needed more than 60 watts, you could pay extra to have additional
    60 watt lines for your cage. You'd pay for the construction and then the monthly
    power usage.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 托管公司为每个共置机架提供60瓦的电源。如果需要超过60瓦的电力，可以支付额外费用，为机架增加额外的60瓦电力线路。你需要支付建设费用以及每月的电力使用费用。
- en: Hosting at one of these facilities was problematic for most customers. It required
    purchasing physical machines and other hardware, designing the infrastructure
    required for the services to be provided, physical access to the cage and hardware
    from time to time, and potential failures, which meant downtime.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些设施中托管对大多数客户来说是个问题。它需要购买物理机器和其他硬件，设计为提供服务所需的基础设施，时不时需要物理访问机架和硬件，以及可能出现的故障，这意味着停机时间。
- en: The growth and popularity of services require scalability or more and bigger
    machines. You could repurpose old machines, but they take up space and power.
    Customer costs soared when the current cage filled up and more presence was required.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 服务的增长和流行要求具备可扩展性，或者需要更多、更强大的机器。可以重新利用旧机器，但它们占用空间且耗电。当现有机架填满，且需要更多服务器时，客户成本急剧上升。
- en: The next step, and the solution to these hassles, is virtualization and running
    your servers and services within the cloud.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步，解决这些麻烦的方法就是虚拟化，并在云端运行服务器和服务。
- en: Virtualization and cloud computing
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟化和云计算
- en: Most customers don't need dedicated servers. What they really need is the security
    of a filesystem that only their software can read and write to, that the CPU is
    guaranteed to be dedicated to their purpose, and that the throughput and computing
    power is identifiable and delivered as expected.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数客户不需要专用服务器。他们真正需要的是一个文件系统的安全性，只有他们的软件可以读取和写入，且 CPU 必须专门用于他们的目的，吞吐量和计算能力是可识别的，并按预期交付。
- en: The appeal of virtual servers offered by companies such as AWS drove many administrators
    to move away from dedicated and self-hosting. AWS grows its offerings to add more
    value to virtual hosting, so their customers get the benefit of Amazon's developers
    efforts.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 由像 AWS 这样的公司提供的虚拟服务器的吸引力，促使许多管理员远离专用服务器和自托管。AWS 不断扩展其产品，以便为虚拟主机提供更多价值，让客户受益于亚马逊开发人员的努力。
- en: It's relatively cheap to duplicate the customer-designed infrastructure to create
    a testing environment that is separate from the live/deployed applications. It's
    easy to scale services that grow with popularity, or when the services are **slashdotted**.
    This is a term that describes what happens when a very popular site adds a link
    to another site, driving a lot more traffic to that site—perhaps more traffic
    than the site was designed to handle.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 复制客户设计的基础设施以创建一个与实时/部署应用分开的测试环境相对便宜。随着服务的流行或当服务被**Slashdot**效应影响时，扩展服务变得更加容易。这个术语描述了当一个非常受欢迎的网站添加了另一个网站的链接，导致更多的流量涌向那个网站，甚至可能比该网站所能处理的流量还要多的现象。
- en: The design and deployment of a virtualized infrastructure can be done from the
    comfort of your office. There is no need to physically visit a data center. If
    you need to scale horizontally, you only need to spin up additional virtual machine
    instances. If you need to scale vertically, you only need to spin up a more powerful
    virtual machine and substitute it for the one that is too slow or too small.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟化基础设施的设计和部署可以在你办公室的舒适环境中完成，无需亲自访问数据中心。如果需要横向扩展，只需启动额外的虚拟机实例。如果需要纵向扩展，只需启动一个更强大的虚拟机，并用它替换掉太慢或过小的虚拟机。
- en: If hardware fails at a cloud-hosting facility, the hosting company's employees
    install new hardware. This is done in complete transparency with you, the customer.
    A feature known as **Teleport** allows the hosting company to move a running virtual
    machine to a different physical machine, without the interruption of service.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 如果云托管设施的硬件发生故障，托管公司员工将安装新的硬件。这一过程对你，作为客户，完全透明。名为**Teleport**的功能允许托管公司将正在运行的虚拟机迁移到另一台物理机上，且不会中断服务。
- en: Along with virtual servers, hosting companies can also offer virtual disks,
    elastic IPs, load balancers, DNS, backup solutions, and so on. Virtual disks are
    handy because you can back them up by simply copying the file that is the image.
    You can also boot new instances from an existing virtual disk, saving the time
    required to install a whole operating system on a virtual machine.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 除了虚拟服务器，托管公司还可以提供虚拟磁盘、弹性 IP、负载均衡器、DNS、备份解决方案等。虚拟磁盘非常方便，因为你可以通过简单地复制作为映像的文件来备份它们。你还可以从现有的虚拟磁盘启动新的实例，节省在虚拟机上安装操作系统所需的时间。
- en: The ability to use elastic IPs and virtual load balancers allows a scalability
    that is as easy as the click of a mouse.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 使用弹性 IP 和虚拟负载均衡器的能力，使得扩展性变得像点击鼠标一样简单。
- en: 'You can assign an elastic IP to any virtual instance or load balancer. If the
    instance is stopped, you can reassign that IP to another instance. If this were
    handled only with DNS, there could be days'' worth of delays for the DNS to propagate
    through the many DNS servers at the ISPs. The load balancer allows you to create
    virtual server farms and balance incoming requests between the virtual servers
    in the farm. You can trivially spin up and add additional virtual servers to the
    load balancer as you need to scale. The hosting companies can even provide software
    triggers that will automatically spin up and add new servers when traffic increases,
    and then spin them down and remove them when traffic is reduced:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以将弹性 IP 分配给任何虚拟实例或负载均衡器。如果实例被停止，可以将该 IP 重新分配给另一个实例。如果仅通过 DNS 来处理这一问题，DNS 在
    ISP 的众多服务器上传播时可能会出现几天的延迟。负载均衡器允许你创建虚拟服务器集群，并在集群中的虚拟服务器之间平衡传入请求。你可以轻松地启动并添加额外的虚拟服务器到负载均衡器中，以便扩展。托管公司甚至可以提供软件触发器，当流量增加时自动启动并添加新的服务器，而当流量减少时则自动关闭并移除这些服务器。
- en: '![Figure 1.4 – Hardware virtualization ](img/B11641_01_004.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.4 – 硬件虚拟化](img/B11641_01_004.jpg)'
- en: Figure 1.4 – Hardware virtualization
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.4 – 硬件虚拟化
- en: A popular stack technology at the time that AWS was made available to the public
    was **LAMP**, which is short for **Linux, Apache, MySQL, and PHP**. A typical
    setup would be to install these four software packages on a dedicated Linux server.
    AWS offered RDS, or a MySQL equivalent dedicated virtual server, which allowed
    the offloading and scaling of the LAMP application. AWS offered virtual load balancers,
    which are logical Ethernet switches that load balance traffic among two or more
    web servers. They offered domain name-hosting and elastic IPs, so a site's uptime
    could be almost infinite. AWS continues to develop new software and services to
    benefit its customers.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: AWS 启用公众访问时，当时流行的技术栈是 **LAMP**，即 **Linux、Apache、MySQL 和 PHP** 的缩写。典型的设置是在专用的
    Linux 服务器上安装这四个软件包。AWS 提供了 RDS，或者等效的 MySQL 专用虚拟服务器，这使得 LAMP 应用程序能够实现卸载和扩展。AWS
    还提供了虚拟负载均衡器，它是逻辑以太网交换机，用于在两个或更多的 Web 服务器之间负载平衡流量。AWS 还提供了域名托管和弹性 IP，因此站点的正常运行时间几乎可以是无限的。AWS
    继续开发新的软件和服务，以造福其客户。
- en: AWS and its competitors allow a cost-effective and dynamic way to grow an internet
    presence as it gains popularity. The price structure is common among most providers.
    The cost is based on the number of elastic load balancers, the number of virtual
    server instances, the amount of RAM, the number of virtual CPUs, the size of persistent
    storage, and the bandwidth. There are also optional additional services that can
    increase the price.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: AWS 及其竞争对手提供了一种成本效益高且动态的方式来随着其受欢迎程度的增加而扩展互联网存在。价格结构在大多数提供商中是常见的。费用基于弹性负载均衡器的数量、虚拟服务器实例的数量、RAM
    的大小、虚拟 CPU 的数量、持久存储的大小和带宽。此外，还有可选的附加服务可以增加费用。
- en: Virtual servers provide the benefits of a physical one, but it comes at the
    cost of the dedication of physical RAM on the host machine and the power required
    to run the machine. A host machine might have 64 GB of RAM; it can run some combination
    of virtual machines that, combined, use up that RAM—for example, four 16 GB virtual
    machines, two 32 GB virtual machines, two 16 gigabytes and one 32 GB virtual machine,
    and so on.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟服务器提供了物理服务器的优势，但代价是占用了主机机器上物理 RAM 的专用空间和运行该机器所需的功率。主机机器可能有 64 GB 的 RAM；它可以运行一些虚拟机的组合，所有虚拟机加起来使用掉这些
    RAM——例如，四个 16 GB 的虚拟机、两个 32 GB 的虚拟机、两个 16 GB 和一个 32 GB 的虚拟机，依此类推。
- en: A risk of virtual machines is that when the host machine is rebooted or fails,
    all the virtual machines hosted on it will go off air.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟机的一个风险是，当主机机器重启或发生故障时，所有托管在其上的虚拟机都会停止运行。
- en: The features that enable virtualization and the limitations of virtualization
    when applied at data centers make containerization a viable and preferred alternative.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 实现虚拟化的特性和虚拟化在数据中心应用时的限制使得容器化成为一种可行且优选的替代方案。
- en: Using containers to further optimize data center resources
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用容器进一步优化数据中心资源
- en: Docker is a clever use of OS-level virtualization support that allows multiple
    Docker containers to execute on a single machine. A container is a running instance
    of a container image. The containers are, by default, isolated from the host machine,
    as well as from one another.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: Docker 是一种巧妙利用操作系统级虚拟化支持的方式，它允许多个 Docker 容器在一台机器上运行。容器是容器镜像的运行实例。默认情况下，容器与主机机器以及彼此之间是隔离的。
- en: 'They can be configured to expose resources, such as networking ports, to the
    host network (for example, the internet) or to one another. The following diagram
    illustrates the basic structure of containers on a host:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 容器可以被配置为暴露资源，例如网络端口，给主机网络（例如，互联网）或彼此之间。下图展示了容器在主机上的基本结构：
- en: '![Figure 1.5 – Docker containerization](img/B11641_01_005.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.5 – Docker 容器化](img/B11641_01_005.jpg)'
- en: Figure 1.5 – Docker containerization
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.5 – Docker 容器化
- en: Containers share their Linux kernel with the host, so you do not need to install
    complete operating systems within the container as you do with virtual machines.
    The containers are managed by the Docker daemon, which handles the management
    of the containers and resources they use, as well as the images, networks, volumes,
    and so on.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 容器与主机共享 Linux 内核，因此你无需像虚拟机那样在容器内安装完整的操作系统。容器由 Docker 守护进程管理，后者处理容器及其使用的资源的管理，以及镜像、网络、卷等。
- en: An important distinction between virtual servers and containers is that containers
    share the resources, directly, of the host, whereas virtual servers require duplicate
    resources. For example, two identical containers use the host's RAM, rather than
    a block of RAM configured before booting the virtual machine. If you need to constrain
    the resources (the CPU, memory, swap, and so on) of a container, you can do so,
    but the default is to have no resource constraints on any container.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟服务器和容器之间一个重要的区别是，容器直接共享主机的资源，而虚拟服务器需要重复资源。例如，两个相同的容器使用主机的RAM，而不是在启动虚拟机之前配置的RAM块。如果你需要限制容器的资源（如CPU、内存、交换空间等），是可以做到的，但默认情况下，容器没有资源限制。
- en: Unlike with virtual servers, you deal with an application image, rather than
    a virtual disk. You can copy the image to back it up, but there is no virtual
    disk file to copy. These application images are progressively built on top of
    other containers. When you build a container, only the bits of the application
    image that change need to be dealt with.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 与虚拟服务器不同，你处理的是应用镜像，而不是虚拟磁盘。你可以复制镜像进行备份，但没有虚拟磁盘文件可以复制。这些应用镜像是基于其他容器逐步构建的。当你构建容器时，只有那些发生变化的应用镜像部分需要处理。
- en: When designing services that use containers, you will not likely install many
    components within any one container. For a virtual machine running a LAMP application,
    you might install Apache, MySQL, and PHP all within one virtual machine. When
    designing the same LAMP application for containers, you might configure one container
    just for MySQL and another for Apache and PHP. You can then scale your application
    by running additional Apache and PHP containers and additional MySQL instances
    in a cluster configuration.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在设计使用容器的服务时，你不太可能在单个容器中安装很多组件。例如，在运行LAMP应用程序的虚拟机中，你可能会在一台虚拟机中安装Apache、MySQL和PHP。而在为容器设计相同的LAMP应用时，你可能会将一个容器仅配置为MySQL，另一个容器用于Apache和PHP。然后，你可以通过运行额外的Apache和PHP容器，以及在集群配置中运行额外的MySQL实例来扩展你的应用程序。
- en: If we consider the use of containers for the LAMP application discussed earlier,
    we can implement MySQL in a dedicated container, and Apache and PHP in another;
    all this running on top of the host's Linux kernel. To scale the LAMP application,
    a second, third, fourth, and so on instance of the Apache/PHP container can be
    spun up, and the same is true for the MySQL container. MySQL containers can be
    configured for master-subordinate operations.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们考虑早前讨论的LAMP应用的容器化使用，我们可以将MySQL实现为专用容器，而将Apache和PHP放在另一个容器中；这一切都运行在主机的Linux内核之上。为了扩展LAMP应用程序，可以启动第二个、第三个、第四个等Apache/PHP容器，同样也适用于MySQL容器。MySQL容器可以配置为主从操作。
- en: If the host operating system is not Linux kernel-based, there are two options.
    The first option is to run host OS native containers (for example, Windows containers
    on a Windows host). The second option is to run a Linux virtual machine on the
    host and run the containers within that virtual machine.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 如果主机操作系统不是基于Linux内核的，有两种选择。第一种选择是在主机上运行操作系统本地容器（例如，在Windows主机上运行Windows容器）。第二种选择是在主机上运行一个Linux虚拟机，并在该虚拟机中运行容器。
- en: Containerization is a boon for hosting companies and their customers. No longer
    is it required to dedicate a fixed amount of RAM per container as is required
    with virtual machines. A physical machine is limited only by its resources when
    it comes to the number of containers it can run concurrently. The pricing model
    for containers can save customers on monthly costs. Thus, containerization is
    a big win.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 容器化对于托管公司及其客户来说是一个福音。与虚拟机不同，不再需要为每个容器分配固定数量的RAM。物理机器的限制仅在于其资源，决定了它可以并发运行的容器数量。容器的定价模型可以帮助客户节省每月费用。因此，容器化是一个巨大的胜利。
- en: In the next chapter, we'll look at how to use virtual machines and Docker to
    develop applications locally. Later in this book, we'll look at how to deploy
    our locally developed software to publicly accessible internet/cloud infrastructure.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习如何使用虚拟机和Docker在本地开发应用程序。稍后的章节中，我们将探讨如何将本地开发的软件部署到公开可访问的互联网/云基础设施。
- en: Summary
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we saw how Docker and containerization was a natural result
    of the progression of hosting requirements since the start of the commercial internet.
    We reviewed the history of hosting and how we got to today's hosting configurations.
    You should now have a decent understanding of the difference between virtualization
    and containerization.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们看到Docker和容器化是自商业互联网开始以来，托管需求进化的自然结果。我们回顾了托管的历史以及我们如何发展到今天的托管配置。你现在应该对虚拟化和容器化之间的区别有了相当的理解。
- en: In the next chapter, we'll look at VirtualBox and Docker. This is a good way
    to explore the differences between virtual machines and Docker containers.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探讨VirtualBox和Docker。这是一个很好的方式来探索虚拟机和Docker容器之间的区别。
- en: Further reading
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'If you would like to look into some of the subjects discussed so far in-depth,
    refer to the following links:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想深入了解目前讨论的某些主题，请参考以下链接：
- en: 'This link partially describes how Google''s search algorithm is implemented:
    [https://www.google.com/search/howsearchworks/](https://www.google.com/search/howsearchworks/)'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个链接部分描述了谷歌搜索算法的实现：[https://www.google.com/search/howsearchworks/](https://www.google.com/search/howsearchworks/)
- en: 'This link describes Google''s search infrastructure: [https://netvantagemarketing.com/blog/how-does-google-return-results-so-damn-fast/](https://netvantagemarketing.com/blog/how-does-google-return-results-so-damn-fast/)'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个链接描述了谷歌的搜索基础设施：[https://netvantagemarketing.com/blog/how-does-google-return-results-so-damn-fast/](https://netvantagemarketing.com/blog/how-does-google-return-results-so-damn-fast/)
- en: 'This link also describes Google''s search infrastructure: [https://www.ctl.io/centurylink-public-cloud/servers/](https://www.ctl.io/centurylink-public-cloud/servers/)'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个链接也描述了谷歌的搜索基础设施：[https://www.ctl.io/centurylink-public-cloud/servers/](https://www.ctl.io/centurylink-public-cloud/servers/)
- en: 'This link describes IBM''s early technology to support virtualization: [https://en.wikipedia.org/wiki/IBM_CP-40](https://en.wikipedia.org/wiki/IBM_CP-40)'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个链接描述了IBM早期的虚拟化支持技术：[https://en.wikipedia.org/wiki/IBM_CP-40](https://en.wikipedia.org/wiki/IBM_CP-40)
- en: 'This link describes an old program that emulates a PC to run Windows on a non-Windows
    host: [https://en.wikipedia.org/wiki/SoftPC](https://en.wikipedia.org/wiki/SoftPC)'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个链接描述了一个旧程序，它模拟PC在非Windows主机上运行Windows：[https://en.wikipedia.org/wiki/SoftPC](https://en.wikipedia.org/wiki/SoftPC)
- en: 'This link provides an introduction to the VMWare company: [https://en.wikipedia.org/wiki/VMware](https://en.wikipedia.org/wiki/VMware)'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个链接提供了VMWare公司的介绍：[https://en.wikipedia.org/wiki/VMware](https://en.wikipedia.org/wiki/VMware)
- en: 'This link describes Oracle''s VirtualBox: [https://en.wikipedia.org/wiki/VirtualBox](https://en.wikipedia.org/wiki/VirtualBox)'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个链接描述了Oracle的VirtualBox：[https://en.wikipedia.org/wiki/VirtualBox](https://en.wikipedia.org/wiki/VirtualBox)
- en: 'This link introduces Parallels: [https://en.wikipedia.org/wiki/Parallels_(company)](https://en.wikipedia.org/wiki/Parallels_(company))'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个链接介绍了Parallels：[https://en.wikipedia.org/wiki/Parallels_(company)](https://en.wikipedia.org/wiki/Parallels_(company))
- en: 'This link discusses the role of the Hypervisor in virtualization and containerization:
    [https://en.wikipedia.org/wiki/Hypervisor](https://en.wikipedia.org/wiki/Hypervisor)'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个链接讨论了虚拟化和容器化中Hypervisor的作用：[https://en.wikipedia.org/wiki/Hypervisor](https://en.wikipedia.org/wiki/Hypervisor)
- en: 'This link describes VMWare''s standalone operating system designed specifically
    to run virtual machines: [https://en.wikipedia.org/wiki/VMware_ESXi](https://en.wikipedia.org/wiki/VMware_ESXi)'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个链接描述了VMWare专门为运行虚拟机设计的独立操作系统：[https://en.wikipedia.org/wiki/VMware_ESXi](https://en.wikipedia.org/wiki/VMware_ESXi)
- en: 'This link describes the Xen hypervisor: https://15anniversary.xenproject.org/#Intro'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个链接描述了Xen hypervisor：[https://15anniversary.xenproject.org/#Intro](https://15anniversary.xenproject.org/#Intro)
- en: 'This link describes Amazon''s AWS virtual machines: [https://en.wikipedia.org/wiki/Amazon_Elastic_Compute_Cloud](https://en.wikipedia.org/wiki/Amazon_Elastic_Compute_Cloud)'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个链接描述了亚马逊的AWS虚拟机：[https://en.wikipedia.org/wiki/Amazon_Elastic_Compute_Cloud](https://en.wikipedia.org/wiki/Amazon_Elastic_Compute_Cloud)
- en: 'This link describes kernel features to support virtualization and containerization:
    [https://en.wikipedia.org/wiki/Kernel-based_Virtual_Machine](https://en.wikipedia.org/wiki/Kernel-based_Virtual_Machine)'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个链接描述了支持虚拟化和容器化的内核特性：[https://en.wikipedia.org/wiki/Kernel-based_Virtual_Machine](https://en.wikipedia.org/wiki/Kernel-based_Virtual_Machine)
- en: 'This link describes using QEMU to emulate Raspberry Pi on a workstation: [https://azeria-labs.com/emulate-raspberry-pi-with-qemu/](https://azeria-labs.com/emulate-raspberry-pi-with-qemu/)'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个链接描述了如何使用QEMU在工作站上模拟树莓派：[https://azeria-labs.com/emulate-raspberry-pi-with-qemu/](https://azeria-labs.com/emulate-raspberry-pi-with-qemu/)
