- en: CI/CD for Android with Visual Studio Team Services
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Visual Studio Team Services 实现 Android 的 CI/CD
- en: In the last chapter, we learned about continuous integration and various tools
    to implement it in a development life cycle. We also learned in detail about continuous
    integration using TeamCity as a CI tool.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们学习了关于持续集成的内容以及如何在开发生命周期中实现它的各种工具。我们还详细了解了使用 TeamCity 作为 CI 工具的持续集成过程。
- en: In this chapter, we will go into more detail about continuous integration and
    continuous delivery using **Visual Studio Team Services** (**VSTS**) as a tool.
    We will be discussing all the steps that you require to set up and put VSTS to
    work.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将详细介绍如何使用 **Visual Studio Team Services**（**VSTS**）作为工具来进行持续集成和持续交付。我们将讨论设置和使用
    VSTS 所需的所有步骤。
- en: VSTS is another tool provided by Microsoft for DevOps that works with almost
    any third-party DevOps chain tool in the market. It has great integration with
    GitHub, Jenkins, Azure, and many other similar tools for your continuous integration
    needs.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: VSTS 是 Microsoft 提供的另一种 DevOps 工具，几乎可以与市场上的任何第三方 DevOps 工具链配合使用。它与 GitHub、Jenkins、Azure
    以及许多其他类似工具有着很好的集成，能够满足你的持续集成需求。
- en: 'Some of the topics covered in this chapter are as follows:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖的部分内容如下：
- en: Creating an account in Visual Studio
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Visual Studio 中创建账户
- en: Getting the code from GitHub
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从 GitHub 获取代码
- en: Creating the build definition
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建构建定义
- en: Configuring a repository
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置一个代码库
- en: Queue build
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 队列构建
- en: Building with every commit
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每次提交时构建
- en: Creating an account in Visual Studio
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Visual Studio 中创建账户
- en: 'To get started with VSTS, head to your web browser and follow these steps:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用 VSTS，请打开你的网页浏览器并按照以下步骤操作：
- en: 'Open Microsoft''s website at this URL: [https://www.visualstudio.com/team-services/](https://www.visualstudio.com/team-services/).'
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 Microsoft 网站，访问以下 URL：[https://www.visualstudio.com/team-services/](https://www.visualstudio.com/team-services/)。
- en: 'On the website, you''ll see a Get started for free button, as shown in the
    next screenshot. Click on that button:'
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在网站上，你将看到一个“免费开始”按钮，如下图所示。点击该按钮：
- en: '![](img/179a5477-0975-4b44-a2ea-556dbcec320b.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](img/179a5477-0975-4b44-a2ea-556dbcec320b.png)'
- en: 'Clicking on the button will take you to the signup page, where you can log
    in using your existing Microsoft account:'
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击按钮将带你到注册页面，你可以使用现有的 Microsoft 账户登录：
- en: '![](img/d8f82e9a-1a23-44e5-b68d-7367fcc2f003.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d8f82e9a-1a23-44e5-b68d-7367fcc2f003.png)'
- en: If you don't already have a Microsoft account, then you can click on the Create
    account link on the same page.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你还没有 Microsoft 账户，可以点击同一页面上的“创建账户”链接。
- en: 'Clicking on the Create account link will take you to the next page, where you
    can choose a username and password for your account and click Next:'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“创建账户”链接将带你到下一页，在那里你可以选择用户名和密码并点击“下一步”：
- en: '![](img/21d17e0c-d37d-4ed5-9622-5e011d185fab.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](img/21d17e0c-d37d-4ed5-9622-5e011d185fab.png)'
- en: It might ask you to verify that you are an actual person creating an account,
    so after completing that step, your account should be ready to use.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它可能会要求你验证你是一个真实的人在创建账户，完成该步骤后，你的账户应该就可以使用了。
- en: After completing the signup form, the next step is to set up the URL to host
    your Team Services project at [https://www.visualstudio.com/](https://www.visualstudio.com/).
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成注册表单后，下一步是设置用于托管你的 Team Services 项目的 URL：[https://www.visualstudio.com/](https://www.visualstudio.com/)。
- en: 'Here, you give the URL for the project hosting and select the way you will
    be managing your code''s source version (that is, TFS or Git):'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这里，你需要提供项目托管的 URL，并选择你将如何管理代码源版本（即，选择 TFS 或 Git）：
- en: '![](img/7cc77b55-8671-4d51-8a6a-e43c3356a16a.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7cc77b55-8671-4d51-8a6a-e43c3356a16a.png)'
- en: We will be using Git as our source code repository to manage our project.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将使用 Git 作为我们的源代码库来管理项目。
- en: Select Git as the code managing platform and click on the Continue button, and
    the signup process is done.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 Git 作为代码管理平台，然后点击继续按钮，注册过程就完成了。
- en: Getting the code from GitHub
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从 GitHub 获取代码
- en: 'Now that your account is created, it''s time to import your code into VSTS:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你的账户已创建，接下来是将代码导入 VSTS：
- en: On the next page, you'll see different options to integrate your project from
    your computer, using the command line and even by initializing a new Git repository.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一页中，你将看到不同的选项，用于从你的计算机上集成项目，包括使用命令行，甚至通过初始化新的 Git 仓库。
- en: 'We already have our project synced on Git, so we''ll be choosing the option
    to import a project from Git, as shown in the following screenshot:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们已经将项目同步到 Git 上，因此我们将选择从 Git 导入项目的选项，如下图所示：
- en: '![](img/40dcb7cd-5638-4175-96e9-66288b0ad16d.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](img/40dcb7cd-5638-4175-96e9-66288b0ad16d.png)'
- en: Clicking on the Import button will open a small popup window where you can choose
    either Git or TFS as your source type and provide your repository URL.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击导入按钮将打开一个小弹窗，你可以在其中选择 Git 或 TFS 作为你的源类型，并提供你的代码库 URL。
- en: 'Please note that it will require you to give this application permission to
    access using your Git credentials:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 请注意，它需要你授予此应用程序使用你的 Git 凭据访问权限：
- en: '![](img/ecac0952-4fef-474d-a21e-8812ab05fba3.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ecac0952-4fef-474d-a21e-8812ab05fba3.png)'
- en: After providing the repository URL and login information, click on the Import
    button.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提供代码库 URL 和登录信息后，点击导入按钮。
- en: This will import your project from Git into the VSTS server, where you then
    can manage all the processes related to the DevOps life cycle.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将把你的项目从 Git 导入到 VSTS 服务器，在这里你可以管理与 DevOps 生命周期相关的所有过程。
- en: 'Once your code is imported, you''ll be able to see all the directories and
    code in the code section of VSTS:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦代码被导入，你就能在 VSTS 的代码部分看到所有目录和代码：
- en: '![](img/09811256-637b-417e-9777-0f36044514e1.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](img/09811256-637b-417e-9777-0f36044514e1.png)'
- en: So now that your code is also imported into VSTS, it is time to create a build
    for the project.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在你的代码也已经导入到 VSTS，是时候为项目创建构建了。
- en: Creating the build definition
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建构建定义
- en: Creating the build definition in VSTS is a straightforward and simple process.
    It provides you with templates for various tools to help you create build definitions.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在 VSTS 中创建构建定义是一个简单直接的过程。它为你提供了多种工具模板，帮助你创建构建定义。
- en: 'Follow these steps to start creating the build definitions for your project:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤开始为你的项目创建构建定义：
- en: 'On the code page, click on the Set up build button, as shown in the following
    screenshot:'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在代码页面，点击设置构建按钮，如下图所示：
- en: '![](img/808671df-20f0-4535-8134-0ebe7a27617a.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](img/808671df-20f0-4535-8134-0ebe7a27617a.png)'
- en: This will take you to the next page where you can select a predefined VSTS template
    to use.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将带你到下一页，在那里你可以选择一个预定义的 VSTS 模板来使用。
- en: On the next page, select GitHub or your choice of any other source versioning
    the build would be connecting from.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一页，选择 GitHub 或其他你选择的源版本作为构建的连接来源。
- en: 'Give a connection name in the input box provided and click on the Authorize
    using OAuth button:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在输入框中提供一个连接名称，然后点击使用 OAuth 授权按钮：
- en: '![](img/8a7aa725-8e4a-436a-8779-804bd036399c.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8a7aa725-8e4a-436a-8779-804bd036399c.png)'
- en: A pop-up window will open; you might need to unblock the popup from the VSTS
    website to see it.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个弹窗将会打开，你可能需要从 VSTS 网站解除弹窗阻止才能看到它。
- en: 'Authorize and give VSTS OAuth permissions to access your GitHub repository:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 授权并给予 VSTS OAuth 权限访问你的 GitHub 仓库：
- en: '![](img/954645a8-4edf-43f0-a6f4-9db2610b4369.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](img/954645a8-4edf-43f0-a6f4-9db2610b4369.png)'
- en: Click on the Authorize vsonline button to authorize and give permissions to
    access the account.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击授权 vsonline 按钮以授权并授予访问账户的权限。
- en: 'Once done, on the next step it will ask you to select the project repository
    and branch to take the code from:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，在下一步将要求你选择项目的代码库和分支来获取代码：
- en: '![](img/c72a8ace-07ad-45f2-b4d9-a99a4be7e590.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c72a8ace-07ad-45f2-b4d9-a99a4be7e590.png)'
- en: Select the project repository from the repository dropdown provided, and then
    the branch accordingly, and click on the Continue button, as shown in the preceding
    screenshot.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从提供的代码库下拉菜单中选择项目代码库，然后选择相应的分支，点击继续按钮，如前面的截图所示。
- en: In this example, we are following up with the same project we developed and
    used as an example in previous projects, which was the Android app we developed
    with Xamarin.Android.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这个例子中，我们跟进的是之前项目中开发和使用的同一个项目，也就是我们用 Xamarin.Android 开发的 Android 应用。
- en: Now, because VSTS and Xamarin are both Microsoft tools, they have great compatibility
    and built-in templates.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，由于 VSTS 和 Xamarin 都是微软工具，它们具有很好的兼容性和内置模板。
- en: 'So, on the next page, scroll down the list of templates until you see the Xamarin.Android
    template and apply that template:'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 所以，在下一页，向下滚动模板列表，直到看到 Xamarin.Android 模板并应用该模板：
- en: '![](img/642324c3-2a50-446d-aa40-2a19b4786664.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](img/642324c3-2a50-446d-aa40-2a19b4786664.png)'
- en: Now that a template is applied, it's time to configure the build definition.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在模板已应用，接下来是配置构建定义的步骤。
- en: Configuring the build definition
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置构建定义
- en: 'VSTS has great support for the Xamarin application build process, and automatically
    takes all the steps you might require for the project''s build configuration.
    But, you might need to provide some extra information for some of the build steps
    involved:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: VSTS对Xamarin应用程序构建过程提供了很好的支持，并自动执行所有你可能需要的构建配置步骤。但是，你可能需要为某些构建步骤提供额外的信息：
- en: 'You will see the build steps already in place on the next page in VSTS:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将在下一页的VSTS中看到已经设置好的构建步骤：
- en: '![](img/26bd9280-729f-4b0a-b35b-d4d0228586c8.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](img/26bd9280-729f-4b0a-b35b-d4d0228586c8.png)'
- en: Let's stop here for a second and look at the build steps provided by VSTS, all
    automatically set up for you to just start the build.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们暂停一下，看看VSTS提供的构建步骤，所有这些都已经为你自动设置好，你只需开始构建。
- en: 'It''s a good idea to have a brief look at the steps involved, starting from
    Nuget package restore, to building the packages, and finally to publishing them:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 看一下涉及的步骤是个好主意，从Nuget包恢复，到构建包，最后到发布它们：
- en: '![](img/b15dc618-518c-42b4-a445-c30f2235a04c.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b15dc618-518c-42b4-a445-c30f2235a04c.png)'
- en: Here we need to provide some information related to our Xamarin Test Cloud account
    so VSTS can run Test Cloud tests there.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这里我们需要提供一些与Xamarin Test Cloud帐户相关的信息，以便VSTS可以在Test Cloud上运行测试。
- en: 'Click on the Test step on the left-hand side of the screen. It will highlight
    the required information fields on the right-hand side of the screen:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击屏幕左侧的测试步骤。它将在屏幕右侧突出显示所需的信息字段：
- en: '![](img/2675611a-88af-46af-a3fb-410d1c20bcd6.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2675611a-88af-46af-a3fb-410d1c20bcd6.png)'
- en: You'll have to use the team API key from your Xamarin Test Cloud account and
    the user email under which you would like the build to run, and also the devices
    you would like the tests to run on.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将需要使用Xamarin Test Cloud帐户中的团队API密钥和你希望构建运行的用户电子邮件，还需要指定要运行测试的设备。
- en: 'Let''s go back and log in to Xamarin Test Cloud, then go to Account settings:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在回到Xamarin Test Cloud并登录，然后转到帐户设置：
- en: '![](img/1bef3879-a71c-47ba-bc4f-f2995b9334b3.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1bef3879-a71c-47ba-bc4f-f2995b9334b3.png)'
- en: Click on Account settings and there you need to go to the Teams & Apps section
    to get the API and other required details.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“帐户设置”，然后你需要进入“Teams & Apps”部分，获取API密钥和其他所需的详细信息。
- en: 'In the Accounts settings, click on the Teams & Apps link from the left pane
    which will open the Teams & Apps section:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在帐户设置中，点击左侧窗格中的“Teams & Apps”链接，这将打开“Teams & Apps”部分：
- en: '![](img/8ae002d2-e8a7-4c36-94cb-ac995629e5ce.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8ae002d2-e8a7-4c36-94cb-ac995629e5ce.png)'
- en: As shown in the preceding screenshot, the team we had created to run the tests
    is visible.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如前面的截图所示，我们创建的用于运行测试的团队是可见的。
- en: In that Teams & Apps section, there will be a link to show API key, as shown
    in the preceding screenshot.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“Teams & Apps”部分，将有一个链接来显示API密钥，如前面的截图所示。
- en: 'Click on that same link to see the API key for the team defined, and note it
    down:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击相同的链接查看团队定义的API密钥，并记下它：
- en: '![](img/b26eb3b5-6e75-487a-a2bc-d79d7283fd8c.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b26eb3b5-6e75-487a-a2bc-d79d7283fd8c.png)'
- en: 'Then, click on the gear icon to get the team members'' details and their emails:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，点击齿轮图标获取团队成员的详细信息及其电子邮件：
- en: '![](img/86c3fb35-c817-41ea-8c05-af20ca7d94d8.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](img/86c3fb35-c817-41ea-8c05-af20ca7d94d8.png)'
- en: Make sure you note the user credentials that have all the permissions required
    to run the tests.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保记录下具有运行测试所需的所有权限的用户凭证。
- en: Copy the email of the user and note it down.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制用户的电子邮件并记下它。
- en: The last value required is the devices string; this string stores information
    about the list of devices to run the Xamarin Tests on.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后一个必需的值是设备字符串；这个字符串存储了有关要运行Xamarin测试的设备列表的信息。
- en: 'The devices string can be found as the value of the `-devices` command line
    argument of a Test Cloud test run as described in previous chapters:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设备字符串可以在之前章节中描述的Test Cloud测试运行的`-devices`命令行参数中找到：
- en: '![](img/7b5573a4-6140-438b-8800-68887c849417.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7b5573a4-6140-438b-8800-68887c849417.png)'
- en: Now that we have all the values required, let's get back to the build configuration
    steps and put the values in.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们已经有了所有必需的值，让我们回到构建配置步骤并输入这些值。
- en: Queue build
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 排队构建
- en: 'All the configurations are done, and now we can save the configuration and
    queue the build:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 所有配置完成，现在我们可以保存配置并排队构建：
- en: 'Once the preceding steps are completed, click on the Save & queue button at
    the top of the build configuration page:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦完成上述步骤，点击构建配置页面顶部的“保存并排队”按钮：
- en: '![](img/5ecb31ca-da8f-4846-950d-d043958350e3.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5ecb31ca-da8f-4846-950d-d043958350e3.png)'
- en: 'Give your name to the build and commit comments, and click Save & queue:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 给构建和提交注释命名，并点击“保存并排队”：
- en: '![](img/fb06102a-297d-48ed-92d8-c3b8bdf30a32.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fb06102a-297d-48ed-92d8-c3b8bdf30a32.png)'
- en: 'Once the build is saved and queued, you''ll get a small notification, as shown
    in the following screenshot:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦构建被保存并排队，你将收到一个小的通知，如下图所示：
- en: '![](img/f659a053-6dfb-40c8-add8-0f605aca0e30.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f659a053-6dfb-40c8-add8-0f605aca0e30.png)'
- en: Congratulations, you have now successfully completed the build configuration
    and queued the build for execution.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 恭喜你，现在已经成功完成了构建配置并排队执行构建。
- en: Triggers - build with every commit
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 触发器 - 每次提交时构建
- en: Now we have covered how to configure the build steps and queue them manually.
    In continuous integration, it is important to automate the build, especially whenever
    developers check code in. This helps keep the latest build up to date with all
    the changes made and lets developers know of any issues in the build at earlier
    stages of development.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经介绍了如何配置构建步骤并手动排队它们。在持续集成中，自动化构建非常重要，尤其是在开发人员提交代码时。这有助于确保最新的构建与所有更改保持同步，并让开发人员在开发的早期阶段就能发现构建中的任何问题。
- en: 'Follow these steps now to set up triggers and automate the build:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 现在按照这些步骤设置触发器并自动化构建：
- en: 'Click on the Triggers tab in the configurations section shown in previous steps:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击前面步骤中配置部分的“触发器”选项卡：
- en: '![](img/cf8d1552-875c-4de0-a79a-b25420bbd0be.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cf8d1552-875c-4de0-a79a-b25420bbd0be.png)'
- en: In the Triggers tab, in the left pane, you'll see a section for Continuous integration,
    under which you will find your repository linked.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在触发器选项卡的左侧面板中，你将看到一个“持续集成”部分，在该部分下你会找到与你的仓库相关联的信息。
- en: 'Click on that link to open the continuous integration section on the right-hand
    side:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击该链接以打开右侧的持续集成部分：
- en: '![](img/0141f42e-ecfa-44c3-bdb2-07909fe744d3.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0141f42e-ecfa-44c3-bdb2-07909fe744d3.png)'
- en: Check the Enable continuous integration box.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 勾选“启用持续集成”框。
- en: You'll notice there is one more checkbox, to Batch changes while build in progress.
    This option is useful when you have many developers frequently checking in changes
    to a repository. Checking this option will batch the new changes in the repository
    while a build is already in process, queue further changes in a batch until the
    build completes, and then queue a new build for those changes.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你会注意到，还有一个复选框是“在构建过程中批量处理更改”。当你有许多开发者频繁地向仓库提交更改时，这个选项非常有用。勾选此选项将在构建已在进行时，将新更改批量处理，直到构建完成后，再将其他更改批量排队，并为这些更改排队一个新的构建。
- en: 'The following are the integration checkboxes; you''ll see options to select
    specific branches to include in the build. You can also exclude some branches
    specifically, as per your requirements:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下是集成复选框；你将看到选择特定分支来包含在构建中的选项。你还可以根据需求排除某些分支：
- en: '![](img/14f5cb9c-7b4c-4fa9-baae-3811d1b8ae8f.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![](img/14f5cb9c-7b4c-4fa9-baae-3811d1b8ae8f.png)'
- en: 'Once the changes are done, you can save the build definition and now the build
    is part of our continuous integration process, which will:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦更改完成，你可以保存构建定义，现在该构建将成为我们持续集成过程的一部分，具体流程为：
- en: Start building your project with every check-in or in batches, as per your configurations
  id: totrans-111
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按照你的配置设置，开始在每次检查提交时或批量构建时构建你的项目
- en: Run tests on Xamarin Test Cloud
  id: totrans-112
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Xamarin 测试云上运行测试
- en: Sign and zipalign the project's APK file
  id: totrans-113
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对项目的 APK 文件进行签名和 zipalign
- en: Publish your app
  id: totrans-114
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发布你的应用
- en: All these steps will be performed as part of your build configuration, with
    everything automated.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些步骤将作为构建配置的一部分执行，所有内容都实现了自动化。
- en: Now, all developers need to worry about is writing quality code, and they can
    get their code tested in real time on real devices using Microsoft's CI tools
    and get them published with every build.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，所有开发者只需要关注编写高质量代码，他们可以使用微软的 CI 工具，在真实设备上实时测试代码，并在每次构建时发布它们。
- en: This helps quality app development with quicker feedback and a continuous workflow
    between all the stages of development.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 这有助于提高应用开发的质量，通过更快的反馈和在开发各个阶段之间实现持续的工作流程。
- en: Summary
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we discussed continuous integration using VSTS, a great tool
    for CI needs if you use a lot of Microsoft tools in your development life cycle,
    especially Xamarin. We learned how to configure build steps in VSTS and integrate
    the Xamarin Test Cloud Teams API for continuous testing, and at the end, we set
    up triggers for continuous builds.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了使用 VSTS 进行持续集成。如果在开发生命周期中使用了大量微软工具，特别是 Xamarin，那么 VSTS 是一个非常适合的 CI
    工具。我们学习了如何在 VSTS 中配置构建步骤，并集成 Xamarin Test Cloud Teams API 进行持续测试，最后，我们设置了持续构建的触发器。
- en: In the next chapter, we'll discuss deploying and migrating your applications
    to the cloud.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将讨论如何将应用程序部署到云端并进行迁移。
