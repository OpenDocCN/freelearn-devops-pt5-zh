- en: Core OpenShift Concepts
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OpenShift 核心概念
- en: In the previous chapters, we covered Docker and Kubernetes basics and went through
    the OpenShift architecture. We know how to build the OpenShift lab environment,
    so now it is time to get our hands dirty and see how we can work with OpenShift's
    main resources.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在前几章中，我们介绍了 Docker 和 Kubernetes 的基础知识，并讲解了 OpenShift 的架构。我们已经知道如何构建 OpenShift
    实验环境，现在是时候动手操作，看看如何处理 OpenShift 的主要资源了。
- en: This chapter goes over OpenShift core concepts, such as creating new applications
    with OpenShift pods, services, routes, projects, and users. This will give you
    foundational skills, which will be enough for you to run and manage your application
    container infrastructure in OpenShift.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将介绍 OpenShift 的核心概念，例如如何使用 OpenShift Pods、服务、路由、项目和用户创建新应用程序。这将为您提供基础技能，足以让您在
    OpenShift 中运行和管理应用容器基础设施。
- en: 'After reading this chapter, you will have learned about the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读完本章后，您将学习以下内容：
- en: Managing projects and namespaces in OpenShift
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 OpenShift 中管理项目和命名空间
- en: Managing regular users in OpenShift
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 OpenShift 中管理普通用户
- en: Creating new applications in OpenShift
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 OpenShift 中创建新应用程序
- en: Managing pods in OpenShift
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 OpenShift 中管理 Pods
- en: Managing services in OpenShift
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 OpenShift 中管理服务
- en: Managing routes in OpenShift
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 OpenShift 中管理路由
- en: Managing projects in OpenShift
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 OpenShift 中管理项目
- en: 'Before we begin, make sure that your OpenShift is up and running. We are going
    to use MiniShift for this chapter:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始之前，请确保您的 OpenShift 已经启动并运行。我们将使用 MiniShift 来完成本章内容：
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Once its VM is up, log in as a system admin:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦虚拟机启动，作为系统管理员登录：
- en: '[PRE1]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: As we covered earlier, Openshift CLI has a lot of similarities with Kubernetes
    CLI. `oc` is short for OpenShift client, which works similarly to Kubernetes's
    `kubectl`. You will find a lot of similarities between these two commands as we
    go.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，OpenShift CLI 与 Kubernetes CLI 有许多相似之处。`oc` 是 OpenShift 客户端的缩写，其工作方式类似于
    Kubernetes 的 `kubectl`。随着我们深入了解，您会发现这两个命令有很多相似之处。
- en: Before we deep dive into creating our first OpenShift applications and use basic
    OpenShift resources such as pods, services, and routes, we need to work a little
    bit with OpenShift's management and other essential features such as OpenShift
    projects and user accounts. First, let's focus on OpenShift projects.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们深入了解如何创建第一个 OpenShift 应用程序并使用基础的 OpenShift 资源（如 Pods、服务和路由）之前，我们需要先熟悉 OpenShift
    的管理和其他基本功能，如 OpenShift 项目和用户账户。首先，我们将重点关注 OpenShift 项目。
- en: 'OpenShift project is a Kubernetes namespace with additional features called annotations
    that provide user multi-tenancy and role-based access control in OpenShift. Each
    project has its own set of policies, constraints, and service accounts. You can
    see that the number of namespaces and projects in OpenShift is the same. The commands
    we are going to need are `oc get namespaces` and `oc get projects`:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: OpenShift 项目是一个带有额外功能（称为注释）的 Kubernetes 命名空间，注释为 OpenShift 提供了用户多租户和基于角色的访问控制。每个项目都有自己的一套策略、约束和服务账户。您可以看到，在
    OpenShift 中，命名空间和项目的数量是相同的。我们需要使用的命令是 `oc get namespaces` 和 `oc get projects`：
- en: '[PRE2]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'As we mentioned previously, each namespace, or rather project, is separated
    from another by a set of rules. This allows different teams to work independently
    from each other. In order to identify what project we are currently working in,
    you can use the `oc projects` command. This command gives you a list of OpenShift projects
    available for you, and it also tells you what projects you are currently working
    on:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前提到的，每个命名空间，或者说项目，是通过一系列规则与其他项目隔离的。这使得不同的团队可以独立工作。为了识别我们当前正在使用的项目，您可以使用
    `oc projects` 命令。此命令会列出您可以使用的 OpenShift 项目，并告诉您当前正在使用的项目：
- en: '[PRE4]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The asterisk `*` also specifies the current project.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 星号 `*` 也表示当前项目。
- en: We can see that there are a lot of different projects available, though we have
    not created any because the system admin user has access to everything.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到有许多不同的项目可用，尽管我们还没有创建任何项目，因为系统管理员用户可以访问所有内容。
- en: 'In order to create a new OpenShift project, you must use the `oc new-project`
    command:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个新的 OpenShift 项目，必须使用 `oc new-project` 命令：
- en: '[PRE5]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This command creates a new project and automatically switches to it. In our
    case, it switches to `new-project1`. We can manually switch to another available
    project by running the `oc project` command. Let''s switch to the `default` project:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令创建一个新项目并自动切换到该项目。在我们的例子中，它会切换到 `new-project1`。我们也可以通过运行 `oc project` 命令手动切换到另一个可用的项目。现在让我们切换到
    `default` 项目：
- en: '[PRE6]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Note that the output of `oc project default` tells you not only that the project
    is switched to `default`, but it also specifies the OpenShift cluster URL: `https://127.0.0.1:8443`.
    It is useful when we are dealing with several independently working OpenShift
    clusters.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`oc project default` 的输出不仅告诉你项目已切换到 `default`，还指定了 OpenShift 集群的 URL：`https://127.0.0.1:8443`。当我们处理多个独立工作的
    OpenShift 集群时，这非常有用。
- en: 'In order to delete an OpenShift project, you can use the `oc delete` command:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 要删除一个 OpenShift 项目，可以使用 `oc delete` 命令：
- en: '[PRE7]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: We are going to work with projects closely in the subsequent chapters.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将紧密地与项目一起工作。
- en: Managing users in OpenShift
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 OpenShift 中管理用户
- en: When we use the `oc` command, it makes an API call to the OpenShift cluster
    using user credentials.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们使用 `oc` 命令时，它会使用用户凭据向 OpenShift 集群发出 API 调用。
- en: 'There are three main user types in OpenShift. Let''s quickly talk about each
    of these three types:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: OpenShift 中有三种主要的用户类型。让我们快速了解这三种类型：
- en: '**Regular users**: A regular OpenShift user. Regular users are usually developers
    with access to OpenShift projects. Regular OpenShift user examples include user1
    and user2.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**普通用户**：一个普通的 OpenShift 用户。普通用户通常是具有 OpenShift 项目访问权限的开发人员。普通 OpenShift 用户的示例包括
    user1 和 user2。'
- en: '**System users**: System OpenShift users are special and most of these users
    are created when OpenShift is being installed. System user examples are:'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**系统用户**：系统 OpenShift 用户是特殊的，其中大多数用户在安装 OpenShift 时创建。系统用户的示例包括：'
- en: '`system:admin`: OpenShift cluster administrator user'
  id: totrans-37
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`system:admin`：OpenShift 集群管理员用户'
- en: '`system:node:node1.example.com`: `node1.example.com` node user'
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`system:node:node1.example.com`：`node1.example.com` 节点用户'
- en: '`system:openshift-registry`: OpenShift registry user'
  id: totrans-39
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`system:openshift-registry`：OpenShift 注册表用户'
- en: '**Service accounts**: Special system users associated with projects. Some of
    these users are created when a new OpenShift project is being created.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**服务账户**：与项目相关联的特殊系统用户。其中一些用户在创建新的 OpenShift 项目时会被创建。'
- en: We are going to work with system users and service accounts in the next chapter.
    In this chapter, we are going to work with regular users.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将处理系统用户和服务账户。本章中，我们将处理普通用户。
- en: 'We can get information about the OpenShift user we are currently logged in
    as by using the `oc whoami` command:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过使用 `oc whoami` 命令获取当前登录的 OpenShift 用户信息：
- en: '[PRE8]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'In order to create a regular user, you can use the `oc create user` command:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个普通用户，可以使用 `oc create user` 命令：
- en: '[PRE9]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: We do not need to set a user password in this lab because our lab environment
    is set up to accept any password from any user.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个实验中，我们不需要设置用户密码，因为我们的实验环境已经设置为接受任何用户的任何密码。
- en: 'By default, the user is going to be created for a project we are currently
    working on. To get the list of users, use the `oc get users` command:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，用户会为我们当前正在工作的项目创建。要获取用户列表，可以使用 `oc get users` 命令：
- en: '[PRE10]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: We should be able to see two users: `developer` and `user1`.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应该能够看到两个用户：`developer` 和 `user1`。
- en: Developer users are created as a part of the `oc cluster up` command, as well
    as the project `myproject`.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 开发者用户是通过 `oc cluster up` 命令以及项目 `myproject` 创建的。
- en: The `IDENTITIES` field defines the authentication method. In our lab environment
    setup, the developer user takes anything as a password. This is what `anypassword:developer`
    means.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '`IDENTITIES` 字段定义了身份验证方法。在我们的实验环境设置中，开发者用户可以使用任何密码。这就是 `anypassword:developer`
    的含义。'
- en: 'The last essential things we need to learn is how to switch between different
    users. We can use the `oc login` command to do so:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们需要学习的一个基本操作是如何在不同用户之间切换。我们可以使用 `oc login` 命令来实现：
- en: '[PRE11]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '`user1` does not have any authentication method defined. This is why you won''t
    be able to log in as `user1` if you try to.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '`user1` 没有定义任何身份验证方法。这就是为什么你如果尝试登录 `user1` 会失败的原因。'
- en: We are going to put all of these pieces together and assign a particular user
    to one or several projects, as well as give users different permissions, in the
    following chapter.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将把所有这些内容整合在一起，并为一个或多个项目分配特定用户，并为用户授予不同的权限。
- en: Creating new applications in OpenShift
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 OpenShift 中创建新应用程序
- en: The first and most essential command to run in OpenShift is `oc new-app`. This
    command is similar to Kubernetes's `kubectl run`, but `oc new-app` is way more
    powerful and works a little bit differently. We are going to show you how `oc
    new-app` works in detail later in this chapter.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在 OpenShift 中运行的第一个最基本命令是 `oc new-app`。这个命令类似于 Kubernetes 的 `kubectl run`，但是
    `oc new-app` 更加强大，并且工作方式略有不同。我们将在本章后面详细展示 `oc new-app` 是如何工作的。
- en: 'The best way to test out the `oc new-app` command is to create a new project
    and then run it over there:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 测试 `oc new-app` 命令的最佳方式是创建一个新项目，然后在那里运行它：
- en: '[PRE12]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The command output tells us to run the `oc new-app centos/ruby-22-centos7~https://github.com/openshift/ruby-ex.git`
    command. Run the command to see how it works:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 命令输出告诉我们运行 `oc new-app centos/ruby-22-centos7~https://github.com/openshift/ruby-ex.git`
    命令。运行该命令看看它是如何工作的：
- en: '[PRE13]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: We have seen that running `oc new-app` sometimes takes a lot of time or is just
    stuck for hours.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到，运行 `oc new-app` 有时会花费很长时间，或者只是卡住好几个小时。
- en: If this happens to you, try to reinstall the cluster again.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你遇到这种情况，可以尝试重新安装集群。
- en: Also, make sure that you have the firewall off on your host.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 同时，请确保主机上的防火墙已关闭。
- en: If all of these options fail for you, you can always run a separate VM and install
    OpenShift from scratch.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这些选项对你都无效，你可以始终运行一个独立的虚拟机，并从头安装 OpenShift。
- en: 'There is going to be a lot of output compared to what we have seen before,
    but if you read through, you should be able to find out that:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 相较于我们之前看到的输出，将会有更多的信息，但如果仔细阅读，你应该能够发现：
- en: OpenShift pulls Docker image `centos/ruby-22-centos7`
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenShift 拉取 Docker 镜像 `centos/ruby-22-centos7`
- en: OpenShift goes to GitHub and downloads the source code from it
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenShift 从 GitHub 获取源代码并下载
- en: OpenShift applies GitHub source code to the image and stores it on the internal
    registry with the name `ruby-ex`
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenShift 将 GitHub 的源代码应用到镜像中，并将其存储在内部注册表中，命名为 `ruby-ex`
- en: '`ruby-ex` is used to create build and deployment configurations'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ruby-ex` 用于创建构建和部署配置'
- en: The `ruby-ex` service is created to load balance the traffic for pods with `ruby-ex`
    in their names
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ruby-ex` 服务用于负载均衡那些名称中包含 `ruby-ex` 的 pod 的流量。'
- en: 'The following diagram represents this flow:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表表示这一流程：
- en: '![](img/00051.jpeg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00051.jpeg)'
- en: oc new-app workflow
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: oc new-app workflow
- en: We are going to take a closer look at all of these resources in the following
    chapter.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在下一章深入了解所有这些资源。
- en: Managing pods in OpenShift
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理 OpenShift 中的 pod
- en: 'OpenShift pods are Kubernetes pods that represent a collection of containers,
    and each pod serves as a basic management unit. All containers in a pod share
    the same storage volumes and network. In order to get a list of pods in OpenShift,
    we can use the `oc get pods` command:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: OpenShift pod 是 Kubernetes pod，代表一组容器，每个 pod 作为基本的管理单元。pod 中的所有容器共享相同的存储卷和网络。为了获取
    OpenShift 中 pod 的列表，我们可以使用 `oc get pods` 命令：
- en: '[PRE14]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'It is no different from the Kubernetes pod, which means behind the scenes it
    is a Docker container running. The only difference is that there are two containers
    now. One of them is a container (`ruby-ex-1-build`) that is used to build the
    final image with the source code applied. We can easily verify this by running
    the `docker ps` command inside the Minishift VM:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 它与 Kubernetes pod 没有区别，这意味着它背后运行的是一个 Docker 容器。唯一的区别是现在有两个容器。其中一个容器是用于构建应用了源代码的最终镜像的容器（`ruby-ex-1-build`）。我们可以通过在
    Minishift 虚拟机中运行 `docker ps` 命令轻松验证这一点：
- en: '[PRE15]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: We can easily find the right running container by seeing the `myproject/ruby-ex`
    part of the image's ID. We can do similar actions in Kubernetes, like getting
    logs, editing or describing, and deleting pods.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过查看镜像 ID 中的 `myproject/ruby-ex` 部分，轻松找到正确的运行容器。我们可以在 Kubernetes 中执行类似的操作，例如获取日志、编辑或描述、删除
    pod 等。
- en: Before you start with the next section, try to run `oc delete`.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始下一部分之前，尝试运行 `oc delete`。
- en: Managing services in OpenShift
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理 OpenShift 中的服务
- en: Similarly to Kubernetes, OpenShift services represent an interface between clients
    and the actual application running in the pods. A service is an IP:port pair which
    forwards traffic to backend pods in a round-robin fashion.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 与 Kubernetes 类似，OpenShift 服务代表客户端与运行在 pod 中的实际应用程序之间的接口。一个服务是一个 IP:端口 对，将流量以轮询方式转发到后端
    pod。
- en: 'By running the `oc new-app` command, OpenShift creates a service automatically.
    We can verify this by running the `oc get services` command:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 通过运行 `oc new-app` 命令，OpenShift 会自动创建一个服务。我们可以通过运行 `oc get services` 命令来验证这一点：
- en: '[PRE16]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The output is similar to what we got with the `kubectl get services` command
    in Kubernetes. We can delete and recreate this service again by running the `oc
    delete` and `oc expose` commands. Before we do that, run the `curl` command inside
    the Minishift VM to verify that the service is up and running:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 输出结果与我们在 Kubernetes 中使用 `kubectl get services` 命令时得到的类似。我们可以通过运行 `oc delete`
    和 `oc expose` 命令来删除并重新创建这个服务。在此之前，先在 Minishift 虚拟机内运行 `curl` 命令，验证服务是否正常运行：
- en: '[PRE17]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The status code is `200`, which means that the web page is available and the
    service is running properly:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 状态码为`200`，这意味着网页可用且服务正常运行：
- en: '[PRE18]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Check that the service is deleted and that the service is no longer available:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 确保服务已删除并且不再可用：
- en: '[PRE19]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Now, create a new service with the `oc expose` command:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，使用`oc expose`命令创建一个新的服务：
- en: '[PRE20]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'In your case, the container name is going to be different. Rerun `oc get pods`
    to get the running pod name. There are other methods on how to create a service
    and we are going to cover them later in this book:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的情况下，容器名称将会不同。重新运行`oc get pods`以获取运行的Pod名称。还有其他方法来创建服务，我们稍后将在本书中介绍：
- en: '[PRE21]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Finally, check that the service is available again by running the `curl` command
    on the Minishift VM:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，通过在Minishift VM上运行`curl`命令来检查服务是否恢复正常：
- en: '[PRE22]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Managing routes in OpenShift
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在OpenShift中管理路由
- en: 'OpenShift has an elegant way of exposing a service so that it can be accessed
    from the outside of an OpenShift cluster. This resource is called a `router` in
    OpenShift. OpenShift provides an external hostname mapping to a load balancer
    that distributes traffic among OpenShift services:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: OpenShift有一种优雅的方式来暴露服务，以便可以从OpenShift集群外部访问。这个资源在OpenShift中称为`router`。OpenShift提供了将外部主机名映射到负载均衡器的功能，以将流量分发到OpenShift服务：
- en: '![](img/00052.jpeg)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00052.jpeg)'
- en: OpenShift router workflow
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: OpenShift路由器工作流程
- en: In order for the OpenShift router to load balance external traffic, it has to
    use HTTP or HTTPS protocol, and be resolvable by DNS using DNS wildcards.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使OpenShift路由器能够负载均衡外部流量，必须使用HTTP或HTTPS协议，并且可以通过DNS使用DNS通配符解析。
- en: 'Let''s expose our service outside of the OpenShift cluster by running the `oc
    expose` command with additional parameters:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用额外的参数运行`oc expose`命令，让我们将我们的服务暴露到OpenShift集群外部：
- en: '[PRE23]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Check the list of routes:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 检查路由列表：
- en: '[PRE24]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'If we try to run the `curl openshiftdemo.local` command, it won''t work because
    there is no DNS record for `openshiftdemo.local`. One of the easiest ways is to
    add a static DNS record to the hosts file. Since we are using the Minishift VM,
    we need to create a static DNS record pointing to the Minishift VM. The first
    step is to check the Minishift VM with the `oc status` command:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 如果尝试运行`curl openshiftdemo.local`命令，它将无法工作，因为`openshiftdemo.local`没有DNS记录。最简单的方法之一是在hosts文件中添加静态DNS记录。由于我们使用的是Minishift
    VM，因此需要创建一个指向Minishift VM的静态DNS记录。第一步是使用`oc status`命令检查Minishift VM：
- en: '[PRE25]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'And now we need to make a static record in the hosts file by using minishift
    VM IP address and our project hostname:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们需要通过使用Minishift VM的IP地址和我们的项目主机名在hosts文件中创建静态记录：
- en: '[PRE26]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Everything is ready so that we can do the final test. Open a web browser and
    open [http://openshiftdemo.local/webpage](http://openshiftdemo.local/webpage):'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 一切准备就绪，现在我们可以进行最终测试。打开Web浏览器并访问[http://openshiftdemo.local/webpage](http://openshiftdemo.local/webpage)：
- en: '![](img/00053.jpeg)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00053.jpeg)'
- en: Ruby demo application web page
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: Ruby演示应用程序网页
- en: If you somehow do not see a welcome web page, check whether you can ping `openshiftdemo.local`
    and also try to run the `curl openshiftdemo.local` command.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您没有看到欢迎网页，请检查是否可以ping通`openshiftdemo.local`，并尝试运行`curl openshiftdemo.local`命令。
- en: 'If you try to open a web page using the IP address of the Minishift VM instead
    of `openshiftdemo.local`, you will get `Application is not available`. This happens
    because the OpenShift router is a HAProxy-based container that does load balancing
    based on a URL. We can easily verify this by running the `oc describe` command
    with the OpenShift router pod. First, log in as `system:admin` and then check
    the router pod name in the `default` namespace:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 如果尝试使用Minishift VM的IP地址而不是`openshiftdemo.local`打开网页，将会收到`Application is not
    available`。这是因为OpenShift路由器是基于HAProxy的容器，根据URL进行负载均衡。我们可以通过运行带有OpenShift路由器Pod的`oc
    describe`命令轻松验证这一点。首先，以`system:admin`身份登录，然后检查`default`命名空间中的路由器Pod名称：
- en: '[PRE27]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '[PRE28]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Finally, run the `oc describe` command, specifying the `router-1-s9b7f pod`
    and look for the `Image` line:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，运行`oc describe`命令，指定`router-1-s9b7f pod`，并查找`Image`行：
- en: '[PRE29]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: You can replace the HAproxy-based router with other ones, like Nginx or something
    else, but that is out of the scope of this book.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以将基于HAProxy的路由器替换为其他路由器，如Nginx或其他内容，但这超出了本书的范围。
- en: Summary
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we covered OpenShift core concepts such as pods, services,
    routes, projects, and users. We are going to work with these topics in detail
    in the following chapters and work closely with these resources to show you how
    they are integrated with other OpenShift resources.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们介绍了 OpenShift 核心概念，如 pods、services、routes、projects 和 users。在接下来的章节中，我们将详细探讨这些主题，并与这些资源密切合作，展示它们如何与其他
    OpenShift 资源集成。
- en: In the next chapter, we are going take a look at advanced OpenShift resources,
    including source to image and image streams, builds and build configs, deployments,
    and deployment configs, as well as config maps and templates. We are also going
    to create some of these resources using manual methods with YAML and JSON files.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将探讨高级 OpenShift 资源，包括源到镜像（source to image）和镜像流（image streams）、构建和构建配置（builds
    and build configs）、部署和部署配置（deployments and deployment configs），以及配置映射（config maps）和模板（templates）。我们还将使用
    YAML 和 JSON 文件通过手动方式创建这些资源。
- en: Questions
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: 'What are the two Node types used by OpenShift? choose two:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: OpenShift 使用的两种节点类型是什么？选择两个：
- en: Node
  id: totrans-127
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 节点
- en: MiniShift
  id: totrans-128
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: MiniShift
- en: Vagrant
  id: totrans-129
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Vagrant
- en: Master
  id: totrans-130
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Master
- en: 'Which of the following is not an Openshift user type? choose two:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪项不是 OpenShift 用户类型？选择两个：
- en: Regular users
  id: totrans-132
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 普通用户
- en: Admin users
  id: totrans-133
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 管理员用户
- en: System users
  id: totrans-134
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 系统用户
- en: Service accounts
  id: totrans-135
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 服务账户
- en: Service users
  id: totrans-136
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 服务用户
- en: 'In OpenShift, a pod is a minimal unit of deployment which represents a group
    of containers:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 OpenShift 中，pod 是最小的部署单元，表示一组容器：
- en: 'True'
  id: totrans-138
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 正确
- en: 'False'
  id: totrans-139
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 错误
- en: 'In OpenShift, what resource is responsible for exposing the OpenShift application
    to the outside? choose one:'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 OpenShift 中，哪个资源负责将 OpenShift 应用程序暴露给外部？选择一个：
- en: Service
  id: totrans-141
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 服务
- en: Route
  id: totrans-142
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 路由
- en: Pod
  id: totrans-143
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Pod
- en: Load balancer
  id: totrans-144
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 负载均衡器
- en: 'What are the two commands that list available pods and routes? choose two:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 列出可用 pods 和 routes 的两个命令是什么？选择两个：
- en: oc get po
  id: totrans-146
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: oc 获取 po
- en: oc list pods
  id: totrans-147
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: oc 列出 pods
- en: oc get rt
  id: totrans-148
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: oc 获取 rt
- en: oc get routes
  id: totrans-149
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: oc 获取 routes
- en: 'In OpenShift, the system admin user account has access to system-related resources
    only:'
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 OpenShift 中，系统管理员用户账户仅能访问与系统相关的资源：
- en: 'True'
  id: totrans-151
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 正确
- en: 'False'
  id: totrans-152
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 错误
- en: Further reading
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 深入阅读
- en: 'In this chapter, we briefly covered the core concepts of the OpenShift container
    platform. Here''s a list of links that may be helpful to look through so that
    you can learn more about OpenShift basics:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们简要介绍了 OpenShift 容器平台的核心概念。以下是一些链接，供您浏览，以便深入学习 OpenShift 基础知识：
- en: '**Openshift core concepts**: [https://docs.openshift.org/latest/architecture/core_concepts/index.html](https://docs.openshift.org/latest/architecture/core_concepts/index.html)'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OpenShift 核心概念**：[https://docs.openshift.org/latest/architecture/core_concepts/index.html](https://docs.openshift.org/latest/architecture/core_concepts/index.html)'
- en: '**OpenShift official blog**: [https://blog.openshift.com/](https://blog.openshift.com/)'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OpenShift 官方博客**：[https://blog.openshift.com/](https://blog.openshift.com/)'
