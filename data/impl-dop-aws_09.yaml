- en: Chapter 9.  Secure Your AWS Environment
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第9章：保护您的AWS环境
- en: Security is unsurprisingly a very hot topic in *The Cloud Computing - should
    you be doing it? debate.*
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 安全性无疑是*云计算——你应该做吗？*辩论中的一个热门话题。
- en: On one side we have the *my-hardware-is-my-castle* group of people, who find
    it deeply unnatural to even think of delegating your compute environment to some
    abstract entity that assures you that you own the capacity of *X* number of machines
    at any given time, but which you cannot see or touch. Not to mention the question
    of your data.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 一方面，我们有*我的硬件就是我的城堡*这群人，他们觉得将计算环境委托给某个抽象实体——这个实体告诉你你随时拥有*X*台机器的计算能力，但你既看不见也摸不着，甚至连你的数据也无法掌控——是一件非常不自然的事情。
- en: On the other, we find the people who do not really mind the mystical concept
    of the cloud at all. Their main interest is in having instant access to somewhat
    unlimited amount of compute resources at a reasonable cost. Unfortunately, they
    might occasionally concentrate too much on getting a job done quickly, ignoring
    some valid, healthy concerns that the former group puts forward.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，我们有那些根本不介意云这一神秘概念的人。他们的主要兴趣在于以合理的成本即时获取几乎无限的计算资源。不幸的是，他们有时可能过于集中于快速完成工作，而忽视了前一群人提出的一些有效且健康的关注点。
- en: Then there is the middle ground - those of us who recognize the sacrifices one
    has to accept when moving to the cloud as well as the various solutions to make
    up for those. That is to say, with well-designed applications plus carefully planned-out
    architecture, your environment can remain adequately secure regardless of the
    underlying type of hosting platform.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 然后是中间地带——那些意识到在迁移到云端时必须接受的牺牲，以及为弥补这些牺牲而采取的各种解决方案的人。也就是说，通过精心设计的应用程序和仔细规划的架构，您的环境可以保持足够的安全性，无论底层托管平台是什么类型。
- en: We are going to examine a few of these solutions and practices in attempt to
    make our AWS environment more secure.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将研究这些解决方案和实践中的一些，以尝试提高我们的AWS环境的安全性。
- en: 'We shall cover:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将涵盖：
- en: Managing access using IAM
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用IAM管理访问
- en: VPC security
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VPC安全性
- en: EC2 security
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: EC2安全性
- en: Security auditing
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全审计
- en: Let us begin.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧。
- en: Managing access using IAM
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用IAM管理访问
- en: '*AWS Identity and Access Management (IAM) is a web service that helps you securely
    control access to AWS resources for your users. You use IAM to control who can
    use your AWS resources (authentication) and what resources they can use and in
    what ways (authorization).*'
  id: totrans-13
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*AWS身份和访问管理（IAM）是一个网络服务，帮助您安全地控制用户对AWS资源的访问。您使用IAM来控制谁可以使用您的AWS资源（身份验证），以及他们可以使用哪些资源和以何种方式使用（授权）。*'
- en: ''
  id: totrans-14
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*ref: [http://docs.aws.amazon.com/IAM/latest/UserGuide/introduction.html](http://docs.aws.amazon.com/IAM/latest/UserGuide/introduction.html)*'
  id: totrans-15
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*参考：[http://docs.aws.amazon.com/IAM/latest/UserGuide/introduction.html](http://docs.aws.amazon.com/IAM/latest/UserGuide/introduction.html)*'
- en: We will be using IAM for managing access (be it user or application) to services
    under our AWS account.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用IAM来管理访问（无论是用户还是应用程序）到我们AWS账户下的服务。
- en: Securing the root account
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 保护根账户
- en: When a new AWS account is opened, it comes with a single user (the account owner)
    also referred to as the **root login**. This almighty user has all the powers,
    including the option of terminating the AWS account. For this reason, it is often
    advised that the root login is only used for high-level account management purposes
    while any day-to-day operations are done via IAM user accounts.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 当一个新的AWS账户被创建时，它会包含一个用户（账户所有者），也称为**根登录**。这个强大的用户拥有所有权限，包括终止AWS账户的选项。因此，通常建议仅将根登录用于高层账户管理，而日常操作则通过IAM用户账户进行。
- en: We shall follow this recommendation, so the very first thing we do after registering
    an AWS account is to login as **root**, disable any unnecessary authentication
    mechanisms and create ourselves a lower-privileged IAM user account.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将遵循这个建议，因此我们在注册AWS账户后做的第一件事就是以**根用户**登录，禁用任何不必要的身份验证机制，并创建一个权限较低的IAM用户账户。
- en: 'Let us browse to the AWS Console (ref: [https://console.aws.amazon.com/console/home](https://console.aws.amazon.com/console/home)):'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们浏览到AWS控制台（参考：[https://console.aws.amazon.com/console/home](https://console.aws.amazon.com/console/home)）：
- en: '![Securing the root account](img/image_09_001.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![保护根账户](img/image_09_001.jpg)'
- en: 'Notice the small print underneath the **Sign In** button. This is the link
    we need to follow in order to access the root account, which takes us to a slightly
    different login page as shown in the following screenshot:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 注意到**登录**按钮下方的小字。这是我们需要点击的链接，用于访问根账户，它会带我们到一个稍微不同的登录页面，如下截图所示：
- en: '![Securing the root account](img/image_09_002.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![保护根账户](img/image_09_002.jpg)'
- en: 'Here, use your main Amazon credentials; you should see the familiar Console
    page. click on the name in the top-right corner:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，使用你的主要Amazon凭证；你应该能看到熟悉的控制台页面。点击右上角的名字：
- en: '![Securing the root account](img/image_09_003.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![保护根账户](img/image_09_003.jpg)'
- en: 'Choosing **Security Credentials** takes us to our root account security options:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 选择**安全凭证**将带我们到根账户的安全选项：
- en: '![Securing the root account](img/image_09_004.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![保护根账户](img/image_09_004.jpg)'
- en: Enable **Multi-Factor Authentication (MFA);** there really isn't a good reason
    not to. You could purchase a hardware token device or simply use an app on your
    phone such as the **Google Authenticator**.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 启用**多因素认证 (MFA)**；事实上没有理由不启用它。你可以购买硬件令牌设备，或者直接使用手机上的应用程序，如**Google Authenticator**。
- en: Delete the keys under **Access Keys**. These are used for API access, which
    you are very likely not going to need for account management tasks.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 删除**访问密钥**下的密钥。这些密钥用于API访问，而你在账户管理任务中很可能不需要它们。
- en: 'Next, click on the **Account Settings** link on the left, to update the current
    password policy. With the various password management tools available today, choosing
    a complex password and changing it often is no longer an inconvenience, so go
    crazy:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，点击左侧的**账户设置**链接，更新当前的密码策略。现如今有很多密码管理工具，选择一个复杂的密码并定期更改已不再是麻烦，所以尽情设置吧：
- en: '![Securing the root account](img/image_09_005.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![保护根账户](img/image_09_005.jpg)'
- en: 'On the same page, we can disable any regions we are not going to be using:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在同一页面上，我们可以禁用任何不打算使用的区域：
- en: '![Securing the root account](img/image_09_006.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![保护根账户](img/image_09_006.jpg)'
- en: Now we proceed to create the IAM accounts for daily AWS usage. We will organize
    our users into groups. We start with a user in a group which has administrator
    privileges, which can then be used to manage almost all aspects of the AWS account.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们继续创建用于日常AWS使用的IAM账户。我们将用户组织成不同的组。首先，我们创建一个具有管理员权限的用户组，之后可以利用该组管理AWS账户的几乎所有方面。
- en: On the left, select **Groups** and create a new group, granting it administrator
    access. Then under **Users**, create an account for yourself and make it a member
    of that group.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在左侧选择**用户组**，创建一个新组并赋予其管理员权限。然后在**用户**下创建一个账户，并将其添加到该组。
- en: 'During the user creation process you would have had the option to create API
    access keys (you could also do it at a later stage too), which are useful if you
    are planning to use the AWS CLI or programmatic access in general. Once created,
    select the user and switch to the **Security Credentials** tab:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建用户过程中，你会有机会创建API访问密钥（你也可以稍后创建），如果你计划使用AWS CLI或一般的程序访问，这些密钥会很有用。创建后，选择该用户并切换到**安全凭证**选项卡：
- en: '![Securing the root account](img/image_09_007.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![保护根账户](img/image_09_007.jpg)'
- en: Here you have the option to create an **Access Keys** pair, if you did not do
    so earlier, as well as set a password for using the AWS Console. As mentioned
    earlier, you should take the opportunity to enable **MFA** (to take this a step
    further, have a look at [http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa_configure-api-require.html](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa_configure-api-require.html)).
    Also if you are planning to use the CodeCommit service over SSH, this is where
    you upload your public key.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你可以选择创建**访问密钥**对，如果你之前没有创建的话，还可以设置用于AWS控制台的密码。如前所述，你应该借此机会启用**MFA**（进一步了解，请查看[http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa_configure-api-require.html](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa_configure-api-require.html)）。如果你计划通过SSH使用CodeCommit服务，这里是上传公钥的地方。
- en: This is it, from now on you can login to the AWS Console using the username
    and password of the IAM account you just created, keeping the root for special
    occasions.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这样，从现在开始，你可以使用刚刚创建的IAM账户的用户名和密码登录AWS控制台，根账户则保留给特殊场合使用。
- en: As a side note for those who might already maintain a user database external
    to AWS, there are ways to integrate it using **Federation**.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 对于那些可能已经维护外部用户数据库的人，顺便提一下，有一些方法可以使用**联邦身份认证**将其集成。
- en: Note
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'For more details, see either of these links: [https://aws.amazon.com/iam/details/manage-federation](https://aws.amazon.com/iam/details/manage-federation)
    [http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers.html](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers.html)'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 欲了解更多详细信息，请参考以下链接：[https://aws.amazon.com/iam/details/manage-federation](https://aws.amazon.com/iam/details/manage-federation)
    [http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers.html](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers.html)
- en: VPC security
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: VPC 安全性
- en: If you have deployed your resources in a VPC, you are already moving in the
    right direction. Here we are mostly going to concern ourselves with network security
    and the tools or features a VPC provides for enhancing it.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已经在 VPC 中部署了资源，那么您已经朝着正确的方向前进。在这里，我们主要关注网络安全以及 VPC 提供的增强安全性的工具或功能。
- en: Security Groups
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安全组
- en: These represent our first layer of defense as stated in the AWS documentation.
    **Security Groups** (**SG**) get assigned to EC2 instances (generally speaking)
    and provide a type of stateful firewall, which supports allow rules only.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这些代表了我们在 AWS 文档中所说的第一层防护。**安全组**（**SG**）通常分配给 EC2 实例，提供一种有状态的防火墙，只支持允许规则。
- en: They are very flexible and an EC instance can have multiple such groups assigned
    to it. The rules can be based on host IP addresses, CIDRs or even on other Security
    Groups, for example, allow inbound `HTTP:80` from group ID `sg-12345`.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 它们非常灵活，一个 EC 实例可以有多个这样的组。规则可以基于主机 IP 地址、CIDR 或甚至其他安全组，例如，允许从组 ID `sg-12345`
    进入的 `HTTP:80` 流量。
- en: Usually, within a VPC we would create an SG per role, such as **web server**,
    **db**, **cache**. Instances of the same component would then be assigned the
    respective SG, thus regulating traffic between the different components of a platform.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，在 VPC 内，我们会根据角色创建安全组，例如 **web 服务器**、**数据库**、**缓存**。同一组件的实例将被分配相应的安全组，从而调控平台不同组件之间的流量。
- en: Tip
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: It is often tempting to allow traffic based on the VPC CIDR address, resting
    on the fact that the VPC is largely an isolated environment. Resist that as much
    as possible and limit access to components that actually need it.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 常常会有冲动基于 VPC 的 CIDR 地址来允许流量，认为 VPC 是一个相对孤立的环境。尽量避免这种做法，并限制对真正需要访问的组件的权限。
- en: The db SG should allow traffic from/to the web server SG, but possibly not from
    the cache one.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库安全组应允许来自/到 web 服务器安全组的流量，但可能不允许来自缓存安全组的流量。
- en: Network ACLs
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 网络 ACL
- en: The second layer comes in the form of Network ACLs.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 第二层防护形式是网络 ACL。
- en: The ACLs are stateless, they apply to the underlying subnet that an instance
    lives in and their rules are evaluated based on priority, just like an old fashioned
    firewall. As a bonus, you can also set deny policies.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: ACL（访问控制列表）是无状态的，它们应用于实例所在的底层子网，规则的评估依据优先级，就像传统的防火墙一样。作为额外功能，您还可以设置拒绝策略。
- en: Tip
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Network ACLs sit at the edge of the VPC, hence are evaluated before traffic
    reaches any Security Groups. This feature plus the ability to set deny rules make
    them very suitable for reacting to potential DDOS threats.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 网络 ACL 位于 VPC 的边缘，因此在流量到达任何安全组之前会先进行评估。这个特性加上设置拒绝规则的能力，使得它们非常适合应对潜在的 DDOS 威胁。
- en: Overall, both types of traffic management have their place in our VPC security
    design. ACLs should store a set of broader, less frequently changing rules, complemented
    by flexible Security Groups for fine-grained control.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 总的来说，流量管理的两种方式在我们的 VPC 安全设计中各有其作用。ACL 应该存储一组较为广泛且不常变化的规则，并由灵活的安全组进行细粒度控制。
- en: VPN gateway
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: VPN 网关
- en: If it so happens that you are using a VPC as an extension to your on-premise
    infrastructure, it would make a lot of sense to have the two sides more tightly
    connected.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在使用 VPC 作为本地基础设施的扩展，那么将这两者更紧密地连接起来会非常有意义。
- en: Instead of restricting external access via Security Groups or ACLs, you could
    create a secure VPN channel, benefiting from the implied encryption.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以选择创建一个安全的 VPN 通道，而不是通过安全组或 ACL 限制外部访问，从而受益于隐式加密。
- en: 'You can connect your VPC to your office network using either a hardware or
    a software VPN solution (ref: [http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpn-connections.html](http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpn-connections.html)).'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过硬件或软件 VPN 解决方案将 VPC 连接到您的办公室网络（参考：[http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpn-connections.html](http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpn-connections.html)）。
- en: 'For more demanding use-cases, one could even route their VPN traffic over a
    high-speed direct link to AWS using the AWS Direct Connect service (ref: [http://docs.aws.amazon.com/directconnect/latest/UserGuide/Welcome.html](http://docs.aws.amazon.com/directconnect/latest/UserGuide/Welcome.html)).'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '对于更为苛刻的使用案例，可以通过AWS Direct Connect服务（参考: [http://docs.aws.amazon.com/directconnect/latest/UserGuide/Welcome.html](http://docs.aws.amazon.com/directconnect/latest/UserGuide/Welcome.html)）将VPN流量通过高速直接连接传输到AWS。'
- en: VPC peering
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: VPC对等连接
- en: 'In a similar situation, where instead of your office network you have another
    VPC which needs to communicate with your, let us call it primary one, you could
    use VPC peering:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在类似的情况下，如果你不是使用办公网络，而是有另一个需要与主VPC通信的VPC，你可以使用VPC对等连接：
- en: '*A VPC peering connection is a networking connection between two VPCs that
    enables you to route traffic between them using private IP addresses. Instances
    in either VPC can communicate with each other as if they are within the same network.
    You can create a VPC peering connection between your own VPCs, or with a VPC in
    another AWS account within a single region.*'
  id: totrans-65
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*VPC对等连接是两个VPC之间的网络连接，允许你使用私有IP地址在它们之间路由流量。任一VPC中的实例都可以像在同一网络中一样相互通信。你可以在自己的VPC之间创建VPC对等连接，也可以在单一地区内与另一个AWS账户中的VPC创建对等连接。*'
- en: ''
  id: totrans-66
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*AWS uses the existing infrastructure of a VPC to create a VPC peering connection;
    it is neither a gateway nor a VPN connection, and does not rely on a separate
    piece of physical hardware. There is no single point of failure for communication
    or a bandwidth bottleneck.*'
  id: totrans-67
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*AWS使用现有的VPC基础设施来创建VPC对等连接；这既不是网关，也不是VPN连接，并且不依赖于独立的物理硬件。通信没有单点故障，也没有带宽瓶颈。*'
- en: ''
  id: totrans-68
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*ref: [http://docs.aws.amazon.com/AmazonVPC/latest/PeeringGuide/vpc-peering-overview.html](http://docs.aws.amazon.com/AmazonVPC/latest/PeeringGuide/vpc-peering-overview.html)*'
  id: totrans-69
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*参考: [http://docs.aws.amazon.com/AmazonVPC/latest/PeeringGuide/vpc-peering-overview.html](http://docs.aws.amazon.com/AmazonVPC/latest/PeeringGuide/vpc-peering-overview.html)*'
- en: Your VPCs will be able to communicate directly (within the same region) so you
    will not need to expose any services that do not explicitly need to be exposed.
    In addition, you can conveniently keep using private addresses for communication.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 你的VPC将能够直接通信（在同一地区内），因此你不需要暴露任何不需要显式暴露的服务。此外，你可以方便地继续使用私有地址进行通信。
- en: EC2 security
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: EC2安全性
- en: Diving deeper into our VPC, we are now going to look at ways to enhance the
    security around our EC2 instances.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 更深入地探讨我们的VPC，我们现在将关注增强EC2实例安全性的方式。
- en: IAM Roles
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: IAM角色
- en: '**IAM EC2 Roles** are the recommended way to grant your application access
    to AWS services.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '**IAM EC2角色**是推荐的方式来授予你的应用程序访问AWS服务的权限。'
- en: As an example, let us assume we had a web app running on our web server EC2
    instance and it needs to be able to upload assets to S3.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 举个例子，假设我们在Web服务器EC2实例上运行一个Web应用，并且该应用需要能够将资源上传到S3。
- en: A quick way of satisfying that requirement would be to create a set of IAM access
    keys and hardcode those into the application or its configuration. This however
    means that from that moment on it might not be very easy to update those keys
    unless we perform an app/config deployment. Furthermore, we might for one reason
    or another end up re-using the same set of keys with other applications.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 一种快速满足此要求的方式是创建一组IAM访问密钥，并将其硬编码到应用程序或其配置中。然而，这意味着从那时起，除非我们执行应用程序/配置部署，否则可能不容易更新这些密钥。此外，由于某些原因，我们可能会将同一组密钥与其他应用程序重复使用。
- en: 'The security implications are evident: reusing keys increases our exposure
    if those get compromised and having them hardcoded greatly increases our reaction
    time (it takes more effort to rotate such keys).'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 安全性隐患是显而易见的：重用密钥会增加暴露的风险，如果这些密钥被泄露，而硬编码密钥则大大增加了我们的响应时间（更难旋转这些密钥）。
- en: An alternative to the preceding method would be to use Roles. We would create
    an EC2 Role, grant it write access to the S3 bucket and assign it to the web server
    EC2 instance. Once the instance has booted, it is given temporary credentials
    which can be found in its metadata and which get changed at regular intervals.
    We can now instruct our web app to retrieve the current set of credentials from
    the instance metadata and use those to carry out the S3 operations. If we were
    to use the AWS CLI on that instance, we would notice that it fetches the said
    metadata credentials by default.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 上述方法的替代方案是使用角色。我们可以创建一个 EC2 角色，授予其对 S3 存储桶的写访问权限，并将其分配给 Web 服务器 EC2 实例。实例启动后，它将获得临时凭证，可以在其元数据中找到，并且这些凭证会定期更换。我们现在可以指示我们的
    Web 应用从实例元数据中获取当前的凭证，并使用这些凭证执行 S3 操作。如果我们在该实例上使用 AWS CLI，我们会发现它默认会获取这些元数据凭证。
- en: Tip
  id: totrans-79
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Roles can be associated with instances only at launch time, so it is a good
    habit to assign one to all your hosts even if they do not need it right away.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 角色只能在实例启动时与之关联，因此即使实例当前不需要，给所有主机分配角色也是一个好习惯。
- en: 'Roles can be used to assume other roles, making it possible for your instances
    to temporarily escalate their privileges by assuming a different role within your
    account or even across AWS accounts (ref: [http://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html](http://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html)).'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 角色可以用来扮演其他角色，使得实例能够通过扮演同一账户内或跨 AWS 账户的其他角色，暂时提升其权限（参考：[http://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html](http://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html)）。
- en: SSH access
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: SSH 访问
- en: The most common way to interact with an EC2 instance would be over SSH. Here
    are a couple of ideas to make our SSH sessions even more secure.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 与 EC2 实例交互的最常见方式是通过 SSH。以下是一些建议，帮助你使 SSH 会话更加安全。
- en: Individual keys
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 独立密钥
- en: When a vanilla EC2 instance is launched it usually has a set of PEM keys associated
    with it to allow initial SSH access. If you also work within a team, my recommendation
    would be not to share that same key pair with your colleagues.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 当启动一个普通的 EC2 实例时，它通常会关联一组 PEM 密钥，以便进行初始 SSH 访问。如果你还在团队中工作，我的建议是不要与同事共享相同的密钥对。
- en: Instead, as soon as you, or ideally your configuration management tool, gain
    access to the instance, individual user accounts should be created and public
    keys uploaded for the team members (plus `sudo` access where needed). Then the
    default `ec2-user` account (on Amazon Linux) and PEM key can be removed.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，一旦你或理想情况下是你的配置管理工具获得对实例的访问权限，应该为团队成员创建独立的用户账户并上传公钥（并在需要时授予 `sudo` 访问权限）。然后可以删除默认的
    `ec2-user` 账户（在 Amazon Linux 上）和 PEM 密钥。
- en: Entrypoint
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 入口点
- en: Regardless of the purpose that an EC2 instance serves, it is rarely the case
    that you must have direct external SSH access to it.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 无论 EC2 实例的用途如何，通常情况下你不需要直接的外部 SSH 访问权限。
- en: Assigning public IP addresses and opening ports on EC2 instances is often an
    unnecessary exposure in the name of convenience and somewhat contradicts the idea
    of using a VPC in the first place.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在 EC2 实例上分配公共 IP 地址并打开端口通常是出于便利性考虑，但这是一种不必要的暴露，也在某种程度上与最初使用 VPC 的理念相矛盾。
- en: SSH can unarguably be useful however. So, to maintain the balance between the
    forces, one could setup an SSH gateway host with a public address. You would then
    restrict access to it to your home and/or office network and permit SSH connections
    from that host towards the rest of the VPC estate.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，SSH 无可否认是有用的。因此，为了平衡各种因素，可以设置一个带有公共地址的 SSH 网关主机。然后，你可以限制对该主机的访问，仅允许来自家庭和/或办公室网络的访问，并允许该主机通过
    SSH 连接到 VPC 内的其他资源。
- en: The chosen node becomes the administrative entry point of the VPC.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 选择的节点成为 VPC 的管理入口点。
- en: ELBs everywhere
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ELB 到处可见
- en: Latency is of importance. You will find brilliant engineering articles online
    from expert AWS users who have put time and effort into benchmarking ELB performance
    and side-effects.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 延迟是一个重要因素。你可以在网上找到许多杰出的 AWS 用户撰写的工程文章，他们花费了大量时间和精力对 ELB 性能及其副作用进行了基准测试。
- en: Perhaps not surprisingly their findings show that there is a given latency penalty
    with using an ELB, as opposed to serving requests directly off of a backend web
    server farm. The other side to this however is the fact that such an additional
    layer, be it an ELB or a cluster of custom HAProxy instances, acts as a shield
    in front of those web servers.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 也许不令人意外的是，他们的研究发现，使用 ELB 相较于直接从后端 Web 服务器群组处理请求，确实会有一定的延迟惩罚。不过，另一方面，这样的额外层次，不论是
    ELB 还是自定义 HAProxy 实例的集群，实际上在这些 Web 服务器前充当了一个保护屏障。
- en: With a balancer at the edge of the VPC, web server nodes can remain within the
    private subnet which is not a small advantage if you can afford the said latency
    trade-off.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在 VPC 边缘使用负载均衡器，Web 服务器节点可以保持在私有子网中，如果你能够接受一定的延迟折衷，这无疑是一个不小的优势。
- en: HTTPS by default
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 默认启用 HTTPS
- en: Services like the **AWS Certificate Manager**, make using SSL/TLS encryption
    even easier and more affordable. You get the certificates plus automatic renewals
    for free (within AWS).
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 服务如**AWS 证书管理器**使得使用 SSL/TLS 加密变得更加简便和经济。你将获得证书并且自动续订（在 AWS 内免费）。
- en: Whether traffic between an ELB and the backend instances within a VPC should
    be encrypted is another good question, but for now please do add a certificate
    to your ELBs and enforce HTTPS where possible.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 是否应该加密 ELB 和 VPC 内的后端实例之间的流量是另一个好问题，但现在请务必为你的 ELB 添加证书，并在可能的地方强制使用 HTTPS。
- en: Encrypted storage
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 加密存储
- en: Logically, since we are concerned with encrypting our HTTP traffic, we should
    not ignore our data at rest.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 合理地说，由于我们关注的是加密 HTTP 流量，我们不应忽视静态数据。
- en: The most common type of storage on AWS must be the EBS volume with S3 right
    behind it. Each of the two services supports a strong and effortless implementation
    of encryption.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: AWS 上最常见的存储类型必须是 EBS 卷，其次是 S3。以上两项服务都支持强大且轻松实现的加密。
- en: EBS volumes
  id: totrans-102
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: EBS 卷
- en: 'First, it should be noted that not all EC2 instance types support encrypted
    volumes. Before going any further, please consult this table: [http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances)'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 首先需要注意，并非所有 EC2 实例类型都支持加密卷。在进一步操作之前，请参考此表：[http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances)
- en: 'Also, let us see what does get encrypted and how:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，让我们来看一下哪些数据会被加密以及如何加密：
- en: '*When you create an encrypted EBS volume and attach it to a supported instance
    type, the following types of data are encrypted:*'
  id: totrans-105
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*当你创建一个加密的 EBS 卷并将其附加到支持的实例类型时，以下类型的数据将被加密：*'
- en: ''
  id: totrans-106
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*- Data at rest inside the volume*'
  id: totrans-107
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*- 卷内的静态数据*'
- en: ''
  id: totrans-108
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*- All data moving between the volume and the instance*'
  id: totrans-109
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*- 在卷和实例之间传输的所有数据*'
- en: ''
  id: totrans-110
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*- All snapshots created from the volume*'
  id: totrans-111
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*- 从卷创建的所有快照*'
- en: ''
  id: totrans-112
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*The encryption occurs on the servers that host EC2 instances, providing encryption
    of data-in-transit from EC2 instances to EBS storage.*'
  id: totrans-113
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*加密发生在托管 EC2 实例的服务器上，提供从 EC2 实例到 EBS 存储的数据传输加密。*'
- en: ''
  id: totrans-114
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*ref: [http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)*'
  id: totrans-115
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*参考：[http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html](http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html)*'
- en: Note that the data gets encrypted on the servers that host EC2 instances, that
    is to say the hypervisors.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，数据在托管 EC2 实例的服务器上进行加密，也就是说是虚拟化管理程序进行加密。
- en: Naturally, if you wanted to go the extra mile you could manage your own encryption
    on the instance itself. Otherwise, you can be reasonably at peace knowing that
    each volume gets encrypted with an individual key which is in turn encrypted by
    a master key associated with the given AWS account.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 自然地，如果你希望做得更彻底，你可以在实例本身管理加密。否则，你可以相对放心，因为每个卷都会使用一个单独的密钥进行加密，而这个密钥又是由与给定 AWS
    账户关联的主密钥加密的。
- en: In terms of key management, AWS recommends that you create a custom key to replace
    the one which gets generated for you by default. Let us create a key and put it
    to use.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在密钥管理方面，AWS 推荐你创建一个自定义密钥来替代默认为你生成的密钥。让我们创建一个密钥并开始使用它。
- en: 'On the IAM dashboard, select **Encryption Keys** on the left:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在 IAM 仪表盘中，选择左侧的**加密密钥**：
- en: '![EBS volumes](img/image_09_008.jpg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![EBS 卷](img/image_09_008.jpg)'
- en: 'Choose to **Create Key** and fill in the details:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 选择**创建密钥**并填写详细信息：
- en: '![EBS volumes](img/image_09_009.jpg)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![EBS 卷](img/image_09_009.jpg)'
- en: 'Then you can define who can manage the key:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 然后你可以定义谁可以管理密钥：
- en: '![EBS volumes](img/image_09_010.jpg)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![EBS volumes](img/image_09_010.jpg)'
- en: 'As well as who can use it:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 以及谁可以使用它：
- en: '![EBS volumes](img/image_09_011.jpg)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![EBS volumes](img/image_09_011.jpg)'
- en: 'And the result should be visible back on that dashboard among the list of keys:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 结果应该在密钥列表中显示在仪表盘上：
- en: '![EBS volumes](img/image_09_012.jpg)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![EBS volumes](img/image_09_012.jpg)'
- en: 'Now if you were to switch to the EC2 Console and choose to create a new EBS
    volume, the custom encryption key should be available as an option:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果你切换到EC2控制台并选择创建一个新的EBS卷，那么自定义加密密钥应该作为一个选项可用：
- en: '![EBS volumes](img/image_09_013.jpg)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![EBS volumes](img/image_09_013.jpg)'
- en: You can now proceed to attach the new encrypted volume to an EC2 instance as
    per the usual process.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可以按照常规流程，将新的加密卷附加到EC2实例上。
- en: S3 objects
  id: totrans-132
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: S3对象
- en: S3 allows the encryption of all, or a selection of objects within a bucket with
    the same **AES-256** algorithm as EBS here.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: S3允许使用与EBS相同的**AES-256**算法对存储桶内的所有对象或部分对象进行加密。
- en: 'A few methods of key management are available (ref: [http://docs.aws.amazon.com/AmazonS3/latest/dev/serv-side-encryption.html](http://docs.aws.amazon.com/AmazonS3/latest/dev/serv-side-encryption.html)):'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种密钥管理方法可用（参考：[http://docs.aws.amazon.com/AmazonS3/latest/dev/serv-side-encryption.html](http://docs.aws.amazon.com/AmazonS3/latest/dev/serv-side-encryption.html)）：
- en: You can import your own, external set of keys
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以导入自己的外部密钥集。
- en: You can use the KMS service to generate custom keys within AWS
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以使用KMS服务在AWS中生成自定义密钥。
- en: You can use the S3 service default (unique) key
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你可以使用S3服务的默认（唯一）密钥。
- en: 'Encrypting existing data can be done on the folder level:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 对现有数据进行加密可以在文件夹级别进行：
- en: '![S3 objects](img/image_09_014.jpg)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![S3 objects](img/image_09_014.jpg)'
- en: 'or by selecting individual files:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 或者通过选择单个文件：
- en: '![S3 objects](img/image_09_015.jpg)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![S3 objects](img/image_09_015.jpg)'
- en: New data is encrypted on demand by either specifying a header (`x-amz-server-side-encryption`)
    in the `PUT` request or by passing any of the `--sse` options if using the AWS
    S3 CLI.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 新数据可以根据需求进行加密，方法是在`PUT`请求中指定一个头部（`x-amz-server-side-encryption`），或者如果使用AWS S3
    CLI，则通过传递任意`--sse`选项。
- en: 'It is also possible to deny any upload attempts which do not specify encryption
    by using a bucket policy (ref: [http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html](http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html)).'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 还可以通过使用存储桶策略（参考：[http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html](http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html)）来拒绝任何未指定加密的上传尝试。
- en: OS updates
  id: totrans-144
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作系统更新
- en: If you follow any security bulletins, you would have noticed the frequency with
    which new security flaws are being published. So, it is probably not much of an
    exaggeration to state that OS packages become obsolete days if not hours after
    a fully up-to-date EC2 instance has been provisioned. And unless the latest vulnerability
    is affecting BASH or OpenSSL, we tend to take comfort in the fact that most of
    our hosts reside within an isolated environment (such as a VPC), postponing updates
    over and over again.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你关注任何安全公告，你可能已经注意到新安全漏洞发布的频率。因此，说操作系统包在完全更新的EC2实例被配置好后，几天甚至几个小时就会变得过时，可能并不算夸张。除非最新的漏洞影响到BASH或OpenSSL，否则我们往往会因大多数主机处于隔离环境（如VPC）中而感到安心，从而一再推迟更新。
- en: I believe we all agree this is a scary practice, which likely exists due to
    the anxiety that accompanies the thought of updating live, production systems.
    There is also a legitimate degree of complication brought about by services such
    as **Auto Scaling**, but this can be turned to an advantage. Let us see how.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 我相信我们都同意，这是一种令人恐惧的做法，可能存在的原因是更新生产系统时所带来的焦虑感。像**自动扩展**这样的服务也带来了合法的复杂性，但这可以转化为一种优势。让我们看看如何做到这一点。
- en: 'We''ll separate a typical EC2 deployment into two groups of instances: *static(non-autoscaled)*
    and *autoscaled*. Our task is to deploy the latest OS updates to both.'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将一个典型的EC2部署分为两组实例：*静态（非自动扩展）*和*自动扩展*。我们的任务是将最新的操作系统更新部署到这两组实例上。
- en: In the case of static instances, where scaling is not an option due to some
    application specific or other type of limitation, we will have to resort to the
    well-known approach of first testing the updates in a completely separate environment
    then updating our static production hosts (usually one at a time).
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在静态实例的情况下，由于某些应用程序特定的限制或其他类型的限制，无法进行扩展，我们将不得不采取众所周知的方法：首先在一个完全独立的环境中测试更新，然后更新我们的静态生产主机（通常一次一个）。
- en: 'With Auto Scaling however, OS patching can be a much more pleasant experience.
    You will recall Packer and Serverspec from previous chapters, where we used these
    tools to produce and test AMIs. A similar Jenkins pipeline can also be used for
    performing OS updates:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，通过 Auto Scaling，操作系统补丁更新可能会变得更加愉快。您可能记得在前几章中我们使用 Packer 和 Serverspec 生产和测试
    AMI。类似的 Jenkins 管道也可以用于执行操作系统更新：
- en: Launch the source AMI.
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动源 AMI。
- en: Perform a package update.
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行包更新。
- en: Run tests.
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行测试。
- en: Package a new AMI.
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打包一个新的 AMI。
- en: Proceed with a phased deployment in production.
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按阶段在生产环境中部署。
- en: To be comfortable with this process, we certainly need to put a decent amount
    of effort into ensuring that tests, deployment and rollback procedures are as
    reliable as practically possible, but then the end justifies the means.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 为了熟悉这个过程，我们当然需要付出相当的努力，确保测试、部署和回滚程序尽可能可靠，但最终的结果是值得付出这些努力的。
- en: Security auditing
  id: totrans-156
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安全审计
- en: AWS offers some good tools to help you keep your security policies in shape.
    Those will provide you with detailed audit reports including advice on how to
    improve any potential risk areas. In addition, you can configure service logs,
    so you get a better understanding what goes on within your deployment or AWS account
    as a whole.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: AWS 提供了一些不错的工具来帮助您保持安全策略的有效性。这些工具会为您提供详细的审计报告，包括如何改进任何潜在风险区域的建议。此外，您还可以配置服务日志，从而更好地了解部署或整个
    AWS 账户中发生的情况。
- en: VPC Flow Logs
  id: totrans-158
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: VPC 流日志
- en: 'This service lets you capture information about the network traffic flowing
    through a VPC. The generated logs (unfortunately not quite real-time yet) contain
    src/dst port, src/dst address, protocol and other related details (for a full
    list please see: [http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/flow-logs.html#flow-log-records](http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/flow-logs.html#flow-log-records)).
    Apart from making for some pretty cool graphs to help identify network bottlenecks,
    the data can also be used for spotting unusual behavior. You could, for example,
    devise an in-house IDS by parsing the **Flow Logs** and forwarding any suspicious
    entries to your monitoring solution.'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 此服务允许您捕获通过 VPC 流动的网络流量信息。生成的日志（不幸的是，尚未完全实时）包含源/目的端口、源/目的地址、协议及其他相关细节（完整列表请见：[http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/flow-logs.html#flow-log-records](http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/flow-logs.html#flow-log-records)）。除了生成一些很酷的图表来帮助识别网络瓶颈外，数据还可以用于发现异常行为。例如，您可以通过解析**流日志**并将任何可疑条目转发到监控解决方案来设计一个内部
    IDS。
- en: 'In the VPC Console, select a VPC and switch to the **Flow Logs** tab:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 在 VPC 控制台中，选择一个 VPC 并切换到**流日志**选项卡：
- en: '![VPC Flow Logs](img/image_09_016.jpg)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![VPC 流日志](img/image_09_016.jpg)'
- en: 'Click on **Create Flow Log**: you will need to fill a few parameters such as
    the IAM Role to be used (click on **Set Up Permissions** to create one) and the
    desired name of the **Destination Log Group**.'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**创建流日志**：您需要填写一些参数，如要使用的 IAM 角色（点击**设置权限**以创建一个）和所需的**目标日志组**名称。
- en: 'In a few minutes, the said log group should appear under the **Logs** section
    in the **CloudWatch** dashboard:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 几分钟后，所述日志组应出现在**CloudWatch** 仪表板的**日志**部分下：
- en: '![VPC Flow Logs](img/image_09_017.jpg)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![VPC 流日志](img/image_09_017.jpg)'
- en: Within that group, you will find a log stream per EC2 instance (per network
    interface to be more precise) containing the captured traffic details.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 在该组中，您将找到每个 EC2 实例（更准确地说是每个网络接口）对应的日志流，其中包含捕获的流量详细信息。
- en: CloudTrail
  id: totrans-166
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: CloudTrail
- en: The **CloudTrail** service is used for recording API activity within an AWS
    account. This includes requests done via the AWS Console, the CLI, the SDK or
    other services which issue calls on your behalf. The trail can be helpful for
    both security auditing and troubleshooting. Collected data is stored in S3 as
    encrypted objects, along with signed hashes to help ensure no tampering has occurred.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '**CloudTrail** 服务用于记录 AWS 账户内的 API 活动。这包括通过 AWS 控制台、CLI、SDK 或其他为您发出调用的服务所做的请求。此日志对安全审计和故障排除都很有帮助。收集的数据存储在
    S3 中作为加密对象，并附带签名哈希，以帮助确保没有发生篡改。'
- en: 'To enable the service, we go to the **CloudTrail** dashboard looking for a
    **Get Started** or an **Add new trail** button:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 要启用该服务，我们进入**CloudTrail** 仪表板，寻找**开始使用**或**添加新日志**按钮：
- en: '![CloudTrail](img/image_09_018.jpg)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![CloudTrail](img/image_09_018.jpg)'
- en: We have chosen to collect data from all regions, storing it in a new S3 bucket
    with validation turned on. It is also possible to receive notifications on each
    log delivery, which can be useful for any further processing jobs.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 我们选择从所有区域收集数据，并将其存储在启用验证的新 S3 存储桶中。还可以在每次日志交付时接收通知，这对于进一步的处理任务非常有用。
- en: 'Back on the dashboard, we click on the new trail to review its settings:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 返回仪表板后，我们点击新创建的轨迹以查看其设置：
- en: '![CloudTrail](img/image_09_019.jpg)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![CloudTrail](img/image_09_019.jpg)'
- en: 'We enable encryption, then enter a name for the new KMS key. After approximately
    15 minutes, we should see events appearing under the API activity history dashboard
    tab:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 我们启用加密，然后为新的 KMS 密钥输入名称。大约 15 分钟后，我们应该能在 API 活动历史仪表板选项卡下看到事件出现：
- en: '![CloudTrail](img/image_09_020.jpg)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![CloudTrail](img/image_09_020.jpg)'
- en: Expanding any of these entries would provide additional information such as
    the `access_key` used for the given API call and source IP.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 展开这些条目中的任何一项将提供更多信息，例如给定 API 调用使用的 `access_key` 和源 IP。
- en: 'In the S3 bucket we would find two subfolders: **CloudTrail** which holds the
    API logs and **CloudTrail-Digest** for the file hashes.'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 在 S3 存储桶中，我们会找到两个子文件夹：**CloudTrail** 存储 API 日志，**CloudTrail-Digest** 存储文件哈希值。
- en: Trusted Advisor
  id: totrans-177
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Trusted Advisor
- en: The **Advisor** is enabled by default and periodically reviews your AWS account
    in order to identify any risk or areas of improvement.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '**Advisor** 默认启用，并定期审查您的 AWS 账户，以识别任何风险或改进的领域。'
- en: 'It provides insights about cost, performance, security and HA as seen on the
    dashboard:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 它提供关于成本、性能、安全性和高可用性（HA）的洞察，如仪表板所示：
- en: '![Trusted Advisor](img/image_09_021.jpg)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![Trusted Advisor](img/image_09_021.jpg)'
- en: 'We are mainly interested in the security tips at this time:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 此时我们主要关注安全性提示：
- en: '![Trusted Advisor](img/image_09_022.jpg)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![Trusted Advisor](img/image_09_022.jpg)'
- en: Things appear to be green, following the steps we took to secure the root account
    earlier in the chapter.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 按照我们在本章之前为确保根账户安全所采取的步骤，一切看起来都很正常。
- en: In addition to this view, weekly e-mail reports can be configured under the
    **Preferences** tab.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 除此视图外，还可以在 **首选项** 选项卡下配置每周电子邮件报告。
- en: AWS Config
  id: totrans-185
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: AWS Config
- en: With **Config** we can track, inspect, and alert on resource changes that have
    occurred within our deployment.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 **Config** 我们可以追踪、检查并对部署中发生的资源变更进行警报。
- en: When first enabled, the service performs an inventory of the resources found
    within the region and starts recording any changes.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 启用时，服务会对区域内找到的资源进行清单管理，并开始记录任何变化。
- en: Once a resource change is detected, for example a new rule is added to a security
    group, Config allows us to view a timeline with details about the current and
    any previous changes to that resource.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦检测到资源变更，例如添加了一个新规则到安全组，Config 会允许我们查看一个时间轴，显示当前和任何之前的资源变更详情。
- en: Another powerful feature is change inspection. Within Config we can define a
    set of rules to be evaluated against each resource change and alerts generated
    where necessary.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个强大的功能是变更检查。在 Config 中，我们可以定义一组规则，用于评估每次资源变更，并在必要时生成警报。
- en: Let us try both use-cases.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试这两种使用案例。
- en: 'Click on **Get Started** on the Config dashboard, then choose a **Bucket name**
    and a **Role name**:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 点击 **开始使用**，然后选择一个 **存储桶名称** 和 **角色名称**：
- en: '![AWS Config](img/image_09_023.jpg)'
  id: totrans-192
  prefs: []
  type: TYPE_IMG
  zh: '![AWS Config](img/image_09_023.jpg)'
- en: 'One the next page we can choose a few rules to get us started:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一页，我们可以选择一些规则来开始：
- en: '![AWS Config](img/image_09_024.jpg)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![AWS Config](img/image_09_024.jpg)'
- en: We have chosen to monitor CloudTrail, EBS volumes and MFA settings. Finalize
    the setup and go back to the **Rules** tab in the dashboard where we can add some
    more.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 我们选择监控 CloudTrail、EBS 卷和 MFA 设置。完成设置后，返回到仪表板上的 **规则** 选项卡，我们可以添加更多规则。
- en: Note
  id: totrans-196
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Please note that at the time of writing, there is a cost of $2 per active rule
    per month.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在撰写本文时，每个活动规则每月需要 $2 的费用。
- en: Click on **Add rule** and look for the **restricted-ssh** rule which will monitor
    security groups for open SSH access. With the new rule in place, we can make a
    few resource changes and see how Config reacts to these. As an example, disable
    CloudTrail and create a temporary security group which allows incoming SSH from
    anywhere.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 点击 **添加规则**，并查找 **restricted-ssh** 规则，该规则会监控安全组中的 SSH 访问权限。设置新规则后，我们可以进行一些资源更改，看看
    Config 如何对这些变更作出反应。例如，禁用 CloudTrail，并创建一个临时安全组，允许从任何地方进行 SSH 访问。
- en: 'After a short while we can see the effect on the **AWS Config** dashboard:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 稍等片刻，我们可以看到 **AWS Config** 仪表板上的效果：
- en: '![AWS Config](img/image_09_025.jpg)'
  id: totrans-200
  prefs: []
  type: TYPE_IMG
  zh: '![AWS Config](img/image_09_025.jpg)'
- en: 'We can click on the **restricted-ssh** entry for more details. Locate the noncompliant
    entry in the list and click the **AWS Config** timeline icon:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以点击**restricted-ssh**条目查看更多细节。定位列表中的不合规条目并点击**AWS Config**时间轴图标：
- en: '![AWS Config](img/image_09_026.jpg)'
  id: totrans-202
  prefs: []
  type: TYPE_IMG
  zh: '![AWS Config](img/image_09_026.jpg)'
- en: 'We can see the two recorded states of the resource. Clicking on the **Change**
    shows us what has happened:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到该资源的两个记录状态。点击**更改**，我们可以看到发生了什么：
- en: '![AWS Config](img/image_09_027.jpg)'
  id: totrans-204
  prefs: []
  type: TYPE_IMG
  zh: '![AWS Config](img/image_09_027.jpg)'
- en: Here we see the reason why our security group resource has been flagged as **noncompliant**.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们可以看到为什么我们的安全组资源被标记为**不合规**。
- en: 'In addition to the AWS-provided Config rules, you could write your own in the
    form of Lambda functions (ref: [http://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_develop-rules.html](http://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_develop-rules.html)).'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 除了 AWS 提供的 Config 规则外，您还可以以 Lambda 函数的形式编写自己的规则（参考：[http://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_develop-rules.html](http://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_develop-rules.html)）。
- en: Self pen testing
  id: totrans-207
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自我渗透测试
- en: Here we examine self pen testing as an inexpensive alternative or as a preparation
    step prior to you hiring a third party for the official test (considering that
    each penetration testing iteration is usually chargeable).
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们讨论自我渗透测试作为一种廉价的替代方案，或者作为您在雇佣第三方进行正式测试之前的准备步骤（考虑到每次渗透测试通常是收费的）。
- en: The goal is a system which allows for on-demand and/or regular vulnerability
    scanning against our VPC deployment both internally and externally.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 目标是建立一个可以按需和/或定期对我们的 VPC 部署进行内部和外部漏洞扫描的系统。
- en: 'Two community projects that can help us with this task are **OpenVAS** (ref:
    [http://www.openvas.org](http://www.openvas.org)) and **OpenSCAP** (ref: [https://www.open-scap.org](https://www.open-scap.org)).'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 有两个社区项目可以帮助我们完成这项任务，它们是**OpenVAS**（参考：[http://www.openvas.org](http://www.openvas.org)）和**OpenSCAP**（参考：[https://www.open-scap.org](https://www.open-scap.org)）。
- en: A relatively easy way of setting up such an automated scanner would be to use
    a prebaked AMI and some user data. In essence, you would install either or both
    of the preceding frameworks on a vanilla EC2 instance and create an AMI out of
    it. Then launch a new instance of that AMI (perhaps per schedule) and, using user
    data, you would start the scanner, pass it the destination URI to be scanned,
    then e-mail any scan reports or save to S3.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 设置这样一个自动扫描器的相对简单方法是使用一个预先制作的 AMI 和一些用户数据。本质上，您会在一个标准的 EC2 实例上安装前面提到的框架之一或两个，并从中创建一个
    AMI。然后，启动这个 AMI 的新实例（可能是定期启动），并使用用户数据来启动扫描器，将要扫描的目标 URI 传递给它，然后通过电子邮件发送任何扫描报告或保存到
    S3。
- en: 'Scheduling is achieved using an Auto Scale Group, which simply launches a node,
    then terminates it after N hours (however long it takes to perform the scan).
    Alternatively, you could use CloudWatch events together with some Lambda functions
    (ref: [https://aws.amazon.com/premiumsupport/knowledge-center/start-stop-lambda-cloudwatch](https://aws.amazon.com/premiumsupport/knowledge-center/start-stop-lambda-cloudwatch)).'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 调度是通过 Auto Scale Group 实现的，它简单地启动一个节点，然后在 N 小时后终止它（即执行扫描所需的时间）。或者，您可以使用 CloudWatch
    事件配合一些 Lambda 函数（参考：[https://aws.amazon.com/premiumsupport/knowledge-center/start-stop-lambda-cloudwatch](https://aws.amazon.com/premiumsupport/knowledge-center/start-stop-lambda-cloudwatch)）。
- en: Note
  id: totrans-213
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Please note that vulnerability scanning or similar activity needs to be approved
    by AWS Support first (ref: [https://aws.amazon.com/forms/penetration-testing-request](https://aws.amazon.com/forms/penetration-testing-request)).'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，漏洞扫描或类似活动需要首先获得 AWS 支持的批准（参考：[https://aws.amazon.com/forms/penetration-testing-request](https://aws.amazon.com/forms/penetration-testing-request)）。
- en: Following the advice throughout this  chapter is one step towards creating a
    more secure environment, but we can by no means consider the job done. It has
    been said that security is a process, not a product and as such it should perhaps
    be a daily task on one's list.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 遵循本章中的建议是创建一个更安全环境的一个步骤，但我们绝不能认为工作已经完成。有人说过，安全是一个过程，而不是产品，因此它或许应该是每天待办事项的一部分。
- en: It is recommended that you subscribe to relevant security feeds or mailing lists.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐您订阅相关的安全信息源或邮件列表。
- en: 'AWS maintains a few of its own:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: AWS 维护了自己的一些信息源：
- en: '[https://aws.amazon.com/blogs/security](https://aws.amazon.com/blogs/security)'
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://aws.amazon.com/blogs/security](https://aws.amazon.com/blogs/security)'
- en: '[https://aws.amazon.com/security/security-bulletins/](https://aws.amazon.com/security/security-bulletins/)'
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://aws.amazon.com/security/security-bulletins/](https://aws.amazon.com/security/security-bulletins/)'
- en: '[https://alas.aws.amazon.com/](https://alas.aws.amazon.com/)'
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://alas.aws.amazon.com/](https://alas.aws.amazon.com/)'
- en: Summary
  id: totrans-221
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter we covered some ideas on how to improve the overall security
    of an AWS account.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们介绍了如何提高AWS账户整体安全性的一些方法。
- en: We looked at AWS services which can be used for auditing and alerting on suspicious
    activity plus open-source tools that can be useful for regular vulnerability scanning.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 我们查看了可以用于审计和对可疑活动发出警报的AWS服务，以及一些可以用于定期漏洞扫描的开源工具。
- en: In the next chapter we will look at a list of popular (and less so) AWS tips
    and tricks.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将查看一些流行的（以及较不常见的）AWS技巧和窍门。
