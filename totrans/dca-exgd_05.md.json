["```\nFROM alpine:3.10\nRUN set -ex; \\\n postgresHome=\"$(getent passwd postgres)\"; \\\n postgresHome=\"$(echo \"$postgresHome\" | cut -d: -f6)\"; \\\n [ \"$postgresHome\" = '/var/lib/postgresql' ]; \\\n mkdir -p \"$postgresHome\"; \\\n chown -R postgres:postgres \"$postgresHome\"\n...\n...\nRUN mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql\nENV PGDATA /var/lib/postgresql/data\nRUN mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\"\n\nVOLUME /var/lib/postgresql/data\n\nCOPY docker-entrypoint.sh /usr/local/bin/\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 5432\nCMD [\"postgres\"]\n```", "```\n$ docker image pull --quiet postgres:alpine\ndocker.io/library/postgres:alpine\n\n$ docker image inspect postgres:alpine --format \"{{ .Config.Volumes }} \"\nmap[/var/lib/postgresql/data:{}] \n```", "```\n$ docker container run -d --name mydb postgres:alpine\ne1eb5e5df725541d6a3b31ee86746ab009251c5292b1af95b22b166c9d0922de\n```", "```\n$ docker container inspect mydb --format \"{{ .Mounts }} \"\n[{volume c888a831d6819aea6c6b4474f53b7d6c60e085efaa30d17db60334522281d76f /var/lib/docker/volumes/c888a831d6819aea6c6b4474f53b7d6c60e085efaa30d17db60334522281d76f/_data /var/lib/postgresql/data local true }] \n```", "```\n$ docker volume inspect c888a831d6819aea6c6b4474f53b7d6c60e085efaa30d17db60334522281d76f\n[\n {\n \"CreatedAt\": \"2019-11-03T19:20:59+01:00\",\n \"Driver\": \"local\",\n \"Labels\": null,\n \"Mountpoint\": \"/var/lib/docker/volumes/c888a831d6819aea6c6b4474f53b7d6c60e085efaa30d17db60334522281d76f/_data\",\n \"Name\": \"c888a831d6819aea6c6b4474f53b7d6c60e085efaa30d17db60334522281d76f\",\n \"Options\": null,\n \"Scope\": \"local\"\n }\n]\n```", "```\n$ sudo ls -lart /var/lib/docker/volumes/c888a831d6819aea6c6b4474f53b7d6c60e085efaa30d17db60334522281d76f/_data\ntotal 64\ndrwxr-xr-x 3 root root 19 nov 3 19:20 ..\n-rw------- 1 70 70 3 nov 3 19:20 PG_VERSION\ndrwx------ 2 70 70 6 nov 3 19:20 pg_twophase\n...\n...\n-rw------- 1 70 70 94 nov 3 19:20 postmaster.pid\ndrwx------ 2 70 70 25 nov 3 19:42 pg_stat_tmp\n```", "```\n$ docker container stop mydb\n mydb\n\n$ docker volume ls --filter name=c888a831d6819aea6c6b4474f53b7d6c60e085efaa30d17db60334522281d76f\n DRIVER VOLUME NAME\n local c888a831d6819aea6c6b4474f53b7d6c60e085efaa30d17db60334522281d76f\n```", "```\n$ docker container rm mydb\nmydb\n```", "```\n$ docker volume ls --filter name=c888a831d6819aea6c6b4474f53b7d6c60e085efaa30d17db60334522281d76f\nDRIVER VOLUME NAME\nlocal c888a831d6819aea6c6b4474f53b7d6c60e085efaa30d17db60334522281d76f\n```", "```\n$ docker volume rm c888a831d6819aea6c6b4474f53b7d6c60e085efaa30d17db60334522281d76f\nc888a831d6819aea6c6b4474f53b7d6c60e085efaa30d17db60334522281d76f\n```", "```\n$ docker volume create mydata\nmydbdata\n```", "```\n$ docker container run --name c1 -v mydata:/data -ti alpine\n/ # touch /data/persistent-file-test\n/ # exit\n```", "```\n$ sudo ls -lart /var/lib/docker/volumes/mydata/_data\ntotal 0\ndrwxr-xr-x 3 root root 19 nov 3 20:34 ..\n-rw-r--r-- 1 root root 0 nov 3 20:44 persistent-file-test\ndrwxr-xr-x 2 root root 34 nov 3 20:44 .\n```", "```\n$ docker container run --name c2 -v mydata:/tmp -ti alpine ls -lart /tmp\ntotal 0\n-rw-r--r-- 1 root root 0 Nov 3 19:44 persistent-file-test\ndrwxr-xr-x 2 root root 34 Nov 3 19:44 .\ndrwxr-xr-x 1 root root 6 Nov 3 19:48 ..\n```", "```\n$ docker volume rm mydata\nError response from daemon: remove mydata: volume is in use - [a40f15ab8977eba1c321d577214dc4aca0f58c6aef0eefd50d6989331a8dc723, 472b37cc19571960163cdbcd902e83020706a46f06fbb6c7f9f1679c2beeed0e]\n```", "```\n$ docker container rm c1 c2\nc1\nc2\n\n$ docker volume rm mydata\nmydata\n```", "```\n$ docker network ls\n NETWORK ID NAME DRIVER SCOPE\n 033e4c3f3608 bridge bridge local\n 82faac964567 host host local\n 2fb14f721dc3 none null local\n```", "```\nzero@sirius:~$ docker container run -ti -d --name c1 alpine ping 8.8.8.8\nc44fbefb96b9321ef1a0e866fa6aaeb26408fc2ef484bbc9ecf904546f60ada7\n\nzero@sirius:~$ docker container run -ti -d --name c2 alpine ping 8.8.8.8\ncee980d7f9e587357375e21dafcb406688ac1004d8d7984ec39e4f97533492ef\n```", "```\n$ docker container inspect c1 --format \"{{ .NetworkSettings.Networks.bridge.IPAddress }}\"\n172.17.0.2\n\n$ docker container inspect c2 --format \"{{ .NetworkSettings.Networks.bridge.IPAddress }}\"\n172.17.0.3\n```", "```\n$ docker exec c1 ping -c 2 172.17.0.3 \nPING 172.17.0.3 (172.17.0.3): 56 data bytes\n64 bytes from 172.17.0.3: seq=0 ttl=64 time=0.113 ms\n64 bytes from 172.17.0.3: seq=1 ttl=64 time=0.210 ms\n--- 172.17.0.3 ping statistics ---\n2 packets transmitted, 2 packets received, 0% packet loss\nround-trip min/avg/max = 0.113/0.161/0.210 ms\n```", "```\n$ docker container inspect c1 --format \"{{json .NetworkSettings.Networks }}\"\n{\"bridge\":{\"IPAMConfig\":null,\"Links\":null,\"Aliases\":null,\"NetworkID\":\"033e4c3f360841b0826f3b850fe9f5544d145bea644ee1955717e67d02df92ce\",\"EndpointID\":\"390d2cf0b933ddd3b11fdebdbf6293c97f2a8568315c80794fad6f5b8eef3207\",\"Gateway\":\"172.17.0.1\",\"IPAddress\":\"172.17.0.2\",\"IPPrefixLen\":16,\"IPv6Gateway\":\"\",\"GlobalIPv6Address\":\"\",\"GlobalIPv6PrefixLen\":0,\"MacAddress\":\"02:42:ac:11:00:02\",\"DriverOpts\":null}}\n```", "```\n$ docker network inspect bridge\n[\n {\n \"Name\": \"bridge\",\n \"Id\": \"033e4c3f360841b0826f3b850fe9f5544d145bea644ee1955717e67d02df92ce\",\n ...\n \"IPAM\": {\n ... \n \"Config\": [\n {\n \"Subnet\": \"172.17.0.0/16\",\n \"Gateway\": \"172.17.0.1\"\n }\n ]\n },\n ...\n \"Containers\": {\n \"c44fbefb96b9321ef1a0e866fa6aaeb26408fc2ef484bbc9ecf904546f60ada7\": {\n \"Name\": \"c1\",\n \"EndpointID\": \"390d2cf0b933ddd3b11fdebdbf6293c97f2a8568315c80794fad6f5b8eef3207\",\n \"MacAddress\": \"02:42:ac:11:00:02\",\n \"IPv4Address\": \"172.17.0.2/16\",\n \"IPv6Address\": \"\"\n },\n \"cee980d7f9e587357375e21dafcb406688ac1004d8d7984ec39e4f97533492ef\": {\n \"Name\": \"c2\",\n \"EndpointID\": \"cb49b93bc0bdd3eb887ad3b6fcd43155eb4ca7688c788719a27acc9e2f2e2a9d\",\n \"MacAddress\": \"02:42:ac:11:00:03\",\n \"IPv4Address\": \"172.17.0.3/16\",\n \"IPv6Address\": \"\"\n }\n },\n \"Options\": {\n \"com.docker.network.bridge.default_bridge\": \"true\",\n \"com.docker.network.bridge.enable_icc\": \"true\",\n \"com.docker.network.bridge.enable_ip_masquerade\": \"true\",\n \"com.docker.network.bridge.host_binding_ipv4\": \"0.0.0.0\",\n \"com.docker.network.bridge.name\": \"docker0\",\n \"com.docker.network.driver.mtu\": \"1500\"\n },\n \"Labels\": {}\n }\n]\n```", "```\n$ docker run -ti --network none alpine\n/ # ip add\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN qlen 1000\n link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n inet 127.0.0.1/8 scope host lo\n valid_lft forever preferred_lft forever\n/ #\n```", "```\n$ docker run -ti --network host alpine\n/ # ip add\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN qlen 1000\n link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n inet 127.0.0.1/8 scope host lo\n valid_lft forever preferred_lft forever\n inet6 ::1/128 scope host \n valid_lft forever preferred_lft forever\n2: enp0s25: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc fq_codel state DOWN qlen 1000\n link/ether 68:f7:28:c1:bc:13 brd ff:ff:ff:ff:ff:ff\n3: wlp3s0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP qlen 1000\n link/ether 34:02:86:e3:f6:25 brd ff:ff:ff:ff:ff:ff\n inet 192.168.200.165/24 brd 192.168.200.255 scope global dynamic wlp3s0\n valid_lft 51sec preferred_lft 51sec\n inet6 fe80::ee87:e44f:9189:f720/64 scope link \n valid_lft forever preferred_lft forever\n...\n...\n10: docker0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP \n link/ether 02:42:11:73:cc:2b brd ff:ff:ff:ff:ff:ff\n inet 172.17.0.1/16 brd 172.17.255.255 scope global docker0\n valid_lft forever preferred_lft forever\n inet6 fe80::42:11ff:fe73:cc2b/64 scope link \n valid_lft forever preferred_lft forever\n...\n...\n18: docker_gwbridge: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP \n link/ether 02:42:4b:21:09:6d brd ff:ff:ff:ff:ff:ff\n inet 172.18.0.1/16 brd 172.18.255.255 scope global docker_gwbridge\n valid_lft forever preferred_lft forever\n inet6 fe80::42:4bff:fe21:96d/64 scope link \n valid_lft forever preferred_lft forever\n20: veth82a8134@if19: <BROADCAST,MULTICAST,UP,LOWER_UP,M-DOWN> mtu 1500 qdisc noqueue master docker_gwbridge state UP \n link/ether a6:5d:02:ed:79:0a brd ff:ff:ff:ff:ff:ff\n inet6 fe80::a45d:2ff:feed:790a/64 scope link \n valid_lft forever preferred_lft forever\n22: veth4b1102e@if21: <BROADCAST,MULTICAST,UP,LOWER_UP,M-DOWN> mtu 1500 qdisc noqueue master docker0 state UP \n link/ether fa:08:70:aa:b1:4b brd ff:ff:ff:ff:ff:ff\n inet6 fe80::f808:70ff:feaa:b14b/64 scope link \n valid_lft forever preferred_lft forever\n27: wwp0s20u4: <BROADCAST,MULTICAST,NOARP> mtu 1428 qdisc noop state DOWN qlen 1000\n link/ether 06:1b:05:d6:e9:12 brd ff:ff:ff:ff:ff:ff\n/ # \n```", "```\n$ docker network create --driver bridge --internal --subnet 192.168.30.0/24 --label internal-only internal-only\nc275cdd25b422b35d3f2b4fbbb153e7cd09c8721133667cfbeb9c297af89364a\n```", "```\n$ docker network inspect internal-only \n[\n {\n \"Name\": \"internal-only\",\n \"Id\": \"c275cdd25b422b35d3f2b4fbbb153e7cd09c8721133667cfbeb9c297af89364a\",\n \"Created\": \"2019-11-10T11:03:20.490907017+01:00\",\n \"Scope\": \"local\",\n \"Driver\": \"bridge\",\n \"EnableIPv6\": false,\n \"IPAM\": {\n \"Driver\": \"default\",\n \"Options\": {},\n \"Config\": [\n {\n \"Subnet\": \"192.168.30.0/24\"\n }\n ]\n },\n \"Internal\": true,\n \"Attachable\": false,\n \"Ingress\": false,\n \"ConfigFrom\": {\n \"Network\": \"\"\n },\n \"ConfigOnly\": false,\n \"Containers\": {},\n \"Options\": {},\n \"Labels\": {\n \"internal-only\": \"\"\n }\n }\n]\n```", "```\n$ docker container run --network internal-only -ti --name intc1 alpine sh\n/ # ping 8.8.8.8 -c 2\nPING 8.8.8.8 (8.8.8.8): 56 data bytes\n--- 8.8.8.8 ping statistics ---\n2 packets transmitted, 0 packets received, 100% packet loss\n/ # \n```", "```\n$ docker container run --network internal-only -ti --name intc2 alpine sh\n/ # ping intc1 -c2\nPING intc1 (192.168.30.2): 56 data bytes\n64 bytes from 192.168.30.2: seq=0 ttl=64 time=0.185 ms\n64 bytes from 192.168.30.2: seq=1 ttl=64 time=0.157 ms\n--- intc1 ping statistics ---\n2 packets transmitted, 2 packets received, 0% packet loss\nround-trip min/avg/max = 0.157/0.171/0.185 ms\n/ # \n```", "```\nChain DOCKER (4 references)\ntarget prot opt source destination\nChain DOCKER-ISOLATION-STAGE-1 (1 references)\ntarget prot opt source destination \nDOCKER-ISOLATION-STAGE-2 all -- anywhere anywhere \nDOCKER-ISOLATION-STAGE-2 all -- anywhere anywhere \nDROP all -- !192.168.30.0/24 anywhere \nDROP all -- anywhere !192.168.30.0/24 \nDOCKER-ISOLATION-STAGE-2 all -- anywhere anywhere \nDOCKER-ISOLATION-STAGE-2 all -- anywhere anywhere \nRETURN all -- anywhere anywhere\n\nChain DOCKER-ISOLATION-STAGE-2 (4 references)\ntarget prot opt source destination \nDROP all -- anywhere anywhere \nDROP all -- anywhere anywhere \nDROP all -- anywhere anywhere \nDROP all -- anywhere anywhere \nRETURN all -- anywhere anywhere\n\nChain DOCKER-USER (1 references)\ntarget prot opt source destination \nRETURN all -- anywhere anywhere \n```", "```\n$ docker container run -d --name webserver nginx:alpine\n4a37b49721b4fe6ffc57aee07c3fb42e5c08d4bcc0932e07eb7ce75fe696442d\n\n$ docker container inspect webserver --format \"{{json .NetworkSettings.Networks.bridge.IPAddress }}\"\n\"172.17.0.4\"\n\n$ curl http://172.17.0.4\n<!DOCTYPE html>\n<html>\n<head>\n<title>Welcome to nginx!</title>\n<style>\n body {\n width: 35em;\n margin: 0 auto;\n font-family: Tahoma, Verdana, Arial, sans-serif;\n }\n</style>\n</head>\n<body>\n<h1>Welcome to nginx!</h1>\n<p>If you see this page, the nginx web server is successfully installed and\nworking. Further configuration is required.</p>\n\n<p>For online documentation and support please refer to\n<a href=\"http://nginx.org/\">nginx.org</a>.<br/>\nCommercial support is available at\n<a href=\"http://nginx.com/\">nginx.com</a>.</p>\n\n<p><em>Thank you for using nginx.</em></p>\n</body>\n```", "```\n$ docker container run -d --name public-webserver --publish 80 nginx:alpine\n562bfebccd728fdc3dff649fe6ac578d52e77c409e84eed8040db3cfc5589e40\n\n$ docker container ls --filter name=public-webserver\nCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES\n562bfebccd72 nginx:alpine \"nginx -g 'daemon of…\" About a minute ago Up About a minute 0.0.0.0:32768->80/tcp public-webserver\n\n$ curl http://0.0.0.0:32768\n<!DOCTYPE html>\n<html>\n<head>\n<title>Welcome to nginx!</title>\n<style>\n body {\n width: 35em;\n margin: 0 auto;\n font-family: Tahoma, Verdana, Arial, sans-serif;\n }\n</style>\n</head>\n<body>\n<h1>Welcome to nginx!</h1>\n<p>If you see this page, the nginx web server is successfully installed and\nworking. Further configuration is required.</p>\n\n<p>For online documentation and support please refer to\n<a href=\"http://nginx.org/\">nginx.org</a>.<br/>\nCommercial support is available at\n<a href=\"http://nginx.com/\">nginx.com</a>.</p>\n\n<p><em>Thank you for using nginx.</em></p>\n</body>\n</html>\n```", "```\nDocker-Certified-Associate-DCA-Exam-Guide/environments/standalone$ vagrant up\nBringing machine 'standalone' up with 'virtualbox' provider...\n...\nDocker-Certified-Associate-DCA-Exam-Guide/environments/standalone$ vagrant status\nCurrent machine states:\nstandalone running (virtualbox)\n...\nDocker-Certified-Associate-DCA-Exam-Guide/environments/standalone$\n```", "```\nDocker-Certified-Associate-DCA-Exam-Guide/environments/standalone$ vagrant ssh standalone\n[vagrant@standalone ~]$ \n```", "```\n[vagrant@standalone ~]$ /vagrant/install_requirements.sh \n```", "```\nfrom flask import Flask, render_template\n\napp = Flask(__name__)\n\n@app.route('/')\n\ndef just_run():\n return render_template('index.html')\n\nif __name__ == '__main__':\n app.run(debug=True,host='0.0.0.0')\n```", "```\nFlask\n```", "```\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n <meta charset=\"UTF-8\">\n <title>Simple Flask Application</title>\n</head>\n<body>\n <h1>Simple Flask Application</h1>\n <h1>Version 1</h1>\n</body>\n</html>\n```", "```\nFROM python:alpine\nWORKDIR /app\nCOPY ./requirements.txt requirements.txt\nRUN pip install -r requirements.txt\nCOPY app.py .\nCOPY templates templates \nEXPOSE 5000\nCMD [\"python\", \"app.py\"]\n```", "```\n[vagrant@standalone ~]$ docker image build -q -t simpleapp:v1.0 .\nsha256:1cf398d39b51eb7644f98671493767267be108b60c3142b3ca9e0991b4d3e45b\n```", "```\n[vagrant@standalone ~]$ docker container run -d --name v1.0 simpleapp:v1.0 \n1e775843a42927c25ee350af052f3d8e34c0d26f2510fb2d85697094937f574f\n```", "```\n[vagrant@standalone ~]$ docker container ls --filter name=v1.0\nCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES\n1e775843a429 simpleapp:v1.0 \"python app.py\" 35 seconds ago Up 33 seconds 5000/tcp v1.0\n \"python app.py\" 35 seconds ago Up 33 seconds 5000/tcp v1.0\n\n[vagrant@standalone ~]$ docker container inspect v1.0 \\\n --format \"{{.NetworkSettings.Networks.bridge.IPAddress }}\"\n 172.17.0.6\n```", "```\n[vagrant@standalone ~]$ curl http://172.17.0.6:5000\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n <meta charset=\"UTF-8\">\n <title>Simple Flask Application</title>\n</head>\n<body>\n <h1>Simple Flask Application</h1>\n <h1>Version 1</h1>\n</body>\n</html>\n```", "```\n[vagrant@standalone ~]$ docker container run -d \\\n--name v1.0-bindmount -v $(pwd)/templates:/app/templates simpleapp:v1.0 \n fbf3c35c2f11121ed4a0eedc2f47b42a5ecdc6c6ff4939eb4658ed19999f87d4\n\n[vagrant@standalone ~]$ docker container inspect v1.0-bindmount --format \"{{.NetworkSettings.Networks.bridge.IPAddress }}\"\n172.17.0.6\n\n[vagrant@standalone ~]$ curl http://172.17.0.6:5000\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n <meta charset=\"UTF-8\">\n <title>Simple Flask Application</title>\n</head>\n<body>\n <h1>Simple Flask Application</h1>\n <h1>Version 1</h1>\n</body>\n</html>\n```", "```\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n <meta charset=\"UTF-8\">\n <title>Simple Flask Application</title>\n</head>\n<body>\n <h1>Simple Flask Application</h1>\n <h1>Version 2</h1>\n</body>\n</html>\n~ \n~ \n```", "```\n[vagrant@standalone ~]$ curl http://172.17.0.6:5000\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n <meta charset=\"UTF-8\">\n <title>Simple Flask Application</title>\n</head>\n<body>\n <h1>Simple Flask Application</h1>\n <h1>Version 2</h1>\n</body>\n</html>\n```", "```\n[vagrant@standalone ~]$ docker plugin install vieux/sshfs\nPlugin \"vieux/sshfs\" is requesting the following privileges:\n - network: [host]\n - mount: [/var/lib/docker/plugins/]\n - mount: []\n - device: [/dev/fuse]\n - capabilities: [CAP_SYS_ADMIN]\nDo you grant the above permissions? [y/N] y\nlatest: Pulling from vieux/sshfs\n52d435ada6a4: Download complete \nDigest: sha256:1d3c3e42c12138da5ef7873b97f7f32cf99fb6edde75fa4f0bcf9ed277855811\nStatus: Downloaded newer image for vieux/sshfs:latest\nInstalled plugin vieux/sshfs\n```", "```\n[vagrant@standalone ~]$ sudo systemctl status ssh\n● ssh.service - OpenBSD Secure Shell server\n Loaded: loaded (/lib/systemd/system/ssh.service; enabled; vendor preset: enabled)\n Active: active (running) since Mon 2019-11-11 23:59:38 CET; 6s ago\n Main PID: 13711 (sshd)\n Tasks: 1 (limit: 4915)\n CGroup: /system.slice/ssh.service\n └─13711 /usr/sbin/sshd -D\n\nnov 11 23:59:38 sirius systemd[1]: Starting OpenBSD Secure Shell server...\nnov 11 23:59:38 sirius sshd[13711]: Server listening on 0.0.0.0 port 22.\nnov 11 23:59:38 sirius sshd[13711]: Server listening on :: port 22.\nnov 11 23:59:38 sirius systemd[1]: Started OpenBSD Secure Shell server.\n```", "```\n[vagrant@standalone ~]$ docker plugin ls\nID NAME DESCRIPTION ENABLED\neb37e5a2e676 vieux/sshfs:latest sshFS plugin for Docker true\n```", "```\n[vagrant@standalone ~]$ docker plugin inspect eb37e5a2e676\n[\n {\n \"Config\": {\n..\n \"Description\": \"sshFS plugin for Docker\",\n \"DockerVersion\": \"18.05.0-ce-rc1\",\n \"Documentation\": \"https://docs.docker.com/engine/extend/plugins/\",\n \"Entrypoint\": [\n \"/docker-volume-sshfs\"\n ],\n...\n...\n \"Source\": \"/var/lib/docker/plugins/\",\n \"Type\": \"bind\"\n },\n...\n...\n \"Enabled\": true,\n \"Id\": \"eb37e5a2e676138b6560bd91715477155f669cd3c0e39ea054fd2220b70838f1\",\n \"Name\": \"vieux/sshfs:latest\",\n \"PluginReference\": \"docker.io/vieux/sshfs:latest\",\n \"Settings\": {\n \"Args\": [],\n \"Devices\": [\n...\n...\n]\n```", "```\n[vagrant@standalone ~]$ docker volume create -d vieux/sshfs \\\n-o sshcmd=ssh_user@127.0.0.1:/tmp \\\n-o password=ssh_userpasswd \\\nsshvolume\n```", "```\n[vagrant@standalone ~]$ docker container run --rm -it -v sshvolume:/data alpine sh\n/ # ls -lart /data\ntotal 92\ndrwx------ 1 root root 17 Nov 9 08:27 systemd-private-809bb564862047608c79c2cc81f67f24-systemd-timesyncd.service-gQ5tZx\ndrwx------ 1 root root 17 Nov 9 08:27 systemd-private-809bb564862047608c79c2cc81f67f24-systemd-resolved.service-QhsXg9\ndrwxrwxrwt 1 root root 6 Nov 9 08:27 .font-unix\ndrwxrwxrwt 1 root root 6 Nov 9 08:27 .XIM-unix\ndrwxr-xr-x 1 root root 30 Nov 11 23:13 ..\ndrwxrwxrwt 1 root root 4096 Nov 11 23:13 .\n/ # \n```", "```\n[vagrant@standalone ~]$ docker network create zone-a\nbb7cb5d22c03bffdd1ef52a7469636fe2e635b031b7528a687a85ff9c7ee4141\n\n[vagrant@standalone ~]$ docker network create zone-b\n818ba644512a2ebb44c5fd4da43c2b1165f630d4d0429073c465f0fe4baff2c7\n```", "```\n[vagrant@standalone ~]$ docker container run -d --name cont1 --network zone-a alpine sleep 3000 \nef3dfd6a354b5310a9c97fa9247739ac320da1b4f51f6a2b8da2ca465b12f95e\n```", "```\n[vagrant@standalone ~]$ docker network connect zone-b cont1\n\n$ docker exec cont1 ip add\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN qlen 1000\n link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n inet 127.0.0.1/8 scope host lo\n valid_lft forever preferred_lft forever\n92: eth0@if93: <BROADCAST,MULTICAST,UP,LOWER_UP,M-DOWN> mtu 1500 qdisc noqueue state UP \n link/ether 02:42:ac:13:00:02 brd ff:ff:ff:ff:ff:ff\n inet 172.19.0.2/16 brd 172.19.255.255 scope global eth0\n valid_lft forever preferred_lft forever\n94: eth1@if95: <BROADCAST,MULTICAST,UP,LOWER_UP,M-DOWN> mtu 1500 qdisc noqueue state UP \n link/ether 02:42:ac:14:00:02 brd ff:ff:ff:ff:ff:ff\n inet 172.20.0.2/16 brd 172.20.255.255 scope global eth1\n valid_lft forever preferred_lft forever\n```", "```\n[vagrant@standalone ~]$ docker container run -d --name cont2 --network zone-b --cap-add NET_ADMIN alpine sleep 3000 \n048e362ea27b06f5077306a71cf8adc95ea9844907aec84ec09c0b991d912a33\n\n[vagrant@standalone ~]$ docker container run -d --name cont3 --network zone-a --cap-add NET_ADMIN alpine sleep 3000 \n20c7699c54786700c65a0bbe002c750672ffb3986f41d106728b3d598065ecb5\n```", "```\n[vagrant@standalone ~]$ docker exec cont2 ip route\ndefault via 172.20.0.1 dev eth0 \n172.20.0.0/16 dev eth0 scope link src 172.20.0.3 \n\n[vagrant@standalone ~]$ docker exec cont3 ip route\ndefault via 172.19.0.1 dev eth0 \n172.19.0.0/16 dev eth0 scope link src 172.19.0.3 \n```", "```\n[vagrant@standalone ~]$ docker exec cont2 route add -net 172.19.0.0 netmask 255.255.255.0 gw 172.20.0.2\n\n[vagrant@standalone ~]$ docker exec cont2 ip route \ndefault via 172.20.0.1 dev eth0 \n172.19.0.0/24 via 172.20.0.2 dev eth0 \n172.20.0.0/16 dev eth0 scope link  src 172.20.0.3\n```", "```\n[vagrant@standalone ~]$ docker exec cont3 route add -net 172.20.0.0 netmask 255.255.255.0 gw 172.19.0.2\n\n[vagrant@standalone ~]$ docker exec cont3 ip route \ndefault via 172.19.0.1 dev eth0 \n172.19.0.0/16 dev eth0 scope link  src 172.19.0.3 \n172.20.0.0/24 via 172.19.0.2 dev eth0 \n```", "```\n[vagrant@standalone ~]$ docker exec cont3 ping -c 3 cont2\nping: bad address 'cont2'\n\n[vagrant@standalone ~]$ docker exec cont3 ping -c 3 cont1\nPING cont1 (172.19.0.2): 56 data bytes\n64 bytes from 172.19.0.2: seq=0 ttl=64 time=0.063 ms\n64 bytes from 172.19.0.2: seq=1 ttl=64 time=0.226 ms\n64 bytes from 172.19.0.2: seq=2 ttl=64 time=0.239 ms\n\n--- cont1 ping statistics ---\n3 packets transmitted, 3 packets received, 0% packet loss\nround-trip min/avg/max = 0.063/0.176/0.239 ms\n```", "```\n[vagrant@standalone ~]$ docker exec cont3 ping -c 3 172.20.0.3\nPING 172.20.0.3 (172.20.0.3): 56 data bytes\n64 bytes from 172.20.0.3: seq=0 ttl=63 time=0.151 ms\n64 bytes from 172.20.0.3: seq=1 ttl=63 time=0.229 ms\n64 bytes from 172.20.0.3: seq=2 ttl=63 time=0.201 ms\n\n--- 172.20.0.3 ping statistics ---\n3 packets transmitted, 3 packets received, 0% packet loss\nround-trip min/avg/max = 0.151/0.193/0.229 ms\n```", "```\n[vagrant@standalone ~]$ docker network create simplenet\nb5ff93985be84095e70711dd3c403274c5ab9e8c53994a09e4fa8adda97f37f7\n```", "```\n[vagrant@standalone ~]$ docker container run -d \\\n--name simpledb \\\n--network simplenet \\\n--env \"POSTGRES_PASSWORD=changeme\" \\\ncodegazers/simplestlab:simpledb\n```", "```\n[vagrant@standalone ~]$ docker container run -d \\\n --name simpleapp \\\n--network simplenet \\\n--env dbhost=simpledb \\\n--env dbname=demo \\\n--env dbuser=demo \\\n--env dbpasswd=d3m0 \\\ncodegazers/simplestlab:simpleapp\n556d6301740c1f3de20c9ff2f30095cf4a49b099190ac03189cff3db5b6e02ce\n```", "```\n[vagrant@standalone ~]$ docker network inspect simplenet --format \"{{range .Containers}} {{.IPv4Address }} {{.Name}} {{end}}\"\n 172.22.0.4/16 simpleapp 172.22.0.3/16 simpledb\n```", "```\n[vagrant@standalone ~]$ docker inspect codegazers/simplestlab:simpledb \\\n--format \"{{json .Config.ExposedPorts }}\" \n{\"5432/tcp\":{}}\n```", "```\n[vagrant@standalone ~]$ docker inspect codegazers/simplestlab:simpleapp \\\n--format \"{{json .Config.ExposedPorts }}\" \n {\"3000/tcp\":{}} \n```", "```\n[vagrant@standalone ~]$ curl -I 172.22.0.3:5432\ncurl: (52) Empty reply from server\n```", "```\n[vagrant@standalone ~]$ curl -I 172.22.0.4:3000\nHTTP/1.1 200 OK\nContent-Type: text/html; charset=UTF-8\nDate: Sat, 16 Nov 2019 11:38:22 GMT\nConnection: keep-alive\n```", "```\n[vagrant@standalone ~]$ docker container run -d \\\n--name simplelb \\\n--env APPLICATION_ALIAS=simpleapp \\\n--env APPLICATION_PORT=3000 \\\n--network simplenet \\\n--publish 8080:80 \\\ncodegazers/simplestlab:simplelb\n35882fb4648098f7c1a1d29a0a12f4668f46213492e269b6b8262efd3191582b\n```", "```\n[vagrant@standalone ~]$ sudo iptables -L DOCKER -t nat --line-numbers --numeric\nChain DOCKER (2 references)\nnum target prot opt source destination \n1 RETURN all -- 0.0.0.0/0 0.0.0.0/0 \n2 RETURN all -- 0.0.0.0/0 0.0.0.0/0 \n3 RETURN all -- 0.0.0.0/0 0.0.0.0/0 \n4 RETURN all -- 0.0.0.0/0 0.0.0.0/0 \n5 RETURN all -- 0.0.0.0/0 0.0.0.0/0 \n6 DNAT tcp -- 0.0.0.0/0 0.0.0.0/0 tcp dpt:8080 to:172.22.0.2:80\n```"]