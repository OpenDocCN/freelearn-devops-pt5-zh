- en: Network Design for OpenShift HA
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous chapter, we talked about OpenShift scenarios in single and multiple
    data centers and explained how to properly design OpenShift in a distributed and
    redundant configuration across one or more data centers.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we are going to cover the main network aspects while designing
    OpenShift clusters in one or across multiple data centers. We will also cover
    commonly made mistakes, solutions, and overall guidance from a networking point
    of view.
  prefs: []
  type: TYPE_NORMAL
- en: 'After reading this chapter, you will have an understanding of the following
    topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Common network topologies for OpenShift deployments
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Commonly made mistakes while designing networks for OpenShift
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: General network requirements and design guidelines for OpenShift deployments
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Common network topologies for OpenShift deployments
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Though each and every network infrastructure is unique in one way or other,
    all of these networks have a lot in common and can be split into two different
    types:'
  prefs: []
  type: TYPE_NORMAL
- en: Physical or data center networks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Virtual or cloud networks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data center networks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Most of the physical and data center networks have a similar structures and
    components, such as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Core/spine layer switches**: To interconnect different parts of the network,
    including aggregation/leaf switches, as well as, edge of the network and/or even
    Data Center Interconnect links'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Access/leaf switches**: To connect physical servers to the revenue-generating
    network'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Edge firewalls**: To filter the external traffic to the inside of the network'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Border routers**: To connect to the internet or any other external network'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Load balancers**: To load balance the incoming traffic between groups of
    application servers'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'This is depicted on the following diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00104.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Some of these components can be collapsed, such as firewalls and border routers.
    Some components are optional, such as load balancers. There may be additional
    components, but these are the essential building blocks for every data center.
  prefs: []
  type: TYPE_NORMAL
- en: Access layer switches
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Network Access Layer is an essential but critical network component that
    usually has several features configured, such as:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Multi-Chassis Link Aggregation (MC-LAG)**:Allows server links to be connected
    to different access layer switches with bonding enabled in active/active mode'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Virtual LAN (VLAN)**: A very old but solid technology that separates one
    broadcast domain from another'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**L3 gateway**: An IP Gateway to allow VLAN traffic in and out'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Dynamic routing protocol**: **Interior ****Gateway Protocol** (**IGP**)/**Border
    Gateway Protocol** (**BGP**) allows server IP addresses/subnets to be exchanged
    dynamically and failover from one transit link to another without any downtime'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Control Plane Policing(CoPP)**:This is a common way to protect management
    access to/from the equipment'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Core layer switches
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The network core layer is the heart of the network of all other data center
    components and has a very limited number of features configured, such as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Dynamic routing protocol**: IGP/BGP allows server IP addresses/subnets to
    be exchanged dynamically and failover from one transit link to another without
    any downtime'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**CoPP**: This is a common way to protect management access to/from the equipment'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Edge firewalls
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Edge firewalls are a first-level defense against attacks from the internet.
    Edge firewalls also logically separate different network segments from one another
    and usually have the following features enabled:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Stateful inspection**: Keeps track of the traffic coming in and out, dynamically
    opening and closing requested ports to the servers inside the data center'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Application firewall**: Allows you to dynamically identify the application
    by checking application signatures and take a proper action, such as permit or
    deny'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Distributed denial-of-service (DDoS) protection**: Identifies and blocks
    malicious traffic while enabling legitimate traffic to be processed and reached
    out to by the applications running inside the data center'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Intrusion Prevention System (IPS) and Intrusion Detection System (IDS)**:
    These provide protection techniques against exploit attacks regarding data center
    applications, using their vulnerabilities'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Network Address Translation (NAT)**: NAT allows hosts inside the data center
    network to access the internet by changing the source IP address to a publicly
    available IP address'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**CoPP**: This is a common way to protect management access to/from the equipment'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Load balancers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Load balancers are one of the optional network components that have additional
    features that keep track of application availability and dynamically load balance
    the requests from the internet across the servers inside the data center. Load
    balancers have a specific set of features configured, such as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Destination Network Address Translation (DNAT)**: DNAT allows hosts from
    the outside of the data center network to access the servers inside the data center
    network by changing the destination IP address from a publicly available IP address
    to a private IP address of an appropriate server from the pool'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Load balancing**: Works in conjunction with DNAT to dynamically track application
    availability and dynamically remove servers from the server groups'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**SSL offloading**: Takes care of web traffic encryption/decryption going to/from
    unsecured networks by terminating SSL traffic on the load balancer'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**CoPP**: This is a common way to protect management access to/from the equipment'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Border routers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'A border router is a point of communication between the data center network
    and the internet, and has a very limited number of features configured, such as
    the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Dynamic Routing Protocol**: BGP holds the whole internet-routing table to
    calculate the optimal path to the final destination as well as advertise the data
    center public IP address pool to the internet'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**CoPP**: This is a common way to protect management access to/from the equipment'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cloud networks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Similar to physical and data center networks, cloud networks have their own
    structure and components, such as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Software-Defined Networking (SDN)**: SDN replaces traditional network architectures
    by implementing networks on demand by using popular SDN transport and encapsulation
    protocols'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Security groups**: Flexible and programmable firewall filters that allow
    traffic control at scale, avoiding a single point of failure'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**NAT gateways**: To efficiently route traffic in and out of the cloud network,
    providing NAT services when necessary'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Load balancers**: To load balance the incoming traffic between groups of
    application servers'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Though different cloud providers use different protocols and implementations
    of one or another component, the main functionality stays the same and works similarly
    from one cloud provider to another:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00105.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: SDN
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'SDN allows applications to be abstracted and completely independent of underlying
    network implementations by using modern and popular communication and transport
    protocols, such as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**OpenFlow**: This is a protocol that allows access to the forwarding plane
    of a network switch or router over the network. OpenFlow allows network controllers
    to calculate a packet path across the network. Many products and companies are
    using OpenFlow to build their SDN networks, including OpenStack. OpenFlow is supported
    by leading network manufacturers, including Cisco Systems, Juniper Networks, Alcatel-Lucent,
    Dell, Arista, and others.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Virtual Extensible LAN (VXLAN)**: This is an encapsulation protocol that
    allows running an overlay network on existing routing networks. VXLAN is one of
    the most popular protocols that is being used to interconnect different network
    segments of SDN into a single solution.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Security groups
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Security groups are the main security method for controlling the traffic going
    in and out of **Virtual Machines** (**VMs**) that are running applications, and
    they have one main function—**stateful inspection**. This keeps track of the traffic
    going in and out, dynamically opening and closing requested ports to the applications
    inside the VMs.
  prefs: []
  type: TYPE_NORMAL
- en: Load balancers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If data center networks quite often use physical load balancers, then cloud
    networks tend to use software load balancers, providing the same functionaly at
    a high level, including DNAT, load balancing, and even SSL offloading.
  prefs: []
  type: TYPE_NORMAL
- en: So, the power of cloud networks must not be underestimated.
  prefs: []
  type: TYPE_NORMAL
- en: Network Address Translation (NAT) gateways
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A NAT gateway is a point of communication between applications inside a cloud
    provider and the internet, and has a very limited number of features configured,
    such as—NAT.This allows hosts inside the data center network to access the internet
    by changing the source IP address to a publicly available IP address.
  prefs: []
  type: TYPE_NORMAL
- en: Commonly made mistakes while designing networks for OpenShift
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'While network design is generally simple, there are many ways to make a mistake
    that will make the whole network a single point of failure. The most commonly
    made mistakes are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: On access and core network layers, people often use static **Link Aggregation**
    (**LAG**) methods instead of dynamic link control, such as **Link Aggregation
    Control Protocol** (**LACP**) 802.3ad. MTU values are not properly set throughout
    the network and CoPP filters block protocol communication between networking equipment,
    which causes failover not to work in case of a failure.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When using load balancers, quite often active/passive deployments cannot failover
    properly from one node to the other. This is usually caused by inconsistent configuration
    between load balancer cluster nodes.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Firewalls and security groups are quite often a bottleneck, and a single firewall
    cluster consisting of two and more nodes can be a single point of failure if a
    single control plane is used. We have seen stateless filters used instead of stateful
    filters, which causes bidirectional traffic to be blocked. And finally, when failover 
    preemption is used, it causes the firewall cluster to flap indefinitely.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: On border routers, having one of several full internet-routing tables takes
    a lot of time for BGP to reconverge, which often causes traffic to be blackholed.
    The only default gateway causes BGP to not take the most optimal route and the
    **Equal-Cost Multi-Path** (**ECMP**) causes asymmetric routing and packet loss.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: General network requirements and design guidelines for OpenShift deployments
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The network is a critical component for OpenShift because every piece of OpenShift
    solution is dependent on network availability, performance, scalability, and stability.
    Both control and data plane traffic uses different parts of the network to talk
    to one another. In order to make OpenShift solutions available most of the time
    and to avoid unplanned network outages, several things have to be considered:'
  prefs: []
  type: TYPE_NORMAL
- en: All the physical hosts running OpenShift require having redundant physical connectivity
    to access-level switches using MC-LAG or a similar technology
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A set of load balancers implemented in a redundant fashion with separate data
    and control planes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A set of firewalls implemented in a redundant fashion with separate data and
    control planes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A dedicated management network to be used where applicable for security reasons
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VIP with **keepalived** is implemented if no external load balancer is used
    on both infrastructure nodes and the upstream network has no single point of failure
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: AnyCast IPs if several Data Centers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Network convergence is taken care of by additional mechanisms such as **Bidirectional
    Forwarding Detection** (**BFD**), additional tuning settings such as PortFast
    in the case of the **Spanning Tree Protocol** (**STP**), and tuning protocol timers
    in routing protocols
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The MTU parameter is properly set on OpenShift nodes and aligned with the network
    to make sure that no packet fragmentation is happening
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Proper ports are opened for the communication to and from any OpenShift component
    if isolated with a firewall or any type of **Access Control List** (**ACL**) on
    a network device
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Taking in mind all of the preceding considerations will help you avoid 99% of
    all the issues that you may face while designing your OpenShift cluster.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we covered the main network aspects while designing an OpenShift
    cluster in one or across multiple data centers. We also discussed commonly made
    mistakes, solutions, and overall guidance from a networking point of view.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we are going to give a brief overview of new OpenShift
    3.9 features that we have and have not covered in this book. We are going to briefly
    discuss what to expect from the following OpenShift releases later this year (2018).
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Which network component in the standard data center deployment is optional? choose
    one:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Firewall
  prefs:
  - PREF_UL
  - PREF_OL
  type: TYPE_NORMAL
- en: Load balancer
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Core switch
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Border router
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 'What are the two commonly made mistakes on a firewall? choose two:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Failover preemption
  prefs:
  - PREF_UL
  - PREF_OL
  type: TYPE_NORMAL
- en: Stateless filters
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Stateful filters
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Having one or several full internet tables
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Physical data center and cloud networks have exactly the same components:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'True'
  prefs:
  - PREF_UL
  - PREF_OL
  type: TYPE_NORMAL
- en: 'False'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 'What command can be used to backup and restore application data in OpenShift?
    choose one:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**`oc rsync`**'
  prefs:
  - PREF_UL
  - PREF_OL
  type: TYPE_NORMAL
- en: '`oc backup`'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '`oc save`'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '`oc load `'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Which network component is responsible for letting the application out to the
    internet in cloud networks? choose one:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Load balancer
  prefs:
  - PREF_UL
  - PREF_OL
  type: TYPE_NORMAL
- en: NAT gateway
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Border router
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Edge Firewall
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Here is a list of topics with links related to this chapter that you might
    want to deep dive into:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Network Design and Architecture Center: Data Center Networks at** [https://www.juniper.net/documentation/en_US/design-and-architecture/data-center/](https://www.juniper.net/documentation/en_US/design-and-architecture/data-center/).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**AWS Single VPC Design at **[https://aws.amazon.com/answers/networking/aws-single-vpc-design/](https://aws.amazon.com/answers/networking/aws-single-vpc-design/).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
