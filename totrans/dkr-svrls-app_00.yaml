- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: The container technology is very mature today.  Docker, the software package
    that helps popularizing containers, is now being used by hundreds of thousands
    of developers as their day-to-day DevOps tool. I would say that Docker, the container
    engine, has now become a boring piece of software. For an infrastructure-level
    software package, boring means high quality and stability. I use it every day
    and I know you all use it as a part of your tool chain too. But we no longer feel
    excited when a new version of Docker is released. Just like what we feel to the
    releases of Linux kernels. With this feeling, the golden age of container has
    just recently passed, in my opinion.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 容器技术今天已经非常成熟。Docker 作为帮助普及容器的软件包，现在已经被成千上万的开发人员作为日常 DevOps 工具使用。我可以说，Docker
    容器引擎现在已经变成了一款无聊的软件。对于一个基础设施级的软件包而言，“无聊”意味着高质量和稳定性。我每天都在使用它，而我知道你们也将它作为工具链的一部分。但我们不再对
    Docker 的新版本发布感到兴奋。就像我们对 Linux 内核发布的感受一样。带着这样的感觉，我认为容器的黄金时代已经在不久前结束。
- en: The rise of Docker was in 2013\. Its Renaissance was during 2014 - 2016\. Many orchestration
    engine races between Docker Swarm and Kubernetes were at their peaks in 2016\.
    One of them, the Swarm2K project, was my once-in-a-lifetime event. Docker later
    had an announcement to also support Kubernetes in 2017\. The race ended there.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Docker 的崛起发生在 2013 年。它的“文艺复兴”时期是在 2014 到 2016 年之间。2016 年，Docker Swarm 和 Kubernetes
    之间的许多编排引擎竞争达到了巅峰。Swarm2K 项目曾是我一生中难得的经历。Docker 后来在 2017 年宣布也将支持 Kubernetes。这场竞赛也就此结束。
- en: A couple of days ago, in March 2018, just before publishing this book, its founder,
    Solomon Hykes, left Docker Inc. Docker, the company, has been slowly and strongly
    moving from the startup world towards the enterprise business. What does this
    mean to us? Enterprise means stability, but startup means adventure. Let's move
    onto the new adventure, the post container—*the serverless era*.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 几天前，即 2018 年 3 月，就在本书即将出版之际，Docker 的创始人 Solomon Hykes 离开了 Docker Inc.。Docker
    这家公司一直在缓慢而强烈地从初创公司向企业业务转型。这对我们意味着什么？企业意味着稳定，而初创公司意味着冒险。让我们迈向新的冒险——容器之后的*无服务器时代*。
- en: What we will be talking about in this book is serverless. It is the natural
    evolution next to containers and microservices, in the different ways. First,
    a Docker container becomes a deployment unit for a function, a primitive unit-of-work
    in *the* Function-as-a-Service or FaaS architecture. Second, the microservices
    architecture has been gradually evolving to the FaaS architecture. FaaS could
    actually be anywhere on-premises or in the cloud. When the whole FaaS stack is
    managed by cloud providers, it becomes completely serverless.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本书讨论的主题是无服务器。它是容器和微服务之后的自然进化，方式各异。首先，Docker 容器成为了函数的部署单元，成为*函数即服务*（FaaS）架构中的一个基本工作单元。其次，微服务架构正在逐步演变成
    FaaS 架构。FaaS 实际上可以部署在本地或云端。当整个 FaaS 堆栈由云服务提供商管理时，它就变成了完全的无服务器架构。
- en: But there will be something in between. Something is called *the hybrid serverless
    FaaS architecture*. This kind of architecture is the main idea I would like the
    readers to find out and enjoy in this book. It is the point where we could balance
    between costs, managing the servers by ourselves, and the degree of control we
    should have for our servers.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，在这之间会有一些东西。那就是*混合无服务器 FaaS 架构*。这种架构是我希望读者在本书中发现并享受的核心思想。它是我们在成本、自行管理服务器以及服务器控制程度之间取得平衡的一个点。
- en: This book covers all three major FaaS platforms for Docker in detail, *OpenFaas*,
    *OpenWhisk* and *the Fn Project*. All of these projects are in their early stages
    and actively become more and more mature. So it is a great opportunity for the
    readers and me to learn and ride this new wave together. Let's do it.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本书详细介绍了三个主要的 Docker FaaS 平台，分别是*OpenFaas*、*OpenWhisk* 和*Fn Project*。这些项目都处于早期阶段，并且正在积极成熟。因此，对于读者和我来说，这是一个很好的机会，可以一起学习并迎接这一新的浪潮。让我们一起努力。
- en: Who this book is for
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书适合的人群
- en: If you are a developer, a Docker engineer, a DevOps engineer, or any stakeholder
    interested in learning the use of Docker on serverless environments, then this
    book is for you.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是一个开发人员、Docker 工程师、DevOps 工程师，或者任何对在无服务器环境中使用 Docker 感兴趣的相关人员，那么本书适合你。
- en: If you are an undergrad or graduate student, this book is also for you to strengthen
    your knowledge in the area of *serverless and cloud computing*.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是本科生或研究生，本书同样适合你，用来加强你在*无服务器和云计算*领域的知识。
- en: What this book covers
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书内容
- en: '[Chapter 1](e9b10056-7288-4daf-b2e4-033682fa9185.xhtml), *Serverless and Docker*,
    introduces serverless and Docker. We will find the relationship between them in
    this chapter. We will also learn the common architecture crystallized from studying
    architectures of several FaaS platforms. By the end of this chapter, we will learn
    how to say hello world using all three FaaS platforms, OpenFaaS, The Fn Project,
    and OpenWhisk.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[第1章](e9b10056-7288-4daf-b2e4-033682fa9185.xhtml)，*无服务器与Docker*，介绍了无服务器和Docker。我们将在本章中找到它们之间的关系。我们还将学习通过研究多个FaaS平台架构总结出的常见架构。到本章结束时，我们将学会如何在所有三个FaaS平台——OpenFaaS、The
    Fn Project和OpenWhisk上实现“Hello World”。'
- en: '[Chapter 2](6d3ca13d-c8df-45dc-98df-f58b42faf53f.xhtml), *Docker and Swarm
    Clusters*, reviews the container technology, namespaces and cgroups. Then, we
    will follow this by introducing Docker, how to install it, how to use its basic
    commands, and understand its workflow for build, ship, and run. Continuing further,
    we will then move to review its built-in orchestration engine, Docker Swarm. We
    will learn how to set up a cluster and see how Docker Swarm works internally.
    We will then learn how to set up a Docker network, attach it to containers, and
    how to scale services in Docker Swarm.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[第2章](6d3ca13d-c8df-45dc-98df-f58b42faf53f.xhtml)，*Docker与Swarm集群*，回顾了容器技术、命名空间和cgroups。然后，我们将介绍Docker，包括如何安装它，如何使用其基本命令，并理解它的构建、分发和运行工作流。进一步地，我们将回顾Docker内置的编排引擎——Docker
    Swarm。我们将学习如何设置集群并了解Docker Swarm的内部工作原理。接着，我们将学习如何设置Docker网络、将其附加到容器，并了解如何在Docker
    Swarm中扩展服务。'
- en: '[Chapter 3](619c4413-c224-4404-b4a8-63a6b4180d19.xhtml), *Serverless Frameworks*,
    discusses serverless frameworks, including platforms such as AWS Lambda, Google
    Cloud Functions, Azure Functions, and IBM Cloud Functions. We will end this chapter with
    a FaaS platform-independent framework, the serverless framework.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[第3章](619c4413-c224-4404-b4a8-63a6b4180d19.xhtml)，*无服务器框架*，讨论了无服务器框架，包括AWS
    Lambda、Google Cloud Functions、Azure Functions和IBM Cloud Functions等平台。我们将在本章结束时介绍一个与FaaS平台无关的框架——无服务器框架。'
- en: '[Chapter 4](618ef69a-cc82-4312-8f19-0cde219905c2.xhtml), *OpenFaaS on Docker*,
    explains how to use OpenFaaS. We will explore its architecture and components. Then
    we will learn how to prepare, build, and deploy functions with its provided tools
    and templates, how to prepare its cluster on top of Swarm, how to use its user
    interface, and how OpenFaaS leverages Docker multi-stage build. And we will also
    discuss how to use Prometheus to monitor the FaaS platform.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[第4章](618ef69a-cc82-4312-8f19-0cde219905c2.xhtml)，*Docker上的OpenFaaS*，解释了如何使用OpenFaaS。我们将探索它的架构和组件。接着，我们将学习如何使用其提供的工具和模板来准备、构建和部署函数，如何在Swarm之上准备其集群，如何使用其用户界面，以及OpenFaaS如何利用Docker多阶段构建。我们还将讨论如何使用Prometheus来监控FaaS平台。'
- en: '[Chapter 5](7af578ec-9f2a-47f2-86f9-b04cb5f5bf32.xhtml), *The Fn Project*,
    explores another FaaS platform. Similar to [Chapter 4](https://cdp.packtpub.com/docker_for_serverless_applications/wp-admin/post.php?post=25&action=edit#post_51), *OpenFaaS
    on Docker*, we will start with its architecture and components, then go through
    a set of CLI commands to build, package, and deploy functions to Fn. Later in this
    chapter, we will learn how to monitor the platform using its built-in UI. Also,
    we will use a familiar tool to help analyze its logs.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[第5章](7af578ec-9f2a-47f2-86f9-b04cb5f5bf32.xhtml)，*Fn项目*，探索了另一个FaaS平台。类似于[第4章](https://cdp.packtpub.com/docker_for_serverless_applications/wp-admin/post.php?post=25&action=edit#post_51)，*Docker上的OpenFaaS*，我们将从其架构和组件开始，然后通过一组CLI命令来构建、打包和部署函数到Fn平台。本章后续部分，我们将学习如何使用其内置UI来监控该平台。此外，我们还将使用一个熟悉的工具来帮助分析其日志。'
- en: '[Chapter 6](c78cb885-6836-493a-8fd9-d98e85bf40c4.xhtml), *OpenWhisk on Docker*,
    discusses OpenWhisk, the third and final FaaS platform for this book. We will
    walk through its concept and architecture.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[第6章](c78cb885-6836-493a-8fd9-d98e85bf40c4.xhtml)，*Docker上的OpenWhisk*，讨论了OpenWhisk，这是本书中的第三个也是最后一个FaaS平台。我们将了解它的概念和架构。'
- en: '[Chapter 7](96c2d745-c8ad-4b56-b800-771682bf9392.xhtml), *Operating FaaS Clusters*,
    speaks about several techniques of preparing and operating production-grade FaaS
    clusters using Docker Swarm. We will discuss how to replace the whole layer of
    networking with another easy-to-use container networking plugin. We will also
    show how to implement the new routing mesh mechanism to avoid bugs from the current
    ingress implementation. Also, we will discuss some advanced topics such as *distributed
    tracing* and how to implement it. We will even cover the concept of cost reduction
    with spot instances and how to implement Swarm on this dynamic infrastructure.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[第 7 章](96c2d745-c8ad-4b56-b800-771682bf9392.xhtml)，*操作 FaaS 集群*，讨论了使用 Docker
    Swarm 准备和操作生产级 FaaS 集群的几种技术。我们将讨论如何用另一种易于使用的容器网络插件替代整个网络层。我们还将展示如何实现新的路由网格机制，以避免当前入口实现中的漏洞。此外，我们将讨论一些高级话题，如
    *分布式追踪* 及其实现方法。我们甚至会涵盖通过使用竞价实例来降低成本的概念，并展示如何在这个动态基础设施上实现 Swarm。'
- en: '[Chapter 8](0d30ef75-34b4-4a72-9b0a-71a8e335d494.xhtml), *Putting Them All
    Together*, explains how to implement a heterogeneous FaaS system combining all
    three FaaS platforms running seamlessly together on a robust product-grade Swarm
    cluster. We will show a mobile-based bank transfer use case, also with a legacy
    wrapper, a mobile backend WebHook, and stream data processing with FaaS. A bonus
    here is we also add a blockchain to the use case to show their interoperation.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[第 8 章](0d30ef75-34b4-4a72-9b0a-71a8e335d494.xhtml)，*将它们汇总起来*，解释了如何实现一个异构的
    FaaS 系统，结合所有三个 FaaS 平台在一个强大的产品级 Swarm 集群中无缝运行。我们将展示一个基于移动端的银行转账用例，同时包括一个遗留包装器、一个移动后端
    WebHook，以及使用 FaaS 的流数据处理。这里的附加亮点是，我们还为用例添加了区块链，展示它们的互操作性。'
- en: '[Chapter 9](3e4750be-040c-45e1-a696-735c71a4fbd4.xhtml), *The Future of Serverless,*
    concludes this book with advanced concepts and research prototype implementations
    that go beyond the current serverless and FaaS technologies.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[第 9 章](3e4750be-040c-45e1-a696-735c71a4fbd4.xhtml)，*无服务器的未来*，通过先进的概念和研究原型实现来总结本书，这些内容超越了当前的无服务器和
    FaaS 技术。'
- en: To get the most out of this book
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何充分利用本书
- en: The reader should know the basics of Linux and Docker commands. Although this
    is optional, it would be a big plus if the reader has a basic understanding of
    network protocols and has some familiarity to the cloud computing concepts.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 读者应该了解 Linux 和 Docker 命令的基础知识。虽然这不是强制性的，但如果读者对网络协议有基本了解并且对云计算概念有所熟悉，将会是一个很大的加分项。
- en: Although it is possible to use a MacBook or PC with Windows OS to run examples
    in this book, it is highly recommended for the reader to use Ubuntu Linux 16.04
    and above. The reader with Mac book or Windows could run examples via Linux on
    a virtual machine, or a cloud instance.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管可以使用 MacBook 或 Windows 操作系统的 PC 来运行本书中的示例，但强烈建议读者使用 Ubuntu Linux 16.04 及以上版本。使用
    MacBook 或 Windows 的读者可以通过虚拟机上的 Linux 或云实例来运行示例。
- en: Download the example code files
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载示例代码文件
- en: You can download the example code files for this book from your account at [www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files emailed directly to you.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从您在 [www.packtpub.com](http://www.packtpub.com) 的账户下载本书的示例代码文件。如果您是在其他地方购买的本书，您可以访问
    [www.packtpub.com/support](http://www.packtpub.com/support) 并注册，文件将直接通过电子邮件发送给您。
- en: 'You can download the code files by following these steps:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过以下步骤下载代码文件：
- en: Log in or register at [www.packtpub.com](http://www.packtpub.com/support).
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 请在 [www.packtpub.com](http://www.packtpub.com/support) 登录或注册。
- en: Select the SUPPORT tab.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 SUPPORT 选项卡。
- en: Click on Code Downloads & Errata.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 Code Downloads & Errata。
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在搜索框中输入书名，并按照屏幕上的指示操作。
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 下载完成后，请确保使用最新版本的工具解压或提取文件夹：
- en: WinRAR/7-Zip for Windows
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows 用 WinRAR/7-Zip
- en: Zipeg/iZip/UnRarX for Mac
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mac 用 Zipeg/iZip/UnRarX
- en: 7-Zip/PeaZip for Linux
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 7-Zip/PeaZip for Linux
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Docker-for-Serverless-Applications](https://github.com/PacktPublishing/Docker-for-Serverless-Applications). In
    case there's an update to the code, it will be updated on the existing GitHub
    repository.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的代码包也托管在 GitHub 上，地址是 [https://github.com/PacktPublishing/Docker-for-Serverless-Applications](https://github.com/PacktPublishing/Docker-for-Serverless-Applications)。如果代码有更新，GitHub
    上的现有代码库也会进行更新。
- en: We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的丰富书籍和视频目录中还有其他代码包，您可以访问 **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**。快来看看吧！
- en: Conventions used
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用的约定
- en: There are a number of text conventions used throughout this book.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中使用了多种文本约定。
- en: '`code in text`: Indicates code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles. Here is an example: "We will try the `echoit` function to `hello world`
    with OpenFaaS."'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '`文本中的代码`: 表示文本中的代码词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟网址、用户输入和 Twitter 用户名。示例：“我们将尝试使用`echoit`函数输出`hello
    world`，并使用 OpenFaaS。”'
- en: 'A block of code is set as follows:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块如下所示：
- en: '[PRE0]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都按如下方式书写：
- en: '[PRE1]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "The following screenshot shows the browser running OpenFaaS Portal."'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**粗体**: 表示新术语、重要词汇或屏幕上显示的词汇。例如，菜单或对话框中的词语会以这种方式显示。示例：“以下截图展示了浏览器运行 OpenFaaS
    Portal。”'
- en: Warnings or important notes appear like this.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要说明以这种方式呈现。
- en: Tips and tricks appear like this.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 提示和技巧以这种方式呈现。
- en: Get in touch
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 联系我们
- en: Feedback from our readers is always welcome.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们始终欢迎读者的反馈。
- en: '**General feedback**: Email `feedback@packtpub.com` and mention the book title
    in the subject of your message. If you have questions about any aspect of this
    book, please email us at `questions@packtpub.com`.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**一般反馈**: 发送电子邮件至 `feedback@packtpub.com`，并在邮件主题中注明书名。如果您对本书的任何部分有疑问，请通过 `questions@packtpub.com`
    联系我们。'
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**勘误表**: 尽管我们已尽力确保内容的准确性，但难免会出现错误。如果您在本书中发现错误，我们将非常感激您向我们报告。请访问 [www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata)，选择您的书籍，点击“勘误表提交”链接，并填写相关信息。'
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the Internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at `copyright@packtpub.com` with a
    link to the material.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**盗版**: 如果您在互联网上发现我们作品的非法复制品，无论形式如何，我们将非常感激您提供其位置地址或网站名称。请通过 `copyright@packtpub.com`
    联系我们，并附上相关材料的链接。'
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com/).'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果你有兴趣成为作者**: 如果你在某个主题方面有专长，且有意撰写或参与书籍的编写，请访问 [authors.packtpub.com](http://authors.packtpub.com/)。'
- en: Reviews
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 评论
- en: Please leave a review. Once you have read and used this book, why not leave
    a review on the site that you purchased it from? Potential readers can then see
    and use your unbiased opinion to make purchase decisions, we at Packt can understand
    what you think about our products, and our authors can see your feedback on their
    book. Thank you!
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 请留下评论。阅读并使用本书后，不妨在您购买书籍的网站上留下评论。潜在读者可以通过您的无偏见评价做出购买决策，我们可以了解您对我们的产品的看法，作者也能看到您对其书籍的反馈。谢谢！
- en: For more information about Packt, please visit [packtpub.com](https://www.packtpub.com/).
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 有关 Packt 的更多信息，请访问 [packtpub.com](https://www.packtpub.com/)。
