- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The container technology is very mature today.  Docker, the software package
    that helps popularizing containers, is now being used by hundreds of thousands
    of developers as their day-to-day DevOps tool. I would say that Docker, the container
    engine, has now become a boring piece of software. For an infrastructure-level
    software package, boring means high quality and stability. I use it every day
    and I know you all use it as a part of your tool chain too. But we no longer feel
    excited when a new version of Docker is released. Just like what we feel to the
    releases of Linux kernels. With this feeling, the golden age of container has
    just recently passed, in my opinion.
  prefs: []
  type: TYPE_NORMAL
- en: The rise of Docker was in 2013\. Its Renaissance was during 2014 - 2016\. Many orchestration
    engine races between Docker Swarm and Kubernetes were at their peaks in 2016\.
    One of them, the Swarm2K project, was my once-in-a-lifetime event. Docker later
    had an announcement to also support Kubernetes in 2017\. The race ended there.
  prefs: []
  type: TYPE_NORMAL
- en: A couple of days ago, in March 2018, just before publishing this book, its founder,
    Solomon Hykes, left Docker Inc. Docker, the company, has been slowly and strongly
    moving from the startup world towards the enterprise business. What does this
    mean to us? Enterprise means stability, but startup means adventure. Let's move
    onto the new adventure, the post container—*the serverless era*.
  prefs: []
  type: TYPE_NORMAL
- en: What we will be talking about in this book is serverless. It is the natural
    evolution next to containers and microservices, in the different ways. First,
    a Docker container becomes a deployment unit for a function, a primitive unit-of-work
    in *the* Function-as-a-Service or FaaS architecture. Second, the microservices
    architecture has been gradually evolving to the FaaS architecture. FaaS could
    actually be anywhere on-premises or in the cloud. When the whole FaaS stack is
    managed by cloud providers, it becomes completely serverless.
  prefs: []
  type: TYPE_NORMAL
- en: But there will be something in between. Something is called *the hybrid serverless
    FaaS architecture*. This kind of architecture is the main idea I would like the
    readers to find out and enjoy in this book. It is the point where we could balance
    between costs, managing the servers by ourselves, and the degree of control we
    should have for our servers.
  prefs: []
  type: TYPE_NORMAL
- en: This book covers all three major FaaS platforms for Docker in detail, *OpenFaas*,
    *OpenWhisk* and *the Fn Project*. All of these projects are in their early stages
    and actively become more and more mature. So it is a great opportunity for the
    readers and me to learn and ride this new wave together. Let's do it.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you are a developer, a Docker engineer, a DevOps engineer, or any stakeholder
    interested in learning the use of Docker on serverless environments, then this
    book is for you.
  prefs: []
  type: TYPE_NORMAL
- en: If you are an undergrad or graduate student, this book is also for you to strengthen
    your knowledge in the area of *serverless and cloud computing*.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](e9b10056-7288-4daf-b2e4-033682fa9185.xhtml), *Serverless and Docker*,
    introduces serverless and Docker. We will find the relationship between them in
    this chapter. We will also learn the common architecture crystallized from studying
    architectures of several FaaS platforms. By the end of this chapter, we will learn
    how to say hello world using all three FaaS platforms, OpenFaaS, The Fn Project,
    and OpenWhisk.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](6d3ca13d-c8df-45dc-98df-f58b42faf53f.xhtml), *Docker and Swarm
    Clusters*, reviews the container technology, namespaces and cgroups. Then, we
    will follow this by introducing Docker, how to install it, how to use its basic
    commands, and understand its workflow for build, ship, and run. Continuing further,
    we will then move to review its built-in orchestration engine, Docker Swarm. We
    will learn how to set up a cluster and see how Docker Swarm works internally.
    We will then learn how to set up a Docker network, attach it to containers, and
    how to scale services in Docker Swarm.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](619c4413-c224-4404-b4a8-63a6b4180d19.xhtml), *Serverless Frameworks*,
    discusses serverless frameworks, including platforms such as AWS Lambda, Google
    Cloud Functions, Azure Functions, and IBM Cloud Functions. We will end this chapter with
    a FaaS platform-independent framework, the serverless framework.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](618ef69a-cc82-4312-8f19-0cde219905c2.xhtml), *OpenFaaS on Docker*,
    explains how to use OpenFaaS. We will explore its architecture and components. Then
    we will learn how to prepare, build, and deploy functions with its provided tools
    and templates, how to prepare its cluster on top of Swarm, how to use its user
    interface, and how OpenFaaS leverages Docker multi-stage build. And we will also
    discuss how to use Prometheus to monitor the FaaS platform.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](7af578ec-9f2a-47f2-86f9-b04cb5f5bf32.xhtml), *The Fn Project*,
    explores another FaaS platform. Similar to [Chapter 4](https://cdp.packtpub.com/docker_for_serverless_applications/wp-admin/post.php?post=25&action=edit#post_51), *OpenFaaS
    on Docker*, we will start with its architecture and components, then go through
    a set of CLI commands to build, package, and deploy functions to Fn. Later in this
    chapter, we will learn how to monitor the platform using its built-in UI. Also,
    we will use a familiar tool to help analyze its logs.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](c78cb885-6836-493a-8fd9-d98e85bf40c4.xhtml), *OpenWhisk on Docker*,
    discusses OpenWhisk, the third and final FaaS platform for this book. We will
    walk through its concept and architecture.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](96c2d745-c8ad-4b56-b800-771682bf9392.xhtml), *Operating FaaS Clusters*,
    speaks about several techniques of preparing and operating production-grade FaaS
    clusters using Docker Swarm. We will discuss how to replace the whole layer of
    networking with another easy-to-use container networking plugin. We will also
    show how to implement the new routing mesh mechanism to avoid bugs from the current
    ingress implementation. Also, we will discuss some advanced topics such as *distributed
    tracing* and how to implement it. We will even cover the concept of cost reduction
    with spot instances and how to implement Swarm on this dynamic infrastructure.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](0d30ef75-34b4-4a72-9b0a-71a8e335d494.xhtml), *Putting Them All
    Together*, explains how to implement a heterogeneous FaaS system combining all
    three FaaS platforms running seamlessly together on a robust product-grade Swarm
    cluster. We will show a mobile-based bank transfer use case, also with a legacy
    wrapper, a mobile backend WebHook, and stream data processing with FaaS. A bonus
    here is we also add a blockchain to the use case to show their interoperation.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](3e4750be-040c-45e1-a696-735c71a4fbd4.xhtml), *The Future of Serverless,*
    concludes this book with advanced concepts and research prototype implementations
    that go beyond the current serverless and FaaS technologies.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The reader should know the basics of Linux and Docker commands. Although this
    is optional, it would be a big plus if the reader has a basic understanding of
    network protocols and has some familiarity to the cloud computing concepts.
  prefs: []
  type: TYPE_NORMAL
- en: Although it is possible to use a MacBook or PC with Windows OS to run examples
    in this book, it is highly recommended for the reader to use Ubuntu Linux 16.04
    and above. The reader with Mac book or Windows could run examples via Linux on
    a virtual machine, or a cloud instance.
  prefs: []
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files emailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register at [www.packtpub.com](http://www.packtpub.com/support).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the SUPPORT tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads & Errata.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR/7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg/iZip/UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip/PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Docker-for-Serverless-Applications](https://github.com/PacktPublishing/Docker-for-Serverless-Applications). In
    case there's an update to the code, it will be updated on the existing GitHub
    repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`code in text`: Indicates code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles. Here is an example: "We will try the `echoit` function to `hello world`
    with OpenFaaS."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "The following screenshot shows the browser running OpenFaaS Portal."'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '**General feedback**: Email `feedback@packtpub.com` and mention the book title
    in the subject of your message. If you have questions about any aspect of this
    book, please email us at `questions@packtpub.com`.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the Internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at `copyright@packtpub.com` with a
    link to the material.'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com/).'
  prefs: []
  type: TYPE_NORMAL
- en: Reviews
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Please leave a review. Once you have read and used this book, why not leave
    a review on the site that you purchased it from? Potential readers can then see
    and use your unbiased opinion to make purchase decisions, we at Packt can understand
    what you think about our products, and our authors can see your feedback on their
    book. Thank you!
  prefs: []
  type: TYPE_NORMAL
- en: For more information about Packt, please visit [packtpub.com](https://www.packtpub.com/).
  prefs: []
  type: TYPE_NORMAL
