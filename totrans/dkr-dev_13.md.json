["```\n$ docker build . -t dockerfordevelopers/shipitclicker:1.11.7\n$ docker push dockerfordevelopers/shipitclicker:1.11.7\n$ kubectl config use-context docker-desktop\n$ helm install --set image.repository=dockerfordevelopers/shipitclicker:1.11.7 shipit-v8 shipitclicker\n```", "```\n$ docker tag dockerfordevelopers/shipitclicker:1.11.7 143970405955.dkr.ecr.us-east-2.amazonaws.com/dockerfordevelopers/shipitclicker:1.11.7\n$ aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 143970405955.dkr.ecr.us-east-2.amazonaws.com\n$ docker push 143970405955.dkr.ecr.us-east-2.amazonaws.com/dockerfordevelopers/shipitclicker:1.11.7\n$ kubectl config use-context arn:aws:eks:us-east-2:143970405955:cluster/EKS-8PWG76O8\n$ helm install shipit-v8 -f values.yaml --set image.repository=143970405955.dkr.ecr.us-east-2.amazonaws.com/dockerfordevelopers/shipitclicker:1.11.7 ./shipitclicker\n```", "```\nkubectl logs services/shipit-v8-shipitclicker shipitclicker\n```", "```\n$ kubectl drain \\\n    ip-10-0-94-28.us-east-2.compute.internal \\\n    --ignore-daemonsets\n$ aws autoscaling terminate-instance-in-auto-scaling-group \\\n    --instance-id i-09c88021d2324e821 \\\n    --should-decrement-desired-capacity\n```", "```\n$ kubectl get deployment/shipit-v8-shipitclicker\nNAME                      READY   UP-TO-DATE   AVAILABLE   AGE\nshipit-v8-shipitclicker   2/2     2            2           57m\n$ kubectl scale deployment/shipit-v8-shipitclicker --replicas=4\ndeployment.apps/shipit-v8-shipitclicker scaled\n$ kubectl get deployment/shipit-v8-shipitclicker\nNAME                      READY   UP-TO-DATE   AVAILABLE   AGE\nshipit-v8-shipitclicker   2/4     4            1           58m\n$ kubectl get deployment/shipit-v8-shipitclicker\nNAME                      READY   UP-TO-DATE   AVAILABLE   AGE\nshipit-v8-shipitclicker   4/4     4            4           59m\n```", "```\n$ kubectl -n kube-system get deployments | grep autoscaler\ncluster-autoscaler-1592701624-aws-cluster-autoscaler   1/1     1            1\n```", "```\n$ service=service/$(kubectl get services -n kube-system \\\n   | awk '/cluster-autoscaler/{ print $1 }')\n$ kubectl logs -f -n kube-system \"$service\"\n```", "```\nkubectl scale deployment/shipit-v8-shipitclicker --replicas=50\n```", "```\nkubectl get nodes; kubectl get deployments\n```", "```\nkubectl scale deployment/shipit-v8-shipitclicker --replicas=2\n```", "```\nkubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/download/v0.3.6/components.yaml\n```", "```\n$ kubectl -n kube-system get deployment metrics-server\nNAME             READY   UP-TO-DATE   AVAILABLE   AGE\nmetrics-server   1/1     1            1           6m\n```", "```\nkubectl autoscale deployment shipit-v8-shipitclicker --cpu-percent=50 --min=2 --max=50\n```", "```\nkubectl edit hpa/shipit-v8-shipitclicker\n```", "```\nkubectl describe hpa/shipit-v8-shipitclicker\n```", "```\n$ url=https://shipit-v8.eks.example.com/faults/spin\n$ docker run --rm jordi/ab -c 50 -t 900 \"$url\"\n```", "```\n        - name: envoy-sidecar\n          image: \"{{ .Values.envoy.repository }}\"\n          imagePullPolicy: {{ .Values.envoy.pullPolicy }}\n          command: [\"/usr/local/bin/envoy\"]\n          args: [\"-c\", \"/etc/envoy-config/config.yaml\"]\n```", "```\n          ports:\n            - name: envoy-admin\n              containerPort: 9901\n              protocol: TCP\n            - name: envoy-http\n              containerPort: 4000\n              protocol: TCP\n```", "```\n          livenessProbe:\n            httpGet:\n              path: /server_info\n              port: envoy-admin\n          readinessProbe:\n            httpGet:\n              path: /ready\n              port: envoy-admin\n```", "```\n          volumeMounts:\n            - name: envoy-config-vol\n              mountPath: /etc/envoy-config/\n      volumes:\n        - name: envoy-config-vol\n          configMap:\n            name: {{ .Release.Name }}-envoy-sidecar-configmap\n            items:\n              - key: envoy-config\n                path: config.yaml\n```", "```\n        circuit_breakers:\n          thresholds:\n            - priority: DEFAULT\n              max_connections: {{ .Values.envoy.maxRequests }}\n              max_pending_requests: {{ .Values.envoy.maxRequests }}\n              max_requests: {{ .Values.envoy.maxRequests }}\n              max_retries: {{ .Values.envoy.maxRetries }}\n```", "```\nenvoy:\n  repository: envoyproxy/envoy:v1.14.2\n  pullPolicy: IfNotPresent\n  accessLog: \"/dev/null\"\n  maxRequests: 1024\n  maxRetries: 2\n```", "```\n$ helm upgrade shipit-v8 -f values.yaml --set image.repository=143970405955.dkr.ecr.us-east-2.amazonaws.com/dockerfordevelopers/shipitclicker:1.11.7 --set envoy.maxRequests=2 ./shipitclicker\nRelease \"shipit-v8\" has been upgraded. Happy Helming!\nNAME: shipit-v8\nLAST DEPLOYED: Sun Jun 28 22:34:15 2020\nNAMESPACE: default\nSTATUS: deployed\nREVISION: 17\nNOTES:\n1\\. Get the application URL by running these commands:\n  http://shipit-v8.eks.example.com/*\n$ kubectl rollout restart deployment/shipit-v8-shipitclicker\ndeployment.apps/shipit-v8-shipitclicker restarted\n```", "```\n$ url=https://shipit-v8.eks.example.com/faults/spin\n$ docker run --rm jordi/ab -c 1 -n 400 $url | grep requests:\nCompleted 100 requests\nCompleted 200 requests\nCompleted 300 requests\nCompleted 400 requests\nFinished 400 requests\nComplete requests:      400\nFailed requests:        0\n```", "```\n$ docker run --rm jordi/ab -c 50 -n 400 $url | grep requests:\nCompleted 100 requests\nCompleted 200 requests\nCompleted 300 requests\nCompleted 400 requests\nFinished 400 requests\nComplete requests:      400\nFailed requests:        72\n```", "```\nimport http from 'k6/http';\nexport default function() {\n  http.get('https://shipit-v8.eks.example.com/');\n}\n```", "```\n$ docker run --rm -i loadimpact/k6 run - < hello.js\n```", "```\n$ docker run --rm -i loadimpact/k6 run --vus 50 --duration 30s - < hello.js\n```", "```\n$ chapter11/bin/k6-convert-har.sh\n$ chapter11/bin/k6-run-har.sh\n```", "```\n$ USERS=10 DURATION=300 chapter11/bin/k6-run-har.sh\n```", "```\nimport http from \"k6/http\";\nimport { sleep } from \"k6\";\n```", "```\nconst DEBUG = __ENV.DEBUG;\nconst MOVES = __ENV.MOVES;\nconst target = __ENV.TARGET;\n```", "```\nconst ENDPOINTS = ['score', 'deploys', 'nextPurchase'];\n```", "```\nconst deploy = id => {\n  validate(\n    http.patch(\n      `${target}/api/v2/games/${id}/deploys`,\n      JSON.stringify({\n        id: id,\n        element: 'deploys',\n        value: 1,\n      }),\n      params\n    )\n  );\n```", "```\n  validate(\n    http.patch(\n      `${target}/api/v2/games/${id}/score`,\n      JSON.stringify({\n        id: id,\n        element: 'score',\n        value: 1,\n      }),\n      params\n    )\n  );\n};\n```", "```\n  validate(\n    http.patch(\n      `${target}/api/v2/games/${id}/score`,\n      JSON.stringify({\n        id: id,\n        element: 'score',\n        value: 1,\n      }),\n      params\n    )\n  );\n};\n```", "```\nconst getStaticAssets = () =>\n  [\n    target,\n    `${target}/stylesheet.css`,\n    `${target}/img/shipit-640x640-lc.jpg`,\n    `${target}/img/Richard-Cartoon-Headshot-Jaunty-180x180.png`,\n    `${target}/app.js`,\n  ]\n    .map(http.get)\n    .map(validate);\n```", "```\nconst getGameId = () => {\n  const uri = `${target}/api/v2/games/`;\n  const response = validate(http.post(uri, {}, params));\n  return JSON.parse(response.body).id;\n};\n```", "```\nconst getScores = id => {\n  return ENDPOINTS.map(element =>\n    http.get(`${target}/api/v2/games/${id}/${element}`)\n  ).map(validate);\n};\n```", "```\nconst putScores = (id, score) => {\n  return ENDPOINTS.map(element =>\n    http.put(\n      `${target}/api/v2/games/${id}/${element}`,\n      JSON.stringify({\n        id: id,\n        element: element,\n        value: score,\n      }),\n      params\n    )\n  ).map(validate);\n};\n```", "```\nexport default function() {\n  const startDelay = random_gaussian(6000, 1000) / 1000;\n  log.debug(`Loading static assets, then wait ${startDelay}s to start game`);\n  getStaticAssets();\n  sleep(startDelay);\n```", "```\n  const gameDelay = random_gaussian(1500, 250) / 1000;\n  const id = getGameId();\n  log.debug(\n    `Game ${id}: Reset game scores, then wait ${startDelay}s to start game`\n  );\n  getScores();\n  putScores(id, 0);\n  sleep(gameDelay);\n```", "```\n  log.info(`Game ${id}: Simulating ${MOVES} moves, starting in ${gameDelay}s`);\n  for (let i = 0; i < MOVES; i++) {\n    const moveDelay = random_gaussian(125, 25) / 1000;\n```", "```\n    log.debug(`Game ${id}: move #${i}, then sleep ${moveDelay}s`);\n    deploy(id);\n    sleep(moveDelay);\n  }\n  log.info(`Game ${id}: Done with ${MOVES} moves`);\n}\n```", "```\n$ MOVES=400 STAGES=900s:100 chapter11/bin/k6-run.sh https://shipit-v8.eks.example.com\n```", "```\nkubectl delete hpa/shipit-v8-shipitclicker\n```", "```\nkubectl scale deployment/shipit-v8-shipitclicker --replicas=1\n```", "```\ntime=\"2020-06-29T05:52:31Z\" level=info msg=\"WARNING: PATCH https://shipit-v8.eks.example.com/api/v2/games/t2iAHlWtnhJhbsXfJI3zB/deploys: status 503\"\n```"]