- en: Chapter 10. Introducing Ansible for Enterprises
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we will discuss the state of Ansible on different OSes. We'll
    also take a look at Ansible Galaxy and Ansible Tower.
  prefs: []
  type: TYPE_NORMAL
- en: 'We''ll explore the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Ansible on Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ansible for networking devices
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ansible Galaxy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ansible Tower
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ansible on Windows
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Ansible version 1.7 started being able to manage Windows machines with a few
    basic modules. After the acquisition of Ansible by Red Hat, a lot of effort has
    been put into this task by Microsoft and many other companies and people. By the
    time of the 2.1 release, Ansible's ability to manage Windows machines was close
    to being complete. Some modules have been extended to work seamlessly on Unix
    and Windows, while in other cases, the Windows logic was so different from Unix
    that new modules needed to be created.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: At the moment, using Windows as a control machine is not supported, though some
    users have tweaked the code and their environment to make it work.
  prefs: []
  type: TYPE_NORMAL
- en: 'The connection from the control machine to Windows machines is not made over
    SSH; instead, it''s made over **Windows Remote Management** (**WinRM**). You can
    visit Microsoft''s website for a detailed explanation and implementation: [http://msdn.microsoft.com/en-us/library/aa384426(v=vs.85).aspx](http://msdn.microsoft.com/en-us/library/aa384426(v=vs.85).aspx).'
  prefs: []
  type: TYPE_NORMAL
- en: 'On the control machine, once you''ve installed Ansible, it''s important that
    you install WinRM. You can do it via `pip` with this command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You may need to use `sudo` or the `root` account to execute this command.
  prefs: []
  type: TYPE_NORMAL
- en: 'On each of the remote Windows machines, you need to install PowerShell version
    3.0 or higher. Ansible provides a couple of helpful scripts to set it up:'
  prefs: []
  type: TYPE_NORMAL
- en: '**WinRM**: [https://github.com/ansible/ansible/blob/devel/examples/scripts/ConfigureRemotingForAnsible.ps1](https://github.com/ansible/ansible/blob/devel/examples/scripts/ConfigureRemotingForAnsible.ps1)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**PowerShell 3.0 upgrade**: [https://github.com/cchurch/ansible/blob/devel/examples/scripts/upgrade_to_ps3.ps1](https://github.com/cchurch/ansible/blob/devel/examples/scripts/upgrade_to_ps3.ps1)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You will also need to allow port `5986` via the firewall, as this is the default
    WinRM connection port, and make sure it is accessible from the command center.
  prefs: []
  type: TYPE_NORMAL
- en: 'To make sure you can access the service remotely, run a `curl` command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: If basic authentication works, you're set to start running commands. Once the
    setup is done, you're ready to start running Ansible! Let's run the equivalent
    of the Windows version of the `Hello, world!` program in Ansible by running `win_ping`.
    In order to do this, let's set up our credentials file.
  prefs: []
  type: TYPE_NORMAL
- en: 'This can be done using Ansible vault, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'As we''ve seen, Ansible vault will ask interactively to set the password:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'At this point, we can add the variables we need:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s set up our `inventory` file, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'Followed by this, let''s run `win_ping`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Ansible will ask us the vault password and then print the result of the run,
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Ansible for networking devices
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Since version 2.1, we have seen many new modules for the management of networking
    devices and softwares. Many of those modules have been contributed directly from
    the company that creates the device (or software). The big advantage of this,
    which is based on the idea of **Software Defined Networking** (**SDN**), is that
    having Ansible that manages all your networking infrastructure allows you to have
    an entire datacenter completely managed within Ansible. This means, having a single
    language for all components and all people within your IT, and this will allow
    people to understand better how the company IT works as well as working more closely
    with each other.
  prefs: []
  type: TYPE_NORMAL
- en: Ansible Galaxy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Ansible Galaxy is a free site from where you can download Ansible roles developed
    by the community and kick-start your automation within minutes. You can share
    or review community roles so that others can easily find the most trusted roles
    on Ansible Galaxy. You can start using Ansible Galaxy by simply signing up with
    social media applications such as Twitter, Google, and GitHub or by creating a
    new account on the Ansible Galaxy website at [https://galaxy.ansible.com/](https://galaxy.ansible.com/)
    and downloading the required roles using the `ansible-galaxy` command, which ships
    with Ansible version 1.4.2 and higher.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In case you want to host your own local Ansible Galaxy instance, you can do
    so by fetching the code from [https://github.com/ansible/galaxy](https://github.com/ansible/galaxy).
  prefs: []
  type: TYPE_NORMAL
- en: 'To download an Ansible role from Ansible Galaxy, use the following syntax:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'You can also specify a version as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'If you don''t specify a version, then the `ansible-galaxy` command will download
    the latest available version. You can install multiple roles in two ways; firstly,
    by passing multiple role names separated by a space, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'Secondly, you can do so by specifying role names in a file and passing that
    filename to the `-r/--role-file` option. For instance, you could create the `requirements.txt`
    file with the following content:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'You could then install roles by passing the filename to the `ansible-galaxy`
    command, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s see how you can use `ansible-galaxy` to download a role for Apache HTTPd:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'You''ll see output like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'The preceding `ansible-galaxy` command will download the Apache HTTPd role
    to the `/etc/ansible/roles` directory. You can now directly use the preceding
    role in your playbook, creating the `playbooks/galaxy.yaml` file with the following
    content:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'As you can see, we created a simple playbook with a `geerlingguy.apache` role.
    We can now test it:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'This should give us the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As you may have noticed, many steps were skipped due to the fact that this role
    is designed to work on many different Linux distributions.
  prefs: []
  type: TYPE_NORMAL
- en: Ansible Tower
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Ansible Tower is a web-based GUI developed by Red Hat. Ansible Tower provides
    you with an easy-to-use dashboard to manage your nodes and role-based authentication
    to control access to your Ansible Tower dashboard. The biggest features of Ansible
    Tower are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**LDAP/AD integration**: You can import (and give privileges to) users based
    on the result of LDAP/AD queries that Ansible Tower performs on your LDAP/AD server'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Role-based access control**: Limit the users to only run the playbooks they
    are authorized to run and/or target only a limited amount of hosts'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**REST API**: All Ansible Tower capabilities are exposed via a REST API'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Job scheduling**: Ansible Tower allows us to schedule jobs (playbook execution)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Graphical inventory management**: Ansible Tower manages the inventory in
    a more dynamic way than Ansible'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Dashboard**: Ansible Tower allows us to see the situation of all current
    and previous job executions'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Logging**: Ansible Tower logs all the results of every job execution to be
    able to go back and check if needed'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Although Red Hat has promised to make Ansible Tower open source soon, at the
    moment, it is not freely available and you need to pay depending on the number
    of nodes you want to manage.
  prefs: []
  type: TYPE_NORMAL
- en: At the time of writing, Red Hat provides a free copy of Ansible Tower for 10
    nodes. For more details, visit the Ansible Tower website at [http://www.ansible.com/tower](http://www.ansible.com/tower);
    the user guide is available at [http://docs.ansible.com/ansible-tower/](http://docs.ansible.com/ansible-tower/).
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we have seen some options that Ansible and its ecosystem provide
    us. This chapter also wants to teach you to search even less canonical things
    on the Ansible documentation, because it could be that Ansible has such capability.
    Also, as you may have noticed, in this chapter many of the covered topics have
    had major changes in 2.1 (released less than 6 months before the publication of
    the second edition of this book) and are very actively developed areas, so the
    official documentation is the right place to check the current state of such topics.
  prefs: []
  type: TYPE_NORMAL
