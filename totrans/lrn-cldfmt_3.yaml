- en: Developing AWS CloudFormation Templates
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开发 AWS CloudFormation 模板
- en: Building AWS CloudFormation needs knowledge on how to write IaC for AWS. In
    this chapter, we'll explore how to develop IaC scripts using JSON and YAML. We'll
    also review how to access AWS resources from IaC scripts.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 构建 AWS CloudFormation 需要了解如何为 AWS 编写 IaC（基础设施即代码）。在本章中，我们将探索如何使用 JSON 和 YAML
    开发 IaC 脚本。我们还将回顾如何通过 IaC 脚本访问 AWS 资源。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Reviewing the AWS CloudFormation template format
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 审查 AWS CloudFormation 模板格式
- en: Reviewing JSON and YAML for AWS CloudFormation
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 审查 AWS CloudFormation 的 JSON 和 YAML
- en: The programming model for AWS CloudFormation templates
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AWS CloudFormation 模板的编程模型
- en: Writing JSON and YAML for creating AWS CloudFormation templates
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编写 JSON 和 YAML 来创建 AWS CloudFormation 模板
- en: Getting input from the CloudFormation template
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从 CloudFormation 模板中获取输入
- en: Introduction to AWS CloudFormation Designer
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AWS CloudFormation Designer 简介
- en: Giving template description
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 给模板描述
- en: Selecting input from options
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从选项中选择输入
- en: Mapping parameters
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 映射参数
- en: Working with intrinsic functions
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用内建函数
- en: Reviewing the AWS CloudFormation template format
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 审查 AWS CloudFormation 模板格式
- en: IaC technology is designed to enable developers to build infrastructure by writing
    scripts. AWS CloudFormation uses the IaC approach to build infrastructure-based
    AWS technology stacks. Each AWS resource can be declared in a scripting form.
    Developers can make their own infrastructures by declaring AWS resources in the AWS
    CloudFormation template.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: IaC 技术旨在使开发人员通过编写脚本来构建基础架构。AWS CloudFormation 使用 IaC 方法构建基于 AWS 的基础设施技术堆栈。每个
    AWS 资源都可以以脚本形式声明。开发人员可以通过在 AWS CloudFormation 模板中声明 AWS 资源来构建自己的基础架构。
- en: 'To develop AWS CloudFormation, we should understand what the AWS CloudFormation
    template is and how to build that template. The AWS resource is defined in the
    AWS service. For instance, Amazon S3 can be defined in the AWS CloudFormation
    template in JSON format, which is shown as follows:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 要开发 AWS CloudFormation，我们需要了解 AWS CloudFormation 模板是什么，以及如何构建该模板。AWS 资源是在 AWS
    服务中定义的。例如，Amazon S3 可以在 AWS CloudFormation 模板中以 JSON 格式定义，如下所示：
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'This template can also be declared in the YAML format:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 该模板也可以以 YAML 格式声明：
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'We can see that each AWS resource can be declared as a resource type. In general,
    the AWS resource type can be defined as follows:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，每个 AWS 资源都可以声明为资源类型。通常，AWS 资源类型可以定义如下：
- en: '[PRE2]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'We should about know AWS resource types if we want to use those resources.
    A sample of the AWS resource type list can be seen in the following table:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想要使用这些资源，就需要了解 AWS 资源类型。AWS 资源类型列表的示例如下表所示：
- en: '| **AWS resource name** | **AWS resource type** |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| **AWS 资源名称** | **AWS 资源类型** |'
- en: '| AWS EC2 instance | `AWS::EC2::Instance` |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| AWS EC2 实例 | `AWS::EC2::Instance` |'
- en: '| AWS EC2 VPC | `AWS::EC2::VPC` |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| AWS EC2 VPC | `AWS::EC2::VPC` |'
- en: '| AWS IAM user | `AWS::IAM::User` |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| AWS IAM 用户 | `AWS::IAM::User` |'
- en: '| AWS IoT device thing | `AWS::IoT::Thing` |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| AWS IoT 设备事物 | `AWS::IoT::Thing` |'
- en: '| AWS Lambda function | `AWS::Lambda::Function` |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| AWS Lambda 函数 | `AWS::Lambda::Function` |'
- en: '| AWS RDS database instance | `AWS::RDS::DBInstance` |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| AWS RDS 数据库实例 | `AWS::RDS::DBInstance` |'
- en: '| AWS S3 bucket | `AWS::S3::Bucket` |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| AWS S3 桶 | `AWS::S3::Bucket` |'
- en: 'Table 3.1: A sample list of AWS resource types'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 表 3.1：AWS 资源类型示例列表
- en: Further information about various AWS resource types can be found at [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html).
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 有关各种 AWS 资源类型的更多信息，可以在[https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html)中找到。
- en: 'An AWS CloudFormation template consists of various AWS resource types, depending
    on your needs in the infrastructure. In general, the AWS CloudFormation template
    format can be described in the following diagram. The template consists of various
    attributes, such as **AWSTemplateFormatVersion**, **Description**, **Metadata**,
    and **Parameters**:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: AWS CloudFormation 模板由各种 AWS 资源类型组成，具体取决于您在基础架构中的需求。通常，AWS CloudFormation 模板格式可以通过以下图示描述。模板由各种属性组成，如**AWSTemplateFormatVersion**、**Description**、**Metadata**
    和 **Parameters**：
- en: '![](img/00048.jpeg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00048.jpeg)'
- en: 'Figure 3.1: AWS CloudFormation template format'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.1：AWS CloudFormation 模板格式
- en: 'Each AWS CloudFormation template has one or more of the following attributes:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 每个 AWS CloudFormation 模板都有以下一个或多个属性：
- en: '`AWSTemplateFormatVersion`: This is the AWS CloudFormation template version
    that is not the same as the API or WSDL version. This attribute is optional.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AWSTemplateFormatVersion`: 这是 AWS CloudFormation 模板版本，不同于 API 或 WSDL 版本。这个属性是可选的。'
- en: '`Description`: This defines a text string that describes the template. This
    attribute is optional.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`描述`: 这是定义描述模板的文本字符串。这个属性是可选的。'
- en: '`Metadata`: This defines objects that provide additional information about
    the template. This attribute is optional.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`元数据`: 这是定义提供关于模板附加信息的对象。这个属性是可选的。'
- en: '`Parameters`: This defines values to pass to your template at runtime. You
    can refer to parameters from the `Resources` and `Outputs` sections of the template.
    This attribute is optional.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`参数`: 这是定义在运行时传递给模板的值。你可以引用模板中`资源`和`输出`部分的参数。这个属性是可选的。'
- en: '`Mappings`: This is a mapping of keys and associated values that you can use
    to specify conditional parameter values. This attribute is optional.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`映射`: 这是一个键和值的映射，你可以用它来指定条件参数的值。这个属性是可选的。'
- en: '`Conditions`: This defines conditions that control whether certain resources
    are created or whether certain resource properties are assigned a value during
    stack-creation or stack-update. This attribute is optional.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`条件`: 这是定义在堆栈创建或更新过程中，是否创建某些资源或是否为某些资源属性分配值的条件。这个属性是可选的。'
- en: '`Transform`: This helps simplify template authoring by condensing the expression
    of AWS infrastructure as code and enabling the reuse of template components.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`变换`: 这有助于简化模板编写，通过将 AWS 基础设施作为代码的表达方式进行压缩，并实现模板组件的重用。'
- en: '`Resources`: This specifies the stack resources and their properties, such
    as EC2 and Amazon S3\. This attribute is required.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`资源`: 这是指定堆栈资源及其属性的部分，例如 EC2 和 Amazon S3。这个属性是必需的。'
- en: '`Output`: This describes the values that are returned whenever you view your
    stack''s properties. This attribute is optional.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`输出`: 这是描述每当查看堆栈属性时返回的值。这个属性是可选的。'
- en: Since AWS CloudFormation templates are written in JSON and YAML, we will learn
    how to develop both JSON and YAML. We'll explore these programming methods in
    the next section.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 AWS CloudFormation 模板是用 JSON 和 YAML 编写的，我们将学习如何同时开发 JSON 和 YAML。在接下来的部分，我们将探讨这些编程方法。
- en: Reviewing JSON and YAML programming
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 回顾 JSON 和 YAML 编程
- en: In this section, we will learn a bit about programming for JSON and YAML. We
    should know about JSON and YAML in order to build AWS CloudFormation templates.
    Technically, JSON and YAML are part of a scripting language. We will explore each
    topic in the next section.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们将学习一些关于 JSON 和 YAML 编程的内容。为了构建 AWS CloudFormation 模板，我们需要了解 JSON 和 YAML。从技术角度来看，JSON
    和 YAML 是脚本语言的一部分。我们将在下一部分深入探讨每个主题。
- en: JSON programming
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: JSON 编程
- en: 'JSON is a data-interchange format. This format is based on ECMA-404\. For more
    information, refer to [http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
    JSON can be defined as a key-value model. We can write the following script:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: JSON 是一种数据交换格式。该格式基于 ECMA-404。更多信息，请参考 [http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)。JSON
    可以定义为键值模型。我们可以编写如下脚本：
- en: '[PRE3]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'For instance, we can define a JSON object for the `Employee` data. We can write
    the following scripts:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们可以为 `Employee` 数据定义一个 JSON 对象。我们可以编写如下脚本：
- en: '[PRE4]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'You can see that the `Employee` object has three attributes—`id`, `name`, and
    `country`. Technically, we can declare an attribute in numeric and string types.
    We can also define a collection of the `Employee` object using `[]`. Each object
    is defined in `{}`. We can write the scripts as follows:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到 `Employee` 对象有三个属性——`id`、`name` 和 `country`。从技术角度讲，我们可以声明数字类型和字符串类型的属性。我们还可以使用
    `[]` 来定义 `Employee` 对象的集合。每个对象都在 `{}` 内定义。我们可以编写如下脚本：
- en: '[PRE5]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'JSON supports unlimited parent-child attributes. For instance, each `Employee`
    object probably has two or more addresses. We can declare them as follows:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: JSON 支持无限制的父子属性。例如，每个 `Employee` 对象可能有两个或更多的地址。我们可以如下声明：
- en: '[PRE6]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: This is the end of the JSON programming section. Next, we'll learn how to develop
    YAML.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 JSON 编程部分的结束。接下来，我们将学习如何开发 YAML。
- en: YAML programming
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: YAML 编程
- en: 'YAML is a data-serialization language designed to be directly writable and
    readable by humans. A simple YAML object can be defined as follows:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: YAML 是一种数据序列化语言，旨在让人类直接编写和读取。一个简单的 YAML 对象可以如下定义：
- en: '[PRE7]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: In the JSON format, we use `{}` and `:` for key-value data. In YAML, we only
    use `:`.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在 JSON 格式中，我们使用 `{}` 和 `:` 来表示键值对数据。在 YAML 中，我们只使用 `:`。
- en: 'In the previous section, we declared the `Employee` object in JSON. We can
    convert it to YAML with the following scripts:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一节中，我们在 JSON 中声明了 `Employee` 对象。我们可以使用以下脚本将其转换为 YAML：
- en: '[PRE8]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'If we want to define a collection of YAML objects, we can use the `-` syntax
    to represent an item of a collection. Let''s rewrite the collection of `Employee`
    from JSON into YAML. We can write the following scripts:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想要定义一个 YAML 对象集合，可以使用`-`语法表示集合中的一个项。让我们将 `Employee` 集合从 JSON 转换为 YAML。我们可以编写如下脚本：
- en: '[PRE9]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'To declare a parent-child of a YAML object, we can use `:` by passing the YAML
    object. For instance, we add an `address` object from the `Employee` object. We
    can write the following scripts to implement it:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 要声明 YAML 对象的父子关系，我们可以使用 `:` 来传递 YAML 对象。例如，我们可以从 `Employee` 对象中添加一个 `address`
    对象。我们可以编写以下脚本来实现它：
- en: '[PRE10]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: That's a simple implementation for writing a YAML object. Next, we'll build
    AWS CloudFormation templates in JSON and YAML.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 这是编写 YAML 对象的一个简单实现。接下来，我们将使用 JSON 和 YAML 构建 AWS CloudFormation 模板。
- en: The programming model for AWS CloudFormation templates
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: AWS CloudFormation 模板的编程模型
- en: 'Developing AWS CloudFormation templates means we write scripts for infrastructure-based
    AWS technology. In this model, we can apply the **Software Development Life Cycle**
    (**SDLC**). In general, we represent the development model for AWS CloudFormation
    templates in the following diagram:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 开发 AWS CloudFormation 模板意味着我们为基于基础设施的 AWS 技术编写脚本。在此模型中，我们可以应用**软件开发生命周期**（**SDLC**）。通常，我们将
    AWS CloudFormation 模板的开发模型表示为下图所示：
- en: '![](img/00049.jpeg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00049.jpeg)'
- en: 'Figure 3.2: CloudFormation template development cycle'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.2：CloudFormation 模板开发周期
- en: 'From the preceding diagram, we can perform the following tasks:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的图示中，我们可以执行以下任务：
- en: '**Analyze problems**: We identity what the problems are and decide which problems
    to fix.'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分析问题**：我们识别问题并决定修复哪些问题。'
- en: '**Build an infrastructure design**:Based on your problem and solution, we define
    an infrastructure design, including some AWS resources to implement.'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**构建基础设施设计**：根据你的问题和解决方案，我们定义一个基础设施设计，包括一些 AWS 资源来实施。'
- en: '**Develop a CloudFormation template**: After you have built the infrastructure
    design, you write the CloudFormation template. You define all AWS resources on
    your scripts. You can write the template using JSON and YAML files or with CloudFormation
    Designer.'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**开发 CloudFormation 模板**：在你构建好基础设施设计后，你就可以编写 CloudFormation 模板。你需要在脚本中定义所有
    AWS 资源。你可以使用 JSON 和 YAML 文件，或使用 CloudFormation Designer 来编写模板。'
- en: '**Deploy AWS CloudFormation**:After you complete the CloudFormation template,
    you can upload and provision those scripts.'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**部署 AWS CloudFormation**：在你完成 CloudFormation 模板后，你可以上传并配置这些脚本。'
- en: '**Testing**:You can test your infrastructure. If you find a problem in testing,
    you can modify your scripts and then perform testing again.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**测试**：你可以测试你的基础设施。如果在测试中发现问题，你可以修改脚本，然后重新进行测试。'
- en: In term of SDLC, you can use an agile methodology while developing CloudFormation
    templates. There are a lot of agile methodology models, such as scrum and **Extreme
    Programming** (**XP**). You can also use source control to manage CloudFormation
    template files. Next, we'll write scripts for CloudFormation.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 从 SDLC 的角度来看，在开发 CloudFormation 模板时你可以使用敏捷方法。有很多敏捷方法模型，如 Scrum 和**极限编程**（**XP**）。你还可以使用源代码控制来管理
    CloudFormation 模板文件。接下来，我们将为 CloudFormation 编写脚本。
- en: Writing JSON and YAML to create AWS CloudFormation templates
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编写 JSON 和 YAML 以创建 AWS CloudFormation 模板
- en: 'We have learned the CloudFormation template format that is described in *Figure
    3.1*. CloudFormation templates can be implemented in JSON and YAML. From *Figure
    3.1*, we can implement the CloudFormation template in JSON format as follows:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经学习了在*图 3.1*中描述的 CloudFormation 模板格式。CloudFormation 模板可以使用 JSON 和 YAML 实现。从*图
    3.1*中，我们可以按照如下方式用 JSON 格式实现 CloudFormation 模板：
- en: '[PRE11]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'All attributes in CloudFormation are not required. Only the `Resources` attribute
    should be defined on your CloudFormation template. You can also define the CloudFormation
    template in YAML. We can declare the CloudFormation template from *F**igure 3.1*
    in YAML as follows:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: CloudFormation 中的所有属性都不是必需的。只有`Resources`属性需要在你的 CloudFormation 模板中定义。你也可以使用
    YAML 定义 CloudFormation 模板。我们可以按照如下方式用 YAML 声明来自*图 3.1*的 CloudFormation 模板：
- en: '[PRE12]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Some attributes from CloudFormation templates will be explored in this book
    with various use cases and scenarios. In the next section, we'll build a CloudFormation
    template to get input from users.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 本书将通过各种用例和场景探讨一些来自 CloudFormation 模板的属性。在下一节中，我们将构建一个 CloudFormation 模板，以获取用户输入。
- en: Getting input from the CloudFormation template
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从 CloudFormation 模板获取输入。
- en: In [Chapter 2](part0032.html#UGI00-ff9c6455e1444393ad97060c22881bf4), *Building
    Your First AWS CloudFormation Project*, we built CloudFormation while applying
    Amazon S3 resources. Since we didn't specify the S3 bucket name, Amazon S3 will
    generate a random name for our bucket. In this section, we'll build CloudFormation,
    which gets input from users to set the Amazon S3 bucket name.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第 2 章](part0032.html#UGI00-ff9c6455e1444393ad97060c22881bf4)中，*构建你的第一个 AWS
    CloudFormation 项目*，我们在应用 Amazon S3 资源的同时构建了 CloudFormation。由于我们没有指定 S3 存储桶名称，Amazon
    S3 会为我们的存储桶生成一个随机名称。在这一节中，我们将构建 CloudFormation，并通过用户输入来设置 Amazon S3 存储桶名称。
- en: 'We can use the `Parameters` attribute from the CloudFormation template. The
    value of the `Parameters` attribute will be passed to our Amazon AWS resources.
    To get `Parameters` from resources, you can use `Ref` by passing the parameter
    name. For instance, I have a parameter `YourBucketName`. This parameter passes
    to my resource `MySimpleBucket`, on the `BucketName` attribute, shown as follows:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用 CloudFormation 模板中的 `Parameters` 属性。`Parameters` 属性的值将传递给我们的 Amazon AWS
    资源。要从资源中获取 `Parameters`，你可以使用 `Ref` 并传递参数名称。例如，我有一个参数 `YourBucketName`。该参数传递给我的资源
    `MySimpleBucket`，用于 `BucketName` 属性，如下所示：
- en: '[PRE13]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'For demonstration purposes, we will create Amazon S3 with a custom bucket name
    that is filled in by the user. You can perform the following steps to implement
    the demo:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 为了演示，我们将创建一个自定义的 Amazon S3 存储桶名称，由用户填写。你可以执行以下步骤来实现该演示：
- en: Prepare the CloudFormation template on your local computer.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在本地计算机上准备 CloudFormation 模板。
- en: Create a JSON or YAML file to build the CloudFormation template.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个 JSON 或 YAML 文件来构建 CloudFormation 模板。
- en: Give a template file for JSON format as `simple-s3.json` and the `simple-s3.yaml`
    file in YAML format. You can write the following scripts.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提供一个 JSON 格式的模板文件 `simple-s3.json` 和一个 YAML 格式的 `simple-s3.yaml` 文件。你可以编写以下脚本。
- en: 'The script for the `simple-s3.json` file is as follows:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '`simple-s3.json` 文件的脚本如下：'
- en: '[PRE14]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The script for the `simple-s3.yaml` file is as follows:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '`simple-s3.yaml` 文件的脚本如下：'
- en: '[PRE15]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Once done, save these scripts into a file.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，将这些脚本保存到一个文件中。
- en: Upload the template file to AWS CloudFormation.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将模板文件上传到 AWS CloudFormation。
- en: Navigate to [https://console.aws.amazon.com/cloudformation](https://console.aws.amazon.com/cloudformation) and
    click on the Create New Stack button. You should see a screen, which is shown
    in the following screenshot.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到 [https://console.aws.amazon.com/cloudformation](https://console.aws.amazon.com/cloudformation)
    并点击“创建新堆栈”按钮。你应该看到一个屏幕，如下图所示。
- en: Select the Upload a template to Amazon S3 option.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择“上传模板到 Amazon S3”选项。
- en: 'Click on the Choose File button to upload the CloudFormation template file
    and then click on the Next button:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“选择文件”按钮上传 CloudFormation 模板文件，然后点击“下一步”按钮：
- en: '![](img/00050.jpeg)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00050.jpeg)'
- en: 'Figure 3.3: Selecting the CloudFormation template'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.3：选择 CloudFormation 模板。
- en: You should see a screen, which is shown in *Figure 3.4*. You should use our
    defined parameter called `YourBucketName`. This is our S3 bucket name.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你应该看到一个屏幕，如*图 3.4*所示。你应该使用我们定义的参数 `YourBucketName`。这是我们的 S3 存储桶名称。
- en: 'Fill in the Stack name and YourBucketName fields for the bucket name:'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写堆栈名称和 `YourBucketName` 字段来设置存储桶名称：
- en: '![](img/00051.jpeg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00051.jpeg)'
- en: 'Figure 3.4: Displaying parameters for CloudFormation templates'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.4：显示 CloudFormation 模板的参数。
- en: For instance, I filled in my stack name as `my-simple-stack` and my bucket name
    as `my-simple-s3`. You can see my input in the following screenshot.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 例如，我将堆栈名称填写为 `my-simple-stack`，将存储桶名称填写为 `my-simple-s3`。你可以在以下截图中看到我的输入。
- en: 'Once done, you can click on the Next button, as shown in the following screenshot:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，你可以点击下一步按钮，如下图所示：
- en: '![](img/00052.jpeg)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00052.jpeg)'
- en: 'Figure 3.5: Filling in the CloudFormation parameters'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.5：填写 CloudFormation 参数。
- en: 'After you have clicked the Next button, you should be asked to fill in the
    options. In this case, we don''t fill in any items. Just click on the Next button:'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你点击下一步按钮后，应该会要求你填写选项。在这种情况下，我们不填任何项目，只需点击下一步按钮：
- en: '![](img/00053.jpeg)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00053.jpeg)'
- en: 'Figure 3.6: Setting the CloudFormation options'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.6：设置 CloudFormation 选项。
- en: You should have confirmation, as shown in the following screenshot, before provisioning
    your CloudFormation template.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在配置您的 CloudFormation 模板之前，您应该看到如下截图的确认信息。
- en: 'If you are done, you can click on the Create button to deploy CloudFormation:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果完成，您可以点击“创建”按钮来部署 CloudFormation：
- en: '![](img/00054.jpeg)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00054.jpeg)'
- en: 'Figure 3.7: Confirmation for CloudFormation'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.7：CloudFormation 确认
- en: AWS CloudFormation will create all the resources that are defined in the template.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: AWS CloudFormation 将创建模板中定义的所有资源。
- en: 'You should see the provision status on the dashboard, which is shown in the
    following screenshot:'
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您应该能够在仪表盘上看到资源配置状态，如下图所示：
- en: '![](img/00055.jpeg)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00055.jpeg)'
- en: 'Figure 3.8: Deploying CloudFormation'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.8：部署 CloudFormation
- en: You can verify the Amazon S3 console to ensure your resource has been created
    by CloudFormation.
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以验证 Amazon S3 控制台，以确保您的资源已由 CloudFormation 创建。
- en: 'Check out the following screenshot, my Amazon S3 with my bucket name, `my-simple-s3`.
    This bucket name is filled in from our input from *Figure 3.5*:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 请查看以下截图，这是我的 Amazon S3 存储桶，桶名为 `my-simple-s3`。这个桶名是从 *图 3.5* 中的输入填充的：
- en: '![](img/00056.jpeg)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00056.jpeg)'
- en: 'Figure 3.9: Amazon S3 is created from the CloudFormation template'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.9：Amazon S3 由 CloudFormation 模板创建
- en: 'If you prefer to run the CloudFormation template using the AWS CLI, you can
    do that easily. For instance, the template file is located on `home/user/templates/simple-s3.json`.
    We also set the stack name as `my-simple-stack` and pass parameters for `YourBucketName`
    with `my-simple-s3`. You can type the following command:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您更喜欢使用 AWS CLI 运行 CloudFormation 模板，您可以轻松做到。例如，模板文件位于 `home/user/templates/simple-s3.json`。我们还设置了堆栈名称为
    `my-simple-stack`，并传递了 `YourBucketName` 参数，其值为 `my-simple-s3`。您可以输入以下命令：
- en: '[PRE16]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The AWS CLI will deploy your CloudFormation based on its template file.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: AWS CLI 将根据其模板文件部署您的 CloudFormation。
- en: This is the end of our demo. We have created a resource, Amazon S3, and passed
    a parameter to define a bucket name. You can practice more with various parameters
    from the Amazon AWS resources.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们的演示的结束部分。我们已经创建了一个资源，Amazon S3，并传递了一个参数来定义存储桶名称。您可以通过不同的参数在 Amazon AWS 资源中进行更多实践。
- en: Next, we will build CloudFormation Designer.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将构建 CloudFormation 设计器。
- en: Introducing AWS CloudFormation Designer
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍 AWS CloudFormation 设计器
- en: We have learned how to create a CloudFormation template manually by writing
    scripts, in JSON or YAML, with a text editor. In this section, we'll build a CloudFormation
    template graphically using CloudFormation Designer. You can click and drag AWS
    resources into the template. This tool will generate JSON or YAML files. Then,
    you can upload the template to AWS CloudFormation.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经学习了如何通过编写脚本手动创建 CloudFormation 模板，使用 JSON 或 YAML 格式，并通过文本编辑器进行编辑。在本节中，我们将使用
    CloudFormation Designer 以图形化方式构建 CloudFormation 模板。您可以点击并拖动 AWS 资源到模板中。这个工具会生成
    JSON 或 YAML 文件。然后，您可以将模板上传到 AWS CloudFormation。
- en: 'For a demo, we''ll build a CloudFormation template using CloudFormation Designer.
    We''ll use Amazon S3 to show how CloudFormation Designer works. You can perform
    the following steps for the demo:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个演示中，我们将使用 CloudFormation 设计器构建一个 CloudFormation 模板。我们将使用 Amazon S3 来展示 CloudFormation
    设计器的工作方式。您可以按照以下步骤进行演示：
- en: Open your browser and navigate to the AWS CloudFormation console at [https://console.aws.amazon.com/cloudformation](https://console.aws.amazon.com/cloudformation). You
    should see the AWS CloudFormation console dashboard.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开您的浏览器并导航到 AWS CloudFormation 控制台：[https://console.aws.amazon.com/cloudformation](https://console.aws.amazon.com/cloudformation)。您应该能看到
    AWS CloudFormation 控制台仪表盘。
- en: 'To work with CloudFormation Designer, click on the Design template button at
    the top of  the dashboard. You should have the following CloudFormation Designer
    form:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要使用 CloudFormation 设计器，请点击仪表盘顶部的“设计模板”按钮。您应该看到以下 CloudFormation 设计器表单：
- en: '![](img/00057.jpeg)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00057.jpeg)'
- en: 'Figure 3.10: A form for CloudFormation designer'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.10：CloudFormation 设计器的表单
- en: 'You should see a list of AWS resource types on the left (see *Figure 3.10*). Find
    the S3 bucket on the list and drag it onto the right panel, as shown in the following
    screenshot:'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您应该能在左侧看到 AWS 资源类型列表（参见 *图 3.10*）。在列表中找到 S3 存储桶并将其拖到右侧面板，如下图所示：
- en: '![](img/00058.jpeg)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00058.jpeg)'
- en: 'Figure 3.11: Adding Amazon S3 into designer'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.11：将 Amazon S3 添加到设计器中
- en: After dropping the AWS resource type into the right panel, there will be skeleton
    scripts on bottom.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 AWS 资源类型拖到右侧面板后，底部将显示框架脚本。
- en: Clicking on the Properties tab, you should see JSON or YAML scripts which are
    generated from the CloudFormation Designer.
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“属性”选项卡，您应该能看到从 CloudFormation 设计器生成的 JSON 或 YAML 脚本。
- en: Upload the template to Amazon S3 by clicking the cloud with the up-arrow icon.
    You should get a dialog box, which is shown in *Figure 3.12*.
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击带有向上箭头图标的云来将模板上传到Amazon S3。您应该会得到一个对话框，如*图 3.12*所示。
- en: 'Click the Amazon S3 bucket tab, fill in the template name, such as `mysimples3.template`,
    and click on the Save button:'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击Amazon S3存储桶选项卡，填写模板名称，如`mysimples3.template`，然后点击“保存”按钮：
- en: '![](img/00059.jpeg)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00059.jpeg)'
- en: 'Figure 3.12: Saving the template to the Amazon S3 bucket'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.12：将模板保存到Amazon S3存储桶
- en: 'You should get a dashboard for creating a stack. Since we have uploaded the
    template to Amazon S3, the dashboard has selected the URL on Amazon S3, as shown
    in the following screenshot. Click on the Next button:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您应该获得一个用于创建堆栈的仪表板。由于我们已将模板上传到Amazon S3，仪表板已选择了Amazon S3上的URL，如下屏幕截图所示。点击“下一步”按钮：
- en: '![](img/00060.jpeg)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00060.jpeg)'
- en: 'Figure 3.13: Uploading a designer to create a stack'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.13：上传设计者以创建一个堆栈
- en: 'Follow the instructions until you review configurations, as shown in the following
    screenshot:'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照说明进行操作，直到您审查配置，如下面的屏幕截图所示：
- en: '![](img/00061.jpeg)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00061.jpeg)'
- en: 'Figure 3.14: Confirmation for creating CloudFormation'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.14：确认创建CloudFormation
- en: 'AWS CloudFormation generates Amazon S3 based on your template. You can verify
    it by checking it on the Amazon S3 console:'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: AWS CloudFormation基于您的模板生成Amazon S3。您可以通过在Amazon S3控制台上检查来验证它：
- en: '![](img/00062.jpeg)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00062.jpeg)'
- en: 'Figure 3.15: Amazon S3 is created from CloudFormation designer'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.15：Amazon S3由CloudFormation设计者创建
- en: We have finished creating the CloudFormation template and deploying it to AWS
    CloudFormation. You can now perform other experiments with various resource types.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经完成了创建CloudFormation模板并将其部署到AWS CloudFormation。现在您可以使用各种资源类型进行其他实验。
- en: Next, we'll work with template descriptions.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将处理模板描述。
- en: Giving a template description
  id: totrans-160
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 给出模板描述
- en: 'The CloudFormation template provides the `Description` attribute to display
    information about your template. You must set a description as a literal string
    that is between 0 and 1,024 bytes in length. You can see our sample implementation
    for the `Description` attribute. A sample program for JSON is as follows:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: CloudFormation模板提供了`Description`属性，用于显示有关您的模板的信息。您必须设置一个长度为0到1,024字节的文字字符串作为描述。您可以看到我们对`Description`属性的示例实现。JSON的示例程序如下所示：
- en: '[PRE17]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'For YAML, you can implement it with the following scripts:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 对于YAML，您可以使用以下脚本实现它：
- en: '[PRE18]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: This attribute is optional. When you apply words on the `Description` attribute
    on the template, you can see it when you review the template. See *Figure 3.7*
    for more information.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 这个属性是可选的。当你在模板的`Description`属性上应用词语时，你可以在审查模板时看到它。更多信息请参见*图 3.7*。
- en: Next, we'll learn how to select a value from various options in CloudFormation.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将学习如何在CloudFormation中从各种选项中选择值。
- en: Selecting the input from options
  id: totrans-167
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从选项中选择输入
- en: Sometimes, when you build an infrastructure in CloudFormation, you need input
    from users. In the previous section, we learned how to get input from users by
    filling in the Amazon S3 bucket name. Now, we want to learn how to select input
    from various options.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，在CloudFormation中构建基础架构时，您需要从用户那里获取输入。在前一节中，我们学习了如何通过填写Amazon S3存储桶名称从用户那里获取输入。现在，我们想学习如何从各种选项中选择输入。
- en: 'The scenario can be illustrated to get an EC2 instance type size. Users can
    select the instance types that we defined on the `Parameters` section. You can
    see the following scripts for implementation in JSON:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 可以说明场景以获取EC2实例类型大小。用户可以选择我们在`Parameters`部分定义的实例类型。您可以在JSON中的实现脚本中看到以下脚本：
- en: '[PRE19]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'For YAML, you can use these scripts:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 对于YAML，你可以使用以下脚本：
- en: '[PRE20]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'You can see that we defined four instance types, which are defined in the `AllowedValues`
    attribute. Users can select one of the instance types. The following is a list
    of options:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到我们定义了四种实例类型，这些类型在`AllowedValues`属性中有定义。用户可以选择其中一种实例类型。以下是选项列表：
- en: '`t1.micro`'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`t1.micro`'
- en: '`t2.nano`'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`t2.nano`'
- en: '`t2.micro`'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`t2.micro`'
- en: '`t2.small`'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`t2.small`'
- en: There are a lot of EC2 instance types. In this demo, I set only four types.
    You can find a list of types supported for EC2 instance here at  [https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html).
    You can put all instance types if you need them.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: EC2有许多实例类型。在此演示中，我只设置了四种类型。您可以在[https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html)找到支持EC2实例的类型列表。如果需要，您可以列出所有实例类型。
- en: We can also set a default value for our options. We can use the `Default` attribute
    and set its value as the default value. For instance, I set `t1.micro` as the
    default value.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以为我们的选项设置默认值。我们可以使用`Default`属性并将其值设置为默认值。例如，我将`t1.micro`设置为默认值。
- en: 'Now, we can set this selection from the user on the `InstanceType` attribute
    from `EC2Instance`. The following is a sample program in JSON:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以在`EC2Instance`的`InstanceType`属性中设置用户的选择。以下是JSON格式的示例程序：
- en: '[PRE21]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'In the YAML format, do the following:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 在YAML格式中，执行以下操作：
- en: '[PRE22]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Now, if you deploy this template file (`simple-ec2.json` or `simple-ec2.yaml`)
    to CloudFormation, you should see a selection option on the `Parameters` section,
    as shown in the following screenshot:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果您将此模板文件（`simple-ec2.json`或`simple-ec2.yaml`）部署到CloudFormation，您应该会看到`Parameters`部分的选择项，如下图所示：
- en: '![](img/00063.jpeg)'
  id: totrans-185
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00063.jpeg)'
- en: 'Figure 3.16: Selecting instance type for EC2'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.16：为EC2选择实例类型
- en: This is a simple sample to get input from some options. You can practice more
    by exploring some AWS resources.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个简单的示例，用于获取一些选项的输入。您可以通过探索一些AWS资源来进行更多练习。
- en: Next, we'll learn how to use the `Mappings` attribute on CloudFormation.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将学习如何在CloudFormation中使用`Mappings`属性。
- en: Mapping parameters
  id: totrans-189
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 映射参数
- en: 'Some AWS resources need specific attribute types that probably do not become
    accommodated from a user''s input. In this case, we can utilize the `Mappings`
    attribute on CloudFormation. For instance, we can map the EC2 instance type based
    on region. We can declare this on the `Mapping` attribute as follows:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 一些AWS资源需要特定的属性类型，这些属性类型可能无法通过用户输入获得。在这种情况下，我们可以在CloudFormation中利用`Mappings`属性。例如，我们可以根据区域映射EC2实例类型。我们可以在`Mapping`属性中声明如下：
- en: '[PRE23]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Here is the preceding code in YAML format:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 这是前面的代码的YAML格式：
- en: '[PRE24]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: As you can see, `RegionMap` will map various values based on region input, such
    as `us-east-1`, `us-west-1`, and `eu-west-1`. If we choose `eu-west-1`, we will
    obtain `ami-37c2f643` for the `32` architecture.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，`RegionMap`将根据区域输入映射各种值，例如`us-east-1`、`us-west-1`和`eu-west-1`。如果我们选择`eu-west-1`，则会获得`ami-37c2f643`用于`32`架构。
- en: 'In a real program, we usually use the `Mappings` attribute with the `Fn::FindInMap` intrinsic
    function that''s available at [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-findinmap.html](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-findinmap.html).
    This function returns the value corresponding to keys in a two-level map that
    is declared in the `Mappings` section. `Fn::FindInMap` can be defined as follows:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 在实际程序中，我们通常使用`Mappings`属性与`Fn::FindInMap`内建函数，该函数可在[https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-findinmap.html](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-findinmap.html)找到。此函数返回在`Mappings`部分声明的两级映射中与键对应的值。`Fn::FindInMap`可以按如下方式定义：
- en: 'Here it is in JSON:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是JSON格式：
- en: '[PRE25]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'And here it is in YAML:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是YAML格式的代码：
- en: '[PRE26]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'For instance, we want to set the `ImageId` attribute from `EC2Instance`. We
    can look up `AWSRegionArch2AMI` and `AWSInstanceType2Arch` from the `Mappings`
    attribute. You can see a sample implementation of `Fn::FindInMap` in the following
    JSON scripts:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们想要从`EC2Instance`中设置`ImageId`属性。我们可以从`Mappings`属性中查找`AWSRegionArch2AMI`和`AWSInstanceType2Arch`。您可以在以下JSON脚本中看到`Fn::FindInMap`的示例实现：
- en: '[PRE27]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The following script is for YAML:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 以下脚本适用于YAML：
- en: '[PRE28]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Keep practicing with the `Mappings` attribute in CloudFormation. Next, we'll
    learn how to use intrinsic functions on the CloudFormation template.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 继续使用CloudFormation中的`Mappings`属性进行练习。接下来，我们将学习如何在CloudFormation模板中使用内建函数。
- en: Working with intrinsic functions
  id: totrans-205
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用内建函数
- en: Intrinsic functions enable us to put logic functions inside CloudFormation templates.
    Technically, we have used intrinsic functions, for example `Ref` and `Fn::FindInMap`,
    in previous CloudFormation templates.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 内建函数使我们能够在CloudFormation模板中插入逻辑函数。从技术上讲，我们在之前的CloudFormation模板中已经使用了内建函数，例如`Ref`和`Fn::FindInMap`。
- en: 'In general, Amazon AWS provides some intrinsic functions that we can apply
    to CloudFormation templates. The following is a list of intrinsic functions:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，Amazon AWS提供一些内建函数，我们可以在CloudFormation模板中应用。以下是内建函数的列表：
- en: '`Fn::Base64 `'
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Fn::Base64`'
- en: '`Fn::Cidr`'
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Fn::Cidr`'
- en: '`Condition Functions`'
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Condition Functions`'
- en: '`Fn::FindInMap`'
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Fn::FindInMap`'
- en: '`` `Fn::GetAtt` ``'
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`` `Fn::GetAtt` ``'
- en: '`Fn::GetAZs`'
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Fn::GetAZs`'
- en: '`Fn::ImportValue`'
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Fn::ImportValue`'
- en: '`Fn::Join`'
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Fn::Join`'
- en: '`Fn::Select`'
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Fn::Select`'
- en: '`Fn::Split`'
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Fn::Split`'
- en: '`Fn::Sub`'
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Fn::Sub`'
- en: '`Ref`'
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Ref`'
- en: 'The various intrinsic functions are explained as follows:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 各种内建函数的解释如下：
- en: The `Fn::Base64` intrinsic function returns the Base64 representation of the
    input string. `Fn::Base64` is defined as follows.
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Fn::Base64` 内置函数返回输入字符串的Base64表示。`Fn::Base64` 可以这样定义。'
- en: 'Here it is in JSON:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是JSON格式：
- en: '[PRE29]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'And here it is in YAML:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是YAML格式：
- en: '[PRE30]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: The `Fn::Cidr` intrinsic function returns the specified CIDR address block.
    You can declare this function as follows.
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Fn::Cidr` 内置函数返回指定的CIDR地址块。你可以按如下方式声明此函数。'
- en: 'Here it is in JSON:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是JSON格式：
- en: '[PRE31]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'And here it is in YAML:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是YAML格式：
- en: '[PRE32]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Conditional functions apply logical conditional on a CloudFormation template.
    We can use the following conditional functions:'
  id: totrans-231
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 条件函数在CloudFormation模板中应用逻辑条件。我们可以使用以下条件函数：
- en: '`Fn::And`'
  id: totrans-232
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Fn::And`'
- en: '`Fn::Equals`'
  id: totrans-233
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Fn::Equals`'
- en: '`Fn::If`'
  id: totrans-234
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Fn::If`'
- en: '`Fn::Not`'
  id: totrans-235
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Fn::Not`'
- en: '`` `Fn::Or` ``'
  id: totrans-236
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`` `Fn::Or` ``'
- en: 'For example, we want to decide the volume size of EC2\. We check `CreateLargeSize`
    if this is true, and we set the volume size as `100`. Otherwise, we set the volume
    size as `10`. The following is a sample program for JSON:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们想要决定EC2的磁盘大小。如果 `CreateLargeSize` 为真，我们设置磁盘大小为`100`，否则我们设置为 `10`。以下是一个JSON的示例程序：
- en: '[PRE33]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Here it is in YAML:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是YAML格式：
- en: '[PRE34]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '`Fn::FindInMap` returns the value corresponding to keys in a two-level map
    that is declared in the `Mappings` section. We have also learned how to use this
    function.'
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Fn::FindInMap` 返回在 `Mappings` 部分声明的两级映射中与键对应的值。我们也学会了如何使用这个函数。'
- en: 'The `Fn::GetAtt` intrinsic function returns the value of an attribute from
    a resource in the template. We define `Fn::GetAtt` in JSON as follows:'
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Fn::GetAtt` 内置函数返回模板中某个资源的属性值。我们可以通过以下JSON方式定义 `Fn::GetAtt`：'
- en: '[PRE35]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Here it is in the YAML format:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是YAML格式：
- en: '[PRE36]'
  id: totrans-245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '`Fn::GetAZs` returns an array that lists the **Availability Zones** (**AZs**)
    for a specified region. This function is useful when you are working with multiple
    regions.'
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Fn::GetAZs` 返回一个数组，列出指定区域的 **可用区** (**AZs**)。当你在多个区域工作时，这个函数非常有用。'
- en: The `Fn::Join` intrinsic function appends a set of values into a single value,
    separated by the specified delimiter.
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Fn::Join` 内置函数将一组值连接成一个值，值之间由指定的分隔符分隔。'
- en: The `Fn::Select` function returns a single object from a list of objects by
    index. The  `Fn::Select` function is used to split a string into a list of string
    values.
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Fn::Select` 函数通过索引从对象列表中返回单个对象。`Fn::Select` 函数用于将一个字符串分割成多个字符串值。'
- en: '`Fn::Sub` substitutes variables in an input string with values that you specify.'
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Fn::Sub` 用指定的值替换输入字符串中的变量。'
- en: For more information about intrinsic functions, check out [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference.html](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference.html).
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多内置函数的信息，请查看 [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference.html](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference.html)。
- en: Working with Metadata on the CloudFormation template
  id: totrans-251
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在CloudFormation模板中使用元数据
- en: 'The CloudFormation template offers an optional attribute, `Metadata`, that
    provides details about the template. For example, you can include template implementation
    details about specific resources, such as the `AWS::ElasticLoadBalancing::LoadBalancer`
    resource. You can write the scripts as follows:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: CloudFormation模板提供了一个可选的属性 `Metadata`，用于提供关于模板的详细信息。例如，你可以在其中包含特定资源的模板实现细节，如
    `AWS::ElasticLoadBalancing::LoadBalancer` 资源。你可以按如下方式编写脚本：
- en: '[PRE37]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: You cannot change the `Metadata` attribute once you update the CloudFormation
    template.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 更新CloudFormation模板后，你无法更改 `Metadata` 属性。
- en: CloudFormation resources
  id: totrans-255
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CloudFormation资源
- en: 'The `Resources` attribute is one of the required attributes in the CloudFormation
    template. You can declare one or more AWS resources in your template. For instance,
    you can use the Amazon EC2 instance and an Amazon S3 bucket in one template. In
    general, the `Resources` attribute in CloudFormation can be defined as follows:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: '`Resources` 属性是CloudFormation模板中的必需属性之一。你可以在模板中声明一个或多个AWS资源。例如，你可以在一个模板中使用Amazon
    EC2实例和Amazon S3桶。一般来说，CloudFormation中的 `Resources` 属性可以这样定义：'
- en: '[PRE38]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Here it is in YAML:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是YAML格式：
- en: '[PRE39]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '`Logical ID` is a unique ID for AWS resources. You can declare it in alphanumeric
    form (A-Z a-z 0-9). The `Type` attribute is defined for AWS resource types. You
    can check a list of resource types that you can use in the template. Check them
    out at [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html).'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: '`Logical ID`是AWS资源的唯一ID。您可以以字母数字形式（A-Z a-z 0-9）声明它。`Type`属性定义了AWS资源类型。您可以查看可以在模板中使用的资源类型列表。请访问[https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-template-resource-type-ref.html)。'
- en: Each resource type has properties. You probably want to set the resource properties
    on the `Properties` attribute. You should match between resource type and resource
    type properties.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 每种资源类型都有其属性。您可能想要在`Properties`属性上设置资源属性。您应该确保资源类型和资源属性之间相匹配。
- en: CloudFormation output
  id: totrans-262
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CloudFormation输出
- en: If we want to get responses from AWS resources after they're deployed, we can
    import those responses into your CloudFormation. We can use the `Outputs` attribute.
    It will return in response (to describe stack calls), or view on the AWS CloudFormation
    console.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们希望在AWS资源部署后获取响应，我们可以将这些响应导入到CloudFormation中。我们可以使用`Outputs`属性，它将作为响应返回（用于描述堆栈调用），或者在AWS
    CloudFormation控制台中查看。
- en: The `Outputs` section consists of the key name `Outputs`, followed by a space
    and a single colon. You can declare a maximum of 60 output in a template.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: '`Outputs`部分由关键字`Outputs`、一个空格和一个冒号组成。您可以在模板中声明最多60个输出。'
- en: 'We can declare the `Outputs` attribute in JSON as follows:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在JSON中声明`Outputs`属性，如下所示：
- en: '[PRE40]'
  id: totrans-266
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Here it is in the YAML format:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是YAML格式：
- en: '[PRE41]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'For a demo, we want to retrieve the bucket name when we create an Amazon S3
    bucket. We pass our bucket resource into the `Outputs` section. We can implement
    it with the following scripts in JSON:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 在演示中，我们希望在创建Amazon S3存储桶时获取存储桶名称。我们将存储桶资源传递到`Outputs`部分。我们可以通过以下JSON脚本实现这一点：
- en: '[PRE42]'
  id: totrans-270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Here it is in YAML:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是YAML格式：
- en: '[PRE43]'
  id: totrans-272
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Save this file as `simple-s3-outputs.json` or `simple-s3-outputs.yaml`.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 将此文件保存为`simple-s3-outputs.json`或`simple-s3-outputs.yaml`。
- en: 'Then, you can upload this template to CloudFormation. If done, you should see
    the Amazon S3 bucket name on the Outputs tab in your stack:'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，您可以将此模板上传到CloudFormation。如果上传成功，您应该在堆栈的“输出”标签页中看到Amazon S3存储桶的名称：
- en: '![](img/00064.jpeg)'
  id: totrans-275
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00064.jpeg)'
- en: 'Figure 3.17: Output messages from CloudFormation'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.17：来自CloudFormation的输出消息
- en: You have learned about CloudFormation output. Keep practicing by applying some
    output from various AWS resources.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 您已经了解了CloudFormation输出。通过从各种AWS资源中应用一些输出，继续练习。
- en: Next, we'll try to build EC2 using CloudFormation.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将尝试使用CloudFormation构建EC2实例。
- en: Demo – building Amazon EC2 using AWS CloudFormation
  id: totrans-279
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 演示 - 使用AWS CloudFormation构建Amazon EC2
- en: In this section, we will build Amazon EC2 using CloudFormation. We explored
    some of the CloudFormation attributes for EC2 in previous sections. Just so you
    know, Amazon EC2 may not be free, so you may be charged.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将使用CloudFormation构建Amazon EC2。在前面的章节中，我们已经探讨了关于EC2的一些CloudFormation属性。需要提醒的是，Amazon
    EC2可能不是免费的，因此您可能会被收费。
- en: Next, we'll prepare before we build EC2 on CloudFormation.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将在构建EC2实例之前进行准备。
- en: Preparing
  id: totrans-282
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备中
- en: To work with the EC2 instance, we should have a key-pair to access EC2\. If
    you don't have a key-pair yet, you can create it through the EC2 management console.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 为了操作EC2实例，我们需要一个密钥对来访问EC2。如果您还没有密钥对，您可以通过EC2管理控制台创建它。
- en: 'Open your browser and navigate to [https://console.aws.amazon.com/ec2](https://console.aws.amazon.com/ec2).
    You should see the EC2 management console dashboard. You can click on the Key
    Pairs option on the left menu so that you get the following screen:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 打开您的浏览器并导航到[https://console.aws.amazon.com/ec2](https://console.aws.amazon.com/ec2)。您应该看到EC2管理控制台的仪表板。您可以点击左侧菜单中的“密钥对”选项，您将看到如下界面：
- en: '![](img/00065.jpeg)'
  id: totrans-285
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00065.jpeg)'
- en: 'Figure 3.18: AWS EC2 console management'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.18：AWS EC2控制台管理
- en: 'You can click on the Create Key Pair button to create a new key-pair. You should
    get a dialog box, as shown in the following screenshot. Fill in the Key pair name
    field and click on the Create button in the dialog box:'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以点击“创建密钥对”按钮来创建一个新的密钥对。您应该会看到一个对话框，如下图所示。填写密钥对名称字段，然后点击对话框中的“创建”按钮：
- en: '![](img/00066.jpeg)'
  id: totrans-288
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00066.jpeg)'
- en: 'Figure 3.19: Creating a key-pair on AWS EC2 management console'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.19：在AWS EC2管理控制台创建密钥对
- en: Now you have a key-pair that we can use in our EC2 instance. Next, we'll develop
    a CloudFormation template for EC2.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你已经有了一个可以在 EC2 实例中使用的密钥对。接下来，我们将为 EC2 开发一个 CloudFormation 模板。
- en: Developing a CloudFormation template
  id: totrans-291
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开发 CloudFormation 模板
- en: 'In this section, we''ll develop a CloudFormation template for EC2\. Some attributes
    have already been explained in the previous sections in this chapter. Since we
    need a key-pair on EC2, we set it on the `Parameters` attribute so that users
    can select their key-pairs. The following is a sample program in JSON:'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将开发一个用于 EC2 的 CloudFormation 模板。某些属性已经在本章的前面部分解释过。由于我们需要在 EC2 上使用密钥对，因此我们将其设置在
    `Parameters` 属性中，以便用户可以选择他们的密钥对。以下是一个 JSON 格式的示例程序：
- en: '[PRE44]'
  id: totrans-293
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'Here it is in the YAML format:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 YAML 格式的：
- en: '[PRE45]'
  id: totrans-295
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'A key-pair from the `KeyName` parameter will be used on the EC2 instance. We
    put it on the resource as follows:'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: '`KeyName` 参数中的密钥对将用于 EC2 实例。我们将其放在资源中，如下所示：'
- en: '[PRE46]'
  id: totrans-297
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Here is it in YAML:'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 YAML 格式的：
- en: '[PRE47]'
  id: totrans-299
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'We also need a public IP address for the EC2 instance, so we access it from
    SSH. We define it on the `SSHLocation` section from the `Parameters` attribute.
    The JSON format is as follows:'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要一个 EC2 实例的公共 IP 地址，以便通过 SSH 访问。我们在 `Parameters` 属性中的 `SSHLocation` 部分定义它。JSON
    格式如下：
- en: '[PRE48]'
  id: totrans-301
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Here it is in YAML:'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 YAML 格式的：
- en: '[PRE49]'
  id: totrans-303
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: For details of the EC2 instance template, check out `ec2demo.json` and `ec2demo.yaml`.
    You can start deploying this template to AWS CloudFormation. We'll perform this
    task in the next section.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 有关 EC2 实例模板的详细信息，请查看 `ec2demo.json` 和 `ec2demo.yaml`。你可以开始将这个模板部署到 AWS CloudFormation。我们将在下一节执行此任务。
- en: Deploying the template
  id: totrans-305
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署模板
- en: 'After completing our CloudFormation template for EC2, you can upload it on
    AWS CloudFormation. You should select the KeyName and other options on the template:'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 完成 EC2 的 CloudFormation 模板后，你可以将其上传到 AWS CloudFormation。你需要在模板中选择 KeyName 和其他选项：
- en: '![](img/00067.jpeg)'
  id: totrans-307
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00067.jpeg)'
- en: 'Figure 3.20: Deploying EC2 through AWS CloudFormation'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.20：通过 AWS CloudFormation 部署 EC2
- en: You probably set the IP address for SSH access on the SSHLocation parameter.
    Then, follow the instructions to deploy the template.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经在 `SSHLocation` 参数中设置了用于 SSH 访问的 IP 地址。然后，按照说明部署模板。
- en: 'After this has been created, you can check the progress of CloudFormation provision
    on the CloudFormation dashboard:'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 创建完成后，你可以在 CloudFormation 仪表板上查看 CloudFormation 部署的进度：
- en: '![](img/00068.jpeg)'
  id: totrans-311
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00068.jpeg)'
- en: 'Figure 3.21: AWS EC2 instance has created'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.21：AWS EC2 实例已创建
- en: 'After creating the EC2 instance, you can verify this on the EC2 management
    console. You should see the EC2 instance as shown in the following screenshot:'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 EC2 实例后，你可以在 EC2 管理控制台上验证这一点。你应该能看到如下截图所示的 EC2 实例：
- en: '![](img/00069.jpeg)'
  id: totrans-314
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00069.jpeg)'
- en: 'Figure 3.22: Verifying EC2 instance on EC2 management console'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.22：在 EC2 管理控制台上验证 EC2 实例
- en: Now, you can manage your EC2 instance on the management console . If you want
    to modify your EC2 instance, you can update the CloudFormation template. Then,
    you can provision that template.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以在管理控制台上管理你的 EC2 实例。如果你想修改 EC2 实例，你可以更新 CloudFormation 模板。然后，你可以部署该模板。
- en: Summary
  id: totrans-317
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: We have learned how to build AWS CloudFormation templates using JSON and YAML.
    We reviewed the CloudFormation template format. Then, we looked at some attributes
    from the CloudFormation template. Finally, we deployed Amazon EC2 using the CloudFormation
    template.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经学习了如何使用 JSON 和 YAML 构建 AWS CloudFormation 模板。我们回顾了 CloudFormation 模板格式。然后，我们查看了一些
    CloudFormation 模板中的属性。最后，我们使用 CloudFormation 模板部署了 Amazon EC2。
- en: In the next chapter, we will learn about CloudFormation StackSets.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习 CloudFormation StackSets。
- en: Questions
  id: totrans-320
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: What is the CloudFormation template?
  id: totrans-321
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 什么是 CloudFormation 模板？
- en: How do we develop the CloudFormation template?
  id: totrans-322
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们如何开发 CloudFormation 模板？
- en: How do you implement AWS resources in the CloudFormation template?
  id: totrans-323
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何在 CloudFormation 模板中实现 AWS 资源？
