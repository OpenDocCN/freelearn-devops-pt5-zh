["```\n$ docker swarm init\n```", "```\n$ docker swarm join --token <join-token> <IP address>:2377\n```", "```\n$ docker-machine ls\nNAME ACTIVE DRIVER STATE URL SWARM DOCKER ERRORS\ndefault - virtualbox Stopped Unknown\n```", "```\n$ docker-machine start default\nStarting \"default\"...\n(default) Check network to re-create if needed...\n(default) Waiting for an IP...\nMachine \"default\" was started.\nWaiting for SSH to be available...\nDetecting the provisioner...\nStarted machines may have new IP addresses. You may need to re-run the `docker-machine env` command.\n```", "```\ndocker-machine create --driver virtualbox default\n```", "```\n$ for NODE in `seq 1 5`; do\n  docker-machine create --driver virtualbox \"node-${NODE}\"\ndone\n```", "```\n# get IP of Swarm leader\n$ export IP=$(docker-machine ip node-1)\n# init the Swarm\n$ docker-machine ssh node-1 docker swarm init --advertise-addr $IP\n# Get the Swarm join-token\n$ export JOIN_TOKEN=$(docker-machine ssh node-1 \\\n    docker swarm join-token worker -q)\n```", "```\n$ for NODE in `seq 2 5`; do\n  NODE_NAME=\"node-${NODE}\"\n  docker-machine ssh $NODE_NAME docker swarm join \\\n        --token $JOIN_TOKEN $IP:2377\ndone\n```", "```\n$ docker-machine ssh node-1 docker node promote node-2 node-3\nNode node-2 promoted to a manager in the swarm.\nNode node-3 promoted to a manager in the swarm.\n```", "```\n$ docker-machine ssh node-1 docker node ls\n```", "```\nalias dm=\"docker-machine\"\nfor NODE in `seq 1 5`; do\n  NODE_NAME=node-${NODE}\n  dm rm --force $NODE_NAME\n  dm create --driver virtualbox $NODE_NAME\ndone\nalias dms=\"docker-machine ssh\"\nexport IP=$(docker-machine ip node-1)\ndms node-1 docker swarm init --advertise-addr $IP;\nexport JOIN_TOKEN=$(dms node-1 docker swarm join-token worker -q);\nfor NODE in `seq 2 5`; do\n  NODE_NAME=\"node-${NODE}\"\n  dms $NODE_NAME docker swarm join --token $JOIN_TOKEN $IP:2377\ndone;\ndms node-1 docker node promote node-2 node-3\n```", "```\n$ docker swarm init --advertise-addr=eth0\n```", "```\n$ docker node promote node2 node3\nNode node2 promoted to a manager in the swarm.\nNode node3 promoted to a manager in the swarm.\n```", "```\n[default]\naws_access_key_id = AKID1234567890\naws_secret_access_key = MY-SECRET-KEY\n```", "```\n$ docker-machine create --driver amazonec2 \\\n --amazonec2-region us-east-1 aws-node-1\n```", "```\n$ eval $(docker-machine env aws-node-1)\n```", "```\n$ docker container run -d -p 8000:80 nginx:alpine\n```", "```\n$ curl -4 <IP address>:8000\n```", "```\n$ for NODE in `seq 2 5`; do\n docker-machine create --driver amazonec2 \\\n --amazonec2-region us-east-1 aws-node-${NODE}\ndone\n```", "```\n$ docker swarm init\n```", "```\n$ export JOIN_TOKEN=$(docker swarm join-token -q worker)\n```", "```\n$ export LEADER_ADDR=$(docker node inspect \\\n --format \"{{.ManagerStatus.Addr}}\" self)\n```", "```\n$ for NODE in `seq 2 5`; do\n docker-machine ssh aws-node-${NODE} \\\n sudo docker swarm join --token ${JOIN_TOKEN} ${LEADER_ADDR}\ndone\n```", "```\n$ for NODE in `seq 2 5`; do\n eval $(docker-machine env aws-node-${NODE})\n docker swarm join --token ${JOIN_TOKEN} ${LEADER_ADDR}\ndone\n```", "```\n$ eval $(docker-machine env node-1)\n$ docker node promote aws-node-2 aws-node-3\n```", "```\n$ for NODE in `seq 1 5`; do\n docker-machine rm -f aws-node-${NODE}\ndone\n```", "```\n$ docker-machine ssh node-1\n```", "```\nversion: \"3.7\"\nservices:\n  whoami:\n    image: training/whoami:latest\n    networks:\n      - test-net\n    ports:\n      - 81:8000\n    deploy:\n      replicas: 6\n      update_config:\n        parallelism: 2\n        delay: 10s\n      labels:\n        app: sample-app\n        environment: prod-south\n\nnetworks:\n  test-net:\n    driver: overlay\n```", "```\n$ docker stack deploy -c stack.yaml sample-stack\n```", "```\n$ docker stack ls\nNAME             SERVICES\nsample-stack     1\n```", "```\n$ docker service inspect sample-stack_whoami\n```", "```\n$ docker container rm -f sample-stack_whoami.2.n21e7ktyvo4b2sufalk0aibzy\n```", "```\n$ docker-machine stop node-2\n```", "```\nversion: \"3.7\"\nservices:\n web:\n   image: fundamentalsofdocker/ch11-web:2.0\n   networks:\n   - pets-net\n   ports:\n   - 3000:3000\n   deploy:\n     replicas: 3\n db:\n   image: fundamentalsofdocker/ch11-db:2.0\n   networks:\n   - pets-net\n   volumes:\n   - pets-data:/var/lib/postgresql/data\n\nvolumes:\n pets-data:\n\nnetworks:\n pets-net:\n driver: overlay\n```"]