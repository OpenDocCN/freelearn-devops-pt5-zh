- en: Cross-Platform Mobile App Development with Xamarin
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Xamarin进行跨平台移动应用开发
- en: Xamarin is a platform that enables developers to create cross-platform applications
    on Android, iOS, Window, and other platforms, by using the same source code and
    the same **integrated development environment** (**IDE**).
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Xamarin是一个平台，允许开发者通过使用相同的源代码和相同的**集成开发环境**（**IDE**），在Android、iOS、Windows及其他平台上创建跨平台应用程序。
- en: History of Xamarin
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Xamarin的历史
- en: Xamarin was started as an experiment to try and develop a version of .NET for
    Linux in early 2000, and was first known as an open source project called **Mono**.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Xamarin最初是作为一个实验开始的，旨在为Linux开发一个版本的.NET，始于2000年初，最初被称为一个名为**Mono**的开源项目。
- en: Later, the same project was developed and supported by a new company called
    **Xamarin**, which was created by the very first developers of Mono, and was also
    known as **MonoTouch** and Mono for Android.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 后来，同一个项目由一个名为**Xamarin**的新公司开发和支持，该公司由Mono的最初开发者创建，也被称为**MonoTouch**和Mono for
    Android。
- en: Development of Mono continued and it was later renamed Xamarin, which supported
    Android and iOS app development.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: Mono的开发持续进行，后来更名为Xamarin，支持Android和iOS应用程序开发。
- en: Xamarin has now been acquired by Microsoft and is developed and supported as
    one of the products offered by Microsoft with great integration with the existing
    IDE, Visual Studio, and it even has its own IDE, called Xamarin Studio, which
    is available for both Mac and Windows.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: Xamarin现在已被微软收购，并作为微软提供的产品之一进行开发和支持，与现有的IDE——Visual Studio有很好的集成，甚至还有自己独立的IDE，叫做Xamarin
    Studio，适用于Mac和Windows。
- en: Why you should learn Xamarin
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么你应该学习Xamarin
- en: Well, there are many scenarios where Xamarin can save the day, and in some cases
    literally months.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 事实上，Xamarin可以在许多场景中拯救你的项目，在某些情况下，甚至可以节省数月的时间。
- en: Let's say you have an idea for a mobile application that you want to develop.
    Of course, you want it to be developed soon and get it to market. But there are
    some small challenges and decisions that you should overcome or decide on before
    you dive into your development process.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你有一个想要开发的移动应用的创意。当然，你希望尽快开发出来并推向市场。但在开始开发过程之前，有一些小挑战和决策你需要克服或决定。
- en: 'Let''s have a look at those challenges:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看这些挑战：
- en: '**Choose mobile platforms to target**: This is a very important part in the
    planning phase of our application. The mobile platform market is divided into
    major players, such as Android, iOS, and Windows. To get the most out of our application,
    we will want it to be accessible and available to the majority of users out there.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**选择目标移动平台**：这是我们应用程序规划阶段中非常重要的一部分。移动平台市场由主要玩家组成，如Android、iOS和Windows。为了最大限度地发挥我们的应用程序的作用，我们希望它能够被大多数用户访问和使用。'
- en: '**Learn a platform-specific coding language or have platform-specific developers
    in your team**: Now, let''s assume you have chosen to target all three of the
    major mobile platforms. We have a clear idea that we need to develop our application
    for three mobile platforms. Here, if you are developing it alone, then you need
    to learn all three different platform-specific languages. Android has its own
    official IDE, similarly Apple has its own IDE and coding language to build iOS
    applications, and Windows has its own as well.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**学习一个特定平台的编程语言，或让团队中有平台特定的开发者**：现在，假设你决定将目标定位于所有三个主要的移动平台。我们清楚地知道，我们需要为三个移动平台开发应用程序。在这种情况下，如果你是单独开发，那么你需要学习三种不同平台特定的语言。Android有自己的官方IDE，同样，苹果也有自己的IDE和编程语言来构建iOS应用程序，而Windows也有自己的开发工具。'
- en: '**Spend time and resources in development for each platform**: Three different
    platforms, three different languages, and three different IDEs. That is going
    to be very time-consuming and the learning curve is going to be a major issue.
    Or, you have three different developer teams for each platform; then, you will
    be spending a lot more resources on your development.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**为每个平台花费时间和资源进行开发**：三个不同的平台，三种不同的语言，以及三种不同的IDE。这将非常耗时，并且学习曲线将成为一个主要问题。或者，你有三个不同的开发团队来负责每个平台；那么，你将在开发上投入更多的资源。'
- en: '**Try and maintain a consistent behavior in all your applications for each
    platform**: Now, let''s assume you have decided to have multiple resources for
    the development of the application. Now, all different mobile platforms have a
    variety of different methods for user interaction, and different ways of designing
    user interfaces. Developing different platform applications with separate teams
    can sometimes make the user experience of the same application drastically different
    on these platforms.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**尽量保持每个平台上的应用一致的行为**：现在，假设你已经决定为应用程序开发使用多个资源。现在，所有不同的移动平台都有各种不同的用户交互方式，以及不同的用户界面设计方式。使用不同的团队开发不同平台的应用程序，有时会使同一个应用在这些平台上的用户体验大相径庭。'
- en: '**Maintain all the platform-specific codebase for your same application**:
    Development challenges never end once initial development of the application is
    done. Whenever you add new features to your application, you will now have to
    apply the same changes and features to all three platform-specific codebases,
    repeat the same business logic, and develop the same feature in different ways
    on different IDEs.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**为同一个应用维护所有平台特定的代码库**：一旦应用的初步开发完成，开发挑战就永远不会结束。每当你向应用添加新功能时，你将不得不将相同的更改和功能应用到所有三个平台特定的代码库，重复相同的业务逻辑，并在不同的IDE上以不同的方式开发相同的功能。'
- en: From the preceding scenarios, you can see that developing a mobile application
    is not that simple and straightforward nowadays, if we have to go through different
    coding languages and IDEs to do so.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的情境中，你可以看到，如今开发一个移动应用并不是那么简单直接的事，如果我们必须通过不同的编程语言和IDE来完成。
- en: It increases our time to deliver by a huge amount and is very expensive in terms
    of time, resources, and of course money.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这大大增加了我们的交付时间，并且在时间、资源以及当然还有金钱上都非常昂贵。
- en: In order to solve all the challenges, Xamarin comes to our rescue. Xamarin saves
    the developer from the need to learn different programming languages and different
    IDEs.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决所有这些挑战，Xamarin来拯救我们。Xamarin使开发者无需学习不同的编程语言和不同的IDE。
- en: Not only that, we also get the benefit of writing our application code just
    once and building to different mobile platforms. And if you are a C# developer
    on the .NET framework using Visual Studio already, then you just hit the jackpot.
    Because guess what, that's all you need to start development using Xamarin as
    far as language and IDE goes.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 不仅如此，我们还可以享受一次编写应用程序代码，构建到不同移动平台的好处。如果你已经是一个在.NET框架上使用Visual Studio的C#开发者，那么你简直是中了头奖。因为猜猜看，语言和IDE方面，这就是你开始使用Xamarin开发所需要的一切。
- en: '![](img/1184fd1c-26db-4ef5-8045-3a72f7fe1875.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1184fd1c-26db-4ef5-8045-3a72f7fe1875.png)'
- en: Development cycle without Xamarin
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 没有Xamarin的开发周期
- en: '![](img/f33fac67-b435-4960-99d5-f3709e99a172.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f33fac67-b435-4960-99d5-f3709e99a172.png)'
- en: Development cycle with Xamarin
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Xamarin的开发周期
- en: Benefits of cross-platform development using Xamarin
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Xamarin进行跨平台开发的好处
- en: 'With Xamarin, a developer''s life gets much easier in many aspects of mobile
    application development:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Xamarin，开发者在移动应用开发的许多方面都变得更加轻松：
- en: '**Language**: The most time-consuming process is learning new languages every
    now and then; Xamarin frees developers from this issue. The only language you
    need to have experience in is C# to develop for Android, iOS, and Windows all
    at once—phew!'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**语言**：最耗时的过程是不断学习新语言；Xamarin让开发者摆脱了这个问题。你只需要有C#经验，就能同时为Android、iOS和Windows开发——呼！'
- en: '**IDE**: With learning new languages comes another overhead: getting used to
    a new IDE every time. As soon as we get a new IDE for a different platform, our
    old shortcuts stop working. Files are not in the same place. Debugging is totally
    different. All these issues increase the development time. With Xamarin, you just
    have to use a single IDE that we already love, Visual Studio.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**IDE**: 学习新语言时会带来另一个额外负担：每次都需要适应一个新的IDE。每当我们为不同的平台获取一个新的IDE时，我们旧的快捷键就不再有效，文件位置也发生变化，调试方式完全不同。所有这些问题都会增加开发时间。使用Xamarin，你只需使用一个我们已经喜爱的IDE——Visual
    Studio。'
- en: '**Consistent UI design**: Often, we wish our app looked the same on all mobile
    devices. We don''t want users to buy a new phone and find a totally new app with
    different user interactions for the same purpose. In order to do this, Xamarin
    comes with **Xamarin.Forms** to develop consistent UI elements across all mobile
    platforms, giving our users a seamless experience.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**一致的UI设计**：通常，我们希望我们的应用在所有移动设备上都看起来一样。我们不希望用户购买新手机后，发现同样用途的应用程序在用户互动上完全不同。为了实现这一点，Xamarin
    提供了 **Xamarin.Forms**，以便在所有移动平台上开发一致的UI元素，为用户提供无缝的体验。'
- en: '**Code reusability**: Xamarin allows us to share our business logic code across
    all platforms. For any business logic code, we have to write it only once.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代码复用**：Xamarin 允许我们在所有平台上共享业务逻辑代码。对于任何业务逻辑代码，我们只需要编写一次。'
- en: Introduction to mobile app development
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 移动应用程序开发简介
- en: 'Mobile application development is a crucial part of any product development
    in today''s market. Native mobile applications take user interaction with an application
    to a different level:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在当今市场中，移动应用程序开发是任何产品开发的重要组成部分。本地移动应用程序将用户与应用程序的互动提升到了一个新的水平：
- en: '**Always one touch away**: Native mobile applications, unlike web and desktop
    applications, are always on the user''s mobile phone. Users can always opt not
    to visit a web application, and this brings the possibility of less interaction,
    but mobile applications are installed by users on their phones and whenever a
    user interacts with their phone, developers can take advantage of the user''s
    activity and improve the interaction in many ways. The possibilities are unlimited.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**始终触手可及**：本地移动应用程序与网页和桌面应用程序不同，始终存在于用户的手机中。用户可以随时选择不访问网页应用程序，这可能导致互动减少，但移动应用程序是由用户安装在手机上的，每当用户与手机互动时，开发者可以利用用户的活动，在多方面提升互动体验。可能性是无限的。'
- en: '**Knowing the user''s behavior**: Mobile applications can take advantage of
    the user''s behavior on their phone. We can monitor a user''s activities, such
    as walking, running, sleeping, and so on, to get personal user analytics and feedback.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**了解用户行为**：移动应用程序可以利用用户在手机上的行为。我们可以监控用户的活动，例如走路、跑步、睡觉等，以获取个人用户分析和反馈。'
- en: '**Always connected**: Mobile data allows users to be connected to the internet
    on the go, and that increases the number of times users interact with the app.
    Mobile data provides a greater level of connectivity between the user and internet-connected
    apps.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**始终在线**：移动数据使用户能够在旅途中保持连接互联网，从而增加用户与应用程序互动的次数。移动数据为用户与互联网连接的应用程序提供了更高的连接性。'
- en: '**Taking advantage of cutting edge hardware sensors**: Mobile apps have the
    ability to take advantage of sensors available to users on their mobile device,
    such as GPS, fingerprinting, gyroscope, and much more.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**利用尖端硬件传感器**：移动应用程序能够利用用户移动设备上可用的传感器，如GPS、指纹识别、陀螺仪等等。'
- en: '**Personal interaction**: Mobile devices are very personal to individual users,
    unlike desktop and laptop devices. Nowadays, the world of personal assistants
    and speech synthesis technologies is making user interaction more personal and
    human, such as with voice inputs and actions.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**个人互动**：移动设备对每个用户来说都是非常个人化的，与桌面和笔记本电脑设备不同。如今，个人助手和语音合成技术的世界正在使用户互动变得更加个性化和人性化，例如语音输入和语音操作。'
- en: Process involved in mobile app development
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 移动应用程序开发的过程
- en: 'Like any other platform, mobile app development includes several key steps
    in the process of making a complete and stable mobile applications that users
    can use and love:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 和其他平台一样，移动应用程序开发包括几个关键步骤，这些步骤是创建完整且稳定的移动应用程序的过程，用户可以使用并喜爱：
- en: '**Ideation**: Every application starts with a small idea or a problem to solve.
    A powerful and impactful idea that can solve the user''s problem results in a
    successful application. It is easier to think of a great idea now, more than ever
    before. We use our mobile devices and face many problems in day-to-day use, or
    sometimes wish for an app to be there. That, right there, is the genesis of an
    idea for a great application.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**构思**：每个应用程序都是从一个小点子或一个待解决的问题开始的。一个能够解决用户问题的强大且有影响力的想法，最终会导致一个成功的应用程序。现在，比以往任何时候都更容易想到一个伟大的想法。我们使用移动设备并面临许多日常使用中的问题，或者有时会希望某个应用程序能够解决这些问题。正是这些，成为了伟大应用程序创意的源泉。'
- en: '**Planning**: Planning is a very important part of the process. An idea is
    only good if the execution of it is well planned:'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**规划**：规划是过程中的一个非常重要的部分。一个创意只有在执行得当的情况下，才算是好创意：'
- en: How much time to market should it take?
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 上市所需的时间应该是多少？
- en: Should the app be premium or free?
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该应用应该是付费的还是免费的？
- en: What mobile platform should we target?
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们应该针对哪个移动平台进行开发？
- en: What technologies and tools should be used?
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应该使用哪些技术和工具？
- en: Answers to all these questions must be known in the planning phase.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些问题的答案必须在规划阶段确定。
- en: '**Designing**: This is the part of application development when the idea begins
    to take shape and we can see how it might look once finished. Before starting
    coding, designing application wireframes and layouts is very important.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**设计**：这是应用程序开发的阶段，在这一阶段，我们的想法开始成型，能够看到应用完成后的样子。在开始编码之前，设计应用的线框图和布局是非常重要的。'
- en: '**Coding**: By the time we reach the coding phase, we have a good idea about
    where want to go and what we want to see in our application. So, that enables
    the coding phase to focus only on the actual code development.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**编码**：当我们进入编码阶段时，我们已经对目标方向和应用程序要实现的功能有了清晰的了解。因此，这使得编码阶段可以集中在实际的代码开发上。'
- en: '**Testing**: Testing the application on various mobile devices is very important
    to the stability of application.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**测试**：在各种移动设备上测试应用程序对于应用程序的稳定性至关重要。'
- en: '**Deployment and continuous feedback**: After submitting the app to a store,
    it is very important to continuously monitor user feedback and reports, and act
    upon them.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**部署和持续反馈**：在将应用提交到商店后，持续监控用户反馈和报告，并根据反馈采取行动是非常重要的。'
- en: Platforms supported by Xamarin
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Xamarin 支持的平台
- en: 'As mentioned earlier in the chapter, Xamarin allows developers to create applications
    for multiple mobile operating systems by sharing the same code. The following
    are the platforms Xamarin supports:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 正如本章前面提到的，Xamarin 允许开发者通过共享相同的代码为多个移动操作系统创建应用程序。以下是 Xamarin 支持的平台：
- en: '**Xamarin.Android**: Xamarin.Android allows us to build native Android apps
    using C#. It uses a **just-in-time** (**JIT**) compiler to optimize your app''s
    performance. And it includes all the Android APIs that can be used in your Xamarin
    C# code. It goes from Android phones to tablets to even wearables.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Xamarin.Android**：Xamarin.Android 使我们能够使用 C# 构建原生 Android 应用程序。它使用 **即时编译**（**JIT**）编译器来优化应用程序的性能，并且包括所有可以在
    Xamarin C# 代码中使用的 Android API。它适用于从 Android 手机到平板电脑，甚至是可穿戴设备。'
- en: '**Xamarin.iOS**: Similar to Xamarin.Android, Xamarin.iOS features all the existing
    APIs in, you guessed it, Apple''s iOS SDK in C#. Also, Xamarin.iOS uses an **ahead-of-time**
    (**AOT**) compiler to compile your C# code to native ARM assembly code.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Xamarin.iOS**：与 Xamarin.Android 类似，Xamarin.iOS 提供了所有现有的 API，正如你猜到的，它们是 Apple''s
    iOS SDK 中的 C# 版本。此外，Xamarin.iOS 使用 **预编译**（**AOT**）编译器将你的 C# 代码编译为本地 ARM 汇编代码。'
- en: '**Xamarin.Mac**: Xamarin doesn''t just stop at mobile platforms; you can also
    develop Mac applications using the same code base.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Xamarin.Mac**：Xamarin 不仅仅局限于移动平台；你还可以使用相同的代码库开发 Mac 应用程序。'
- en: '**Xamarin for Windows**: Since C# is the default language to code for Windows
    phones and Windows desktop applications, you can even share the code between your
    mobile apps and **Universal Windows Platform** (**UWP**) apps.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Xamarin for Windows**：由于 C# 是编写 Windows 手机和 Windows 桌面应用程序的默认语言，你甚至可以在移动应用和
    **通用 Windows 平台**（**UWP**）应用之间共享代码。'
- en: Xamarin on Visual Studio
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Xamarin 在 Visual Studio 中
- en: Visual Studio is the default IDE for writing C# code, although it's not the
    only option when it comes to writing apps with Xamarin.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio 是编写 C# 代码的默认 IDE，尽管在使用 Xamarin 编写应用程序时，其他选项也可以选择。
- en: There are other options, such as Xamarin Studio for Windows and Xamarin Studio
    for Mac if you have a Mac. Xamarin Studio for Windows, though, is no longer supported
    by Microsoft and they encourage developers to use Visual Studio instead. For developing
    on the Mac, you can use Xamarin Studio for Mac.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 还有其他选项，例如适用于 Windows 的 Xamarin Studio 和适用于 Mac 的 Xamarin Studio，如果你使用的是 Mac。不过，Xamarin
    Studio for Windows 已不再由微软支持，微软鼓励开发者改用 Visual Studio。对于 Mac 开发，你可以使用 Xamarin Studio
    for Mac。
- en: In this book, we'll be covering Xamarin development using Visual Studio on Windows,
    since it is the best IDE available for code development using C# and provides
    great IntelliSense support.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 本书将介绍在 Windows 上使用 Visual Studio 进行 Xamarin 开发，因为它是用于 C# 代码开发的最佳 IDE，并且提供了出色的
    IntelliSense 支持。
- en: Extensions and add-ons
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 扩展和插件
- en: Visual Studio supports third-party libraries and native libraries using the
    NuGet package manager. It provides the functionality to add new add-ons and plugins
    from within Visual Studio.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio 支持使用 NuGet 包管理器的第三方库和本地库。它提供了从 Visual Studio 内部添加新插件和附加组件的功能。
- en: Xamarin comes as an extension to Visual Studio. You can install Xamarin components
    while installing Visual Studio, as shown in the following topic.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: Xamarin 是 Visual Studio 的扩展。你可以在安装 Visual Studio 时安装 Xamarin 组件，如下文所示。
- en: Installing Visual Studio and Xamarin on Windows
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Windows 上安装 Visual Studio 和 Xamarin
- en: 'To install Visual Studio and Xamarin on a Windows machine, follow these steps:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 机器上安装 Visual Studio 和 Xamarin，请按照以下步骤操作：
- en: Go to [https://www.visualstudio.com/downloads/](https://www.visualstudio.com/downloads/).
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问 [https://www.visualstudio.com/downloads/](https://www.visualstudio.com/downloads/)。
- en: 'When you open the preceding URL in a browser, you''ll get a screen like this:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你在浏览器中打开前述网址时，你会看到如下画面：
- en: '![](img/9a3beb20-ac49-4ea4-b666-e8ef6eece3c1.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9a3beb20-ac49-4ea4-b666-e8ef6eece3c1.png)'
- en: You can see there are several editions of Visual Studio available for developers.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你会看到有多个 Visual Studio 版本供开发者选择。
- en: You can choose the version best suited to your requirements. If you just want
    to learn Xamarin using Visual Studio, or if you are an individual developer looking
    for a free version, then Visual Studio Community Edition is best suited for you.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以选择最适合你需求的版本。如果你只是想使用 Visual Studio 学习 Xamarin，或者你是一个寻求免费版本的个人开发者，那么 Visual
    Studio Community Edition 是最适合你的版本。
- en: Click on Free download provided under Visual Studio Community 2017.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击在 Visual Studio Community 2017 下提供的“免费下载安装”按钮。
- en: You should get a Visual Studio installer file downloaded on your computer.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你应该会在计算机上下载到一个 Visual Studio 安装程序文件。
- en: 'Open the installer file and you should see a screen like this:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开安装程序文件后，你应该会看到如下画面：
- en: '![](img/d197fe9d-55bb-4e5f-a640-03031db35f47.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d197fe9d-55bb-4e5f-a640-03031db35f47.png)'
- en: Click on the Continue button to begin the installation process.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“继续”按钮开始安装过程。
- en: 'It can take some time to load the installers available, and you might see the
    following screen:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加载可用安装程序可能需要一些时间，你可能会看到以下屏幕：
- en: '![](img/6709d457-0f47-4d9a-ac57-2de75de77b6d.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6709d457-0f47-4d9a-ac57-2de75de77b6d.png)'
- en: 'The next screen let you to select Workloads:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一个屏幕会让你选择工作负载：
- en: '![](img/939baf8b-099e-4637-b45e-48546d3cf4aa.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](img/939baf8b-099e-4637-b45e-48546d3cf4aa.png)'
- en: Now, if you are new to Visual Studio 2017, you might find the installation process
    different from previous versions. Workloads are new in 2017 and they represent
    different packages used for different development purposes. For example, if you
    are planning to code only for .NET desktop applications, then you can choose only
    that workload and skip other workloads.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果你是 Visual Studio 2017 的新手，你可能会发现安装过程与之前的版本有所不同。工作负载是 2017 新增的，它们代表了用于不同开发目的的不同包。例如，如果你计划仅为
    .NET 桌面应用程序编写代码，那么你只需选择该工作负载并跳过其他工作负载。
- en: This change in the Visual Studio 2017 installer is a great way to avoid the
    installation of components that we might not use in our development, and to just
    choose the required workload to install essential components only. This saves
    us a lot of time and space on our laptop.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio 2017 安装程序中的这种变化是一个很好的方式，可以避免安装我们在开发中可能不会用到的组件，只选择需要的工作负载来安装必要的组件。这为我们的笔记本节省了大量的时间和空间。
- en: 'In our development for Xamarin, we will require a workload that installs the
    Xamarin tools and languages required for mobile development. If you scroll a bit
    further down in this menu, you''ll find a section called Mobile & Gaming:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在我们的 Xamarin 开发中，我们需要一个工作负载来安装移动开发所需的 Xamarin 工具和语言。如果你在这个菜单中稍微向下滚动，你会找到一个名为“移动与游戏”的部分：
- en: '![](img/41ca2ef9-122e-4279-a4d8-a286e84257b2.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](img/41ca2ef9-122e-4279-a4d8-a286e84257b2.png)'
- en: Under Mobile & Gaming, the very first option, and for our tutorial the only
    option required, will be Xamarin-Mobile development with .NET.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“移动与游戏”类别下，第一个选项也是我们教程中唯一需要的选项是 Xamarin 移动开发与 .NET。
- en: Select this first option, and on the right-hand side panel you'll see all the
    packages included in this workload. The Visual Studio installer will also show
    you the size of the workload in the bottom-right corner. Once selected, click
    on the Install button to begin the installation process.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择第一个选项，在右侧面板中你会看到此工作负载中包含的所有包。Visual Studio 安装程序还会在右下角显示工作负载的大小。选择后，点击“安装”按钮开始安装过程。
- en: This will start downloading all the listed packages and then installing them
    on your computer. The Xamarin package is more than 30 GB and it can take some
    time to download and install the packages, depending on your internet speed.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将开始下载所有列出的包，然后将它们安装到你的计算机上。Xamarin 包的大小超过 30 GB，下载和安装这些包可能需要一些时间，具体取决于你的互联网速度。
- en: 'Once the installer is done downloading and installing all the packages required,
    you''ll see a screen like this:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦安装程序完成所有必需包的下载和安装，你将看到如下界面：
- en: '![](img/2e7fc453-3586-45d6-a633-d1d13daf0caa.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2e7fc453-3586-45d6-a633-d1d13daf0caa.png)'
- en: That's it. Congratulations on your successful installation of Visual Studio
    and Xamarin. Now, select Visual C# in the Development Settings and your favorite
    color theme for Visual Studio IDE, and hit the Start Visual Studio button.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 就这样，恭喜你成功安装了 Visual Studio 和 Xamarin。现在，选择开发设置中的 Visual C# 和你喜欢的 Visual Studio
    IDE 主题颜色，点击 Start Visual Studio 按钮。
- en: Once the installation is done, let's verify that Xamarin is installed with Visual
    Studio.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装完成后，让我们验证 Xamarin 是否与 Visual Studio 一起安装。
- en: Click on the Tools menu and select Extensions and Updates.
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 Tools 菜单并选择 Extensions and Updates。
- en: 'Under the Installed section, scroll down to find Xamarin for Visual Studio,
    Xamarin.Andoid SDK, and Xamarin.Apple SDK installed:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Installed 部分，向下滚动以查找已安装的 Xamarin for Visual Studio、Xamarin.Android SDK 和 Xamarin.Apple
    SDK：
- en: '![](img/3567c94f-be0e-4a81-90ee-168ca5d9e389.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3567c94f-be0e-4a81-90ee-168ca5d9e389.png)'
- en: Now that we have verified the installation, we have some final steps before
    we start coding. We are going to focus on the Android application development
    process in this book to give you a better idea of how Xamarin works.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们已经验证了安装，接下来在开始编码之前，我们还有一些最后的步骤。本书将聚焦于 Android 应用开发过程，以帮助你更好地了解 Xamarin 的工作原理。
- en: Let's update all the Android packages with the help of Android SDK Manager,
    which is already installed with Xamarin.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们利用已经与 Xamarin 一起安装的 Android SDK 管理器来更新所有 Android 包。
- en: 'Open Tools | Android | Android SDK Manager:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 Tools | Android | Android SDK Manager：
- en: '![](img/bc9065f4-4bdd-4b2e-8841-05c6609f326c.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bc9065f4-4bdd-4b2e-8841-05c6609f326c.png)'
- en: 'This will open a new window for Android SDK Manager:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将打开 Android SDK 管理器的新窗口：
- en: '![](img/7f640ed7-c04b-45db-9cb0-a22534ef79c0.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7f640ed7-c04b-45db-9cb0-a22534ef79c0.png)'
- en: Here, we can see the updates available for the basic packages installed.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 这里我们可以看到已安装基本包的可用更新。
- en: Let's click on Install 11 packages.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们点击安装 11 个包。
- en: 'This will give you a new window where you will have to accept the licenses
    for the packages to be downloaded. Some of the licenses might need to be selected
    individually, depending on the package. Once you see all green ticks on the packages,
    click Install. It will take some time to update all the packages available, depending
    on your internet speed:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将为你提供一个新窗口，你需要接受要下载的包的许可协议。根据不同的包，某些许可可能需要单独选择。一旦所有包上都有绿色勾选，点击安装。根据你的网速，更新所有包可能需要一些时间：
- en: '![](img/12acdf4e-a1ea-4ab1-a234-6e88cc92bb46.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](img/12acdf4e-a1ea-4ab1-a234-6e88cc92bb46.png)'
- en: Once everything is updated, let's move on to setting up our **Android Virtual
    Device** (**AVD**) to test our application in a development environment.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦一切都更新完毕，我们将继续设置我们的 **Android Virtual Device**（**AVD**）以便在开发环境中测试我们的应用。
- en: Setting up our Android Virtual Device for development
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置我们的 Android 虚拟设备进行开发
- en: Android Emulator will enable us to test our Android application on a computer
    and we will not require an actual device to test.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: Android 模拟器将使我们能够在计算机上测试 Android 应用，我们无需实际设备进行测试。
- en: 'Let''s click on Tools | Android | Android Emulator Manager:'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们点击 Tools | Android | Android Emulator Manager：
- en: '![](img/dc7f01be-b9c0-41a5-946c-e44f62fad570.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dc7f01be-b9c0-41a5-946c-e44f62fad570.png)'
- en: To make this process easier and simpler, we'll start with the existing mobile
    templates available for Android Emulator.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了简化这个过程，我们将从现有的适用于 Android 模拟器的移动模板开始。
- en: 'Go to the Device Definitions tab shown in the following screen. Once you reach
    the Device Definitions screen, scroll down until you see Nexus devices in the
    list:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到以下屏幕中显示的设备定义选项卡。进入设备定义屏幕后，向下滚动直到你看到 Nexus 设备：
- en: '![](img/6cb95b8f-1522-46b7-b341-2f0a0988617c.png)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6cb95b8f-1522-46b7-b341-2f0a0988617c.png)'
- en: Select the Nexus device of your choice and click on the Create AVD button on
    the right-hand side.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择你喜欢的 Nexus 设备，并点击右侧的 Create AVD 按钮。
- en: 'Next, you should get a window such as the following, where you can customize
    your Android Emulator to your requirements:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，你应该会看到如下窗口，在这里你可以根据自己的需求自定义 Android 模拟器：
- en: '![](img/ef5e3afb-3952-4696-bcc2-2687cb98a89c.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ef5e3afb-3952-4696-bcc2-2687cb98a89c.png)'
- en: Fill in all the required details. You can refer to the preceding screenshot
    for help. Once you click OK, AVD Manager will create a new Android Emulator for
    you.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写所有必需的详细信息。你可以参考前面的截图帮助你。一旦点击 OK，AVD 管理器将为你创建一个新的 Android 模拟器。
- en: 'To verify that our emulator is created, let''s go back to the Android Virtual
    Devices tab in the Android Virtual Device (AVD) Manager and we can find the newly
    created AVD in the list:'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了验证我们的模拟器是否已创建，让我们回到 Android 虚拟设备（AVD）管理器中的 Android 虚拟设备选项卡，我们可以在列表中找到新创建的
    AVD：
- en: '![](img/1798ff91-aa86-4833-8684-fa18f81a4968.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1798ff91-aa86-4833-8684-fa18f81a4968.png)'
- en: You must be eager to start this AVD and see how it looks and behaves. So, let's
    not wait anymore; select the AVD and hit the Start button.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您一定迫不及待想要启动这个 AVD，看看它的外观和表现如何。那么，让我们不再等待，选择 AVD 并点击启动按钮。
- en: 'Before AVD Manager starts the AVD, it will give us some launch options similar
    to the ones shown in the following screenshot:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 AVD 管理器启动 AVD 之前，它会给我们一些启动选项，类似于以下截图所示的内容：
- en: '![](img/e50f580c-54f4-4c7e-8ee7-ea409d1844cd.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e50f580c-54f4-4c7e-8ee7-ea409d1844cd.png)'
- en: Here, you can scale the display size to the actual phone size we selected as
    a template earlier (Nexus 6 in this case); once done, click Launch. The emulator
    might not launch. It is important to see this error to understand the requirement
    for AVD to be run in an x86 environment.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这里，您可以将显示大小调整为我们之前选择的模板的实际手机大小（本例中为 Nexus 6）；完成后，点击启动。模拟器可能不会启动。看到这个错误非常重要，它有助于我们理解
    AVD 需要在 x86 环境中运行的要求。
- en: Now, there are some prerequisites for launching Android Emulator in an x86 environment;
    one main one is that it requires Virtualization Technology (Intel VT-x) to be
    enabled.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在 x86 环境中启动 Android 模拟器有一些先决条件；其中一个主要要求是必须启用虚拟化技术（Intel VT-x）。
- en: We need to check VT-x is enabled in the BIOS for our machine before running
    the emulator. Our machine must have Intel VT-x enabled, and if we have Hyper-V
    installed on the machine, that needs to be uninstalled as well.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在运行模拟器之前，我们需要检查机器的 BIOS 是否启用了 VT-x。我们的机器必须启用 Intel VT-x，如果机器上安装了 Hyper-V，也需要将其卸载。
- en: 'Otherwise, you will see a screen like this stating the issue while starting
    the emulator:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 否则，您将看到类似这样的屏幕，说明在启动模拟器时出现了问题：
- en: '![](img/2e088a3b-02c9-4294-8489-48cabc2c4f9b.png)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2e088a3b-02c9-4294-8489-48cabc2c4f9b.png)'
- en: In the preceding screenshot, we can see VT feature disabled in BIOS/UEFI.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的截图中，我们可以看到 VT 功能在 BIOS/UEFI 中被禁用。
- en: To enable VT/VT-x, go to the BIOS and there you should see an option to enable
    Virtualization Technology (VT-x). We won't be getting into the process of how
    to do this, since it differs from machine to machine.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要启用 VT/VT-x，请进入 BIOS，您应该会看到一个选项来启用虚拟化技术（VT-x）。我们不会详细讲解如何操作，因为不同的机器设置方法不同。
- en: 'Apart from enabling VT, we also need to check whether Hyper-V is installed
    on our machine. To do so, follow these steps:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 除了启用 VT，我们还需要检查 Hyper-V 是否已安装在机器上。为此，请按照以下步骤操作：
- en: Open Control Panel.
  id: totrans-128
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开控制面板。
- en: 'Click on Programs:'
  id: totrans-129
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“程序”：
- en: '![](img/56f90755-b775-45b1-ba4e-92aa69128657.png)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![](img/56f90755-b775-45b1-ba4e-92aa69128657.png)'
- en: 'Click on Turn Windows Features on or off:'
  id: totrans-131
  prefs:
  - PREF_OL
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“打开或关闭 Windows 功能”：
- en: '![](img/36301a9b-4bcb-41e8-85b4-bb6b110aff64.png)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![](img/36301a9b-4bcb-41e8-85b4-bb6b110aff64.png)'
- en: 'Scroll down to check whether you find Hyper-V in the list of programs:'
  id: totrans-133
  prefs:
  - PREF_OL
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向下滚动查看是否能在程序列表中找到 Hyper-V：
- en: '![](img/9fe3f8ae-888e-4db6-aea0-c1e444a7e06a.png)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9fe3f8ae-888e-4db6-aea0-c1e444a7e06a.png)'
- en: Unselect Hyper-V if it is currently selected. Click OK.
  id: totrans-135
  prefs:
  - PREF_OL
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果 Hyper-V 已选择，请取消选择它。点击确定。
- en: This might restart your system.
  id: totrans-136
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这可能会重启您的系统。
- en: '![](img/2e7c3785-14ef-43eb-bfed-8baab38ce4fb.png)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2e7c3785-14ef-43eb-bfed-8baab38ce4fb.png)'
- en: This should remove Hyper-V, and finally we are good to go.
  id: totrans-138
  prefs:
  - PREF_OL
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这应该会移除 Hyper-V，最后一切准备就绪。
- en: 'Let''s come back to Visual Studio to start our AVD. This time, the emulator
    starts successfully and looks like this:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们回到 Visual Studio 启动我们的 AVD。这次，模拟器成功启动，界面如下：
- en: '![](img/1c16411c-42f4-4039-adce-fc96039c7b66.png)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1c16411c-42f4-4039-adce-fc96039c7b66.png)'
- en: If your AVD doesn't look like the preceding screenshot, please go back and edit
    the AVD to change the skin to No skin.
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您的 AVD 看起来与前面的截图不一样，请返回并编辑 AVD，将皮肤更改为“无皮肤”。
- en: Awesome! Now we have our running Android Virtual Device we can begin coding
    our new Android application with Xamarin.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！现在我们有了正在运行的 Android 虚拟设备，可以开始使用 Xamarin 编写我们的新 Android 应用程序了。
- en: Summary
  id: totrans-143
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we learned about the brief history of Xamarin and why it's
    a great tool for developers looking for cross-platform mobile app development.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们了解了 Xamarin 的简短历史，并探讨了为什么它是开发人员进行跨平台移动应用开发的绝佳工具。
- en: We also learned how to install Visual Studio and Xamarin on a Windows machine,
    along with how to create an AVD for testing our app.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还了解了如何在 Windows 机器上安装 Visual Studio 和 Xamarin，以及如何创建 AVD 来测试我们的应用。
- en: In the next chapter, we will learn about basic application fundamentals and
    create our first Android application using Xamarin.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将学习基本的应用程序基础知识，并使用Xamarin创建我们的第一个Android应用程序。
