["```\nkubectl create configmap myapp-config --from-literal=mycategory.mykey=myvalue \n```", "```\nkubectl create configmap myapp-config2 --from-literal=mycategory.mykey=myvalue\n--from-literal=mycategory.mykey2=myvalue2 \n```", "```\nkubectl get configmap myapp-config2\n```", "```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: myapp-config2\n  namespace: default\ndata:\n  mycategory.mykey: myvalue\n  mycategory.mykey2: myvalue2\n```", "```\n    myconfigid=1125\n    publicapikey=i38ahsjh2\n    ```", "```\n    kubectl create configmap my-config-map --from-file=env.properties\n    ```", "```\n    kubectl describe configmaps my-config-map\n    ```", "```\nName:           my-config-map\nNamespace:      default\nLabels:         <none>\nAnnotations:    <none>\nData\n====\nenv.properties:        39 bytes\n```", "```\nkubectl create configmap my-env-config-map --from-env-file=env.properties\n```", "```\n> kubectl describe configmaps my-env-config-map\n```", "```\nName:         my-env-config-map\nNamespace:    default\nLabels:       <none>\nAnnotations:  <none>\nData\n====\nmyconfigid:\n----\n1125\npublicapikey:\n----\ni38ahsjh2\nEvents:  <none>\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: my-pod-mount-cm\nspec:\n  containers:\n    - name: busybox\n      image: busybox\n      command:\n      - sleep\n      - \"3600\"\n      volumeMounts:\n      - name: my-config-volume\n        mountPath: /app/config\n  volumes:\n    - name: my-config-volume\n      configMap:\n        name: my-config-map\n  restartPolicy: Never\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: my-pod-mount-env\nspec:\n  containers:\n    - name: busybox\n      image: busybox\n      command:\n      - sleep\n      - \"3600\"\n      env:\n        - name: MY_ENV_VAR\n          valueFrom:\n            configMapKeyRef:\n              name: my-env-config-map\n              key: myconfigid\n  restartPolicy: Never\n```", "```\n> echo -n 'mysecretpassword' > ./pass.txt\n> kubectl create secret generic my-secret --from-file=./pass.txt\n```", "```\nsecret \"my-secret\" created\n```", "```\n> kubectl describe secrets/db-user-pass\n```", "```\nName:            my-secret\nNamespace:       default\nLabels:          <none>\nAnnotations:     <none>\nType:            Opaque\nData\n====\npass.txt:    16 bytes\n```", "```\n> echo -n 'myverybadpassword' | base64\nbXl2ZXJ5YmFkcGFzc3dvcmQ=\n```", "```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: my-secret\ntype: Opaque\ndata:\n  dbpass: bXl2ZXJ5YmFkcGFzc3dvcmQ=\n```", "```\nkubectl create -f secret.yaml\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: my-pod-mount-cm\nspec:\n  containers:\n    - name: busybox\n      image: busybox\n      command:\n      - sleep\n      - \"3600\"\n      volumeMounts:\n      - name: my-config-volume\n        mountPath: /app/config\n        readOnly: true\n  volumes:\n    - name: foo\n      secret:\n      secretName: my-secret\n  restartPolicy: Never\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: my-pod-mount-env\nspec:\n  containers:\n    - name: busybox\n      image: busybox\n      command:\n      - sleep\n      - \"3600\"\n      env:\n        - name: MY_PASSWORD_VARIABLE\n          valueFrom:\n            secretKeyRef:\n              name: my-secret\n              key: dbpass\n  restartPolicy: Never\n```", "```\n> kubectl exec -it my-pod-mount-env -- /bin/bash\n> printenv MY_PASSWORD_VARIABLE\nmyverybadpassword\n```", "```\napiVersion: apiserver.config.k8s.io/v1\nkind: EncryptionConfiguration\nresources:\n  - resources:\n    - secrets\n    providers:\n    - aesgcm:\n        keys:\n        - name: key1\n          secret: c2VjcmV0IGlzIHNlY3VyZQ==\n        - name: key2\n          secret: dGhpcyBpcyBwYXNzd29yZA==\n```", "```\n    > echo -n 'secrettotest' | base64\n    c2VjcmV0dG90ZXN0\n    ```", "```\n    apiVersion: v1\n    kind: Secret\n    metadata:\n     name: secret-to-test\n    type: Opaque\n    data:\n      myencsecret: c2VjcmV0dG90ZXN0\n    ```", "```\n    kubectl apply -f secret_to_test.yaml\n    ```", "```\n    k8s:enc:kms:v1:azurekmsprovider.\n    ```", "```\n    > kubectl get secrets secret-to-test -o yaml\n    ```", "```\n> echo 'c2VjcmV0dG90ZXN0' | base64 --decode\n> secrettotest\n```", "```\napiVersion: apiserver.config.k8s.io/v1\nkind: EncryptionConfiguration\nresources:\n  - resources:\n    - secrets\n    providers:\n    - identity: {}\n```", "```\nkubectl get secrets --all-namespaces -o json | kubectl replace -f -\n```"]