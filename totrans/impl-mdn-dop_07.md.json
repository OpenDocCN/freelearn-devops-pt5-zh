["```\ngcloud components install kubectl\n```", "```\ngcloud container clusters get-credentials testing-cluster --zone europe-west1-c --project david-on-microservices\n```", "```\nFetching cluster endpoint and auth data.\nkubeconfig entry generated for testing-cluster.\n```", "```\nkubectl get nodes\n```", "```\nkubectl proxy\n```", "```\nStarting to serve on 127.0.0.1:8001\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n name: nginx\n labels:\n name: nginx\nspec:\n containers:\n - name: nginx\n image: nginx\n ports:\n - containerPort: 80\n resources:\n requests:\n memory: \"64Mi\"\n cpu: \"250m\"\n```", "```\nkubectl apply -f pod.yml\n```", "```\npod \"nginx\" created.\n```", "```\nkubectl create -f pod.yml\n```", "```\nWarning: kubectl apply should be used on resource created by either kubectl create --save-config or kubectl apply\npod \"nginx\" configured\n```", "```\nkubectl get pods\n```", "```\nkubectl get nodes\n```", "```\nkubectl describe pod nginx\n```", "```\nkubectl exec -it nginx bash\n```", "```\napiVersion: extensions/v1beta1\nkind: ReplicaSet\nmetadata:\n name: nginx-rs\nspec:\n replicas: 3\n template:\n metadata:\n labels:\n app: nginx\n tier: frontend\n spec:\n containers:\n - name: nginx\n image: nginx\n resources:\n requests:\n cpu: 256m\n memory: 100Mi\n ports:\n - containerPort: 80\n```", "```\nkubectl apply -f replicaset.yml\n```", "```\nreplicaset \"nginx-rs\" created\n```", "```\nkubectl get replicaset nginx-rs\n```", "```\nkubectl get pods\n```", "```\nkubectl delete pod nginx-rs-0g7nk\n```", "```\nkubectl apply -f replicaset.yml\n```", "```\nkubectl autoscale replicaset nginx-rs --max=10\n```", "```\napiVersion: autoscaling/v1\nkind: HorizontalPodAutoscaler\nmetadata:\n name: nginx-hpa\nspec:\n maxReplicas: 10\n minReplicas: 1\n scaleTargetRef:\n kind: ReplicaSet\n name: nginx-rs\n targetCPUUtilizationPercentage: 80\n```", "```\nkubectl apply -f horizontalpodautoscaler.yml\n```", "```\napiVersion: apps/v1beta1\nkind: Deployment\nmetadata:\n name: nginx-deployment\nspec:\n strategy:\n type: RollingUpdate\n rollingUpdate:\n maxUnavailable: 0\n maxSurge: 1\n replicas: 3\n template:\n metadata:\n labels:\n app: nginx\n spec:\n containers:\n - name: nginx\n image: nginx\n resources:\n requests:\n cpu: 256m\n memory: 100Mi\n ports:\n - containerPort: 80\n```", "```\nkubectl apply -f deployment.yml --record\n```", "```\nkubectl rollout history deployment/nginx-deployment\n```", "```\nkubectl set image deployment/nginx-deployment nginx=nginx:1.9.1\n```", "```\nkubectl rollout history deployment/nginx-deployment\n```", "```\nkubectl rollout undo deployment/nginx-deployment \n```", "```\nkind: Service\napiVersion: v1\nmetadata:\n name: nginx-service\nspec:\n selector:\n app: nginx\n ports:\n - protocol: TCP\n port: 80\n targetPort: 80\n```", "```\nkubectl apply -f service.yml\n```", "```\nkubectl run -i --tty busybox --image=busybox --restart=Never -- sh\n```", "```\nnslookup nginx-service\n```", "```\nServer: 10.47.240.10\nAddress 1: 10.47.240.10 kube-dns.kube-system.svc.cluster.local\n\nName: nginx-service\nAddress 1: 10.47.245.73 nginx-service.default.svc.cluster.local\n```", "```\nenv\n```", "```\nNGINX_SERVICE_PORT_80_TCP_ADDR=10.47.245.73\nNGINX_SERVICE_PORT_80_TCP_PORT=80\nNGINX_SERVICE_PORT_80_TCP_PROTO=tcp\nNGINX_SERVICE_SERVICE_PORT=80\nNGINX_SERVICE_PORT=tcp://10.47.245.73:80\nNGINX_SERVICE_PORT_80_TCP=tcp://10.47.245.73:80\nNGINX_SERVICE_SERVICE_HOST=10.47.245.73\n```", "```\nkind: Service\napiVersion: v1\nmetadata:\n   name: nginx-service\nspec:\n type: LoadBalancer\n   selector:\n      app: nginx\n ports:\n   - protocol: TCP\n      port: 80\n      targetPort: 80\n```", "```\necho -n \"This is a secret\" > ./secret1.txt\necho -n \"This is another secret\" > ./secret2.txt\n```", "```\nkubectl create secret generic my-secrets --from-file=./secret1.txt --from-file=./secret2.txt\n```", "```\nkubectl get secrets\n```", "```\napiVersion: v1\nkind: Secret\nmetadata:\n name: my-secret-yaml\ntype: Opaque\ndata:\n secret1: VGhpcyBpcyBhIHNlY3JldA==\n secret2: VGhpcyBpcyBhbm90aGVyIHNlY3JldA==\n```", "```\necho -n \"This is a secret\" | base64\necho -n \"This is another secret\" | base64\n```", "```\nkubectl create -f secret.yml\n```", "```\n{\n   \"apiVersion\": \"v1\",\n   \"kind\": \"Pod\",\n   \"metadata\": {\n      \"name\": \"test-secrets\",\n      \"namespace\": \"default\"\n   },\n   \"spec\": {\n      \"containers\": [{\n         \"name\": \"pod-with-secret\",\n         \"image\": \"nginx\",\n         \"volumeMounts\": [{\n            \"name\": \"secrets\",\n            \"mountPath\": \"/secrets\",\n            \"readOnly\": true\n         }]\n      }],\n      \"volumes\": [{\n          \"name\": \"secrets\",\n          \"secret\": {\n              \"secretName\": \"my-secret\"\n          }\n      }]\n   }\n}\n```", "```\nkubectl exec -it test-secrets ls /secrets\n```"]