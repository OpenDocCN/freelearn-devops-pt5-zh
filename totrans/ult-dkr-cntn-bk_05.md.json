["```\n    $ cd ~/The-Ultimate-Docker-Container-Book\n    ```", "```\n    $ mkdir ch05 && cd ch05\n    ```", "```\n    $ docker container run --name demo \\   alpine /bin/sh -c 'echo \"This is a test\" > sample.txt'\n    ```", "```\n    $ docker container diff demo\n    ```", "```\nA /sample.txt\n```", "```\n    $ docker volume create sample\n    ```", "```\nsample\n```", "```\n    $ docker volume inspect sample\n    ```", "```\n    $ docker container run --name test -it \\     -v sample:/data \\     alpine /bin/sh\n    ```", "```\nUnable to find image 'alpine:latest' locally latest:Pulling from library/alpine\n050382585609: Pull complete\nDigest: sha256: 8914eb54f968791faf6a86...\nStatus: Downloaded newer image for alpine:latest\n/ #\n```", "```\n/ #\n```", "```\n    / # cd /data/ # echo \"Some data\" > data.txt/ # echo \"Some more data\" > data2.txt\n    ```", "```\n    $ docker container rm test\n    ```", "```\n    $ docker container run --name test2 -it --rm \\     -v sample:/app/data \\     centos:7 /bin/bash\n    ```", "```\nUnable to find image 'centos:7' locally7: Pulling from library/centos\n8ba884070f61: Pull complete\nDigest: sha256:a799dd8a2ded4a83484bbae769d9765...\nStatus: Downloaded newer image for centos:7\n[root@275c1fe31ec0 /]#\n```", "```\n    [root@275c1fe31ec0 /]# cd /app/data[root@275c1fe31ec0 /]# ls –l\n    ```", "```\n-rw-r--r-- 1 root root 10 Dec  4 14:03 data.txt-rw-r--r-- 1 root root 15 Dec  4 14:03 data2.txt\n```", "```\n    $ docker volume rm sample\n    ```", "```\n    $ docker volume ls\n    ```", "```\n    $ docker container rm -v -f $(docker container ls -aq)\n    ```", "```\n    $ docker volume create sample$ docker volume create sample-2\n    ```", "```\n    $ cd /var/lib/docker/volumes/sample/_data\n    ```", "```\ncd: no such file or directory: /var/lib/docker/volumes/sample/_data\n```", "```\n    $ docker container run -it --privileged --pid=host \\    debian nsenter -t 1 -m -u -n -i sh\n    ```", "```\nnsenter -t 1 -m -u -n -i sh\n```", "```\n    / # cd /var/lib/docker/volumes/sample/_data\n    ```", "```\n    /var/lib/docker/volumes/sample/_data # ls –l\n    ```", "```\ntotal 0\n```", "```\n    / # cd /var/lib/docker/volumes/sample-2/_data/var/lib/docker/volumes/sample-2/ # ls –l\n    ```", "```\ntotal 0\n```", "```\n    $ docker container run --rm -it \\    -v sample:/data alpine /bin/sh\n    ```", "```\n    / # echo \"Hello world\" > /data/sample.txt/ # echo \"Other message\" > /data/other.txt\n    ```", "```\n    / # cd /var/lib/docker/volumes/sample/_data/ # ls -l\n    ```", "```\ntotal 8-rw-r--r--    1 root    root    10 Dec  4 14:03 data.txt\n-rw-r--r--    1 root    root    15 Dec  4 14:03 data2.txt\n```", "```\n    / # echo \"I love Docker\" > docker.txt\n    ```", "```\n    / # ls –l\n    ```", "```\ntotal 12-rw-r--r--    1 root    root    10 Dec  4 14:03 data.txt\n-rw-r--r--    1 root    root    15 Dec  4 14:03 data2.txt\n-rw-r--r--    1 root    root    14 Dec  4 14:25 docker.txt\n```", "```\n    $ docker container run --rm \\    -v sample:/data \\    centos:7 ls -l /data\n    ```", "```\ntotal 12-rw-r--r-- 1 root root 10 Dec  4 14:03 data.txt\n-rw-r--r-- 1 root root 15 Dec  4 14:03 data2.txt\n-rw-r--r-- 1 root root 14 Dec  4 14:25 docker.txt\n```", "```\n    $ docker container run -it --name writer \\    -v shared-data:/data \\    .alpine /bin/sh\n    ```", "```\n    # / echo \"I can create a file\" > /data/sample.txt\n    ```", "```\n    $ docker container run -it --name reader \\    -v shared-data:/app/data:ro \\    ubuntu:22.04 /bin/bash\n    ```", "```\n    $ ls -l /app/data\n    ```", "```\ntotal 4-rw-r--r-- 1 root root 20 Jan 28 22:55 sample.txt\n```", "```\n    # / echo \"Try to break read/only\" > /app/data/data.txt\n    ```", "```\nbash: /app/data/data.txt: Read-only file system\n```", "```\n    $ docker container rm -f $(docker container ls -aq)$ docker volume rm $(docker volume ls -q)\n    ```", "```\n$ docker container run --rm -it \\    -v $(pwd)/src:/app/src \\\n    alpine:latest /bin/sh\n```", "```\n    $ cd ~/The-Ultimate-Docker-Container-Book/ch05$ mkdir my-web && cd my-web\n    ```", "```\n    $ echo \"<h1>Personal Website</h1>\" > index.xhtml\n    ```", "```\n    FROM nginx:alpineCOPY . /usr/share/nginx/html\n    ```", "```\n    $ docker image build -t my-website:1.0 .\n    ```", "```\n    $ docker container run -d \\    --name my-site \\    -p 8080:80 \\    my-website:1.0\n    ```", "```\n    <h1>Personal Website</h1><p>This is some text</p>\n    ```", "```\n    $ docker container rm -f my-site$ docker image build -t my-website:1.0 .$ docker container run -d \\    --name my-site \\    -p 8080:80 \\    my-website:1.0\n    ```", "```\n    $ docker container rm -f my-site$ docker container run -d \\    --name my-site \\    -v $(pwd):/usr/share/nginx/html \\    -p 8080:80 \\    my-website:1.0\n    ```", "```\n    $ docker container rm -f my-site\n    ```", "```\nVOLUME /app/dataVOLUME /app/data, /app/profiles, /app/config\nVOLUME [\"/app/data\", \"/app/profiles\", \"/app/config\"]\n```", "```\n    $ docker image pull mongo:5.0\n    ```", "```\n    $ docker image inspect \\    --format='{{json .ContainerConfig.Volumes}}' \\    mongo:5.0 | jq .\n    ```", "```\n{    \"/data/configdb\": {},\n    \"/data/db\": {}\n}\n```", "```\n    $ docker run --name my-mongo -d mongo:5.0\n    ```", "```\n    $ docker inspect --format '{{json .Mounts}}' my-mongo | jq .\n    ```", "```\n$ docker rm -f my-mongo\n```", "```\n    $ export\n    ```", "```\n...COLORTERM=truecolor\nCOMMAND_MODE=unix2003\n...\nHOME=/Users/gabriel\nHOMEBREW_CELLAR=/opt/homebrew/Cellar\nHOMEBREW_PREFIX=/opt/homebrew\nHOMEBREW_REPOSITORY=/opt/homebrew\nINFOPATH=/opt/homebrew/share/info:/opt/homebrew/...:\nLANG=en_GB.UTF-8\nLESS=-R\nLOGNAME=gabriel\n...\n```", "```\n    $ docker container run --rm -it alpine /bin/sh\n    ```", "```\n/ # export\n```", "```\nexport HOME='/root'export HOSTNAME='91250b722bc3'\nexport PATH='/usr/local/sbin:/usr/local/bin:...'\nexport PWD='/'\nexport SHLVL='1'\nexport TERM='xterm'\n```", "```\n$ docker container run --rm -it \\    --env LOG_DIR=/var/log/my-log \\\n    alpine /bin/sh\n/ #\n```", "```\n/ # export | grep LOG_DIR\n```", "```\nexport LOG_DIR='/var/log/my-log'\n```", "```\n$ docker container run --rm -it \\    --env LOG_DIR=/var/log/my-log \\\n    --env MAX_LOG_FILES=5 \\\n    --env MAX_LOG_SIZE=1G \\\n    alpine /bin/sh\n```", "```\n/ #\n```", "```\n/ # export | grep LOG\n```", "```\nexport LOG_DIR='/var/log/my-log'export MAX_LOG_FILES='5'\nexport MAX_LOG_SIZE='1G'\n```", "```\n    $ cd ~/The-Ultimate-Docker-Container-Book/ch05\n    ```", "```\n    $ mkdir config-file && cd config-file\n    ```", "```\n    LOG_DIR=/var/log/my-logMAX_LOG_FILES=5MAX_LOG_SIZE=1G\n    ```", "```\n    $ docker container run --rm -it \\    --env-file ./development.config \\    alpine sh -c \"export | grep LOG\"\n    ```", "```\nexport LOG_DIR='/var/log/my-log'export MAX_LOG_FILES='5'\nexport MAX_LOG_SIZE='1G'\n```", "```\n    $ cd ~/The-Ultimate-Docker-Container-Book/ch05\n    ```", "```\n    $ mkdir config-in-image && cd config-in-image\n    ```", "```\n    FROM alpine:latestENV LOG_DIR=/var/log/my-logENV MAX_LOG_FILES=5ENV MAX_LOG_SIZE=1G\n    ```", "```\n    $ docker image build -t my-alpine .\n    ```", "```\n    $ docker container run --rm -it \\    my-alpine sh -c \"export | grep LOG\"\n    ```", "```\nexport LOG_DIR='/var/log/my-log'export MAX_LOG_FILES='5'\nexport MAX_LOG_SIZE='1G'\n```", "```\n    $ docker container run --rm -it \\    --env MAX_LOG_SIZE=2G \\    --env MAX_LOG_FILES=10 \\    my-alpine sh -c \"export | grep LOG\"\n    ```", "```\n    export LOG_DIR='/var/log/my-log'export MAX_LOG_FILES='10'export MAX_LOG_SIZE='2G'\n    ```", "```\nARG BASE_IMAGE_VERSION=12.7-stretchFROM node:${BASE_IMAGE_VERSION}\nWORKDIR /app\nCOPY packages.json .\nRUN npm install\nCOPY . .\nCMD npm start\n```", "```\n$ docker image build \\    --build-arg BASE_IMAGE_VERSION=12.7-alpine \\\n    -t my-node-app-test .\n```", "```\n    $ docker volume create my-products\n    ```", "```\n    $ docker container run -it --rm \\    -v my-products:/data:ro \\    alpine /bin/sh\n    ```", "```\n    $ docker volume inspect my-products | grep Mountpoint\n    ```", "```\n    \"Mountpoint\": \"/var/lib/docker/volumes/my-products/_data\"\n    ```", "```\n    $ docker container run -it --privileged --pid=host \\    debian nsenter -t 1 -m -u -n -i sh\n    ```", "```\n    / # cd /var/lib/docker/volumes/my-products/_data\n    ```", "```\n    / # echo \"I love Docker\" > sample.txt\n    ```", "```\n    $ docker container run --rm \\    --volume my-products:/data \\    alpine ls -l /data\n    ```", "```\ntotal 4-rw-r--r--    1 root     root    14 Dec  4 17:35 sample.txt\n```", "```\n    $ docker run -it --rm -v my-products:/data:ro alpine /bin/sh/ # cd /data/data # cat sample.txt\n    ```", "```\n$ docker run -it --rm -v my-products:/app-data alpine /bin/sh/ # cd /app-data\n/app-data # echo \"Hello other container\" > hello.txt\n/app-data # exit\n```", "```\n    $ docker container run -it --rm \\    -v $HOME/my-project:/app/data \\    alpine /bin/sh\n    ```", "```\n    $ docker volume prune\n    ```", "```\n    $ docker container run --rm -it \\    --env-file ./development.config \\    alpine sh -c \"export\"\n    ```"]