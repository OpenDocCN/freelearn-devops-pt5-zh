- en: Secure Coding Best Practices
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安全编码最佳实践
- en: Secure architecture design and threat modeling are followed by the secure coding
    phase. In the coding phase, we would like to avoid the use of unsafe APIs, buffer
    overflow, sensitive information leakage, and so on. It's difficult for every developer
    to be familiar with all secure coding rules. Therefore, how to apply secure coding
    tools and tips to spot major security issue will be discussed in this chapter.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 安全架构设计和威胁建模后是安全编码阶段。在编码阶段，我们希望避免使用不安全的 API、缓冲区溢出、敏感信息泄露等问题。每个开发人员都很难熟悉所有的安全编码规则。因此，如何运用安全编码工具和技巧来发现主要的安全问题，将在本章中讨论。
- en: 'We will cover the following topics in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Secure coding industry best practices
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全编码行业最佳实践
- en: Establishing secure coding baselines
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 建立安全编码基准
- en: Secure coding awareness training
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全编码意识培训
- en: Tool evaluation
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工具评估
- en: Tool optimization
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工具优化
- en: High-risk module review
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高风险模块审查
- en: Manual code review tools
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 手动代码审查工具
- en: Secure code scanning tools
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全代码扫描工具
- en: Secure compiling
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全编译
- en: Common issues in practice
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实践中的常见问题
- en: Secure coding industry best practices
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安全编码行业最佳实践
- en: Secure coding is the foundation of secure software. We have done threat modeling
    and secure architecture design. These require secure coding to make them happen.
    Secure coding can be a challenge for the development team since developers are
    occupied with working on new features, and there may be hundreds of secure coding
    rules to learn. Before we discuss secure coding practices in more detail, we will
    review existing secure coding standards we can refer to.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 安全编码是安全软件的基础。我们已经进行了威胁建模和安全架构设计。这些都需要通过安全编码来实现。安全编码对于开发团队来说可能是一个挑战，因为开发人员通常忙于开发新特性，且可能需要学习数百条安全编码规则。在我们更详细地讨论安全编码实践之前，我们将回顾一下可以参考的现有安全编码标准。
- en: 'Depending on programming languages, secure coding standards are summarized
    in the following table:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 根据编程语言的不同，安全编码标准总结如下表所示：
- en: '| **Reference standards** | **Description and reference** |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| **参考标准** | **描述与参考** |'
- en: '| CERT Secure Coding |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| CERT 安全编码 |'
- en: This provides secure coding standards for C, C++, Java, Perl, and Android.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该标准为 C、C++、Java、Perl 和 Android 提供了安全编码标准。
- en: '|'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Find Security Bugs |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| 查找安全漏洞 |'
- en: This provides bug patterns with samples of vulnerable code and solution for
    Java.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它提供了 Java 的漏洞代码样本和解决方案的错误模式。
- en: '|'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| CWE |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| CWE |'
- en: This provides vulnerable source code samples from the perspective of common
    software weaknesses. The coding samples cover C, C++, Java, and PHP.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它提供了从常见软件弱点的角度出发的漏洞源代码示例。编码示例涵盖 C、C++、Java 和 PHP。
- en: '|'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Android |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| Android |'
- en: Android Application Secure Design and Secure Coding Guidebook
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Android 应用程序安全设计与安全编码指南
- en: '|'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| OWASP SKF |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| OWASP SKF |'
- en: OWASP Security Knowledge Framework.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OWASP 安全知识框架。
- en: It can be used as an internal security knowledge base, which includes OWASP
    ASVS and secure coding knowledge.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它可以作为一个内部安全知识库，包括 OWASP ASVS 和安全编码知识。
- en: '|'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| PHP Security |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| PHP 安全 |'
- en: OWASP PHP Security Cheat Sheet
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OWASP PHP 安全备忘单
- en: '|'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| OWASP Code Review |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| OWASP 代码审查 |'
- en: OWASP Code Review Project
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OWASP 代码审查项目
- en: '|'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Apple Secure Coding Guide |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| Apple 安全编码指南 |'
- en: Apple Secure Coding Guide
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Apple 安全编码指南
- en: '|'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Go |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| Go |'
- en: Secure Coding Practices for GO language
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GO 语言的安全编码实践
- en: '|'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| JavaScript |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| JavaScript |'
- en: JavaScript Secure Coding Practices
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JavaScript 安全编码实践
- en: '|'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Python |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| Python |'
- en: OWASP Python Security Project
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OWASP Python 安全项目
- en: '|'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: We understand the secure coding baseline and standards. Furthermore, the key
    challenge is how to apply these secure coding rules to developers' daily coding
    activities. The following are the recommended approaches to proceed with the secure
    coding practices.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我们理解了安全编码基准和标准。此外，关键挑战在于如何将这些安全编码规则应用到开发人员的日常编码活动中。以下是进行安全编码实践的推荐方法。
- en: Establishing secure coding baselines
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 建立安全编码基准
- en: Secure coding baselines are the minimum secure coding requirements and a checklist
    for the project team to move to the next stage. Secure coding baselines are also
    part of the release criteria. It's always suggested you use secure coding guidelines
    based on industry best practices or standards, such as **CERT Secure Coding**, as
    described in the preceding table.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 安全编码基准是最基本的安全编码要求，也是项目团队向下一个阶段推进的检查清单。安全编码基准还是发布标准的一部分。建议始终使用基于行业最佳实践或标准的安全编码指南，例如前表中描述的
    **CERT 安全编码**。
- en: Define secure coding baselines based on each programming language, such as PHP,
    Python, JavaScript, Android, and iOS. The secure coding baseline is better to
    include the information not only secure coding rules but also examples of security
    risks, vulnerable code examples, and suggested ones. Here is an example.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 根据每种编程语言（如PHP、Python、JavaScript、Android和iOS）定义安全编码基准。安全编码基准最好不仅包括安全编码规则，还包括安全风险、易受攻击的代码示例和建议的解决方案。以下是一个示例。
- en: '**Secure code issue – predictable random numbers**:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**安全代码问题 – 可预测的随机数**：'
- en: The use of a predictable random number can result in vulnerabilities in the
    session ID, token, or encryption initialization vector. It's suggested to use
    `java.security.SecureRandom` instead of `java.util.Random:`
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 使用可预测的随机数可能会导致会话ID、令牌或加密初始化向量的漏洞。建议使用`java.security.SecureRandom`代替`java.util.Random`：
- en: '**`// Vulnerable Code`**'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**`// 易受攻击的代码`**'
- en: '`Random rnd = New Random ();`'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '`Random rnd = New Random ();`'
- en: '**`// Suggested Code`**'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '**`// 建议的代码`**'
- en: '`SecureRandom rnd = SecureRandom();`'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '`SecureRandom rnd = SecureRandom();`'
- en: 'All projects must be scanned with specified code scanning tools before releases.
    Some organizations may also define release criteria for secure coding practices.
    Here are some examples:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 所有项目在发布前必须使用指定的代码扫描工具进行扫描。某些组织还可能会定义安全编码实践的发布标准。以下是一些示例：
- en: All the warnings from scanning results that were generated by scanning tools
    must be checked
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扫描工具生成的扫描结果中的所有警告都必须检查
- en: All compiler warnings (not just errors) should be checked and cleared
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有编译器警告（不仅仅是错误）都应检查并清除
- en: The number of open defects in the scanning results cannot exceed a certain percentage
    per line of code
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扫描结果中每行代码的开放缺陷数不能超过某个百分比
- en: In addition, the secure coding baselines require related developer tools and
    training in practice; otherwise, those secure coding rules will be just documents.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，安全编码基准还需要相关的开发工具和实践中的培训；否则，这些安全编码规则将仅仅是文档。
- en: Secure coding awareness training
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安全编码意识培训
- en: 'The purpose of secure coding training is to inform the development team of
    the forthcoming secure coding practices we are going to perform. At the initial
    stage of the secure coding awareness training, the focus will be mainly on the
    following:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 安全编码培训的目的是让开发团队了解我们即将执行的安全编码实践。在安全编码意识培训的初期阶段，重点将主要集中在以下内容：
- en: What are secure coding standards or baselines?
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是安全编码标准或基准？
- en: What are common industry secure coding issues?
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 常见的行业安全编码问题有哪些？
- en: How will they impact on a developer's daily tasks?
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们会如何影响开发者的日常任务？
- en: Release criteria for secure code scanning
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全代码扫描的发布标准
- en: 'A case study or scenario-based vulnerable source code example will have better
    training effects than simply secure coding rules. The following are good references
    in this area and provide a lot of vulnerable and secure best practice code samples:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 一个基于案例研究或场景的易受攻击的源代码示例，比单纯的安全编码规则具有更好的培训效果。以下是该领域的良好参考，提供了大量易受攻击的代码和安全最佳实践代码示例：
- en: '**OWASP Security Knowledge Framework**: [https://www.securityknowledgeframework.org/](https://www.securityknowledgeframework.org/)'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OWASP安全知识框架**：[https://www.securityknowledgeframework.org/](https://www.securityknowledgeframework.org/)'
- en: '**Android Application Secure Design and Secure Coding Guidebook**: [http://www.jssec.org/dl/android_securecoding_en.pdf](http://www.jssec.org/dl/android_securecoding_en.pdf)'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**安卓应用安全设计与安全编码指南**：[http://www.jssec.org/dl/android_securecoding_en.pdf](http://www.jssec.org/dl/android_securecoding_en.pdf)'
- en: '**Find Security Bugs Patterns for Java**: [https://find-sec-bugs.github.io/](https://find-sec-bugs.github.io/)'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**查找Java安全漏洞模式**：[https://find-sec-bugs.github.io/](https://find-sec-bugs.github.io/)'
- en: '**OWASP Teammentor**: [https://owasp.teammentor.net/angular/user/index](https://owasp.teammentor.net/angular/user/index)'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OWASP Teammentor**：[https://owasp.teammentor.net/angular/user/index](https://owasp.teammentor.net/angular/user/index)'
- en: Tool evaluation
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工具评估
- en: 'Once the team realizes the importance and the challenge of secure coding, it
    will look for some tools to make the secure coding easier. The evaluation of a
    scanning tool may include the following considerations:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦团队意识到安全编码的重要性和挑战，它将寻找一些工具来简化安全编码。扫描工具的评估可能包括以下考虑因素：
- en: '| **Considerations** | **Description** |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| **考虑因素** | **描述** |'
- en: '| Usability |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| 可用性 |'
- en: The target users of the code scanning tools are developers. The usability includes
    the capability to scan parts of the source code, differential scans, scanning
    reports, tracing back to original source code, and so on.
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码扫描工具的目标用户是开发者。可用性包括扫描源代码部分的能力、差异扫描、扫描报告、追溯到原始源代码等。
- en: '|'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Budget |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| 预算 |'
- en: If it's an IDE plugin commercial tool, we need to consider how many concurrent
    users' licenses it will need.
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果它是一个IDE插件商业工具，我们需要考虑它将需要多少并发用户许可证。
- en: '|'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Programming languages support |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| 编程语言支持 |'
- en: Most tools support C/C++ and Java, but do not support script languages, such
    as Python, JavaScript, or PHP.
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大多数工具支持C/C++和Java，但不支持脚本语言，如Python、JavaScript或PHP。
- en: Do a survey of the programming languages used by in-house projects and prioritize
    the programming languages that are going to be supported.
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对公司内部项目使用的编程语言进行调查，并优先支持即将使用的编程语言。
- en: '|'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Detection rate and false positive rates |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| 检测率和误报率 |'
- en: It's common for any scanning tools to have false positive rates, depending on
    the scanning engine and rules. A high false positive is not a bad thing, and it
    can also mean the scanner takes a more conservative approach. Find the tool that
    best fits the projects instead of the most well-known.
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 任何扫描工具都有误报率，这取决于扫描引擎和规则。高误报率并不一定是坏事，它也可能意味着扫描器采取了更保守的策略。选择最适合项目的工具，而不是选择最知名的工具。
- en: To evaluate the detection rate, we may use known vulnerable projects.
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为了评估检测率，我们可以使用已知的漏洞项目。
- en: '|'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Scanning rules update |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| 扫描规则更新 |'
- en: It's important that the tool is constantly updated with rules and scanners.
    One of the key advantages of a commercial tool is that the tool will have up-to-date
    scanning rules.
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工具持续更新规则和扫描器非常重要。商业工具的一个关键优势是它们会有最新的扫描规则。
- en: '|'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Generally, there are two approaches for code scanning. One is static code scanning
    with IDE plugin. It works like a spellcheck and is more intuitive for a developer
    to learn and correct security issues. The other one is to do code scanning with
    a daily build that generates a daily scanning report. Developers will need to
    look into the daily scanning report to fix or to comment on security issues by
    batch. This approach may not be that intuitive for developers, but the compiled
    security scanning may provide better accuracy. To promote adoption of these two
    kinds of scanning tool, starting with a small-scale pilot team is suggested. There
    are some commercial and open source tools available in these two kinds of scanning
    approach.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 通常有两种代码扫描方式。第一种是使用IDE插件进行静态代码扫描，像拼写检查一样工作，对开发者来说更直观，方便学习和修正安全问题。第二种是使用每日构建进行代码扫描，生成每日扫描报告。开发者需要查看每日扫描报告，批量修复或评论安全问题。这种方式对于开发者来说可能不那么直观，但编译后的安全扫描可能提供更高的准确性。为了促进这两种扫描工具的采用，建议从小规模的试点团队开始。市场上有一些商业和开源工具，支持这两种扫描方式。
- en: '|  | **Pros** | **Cons** |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '|  | **优点** | **缺点** |'
- en: '| **IDE plugin static code scanning** | Intuitive to developers (works like
    a spellcheck). |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| **IDE插件静态代码扫描** | 对开发者直观（像拼写检查一样工作）。 |'
- en: It may have higher false positives.
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它可能会产生较高的误报。
- en: It requires every developer to install the plugin
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它要求每个开发者都安装插件。
- en: The detection capability is limited.
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检测能力有限。
- en: The license costs for every developer.
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个开发者的许可证费用。
- en: Requires enforcement uses of the tool for every developer.
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要强制要求每个开发者使用工具。
- en: '|'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| **Daily complied scanning** |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
  zh: '| **每日编译扫描** |'
- en: Security scanning accuracy based on the project integration and compiled scan.
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于项目集成和编译扫描的安全扫描准确性。
- en: Centrally manages the scanning rules and results.
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集中管理扫描规则和结果。
- en: It is easy to build security metrics and monitor the results for every project.
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它容易建立安全指标并监控每个项目的结果。
- en: '|'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Fully buildable source code is required.
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要完整可构建的源代码。
- en: The scanning results need further assignment for developers to check. When a
    developer is assigned to check the reports, he may not be familiar with other
    modules.
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扫描结果需要进一步分配给开发者检查。当开发者被指派去检查报告时，他可能不熟悉其他模块。
- en: '|'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: 'Evaluation of code scanning tools consists of a detection rate, false positive
    rate, potential overhead, and usability for the development team. The vulnerable
    code projects for the evaluation of static code scanning tools are listed in the
    following table:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 代码扫描工具的评估包括检测率、假阳性率、潜在开销以及开发团队的可用性。用于静态代码扫描工具评估的脆弱代码项目列在下表中：
- en: '| **Vulnerable projects** | **Description** | **Programming languages** |'
  id: totrans-115
  prefs: []
  type: TYPE_TB
  zh: '| **脆弱项目** | **描述** | **编程语言** |'
- en: '| **NIST Software Assurance Reference Dataset Project** | The project provides
    on-purpose insecure code examples which can be used to test the detection rate
    of secure code scanning tools | Java, C/C++, C#, PHP |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '| **NIST 软件保障参考数据集项目** | 该项目提供了故意设计的不安全代码示例，可用于测试安全代码扫描工具的检测率。 | Java, C/C++,
    C#, PHP |'
- en: '| **OWASP Node JS Goat** | It''s a vulnerable website to practice OWASP top
    10 security testing and is built by NodeJS. | Node JS |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '| **OWASP Node JS Goat** | 这是一个脆弱的网站，用于练习 OWASP 前 10 大安全测试，使用 NodeJS 构建。 |
    Node JS |'
- en: '| **OWASP WebGoat .Net** | It''s a vulnerable website to practice OWASP top
    10 security testing and is built by .NET. | .NET |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
  zh: '| **OWASP WebGoat .Net** | 这是一个脆弱的网站，用于练习 OWASP 前 10 大安全测试，使用 .NET 构建。 | .NET
    |'
- en: '| **OWASP WebGoat PHP** | It''s a vulnerable website to practice OWASP top
    10 security testing and is built by PHP. | PHP |'
  id: totrans-119
  prefs: []
  type: TYPE_TB
  zh: '| **OWASP WebGoat PHP** | 这是一个脆弱的网站，用于练习 OWASP 前 10 大安全测试，使用 PHP 构建。 | PHP
    |'
- en: '| **OWASP Rail****sGoat** | It''s a vulnerable website to practice OWASP top
    10 security testing and is built by Ruby. | Ruby on Rails |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
  zh: '| **OWASP Rail****sGoat** | 这是一个脆弱的网站，用于练习 OWASP 前 10 大安全测试，使用 Ruby 构建。 | Ruby
    on Rails |'
- en: Once the security team has selected scanning tools after testing the results,
    the security team may engage with more development teams to discuss adoption of
    the tools. Before the adoption of the tools, it's suggested to conduct hands-on
    training via demo usage of the results, handling the scanning results, and using
    the scanning tools.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦安全团队在测试结果后选择了扫描工具，安全团队可能会与更多的开发团队进行沟通，讨论工具的采用。在工具采用之前，建议通过演示使用结果、处理扫描结果以及使用扫描工具来进行实践培训。
- en: This stage of training is focused more on *how* instead of *what*. Examples
    of hands-on tutorials are how to use scanning tools, how to review security issues,
    how to fix based on the scanning results, how to disable some scanning rules,
    and so on.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 这个阶段的培训更多侧重于*如何做*而不是*做什么*。实践教程的示例包括如何使用扫描工具，如何审查安全问题，如何根据扫描结果进行修复，如何禁用某些扫描规则等。
- en: Tool optimization
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工具优化
- en: 'Once the teams have been using the code scanning tools for a while, the security
    team may help to optimize the tools, processes, or rules based on user feedback.
    Here are some key factors to be optimized for a large-scale code scanning adoption:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦团队使用了代码扫描工具一段时间，安全团队可能会根据用户反馈帮助优化工具、流程或规则。以下是大规模代码扫描采用中需要优化的一些关键因素：
- en: '| **Key factors** | **Suggestions** |'
  id: totrans-125
  prefs: []
  type: TYPE_TB
  zh: '| **关键因素** | **建议** |'
- en: '| Scanning rules customization | The purpose of rules customization is to help
    the project team reduce false positives. The security team may help to disable
    some rules that don''t apply to the projects or change rules that always result
    in false positives. |'
  id: totrans-126
  prefs: []
  type: TYPE_TB
  zh: '| 扫描规则定制 | 规则定制的目的是帮助项目团队减少假阳性。安全团队可能会帮助禁用一些不适用于项目的规则，或者修改那些总是导致假阳性的规则。 |'
- en: '| Recommendation fixes | Ideally, IDE plugins will present not only security
    warnings but also suggested fixes. However, if the tools you are using don''t
    support the team, using the OWASP Security Knowledge Framework can be an alternative.
      |'
  id: totrans-127
  prefs: []
  type: TYPE_TB
  zh: '| 推荐修复 | 理想情况下，IDE 插件不仅会显示安全警告，还会提供修复建议。然而，如果所使用的工具不支持团队，使用 OWASP 安全知识框架可以作为替代方案。
    |'
- en: '| Integration | Integrate code scanning tools into Jenkins, and developers''
    IDE plugins. Automation framework. Integration with Jenkins is one of the basics
    of CI/CD. |'
  id: totrans-128
  prefs: []
  type: TYPE_TB
  zh: '| 集成 | 将代码扫描工具集成到 Jenkins 和开发者的 IDE 插件中。自动化框架。与 Jenkins 的集成是 CI/CD 的基本组成部分。
    |'
- en: '| Reporting | The team may request further quality metrics reports, such as
    incremental scanning reports based on previous checked results or top common issue
    cross-projects. |'
  id: totrans-129
  prefs: []
  type: TYPE_TB
  zh: '| 报告 | 团队可能会请求进一步的质量指标报告，例如基于之前检查结果的增量扫描报告或跨项目的常见问题报告。 |'
- en: '| Automation platform | Moving to the next level of secure coding automation
    involves integrating several tools together on an automation platform. Try the
    following open source tools to build your own secure coding automation platform:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '| 自动化平台 | 将安全编码自动化提升到下一个水平涉及将多个工具集成到自动化平台中。尝试以下开源工具来构建自己的安全编码自动化平台：'
- en: '**SWAMP-in-a-Box**:'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SWAMP-in-a-Box**：'
- en: '**JackHammer**:'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**JackHammer**：'
- en: '|'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: High-risk module review
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 高风险模块审查
- en: 'The automation code scanning tool can help to detect most source code security
    issues. However, there is still a need for high-risk modules. In addition to source
    code scanning tools, we will also apply blackbox or **Dynamic Application Security
    Testing** (**DAST**), which will be discussed in later chapters. Think like a
    hacker. Which modules will a hacker be interested in? What information can be
    most valuable to a hacker? What might be the weakest link in the whole application?
    The following table  lists high-risk modules that require further review:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 自动化代码扫描工具可以帮助检测大多数源代码的安全问题。然而，对于高风险模块，仍然需要额外的关注。除了源代码扫描工具，我们还将应用黑盒测试或**动态应用安全测试**（**DAST**），这些将在后续章节中讨论。像黑客一样思考。黑客会对哪些模块感兴趣？哪些信息对黑客来说最有价值？整个应用程序中最薄弱的环节可能是什么？下表列出了需要进一步审查的高风险模块：
- en: '| **High-risk modules** | **Security Review Focuses** |'
  id: totrans-136
  prefs: []
  type: TYPE_TB
  zh: '| **高风险模块** | **安全审查重点** |'
- en: '| Authentication |'
  id: totrans-137
  prefs: []
  type: TYPE_TB
  zh: '| 认证 |'
- en: Accounts registration
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 账户注册
- en: Login and CAPTCHA
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 登录和验证码
- en: Password recovery or reset
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密码恢复或重置
- en: Password changes
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密码更改
- en: Identity and password storage and access control
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 身份和密码存储及访问控制
- en: Account lockout control after multiple failures
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多次失败后的账户锁定控制
- en: '|'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Authorization |'
  id: totrans-145
  prefs: []
  type: TYPE_TB
  zh: '| 授权 |'
- en: Sensitive resource access
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 敏感资源访问
- en: Administration management
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理员管理
- en: '|'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Configuration |'
  id: totrans-149
  prefs: []
  type: TYPE_TB
  zh: '| 配置 |'
- en: 'There are two kinds of review in the configuration:'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置中有两种审查类型：
- en: Secure configurations of the applications, such as turning off debug mode and
    enabling TLS communication.
  id: totrans-151
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序的安全配置，例如关闭调试模式和启用 TLS 通信。
- en: The impact of the configuration for each software release.
  id: totrans-152
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个软件版本的配置影响。
- en: '|'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Finance |'
  id: totrans-154
  prefs: []
  type: TYPE_TB
  zh: '| 财务 |'
- en: Payment functions
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支付功能
- en: Order and shopping carts
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 订单和购物车
- en: '|'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| File handling |'
  id: totrans-158
  prefs: []
  type: TYPE_TB
  zh: '| 文件处理 |'
- en: File upload
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件上传
- en: File download
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件下载
- en: '|'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Database |'
  id: totrans-162
  prefs: []
  type: TYPE_TB
  zh: '| 数据库 |'
- en: Database query
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据库查询
- en: Database add, update, and delete
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据库的添加、更新和删除
- en: '|'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| API interface |'
  id: totrans-166
  prefs: []
  type: TYPE_TB
  zh: '| API 接口 |'
- en: Restful API interfaces
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Restful API 接口
- en: Third-party integration interfaces
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第三方集成接口
- en: '|'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Legacy |'
  id: totrans-170
  prefs: []
  type: TYPE_TB
  zh: '| 遗留 |'
- en: Modules that don't support secure communication
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不支持安全通信的模块
- en: Modules that may still use weak encryption algorithms
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可能仍使用弱加密算法的模块
- en: Uses of banned or dangerous APIs
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用禁止或危险的 API
- en: '|'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Encryption |'
  id: totrans-175
  prefs: []
  type: TYPE_TB
  zh: '| 加密 |'
- en: Uses of banned encryption algorithms
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用禁止的加密算法
- en: Hardcoded sensitive information or comments in the source code during development,
    such as IP, email, password, or hidden hotkey
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在开发过程中源代码中硬编码的敏感信息或注释，例如 IP、电子邮件、密码或隐藏的快捷键
- en: '|'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Session |'
  id: totrans-179
  prefs: []
  type: TYPE_TB
  zh: '| 会话 |'
- en: Concurrent session control and detection
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 并发会话控制和检测
- en: The randomness of the session ID and expiration period
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 会话 ID 和过期时间的随机性
- en: '|'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Manual code review tools
  id: totrans-183
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 手动代码审查工具
- en: 'A manual code review may take some time. A manual code review without proper
    tools and strategies can be like looking for a needle in a haystack. As previously
    discussed, we only do a manual code review for specific high-risk modules, not
    for whole projects. In addition to the selection of target scopes, tools can also
    help us to do a manual code review more efficiently. Here are some open source
    recommended tools that will help make source code reviews more efficient, although
    these are not specialized for this purpose:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 手动代码审查可能需要一些时间。没有适当的工具和策略的手动代码审查就像是在大海捞针。如前所述，我们只对特定的高风险模块进行手动代码审查，而不是整个项目。除了选择目标范围，工具还可以帮助我们更高效地进行手动代码审查。以下是一些推荐的开源工具，虽然这些工具并不是专门为此目的设计的，但它们有助于提高源代码审查的效率：
- en: '| **Tools** | **Usage scenario** |'
  id: totrans-185
  prefs: []
  type: TYPE_TB
  zh: '| **工具** | **使用场景** |'
- en: '| **AndroGuard** |'
  id: totrans-186
  prefs: []
  type: TYPE_TB
  zh: '| **AndroGuard** |'
- en: This includes lots of Python analysis modules to do a reverse-engineering analysis
    of Android applications.
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这包括许多 Python 分析模块，用于对 Android 应用进行逆向工程分析。
- en: The generated graph can be viewed by Gephi.
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成的图表可以通过 Gephi 查看。
- en: '|'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| **Doxygen** |'
  id: totrans-190
  prefs: []
  type: TYPE_TB
  zh: '| **Doxygen** |'
- en: This supports a wide range of program languages to generate online HTML or PDF
    documentation. It can also generate a functions call graph that can be viewed
    by Graphviz.
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该工具支持多种编程语言，能够生成在线HTML或PDF文档。它还可以生成可由Graphviz查看的函数调用图。
- en: It's useful to give us an overview of the program and to identify the modules
    with high-risk that we should focus on.
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它有助于我们概览程序并识别出我们应重点关注的高风险模块。
- en: '|'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| **Kscope** |'
  id: totrans-194
  prefs: []
  type: TYPE_TB
  zh: '| **Kscope** |'
- en: This tool can analyze C source code with a tree of calling functions and a call
    graph.
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 该工具可以分析C源代码，生成调用函数的树和调用图。
- en: '|'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| **OpenGrok** |'
  id: totrans-197
  prefs: []
  type: TYPE_TB
  zh: '| **OpenGrok** |'
- en: This provides Google-like syntax and a RegExp full-text source code search.
    It can also do cross-referencing based on the search results.
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它提供类似Google的语法和正则表达式全文源代码搜索。它还可以基于搜索结果进行交叉引用。
- en: '|'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| **WinMerge** |'
  id: totrans-200
  prefs: []
  type: TYPE_TB
  zh: '| **WinMerge** |'
- en: This can compare the differences between two files and folders. The comparison
    results are presented in visual colors. It's useful when we are looking for code
    changes between different releases.
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它可以比较两个文件和文件夹之间的差异。比较结果以视觉颜色呈现。在我们查找不同版本间的代码变更时非常有用。
- en: 'For non-Windows platforms, KDiff3 or Meld are alternative open source options:'
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于非Windows平台，KDiff3或Meld是替代的开源选项：
- en: '[http://kdiff3.sourceforge.net/](http://kdiff3.sourceforge.net/)'
  id: totrans-203
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://kdiff3.sourceforge.net/](http://kdiff3.sourceforge.net/)'
- en: '[http://meldmerge.org/](http://meldmerge.org/)'
  id: totrans-204
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://meldmerge.org/](http://meldmerge.org/)'
- en: '|'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| **NCC Code Navi** |'
  id: totrans-206
  prefs: []
  type: TYPE_TB
  zh: '| **NCC Code Navi** |'
- en: The key advantage of the NCC Code Navi tool is the capability to do a keywords
    search across source code files. Right-clicking to launch a CERT search coding
    search is also useful.
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NCC Code Navi工具的主要优势是能够在源代码文件中进行关键词搜索。右键点击启动CERT搜索代码搜索也是非常有用的。
- en: '|'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Secure code scanning tools
  id: totrans-209
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安全代码扫描工具
- en: In terms of source code scanning, there is no-one-size-fits-all solution. There
    are also no scanning tools that can find zero false positives with a 100% accurate
    detection rate. Therefore, for the same programming language, it's common that
    we may apply at least two scanning tools for a cross-reference check.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 在源代码扫描方面，没有一种适合所有的解决方案。也没有任何扫描工具可以做到零假阳性并具有100%准确的检测率。因此，对于相同的编程语言，我们通常会应用至少两个扫描工具进行交叉验证。
- en: 'Here are some commonly used open-source secure coding analysis tools, as in
    2018\. Note that we only list open source tools here:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 这里列出的是一些2018年常用的开源安全编码分析工具。请注意，我们这里只列出了开源工具：
- en: '| **Tools** | **Background and key characteristics of the scanning tool** |'
  id: totrans-212
  prefs: []
  type: TYPE_TB
  zh: '| **Tools** | **扫描工具的背景和关键特性** |'
- en: '| **Retire.JS** |'
  id: totrans-213
  prefs: []
  type: TYPE_TB
  zh: '| **Retire.JS** |'
- en: Detection of vulnerable JavaScript libraries, such as jQuery, AngularJS, Node,
    and so on.
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检测易受攻击的JavaScript库，如jQuery、AngularJS、Node等。
- en: It provides the command line, grunt plugin, and also OWASP ZAP plugin for integration
    scanning.
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它提供命令行、grunt插件，并且还提供OWASP ZAP插件用于集成扫描。
- en: '|'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| **Clang Static Analyzer** | This provides standalone command line analysis
    for C, C++, and Objective C. |'
  id: totrans-217
  prefs: []
  type: TYPE_TB
  zh: '| **Clang Static Analyzer** | 该工具提供C、C++和Objective C的独立命令行分析。 |'
- en: '| **Flawfinder** | A simple C/C++ code scanning tool. It''s a Python command
    line scanning tool and can be easily customized based on the needs. |'
  id: totrans-218
  prefs: []
  type: TYPE_TB
  zh: '| **Flawfinder** | 一个简单的C/C++代码扫描工具。它是一个Python命令行扫描工具，可以根据需求轻松定制。 |'
- en: '| **DREK** |'
  id: totrans-219
  prefs: []
  type: TYPE_TB
  zh: '| **DREK** |'
- en: This acts like GREP to search specific security issue by regular expressions,
    but it can generate scanning results in PDF or HTML format.
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它像GREP一样通过正则表达式搜索特定的安全问题，但它可以生成PDF或HTML格式的扫描结果。
- en: It's easy to extend any scanning rules by regular expressions. It can be used
    to scan any programming languages.
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它可以通过正则表达式轻松扩展任何扫描规则，且可用于扫描任何编程语言。
- en: '|'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| **Pylint** | Pylint is a source code checker for the Python programming language. 
    |'
  id: totrans-223
  prefs: []
  type: TYPE_TB
  zh: '| **Pylint** | Pylint是Python编程语言的源代码检查工具。 |'
- en: '| **PHPMD** |'
  id: totrans-224
  prefs: []
  type: TYPE_TB
  zh: '| **PHPMD** |'
- en: PHP Mess Detector is a PHP source code scanner.
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PHP Mess Detector是一个PHP源代码扫描工具。
- en: '|'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| **DawnScanner** | Security scanner for Ruby Web applications. |'
  id: totrans-227
  prefs: []
  type: TYPE_TB
  zh: '| **DawnScanner** | Ruby Web应用程序的安全扫描工具。 |'
- en: '| **SpotBugs** |'
  id: totrans-228
  prefs: []
  type: TYPE_TB
  zh: '| **SpotBugs** |'
- en: This provides a standalone GUI and command line.
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这提供了一个独立的GUI和命令行界面。
- en: SpotBugs can also be used as an Eclipse plugin. It's the successor of FindBugs.
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SpotBugs还可以作为Eclipse插件使用。它是FindBugs的继任者。
- en: '|'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| **CPP Check** | This is a static code analysis tool for C/C++. |'
  id: totrans-232
  prefs: []
  type: TYPE_TB
  zh: '| **CPP Check** | 这是一个用于C/C++的静态代码分析工具。 |'
- en: '| **Mobile Security Framework (****MobSF)** | The Mobile Security Framework
    is a fully automated scanning tool for Android apps. A developer can just upload
    the APK to the MSF, and the MSF will do all the analysis automatically. |'
  id: totrans-233
  prefs: []
  type: TYPE_TB
  zh: '| **移动安全框架（MobSF）** | 移动安全框架是一个完全自动化的Android应用程序扫描工具。开发者只需上传APK到MSF，MSF将自动完成所有分析。|'
- en: '| **Clang Static Analyzer** | This is a code analysis tool for C/C++ and Objective
    C. |'
  id: totrans-234
  prefs: []
  type: TYPE_TB
  zh: '| **Clang静态分析器** | 这是一个C/C++和Objective C的代码分析工具。|'
- en: '| **ESLint** |'
  id: totrans-235
  prefs: []
  type: TYPE_TB
  zh: '| **ESLint** |'
- en: This provides command-line code scanning with JavaScript.
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这是一个用于JavaScript的命令行代码扫描工具。
- en: Refer here for the secure code scanning rules: [https://eslint.org/docs/rules/](https://eslint.org/docs/rules/).
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请参见此链接查看安全代码扫描规则：[https://eslint.org/docs/rules/](https://eslint.org/docs/rules/)。
- en: '|'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| **JSHint** | This is for JavaScript code scanning, and also provides command
    line tools by NodeJS. |'
  id: totrans-239
  prefs: []
  type: TYPE_TB
  zh: '| **JSHint** | 这是一个用于JavaScript代码扫描的工具，并且提供了NodeJS的命令行工具。|'
- en: '| **Infer** | This is a static code analyzer for Java, C/C++, and Objective
    C, provided by Facebook. |'
  id: totrans-240
  prefs: []
  type: TYPE_TB
  zh: '| **Infer** | 这是一个由Facebook提供的Java、C/C++和Objective C的静态代码分析器。|'
- en: '| **Phan** | Phan is a static analyzer for PHP. |'
  id: totrans-241
  prefs: []
  type: TYPE_TB
  zh: '| **Phan** | Phan是一个PHP静态分析工具。|'
- en: '| **PHP Security Checker** | This checks PHP project dependencies for known
    security issues. |'
  id: totrans-242
  prefs: []
  type: TYPE_TB
  zh: '| **PHP安全检查器** | 这个工具检查PHP项目依赖项中的已知安全问题。|'
- en: '| **OWASP Dependency check** | This supports a wide range of programming frameworks
    and checks the disclosed vulnerabilities with updated NVD data feeds. The tool
    can run as a command line or via integration with Jenkins. |'
  id: totrans-243
  prefs: []
  type: TYPE_TB
  zh: '| **OWASP Dependency check** | 该工具支持多种编程框架，并检查已公开的漏洞，使用更新的NVD数据源。该工具可以通过命令行运行或与Jenkins集成运行。|'
- en: '| **VisualCodeGrepper** (**VCG**) | VCG is a language-independent scanning
    tool. The scanning rules can also be easily customized by regular expressions.
    There are also default rules for commonly banned APIs. It provides a GUI and command
    line to scan any piece of source code. |'
  id: totrans-244
  prefs: []
  type: TYPE_TB
  zh: '| **VisualCodeGrepper** (**VCG**) | VCG是一个语言无关的扫描工具。扫描规则也可以通过正则表达式轻松定制。它还提供了针对常见禁止API的默认规则，并提供GUI和命令行工具来扫描任何源代码。|'
- en: '| **PMD** | This is a source code analyzer for Java and JavaScript. It''s mainly
    for common programming flaws. |'
  id: totrans-245
  prefs: []
  type: TYPE_TB
  zh: '| **PMD** | 这是一个用于Java和JavaScript的源代码分析工具，主要用于检查常见编程缺陷。|'
- en: '| **Graudit** | This is a simple script to find potential security issues by
    using GREP to search for specific code patterns. The signatures database templates
    provide clues for what to look for.   |'
  id: totrans-246
  prefs: []
  type: TYPE_TB
  zh: '| **Graudit** | 这是一个简单的脚本，利用GREP搜索特定的代码模式来查找潜在的安全问题。签名数据库模板提供了查找线索。 |'
- en: '| **SonarQube** | This provides support for more than 20 languages and can
    integrate with CI frameworks. It is also UI-friendly for quality code scanning
    results.  |'
  id: totrans-247
  prefs: []
  type: TYPE_TB
  zh: '| **SonarQube** | 这个工具支持超过20种语言，并且可以与CI框架集成。它也提供UI，便于查看质量代码扫描结果。 |'
- en: '| **Brakeman** | Static analysis security scanner for Ruby on Rails.  |'
  id: totrans-248
  prefs: []
  type: TYPE_TB
  zh: '| **Brakeman** | Ruby on Rails的静态分析安全扫描器。|'
- en: '| **bandit** | Security analysis for Python source code. |'
  id: totrans-249
  prefs: []
  type: TYPE_TB
  zh: '| **bandit** | Python源代码的安全分析工具。|'
- en: '| **Error Prone** | Error Prone detects potential Java errors during compile
    time. |'
  id: totrans-250
  prefs: []
  type: TYPE_TB
  zh: '| **Error Prone** | Error Prone在编译时检测潜在的Java错误。|'
- en: '| **Dawn** | Dawn is a static analysis security scanner for Ruby web applications.
    |'
  id: totrans-251
  prefs: []
  type: TYPE_TB
  zh: '| **Dawn** | Dawn是一个用于Ruby Web应用的静态分析安全扫描器。|'
- en: 'Here is another categorization by language:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是按语言的另一种分类：
- en: '| **Programming language** | **Scanning tools** |'
  id: totrans-253
  prefs: []
  type: TYPE_TB
  zh: '| **编程语言** | **扫描工具** |'
- en: '| C/C++ |'
  id: totrans-254
  prefs: []
  type: TYPE_TB
  zh: '| C/C++ |'
- en: Infer
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Infer
- en: CPP Check
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CPP Check
- en: Flawfinder
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Flawfinder
- en: Clang Static Analyzer
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Clang静态分析器
- en: '|'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Java |'
  id: totrans-260
  prefs: []
  type: TYPE_TB
  zh: '| Java |'
- en: Infer
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Infer
- en: SpotBugs
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SpotBugs
- en: PMD
  id: totrans-263
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PMD
- en: '|'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Android |'
  id: totrans-265
  prefs: []
  type: TYPE_TB
  zh: '| Android |'
- en: MobSF
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MobSF
- en: '|'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| PHP |'
  id: totrans-268
  prefs: []
  type: TYPE_TB
  zh: '| PHP |'
- en: Phan
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Phan
- en: PHPMD
  id: totrans-270
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PHPMD
- en: '|'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Ruby |'
  id: totrans-272
  prefs: []
  type: TYPE_TB
  zh: '| Ruby |'
- en: DawnScanner
  id: totrans-273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DawnScanner
- en: '|'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Python |'
  id: totrans-275
  prefs: []
  type: TYPE_TB
  zh: '| Python |'
- en: Pylint
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pylint
- en: '|'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| JavaScript |'
  id: totrans-278
  prefs: []
  type: TYPE_TB
  zh: '| JavaScript |'
- en: ESLint
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ESLint
- en: JSHint
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JSHint
- en: Retire.JS
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Retire.JS
- en: PMD
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PMD
- en: '|'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Dependencies vulnerabilities |'
  id: totrans-284
  prefs: []
  type: TYPE_TB
  zh: '| 依赖漏洞 |'
- en: OWASP Dependency check
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OWASP Dependency check
- en: PHP Security Checker
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PHP安全检查器
- en: Retire.JS
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Retire.JS
- en: '|'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Language-independent |'
  id: totrans-289
  prefs: []
  type: TYPE_TB
  zh: '| 语言无关 |'
- en: SonarQube
  id: totrans-290
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SonarQube
- en: DREK
  id: totrans-291
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DREK
- en: Graudit
  id: totrans-292
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Graudit
- en: VisualCodeGrepper
  id: totrans-293
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VisualCodeGrepper
- en: '|'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Due to rules and detection engine capabilities, the scanning results may vary
    for the same programming language. Using two scanning tools for the same language
    is recommended. For example, one commercial tool for daily compiled scanning and
    another open source tool for developers' IDE plugins. The use of commercial scanning
    tools helps to tell customers how the services are tested while open source scanning
    tools give flexibility for further customization and large-scale deployment without
    budget constraints.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 由于规则和检测引擎的能力，相同编程语言的扫描结果可能会有所不同。建议使用两个扫描工具对同一语言进行扫描。例如，使用一个商业工具进行日常编译扫描，另一个开源工具用于开发者的IDE插件。使用商业扫描工具有助于向客户说明服务是如何进行测试的，而开源扫描工具则为进一步定制和大规模部署提供了灵活性，无需预算限制。
- en: Secure compiling
  id: totrans-296
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安全编译
- en: 'Memory corruption and buffer overflow may result in exploit code injection
    attacks. For the C/C++ programming language, these can be protected by compiler
    options.  By a properly secured configuration of a C/C++ compiler (GCC, MS Visual
    Studio), the application will be able to add an additional layer of runtime defenses
    against exploit code injection attacks. These are also mostly ignored by a development
    team. The common secure options are summarized in the following table:'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 内存损坏和缓冲区溢出可能导致利用代码注入攻击。对于C/C++编程语言，这些可以通过编译器选项进行保护。通过适当配置C/C++编译器（GCC，MS Visual
    Studio），应用程序可以增加额外的运行时防御层，以防止利用代码注入攻击。这些通常被开发团队忽视。常见的安全选项总结如下表：
- en: '| **Protection techniques** | **Secure options** | **OS/Compiler** |'
  id: totrans-298
  prefs: []
  type: TYPE_TB
  zh: '| **保护技术** | **安全选项** | **操作系统/编译器** |'
- en: '| Address Space Layout Randomization (ASLR)   | `echo 1 >/proc/sys/kernel/randomize_va_space `
    | Android, Linux OS |'
  id: totrans-299
  prefs: []
  type: TYPE_TB
  zh: '| 地址空间布局随机化（ASLR） | `echo 1 >/proc/sys/kernel/randomize_va_space` | Android,
    Linux操作系统 |'
- en: '| Stack-based buffer overrun protection | `-fstack-protector``–fstack-protector-all`
    | gcc |'
  id: totrans-300
  prefs: []
  type: TYPE_TB
  zh: '| 基于栈的缓冲区溢出保护 | `-fstack-protector  –fstack-protector-all` | gcc |'
- en: '| GOT Table Protection | `-Wl`,`-z`, `relro`  | gcc |'
  id: totrans-301
  prefs: []
  type: TYPE_TB
  zh: '| GOT表保护 | `-Wl`, `-z`, `relro` | gcc |'
- en: '| Dynamic link path | `-Wl,--disable-new-dtags,--rpath [path]` | gcc |'
  id: totrans-302
  prefs: []
  type: TYPE_TB
  zh: '| 动态链接路径 | `-Wl,--disable-new-dtags,--rpath [path]` | gcc |'
- en: '| Non-executable stack | `-Wl,-z,noexecstack ` | gcc |'
  id: totrans-303
  prefs: []
  type: TYPE_TB
  zh: '| 不可执行栈 | `-Wl,-z,noexecstack` | gcc |'
- en: '| Image randomization | `–fpie –pie ` | gcc |'
  id: totrans-304
  prefs: []
  type: TYPE_TB
  zh: '| 镜像随机化 | `–fpie –pie` | gcc |'
- en: '| Insecure C runtime function detection | `–D_FORTIFY_SOURCE=2 ``–Wformat-security`
    | gcc |'
  id: totrans-305
  prefs: []
  type: TYPE_TB
  zh: '| 不安全的C运行时函数检测 | `–D_FORTIFY_SOURCE=2  –Wformat-security` | gcc |'
- en: '| Stack-based buffer overrun defenses (Canary) | `/GS` | MS (Microsoft)Visual
    C++ |'
  id: totrans-306
  prefs: []
  type: TYPE_TB
  zh: '| 基于栈的缓冲区溢出防护（Canary） | `/GS` | MS（微软）Visual C++ |'
- en: '| Address Space Layout Randomization (ASLR) | `/DYNAMICBASE` | MS Visual C++
    |'
  id: totrans-307
  prefs: []
  type: TYPE_TB
  zh: '| 地址空间布局随机化（ASLR） | `/DYNAMICBASE` | MS Visual C++ |'
- en: '| CPU-level No-eXecute (NX) support. Data Execution Prevention (DEP) | `/NXCOMPAT`
    | MS Visual C++ |'
  id: totrans-308
  prefs: []
  type: TYPE_TB
  zh: '| CPU级别的不可执行（NX）支持。数据执行防护（DEP） | `/NXCOMPAT` | MS Visual C++ |'
- en: '| Safe-structured exception handling | `/SAFESEH` | MS Visual C++ |'
  id: totrans-309
  prefs: []
  type: TYPE_TB
  zh: '| 安全结构化异常处理 | `/SAFESEH` | MS Visual C++ |'
- en: '| Enable additional security check | `/SDL` | MS Visual C++ |'
  id: totrans-310
  prefs: []
  type: TYPE_TB
  zh: '| 启用附加安全检查 | `/SDL` | MS Visual C++ |'
- en: 'For further reference and a description of each protection technique, here
    are some references:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 进一步参考和每种保护技术的描述，请查看以下参考资料：
- en: '**SAFECode Development Practices**: [https://www.safecode.org/publication/SAFECode_Dev_Practices0211.pdf](https://www.safecode.org/publication/SAFECode_Dev_Practices0211.pdf)'
  id: totrans-312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SAFECode开发实践**：[https://www.safecode.org/publication/SAFECode_Dev_Practices0211.pdf](https://www.safecode.org/publication/SAFECode_Dev_Practices0211.pdf)'
- en: '**OWASP C-based ToolChain Hardening**: [https://www.owasp.org/index.php/C-Based_Toolchain_Hardening](https://www.owasp.org/index.php/C-Based_Toolchain_Hardening)'
  id: totrans-313
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OWASP基于C的工具链硬化**：[https://www.owasp.org/index.php/C-Based_Toolchain_Hardening](https://www.owasp.org/index.php/C-Based_Toolchain_Hardening)'
- en: '**Linux Audit ASLR**: [https://linux-audit.com/linux-aslr-and-kernelrandomize_va_space-setting/](https://linux-audit.com/linux-aslr-and-kernelrandomize_va_space-setting/)'
  id: totrans-314
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Linux审核ASLR**：[https://linux-audit.com/linux-aslr-and-kernelrandomize_va_space-setting/](https://linux-audit.com/linux-aslr-and-kernelrandomize_va_space-setting/)'
- en: '**MS Security Best Practice for C++**: [https://msdn.microsoft.com/en-us/library/k3a3hzw7.aspx](https://msdn.microsoft.com/en-us/library/k3a3hzw7.aspx)'
  id: totrans-315
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MS安全最佳实践对于C++**：[https://msdn.microsoft.com/en-us/library/k3a3hzw7.aspx](https://msdn.microsoft.com/en-us/library/k3a3hzw7.aspx)'
- en: '**Secure Compiler and linker flags for GCC**: [https://developers.redhat.com/blog/2018/03/21/compiler-and-linker-flags-gcc/](https://developers.redhat.com/blog/2018/03/21/compiler-and-linker-flags-gcc/)'
  id: totrans-316
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GCC的安全编译器和链接器标志**：[https://developers.redhat.com/blog/2018/03/21/compiler-and-linker-flags-gcc/](https://developers.redhat.com/blog/2018/03/21/compiler-and-linker-flags-gcc/)'
- en: 'To verify whether the application or the environment has been configured with
    secure options, the following tools are useful:'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 为了验证应用程序或环境是否已配置安全选项，以下工具非常有用：
- en: '**CheckSec**: [http://www.trapkit.de/tools/checksec.html](http://www.trapkit.de/tools/checksec.html)'
  id: totrans-318
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CheckSec**: [http://www.trapkit.de/tools/checksec.html](http://www.trapkit.de/tools/checksec.html)'
- en: '**BinScope**: [https://www.microsoft.com/en-us/download/details.aspx?id=44995](https://www.microsoft.com/en-us/download/details.aspx?id=44995)'
  id: totrans-319
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**BinScope**: [https://www.microsoft.com/en-us/download/details.aspx?id=44995](https://www.microsoft.com/en-us/download/details.aspx?id=44995)'
- en: Common issues in practice
  id: totrans-320
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实践中的常见问题
- en: There are many commercial and open source secure coding tools. Does any tool
    offer a low false positive rate with a high detection rate?
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 市面上有许多商业和开源的安全编码工具。有哪种工具能够提供低假阳性率和高检测率吗？
- en: 'Answer: There are no perfect or outstanding tools that offer high detection
    rates with low false positive rates. Every tool offers a different scanning results.
    The high positive rate can also mean more conservative scanning, which identifies
    more potential or suspicious code issues. You will find the detection rate and
    scanning results also vary with different tools. Tool A may be able to detect
    an issue that tool B can''t, and vice versa. In practice, it''s also suggested
    to use at least two tools for code scanning as a cross-reference review.'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 回答：没有完美或卓越的工具能够提供高检测率并保持低假阳性率。每个工具提供的扫描结果不同。较高的阳性率也可能意味着更保守的扫描，识别更多潜在或可疑的代码问题。你会发现不同工具的检测率和扫描结果也有所不同。工具A可能能够检测到工具B无法识别的问题，反之亦然。在实际操作中，也建议使用至少两种工具进行代码扫描作为交叉参考审查。
- en: The scanning results may list over 1,000 issues. Is there any advice on how
    to handle these issues?
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 扫描结果可能列出超过1000个问题。对于如何处理这些问题，有什么建议吗？
- en: 'Answer: For a large-scale project, it''s very common to have such issues. It
    can be overwhelming for the developer team to check all of the issues identified
    by the scanning tool. Here are some possible approaches to consider:'
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 回答：对于大规模项目，出现此类问题是非常常见的。开发团队检查扫描工具识别出的所有问题可能会感到不知所措。这里有一些可以考虑的方法：
- en: Filter and evaluate those issues scored as high-risk first.
  id: totrans-325
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先筛选并评估那些评分为高风险的问题。
- en: Customize the scanning rules for the project to filter those rules that are
    irrelevant to the project.
  id: totrans-326
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据项目自定义扫描规则，过滤掉与项目无关的规则。
- en: Do an incremental scan for the scopes of source code that were newly added or
    recently changed. This may depend on whether the scanning tool provides incremental
    scanning capability.
  id: totrans-327
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对新添加或最近更改的源代码范围进行增量扫描。这可能取决于扫描工具是否提供增量扫描功能。
- en: Categorize common issues for the same root/cause. Maybe 50% of issues are caused
    by the same root/cause, such as the use of the same module.
  id: totrans-328
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对相同根本原因/问题进行分类。也许50%的问题是由相同的根本原因引起的，例如使用相同的模块。
- en: Summary
  id: totrans-329
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: We have discussed secure coding industry best practices, such as CERT, CWE,
    Android secure coding, OWASP Code Review, and the Apple secure coding guide. Based
    on those secure coding rules, we established secure coding baselines as part of
    the security policy and release criteria. To allow the team to be familiar with
    secure coding, a training portal was prepared. It was suggested that the secure
    coding knowledge portal should provide not only coding rules but also case studies.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经讨论了安全编码行业的最佳实践，例如CERT、CWE、Android安全编码、OWASP代码审查和Apple安全编码指南。基于这些安全编码规则，我们建立了安全编码基准，作为安全政策和发布标准的一部分。为了让团队熟悉安全编码，我们准备了一个培训门户。建议安全编码知识门户不仅应提供编码规则，还应提供案例研究。
- en: To apply secure coding to developers' daily tasks, secure coding tools must
    be adopted. We evaluated secure coding tools, taking into account usability, budget,
    programming language support, detection rates, and scanning rule maintenance.
    To evaluate the detection rate of a scanning tool, we also introduced some vulnerable
    projects that can be used as testing projects.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将安全编码应用到开发者的日常工作中，必须采用安全编码工具。我们评估了安全编码工具，考虑了可用性、预算、编程语言支持、检测率和扫描规则维护等因素。为了评估扫描工具的检测率，我们还引入了一些可作为测试项目的漏洞项目。
- en: Secure coding rules and best practices are guidelines. They require the right
    secure coding tools to make them happen, and also the right approaches to make
    them more effective and efficient.  Therefore, we discussed code review approaches
    and also examples of high-risk modules. For a more efficient manual code review
    for high-risk modules, we also listed some tools that can help.  Finally, we listed
    some common open source secure code scanning tools for different programming languages.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 安全编码规则和最佳实践是指导方针。它们需要正确的安全编码工具来实现，同时还需要正确的方法以使其更加高效和有效。因此，我们讨论了代码审查方法以及高风险模块的示例。为了更高效地进行高风险模块的手动代码审查，我们还列出了一些有助于审查的工具。最后，我们列出了适用于不同编程语言的常见开源安全代码扫描工具。
- en: In the next chapter, we will present a case study to walk through security requirements,
    threat modeling, secure architecture, design, and implementation for the development
    stage.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将通过一个案例研究，介绍开发阶段的安全需求、威胁建模、安全架构、设计和实现。
- en: Questions
  id: totrans-334
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: Which one of the following is not included in CERT Secure Coding standards?
  id: totrans-335
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪个不包含在 CERT 安全编码标准中？
- en: C/C++
  id: totrans-336
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: C/C++
- en: Java
  id: totrans-337
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Java
- en: Android
  id: totrans-338
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Android
- en: PHP
  id: totrans-339
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: PHP
- en: Find Security Bugs is mainly used for which of the following programming language?
  id: totrans-340
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Find Security Bugs 主要用于以下哪种编程语言？
- en: C/C++
  id: totrans-341
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: C/C++
- en: Python
  id: totrans-342
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Python
- en: Java
  id: totrans-343
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Java
- en: Go
  id: totrans-344
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Go
- en: Which one of the following can be a release criterion for secure coding?
  id: totrans-345
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪个可以作为安全编码的发布标准？
- en: All source code must be reviewed with specified code scanning tools.
  id: totrans-346
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 所有源代码必须使用指定的代码扫描工具进行审查。
- en: All of the compiler warnings should be checked and cleared.
  id: totrans-347
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 所有编译器警告应检查并清除。
- en: All the warnings in scanning results which were generated by scanning tools
    must be checked
  id: totrans-348
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 扫描工具生成的所有警告必须进行检查
- en: All of above
  id: totrans-349
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以上所有
- en: What's the main purpose of using vulnerable projects to evaluate code scanning
    tools?
  id: totrans-350
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用易受攻击的项目来评估代码扫描工具的主要目的是什么？
- en: Detection rate and false positive rates
  id: totrans-351
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检测率和误报率
- en: Budget
  id: totrans-352
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 预算
- en: Licenses
  id: totrans-353
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 许可证
- en: Performance
  id: totrans-354
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 性能
- en: Which one of the following does not mitigate against buffer overflow exploit
    code injection?
  id: totrans-355
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪个不防止缓冲区溢出漏洞代码注入？
- en: Address Space Layout Randomization (ASLR)
  id: totrans-356
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 地址空间布局随机化（ASLR）
- en: CSRF Token
  id: totrans-357
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: CSRF 令牌
- en: Stack-based buffer overrun protection
  id: totrans-358
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 基于栈的缓冲区溢出保护
- en: Non-Executable Stack
  id: totrans-359
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 非执行栈
- en: Which one of the following is not used to scan dependency vulnerabilities?
  id: totrans-360
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪个不用于扫描依赖性漏洞？
- en: OWASP Dependency check
  id: totrans-361
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: OWASP 依赖性检查
- en: PHP Security Checker
  id: totrans-362
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: PHP 安全检查工具
- en: Retire.JS
  id: totrans-363
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Retire.JS
- en: VisualCodeGrepper
  id: totrans-364
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: VisualCodeGrepper
- en: Which one is an automated mobile security testing framework?
  id: totrans-365
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 哪个是自动化的移动安全测试框架？
- en: MobSF
  id: totrans-366
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: MobSF
- en: OpenGrok
  id: totrans-367
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: OpenGrok
- en: Retire.JS
  id: totrans-368
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Retire.JS
- en: SonarQube
  id: totrans-369
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: SonarQube
- en: Which of the following tools is not used for the Android security assessment?
  id: totrans-370
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪个工具不用于 Android 安全评估？
- en: AndroGuard
  id: totrans-371
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: AndroGuard
- en: MobSF (Mobile Security Framework)
  id: totrans-372
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: MobSF（移动安全框架）
- en: Flawfinder
  id: totrans-373
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Flawfinder
- en: SpotBugs
  id: totrans-374
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: SpotBugs
- en: Further reading
  id: totrans-375
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 深入阅读
- en: '**NIST 500-297 Report on the Static Analysis Tool**: [https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.500-297.pdf](https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.500-297.pdf)'
  id: totrans-376
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**NIST 500-297 静态分析工具报告**: [https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.500-297.pdf](https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.500-297.pdf)'
- en: '**Android Secure Coding**: [https://www.jssec.org/dl/android_securecoding_en.pdf](https://www.jssec.org/dl/android_securecoding_en.pdf)'
  id: totrans-377
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Android 安全编码**: [https://www.jssec.org/dl/android_securecoding_en.pdf](https://www.jssec.org/dl/android_securecoding_en.pdf)'
- en: '**OWASP PHP Security Cheat Sheet**: [https://www.owasp.org/index.php/PHP_Security_Cheat_Sheet](https://www.owasp.org/index.php/PHP_Security_Cheat_Sheet)'
  id: totrans-378
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OWASP PHP 安全备忘单**: [https://www.owasp.org/index.php/PHP_Security_Cheat_Sheet](https://www.owasp.org/index.php/PHP_Security_Cheat_Sheet)'
- en: '**PHP Security Manual**: [https://php.net/manual/en/security.php](https://php.net/manual/en/security.php)'
  id: totrans-379
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PHP 安全手册**: [https://php.net/manual/en/security.php](https://php.net/manual/en/security.php)'
- en: '**OWASP Code Review**: [https://www.owasp.org/index.php/Category:OWASP_Code_Review_Project](http://Https://www.owasp.org/index.php/Category:OWASP_Code_Review_Project)'
  id: totrans-380
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OWASP 代码审查**: [https://www.owasp.org/index.php/Category:OWASP_Code_Review_Project](http://Https://www.owasp.org/index.php/Category:OWASP_Code_Review_Project)'
- en: '**OWASP Secure Coding Practices**: [https://www.owasp.org/index.php/OWASP_Secure_Coding_Practices_-_Quick_Reference_Guide](https://www.owasp.org/index.php/OWASP_Secure_Coding_Practices_-_Quick_Reference_Guide)'
  id: totrans-381
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OWASP 安全编码实践**: [https://www.owasp.org/index.php/OWASP_Secure_Coding_Practices_-_Quick_Reference_Guide](https://www.owasp.org/index.php/OWASP_Secure_Coding_Practices_-_Quick_Reference_Guide)'
- en: '**Apple Secure Coding Guide**: [https://developer.apple.com/library/content/documentation/Security/Conceptual/SecureCodingGuide/Introduction.html](https://developer.apple.com/library/content/documentation/Security/Conceptual/SecureCodingGuide/Introduction.html)'
  id: totrans-382
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Apple安全编码指南**: [https://developer.apple.com/library/content/documentation/Security/Conceptual/SecureCodingGuide/Introduction.html](https://developer.apple.com/library/content/documentation/Security/Conceptual/SecureCodingGuide/Introduction.html)'
- en: '**Salesforce Security**: [https://developer.salesforce.com/devcenter/security](https://developer.salesforce.com/devcenter/security)'
  id: totrans-383
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Salesforce安全性**: [https://developer.salesforce.com/devcenter/security](https://developer.salesforce.com/devcenter/security)'
- en: '**OWASP Python Security**: [http://www.pythonsecurity.org/](http://www.pythonsecurity.org/)'
  id: totrans-384
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OWASP Python安全性**: [http://www.pythonsecurity.org/](http://www.pythonsecurity.org/)'
- en: '**SAFE Practices for Secure Development of Cloud Applications**: [https://safecode.org/wp-content/uploads/2018/01/SAFECode_CSA_Cloud_Final1213.pdf](https://safecode.org/wp-content/uploads/2018/01/SAFECode_CSA_Cloud_Final1213.pdf)'
  id: totrans-385
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**云应用安全开发的SAFE实践**: [https://safecode.org/wp-content/uploads/2018/01/SAFECode_CSA_Cloud_Final1213.pdf](https://safecode.org/wp-content/uploads/2018/01/SAFECode_CSA_Cloud_Final1213.pdf)'
- en: '**C/C++ Banned API**: [https://github.com/Microsoft/ChakraCore/blob/master/lib/Common/Banned.h](https://github.com/Microsoft/ChakraCore/blob/master/lib/Common/Banned.h)'
  id: totrans-386
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**C/C++ 禁用API**: [https://github.com/Microsoft/ChakraCore/blob/master/lib/Common/Banned.h](https://github.com/Microsoft/ChakraCore/blob/master/lib/Common/Banned.h)'
- en: '**Awesome Static Code Analysis**: [https://github.com/mre/awesome-static-analysis](https://github.com/mre/awesome-static-analysis)'
  id: totrans-387
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**超赞静态代码分析**: [https://github.com/mre/awesome-static-analysis](https://github.com/mre/awesome-static-analysis)'
- en: '**Oracle Secure Coding Guidelines for Java**: [http://www.oracle.com/technetwork/java/seccodeguide-139067.html](http://www.oracle.com/technetwork/java/seccodeguide-139067.html)'
  id: totrans-388
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Oracle Java安全编码指南**: [http://www.oracle.com/technetwork/java/seccodeguide-139067.html](http://www.oracle.com/technetwork/java/seccodeguide-139067.html)'
- en: '**FindSecBugs Java Bugs Patterns**: [https://Find-sec-bugs.github.io/bugs.htm](https://Find-sec-bugs.github.io/bugs.htm)'
  id: totrans-389
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**FindSecBugs Java漏洞模式**: [https://Find-sec-bugs.github.io/bugs.htm](https://Find-sec-bugs.github.io/bugs.htm)'
- en: '**SEI CERT Secure Coding Standards**: [https://wiki.sei.cmu.edu/confluence/display/seccode/SEI+CERT+Coding+Standards](https://wiki.sei.cmu.edu/confluence/display/seccode/SEI+CERT+Coding+Standards)'
  id: totrans-390
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SEI CERT安全编码标准**: [https://wiki.sei.cmu.edu/confluence/display/seccode/SEI+CERT+Coding+Standards](https://wiki.sei.cmu.edu/confluence/display/seccode/SEI+CERT+Coding+Standards)'
- en: '**MITRE CWE White Paper V3.1**: [https://cwe.mitre.org/data/published/cwe_v3.1.pdf](https://cwe.mitre.org/data/published/cwe_v3.1.pdf)'
  id: totrans-391
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MITRE CWE白皮书 V3.1**: [https://cwe.mitre.org/data/published/cwe_v3.1.pdf](https://cwe.mitre.org/data/published/cwe_v3.1.pdf)'
- en: '**CheckMarx Go Secure Coding:** [https://checkmarx.gitbooks.io/go-scp/](https://checkmarx.gitbooks.io/go-scp/)'
  id: totrans-392
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CheckMarx Go安全编码**: [https://checkmarx.gitbooks.io/go-scp/](https://checkmarx.gitbooks.io/go-scp/)'
- en: '**CheckMarx JavaScript Secure Coding:** [https://checkmarx.gitbooks.io/js-scp/](https://checkmarx.gitbooks.io/js-scp/)'
  id: totrans-393
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CheckMarx JavaScript安全编码**: [https://checkmarx.gitbooks.io/js-scp/](https://checkmarx.gitbooks.io/js-scp/)'
