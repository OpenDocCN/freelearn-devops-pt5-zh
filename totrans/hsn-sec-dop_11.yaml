- en: Whitebox Testing Tips
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 白盒测试技巧
- en: The testing plan gave an overview of the testing approach, risk assessment,
    and suggested testing tools. In this chapter, we will focus on whitebox testing
    tips.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 测试计划概述了测试方法、风险评估和建议的测试工具。在本章中，我们将重点介绍白盒测试技巧。
- en: Whitebox code review can be most effective to identify certain specific security
    issues, such as XXE, deserialization, and SQL injection. However, a whitebox review
    can be time-consuming if there are no proper tools or strategies. To have an effective
    whitebox test, we need to focus on specific coding patterns and high-risk modules.
    This chapter will give tips, tools, and key coding patterns to identify high-risk
    security issues.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 白盒代码审查最有效的方式是识别特定的安全问题，如 XXE、反序列化和 SQL 注入。然而，如果没有合适的工具或策略，白盒审查可能会耗时。如果要进行有效的白盒测试，我们需要关注特定的编码模式和高风险模块。本章将提供识别高风险安全问题的技巧、工具和关键编码模式。
- en: 'We will cover the following topics in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Whitebox review preparation
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 白盒审查准备
- en: A bird's-eye view of the whole project
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 整个项目的鸟瞰图
- en: High-risk modules
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高风险模块
- en: Whitebox review checklist
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 白盒审查检查清单
- en: Top common issues
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 常见的主要问题
- en: Secure coding patterns and keywords
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全编码模式和关键字
- en: Case study—Java Struts security review
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 案例研究——Java Struts 安全审查
- en: Whitebox review preparation
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 白盒审查准备
- en: Whitebox testing or source code review can be most effective to identify hidden
    security issues in the source code. Before we begin our whitebox source code review,
    there are some preparation and input will help us to judge how (approaches, tools)
    and what (which modules) to do the security source code review.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 白盒测试或源代码审查最有效的方式是识别源代码中的隐藏安全问题。在开始白盒源代码审查之前，一些准备工作和输入将帮助我们判断该如何（方法、工具）以及做什么（哪些模块）来进行安全源代码审查。
- en: 'The following is a list we may check before performing the source code review;
    take a look at this table:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我们在进行源代码审查之前可能会检查的列表；请查看此表：
- en: '| **Whitebox testing input** | **Considerations** |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| **白盒测试输入** | **注意事项** |'
- en: '| Source code |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| 源代码 |'
- en: Do we need a full buildable source code?
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们需要完整的可构建源代码吗？
- en: Does the source code include related import modules or headers?
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 源代码是否包含相关的导入模块或头文件？
- en: These dependency source codes will help when we would like to trace the definition
    of certain APIs. However, if the whole source code is not available, it may require
    reverse engineering.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这些依赖源代码在我们希望追溯某些 API 定义时非常有用。然而，如果没有完整的源代码，可能需要进行逆向工程。
- en: '|'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Threat-modeling documents | The threat-modeling provides a good reference
    to identify the high-risk modules and interfaces that we should focus on. |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| 威胁建模文档 | 威胁建模为我们提供了一个很好的参考，帮助识别我们应重点关注的高风险模块和接口。 |'
- en: '| Architecture and design documents | The architecture and the design documents
    give us a good view of the design flow and the relationships of modules. |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| 架构和设计文档 | 架构和设计文档为我们提供了设计流程和模块关系的良好视图。 |'
- en: '| Automated static code analysis results | Before we do a whitebox review,
    it''s a good idea to perform an automated security code scan first. The scanning
    result will not only make things easier, but it also gives us a hint regarding
    which parts we should focus on. |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| 自动化静态代码分析结果 | 在进行白盒审查之前，最好先进行一次自动化安全代码扫描。扫描结果不仅使工作更容易，而且还会告诉我们应该关注哪些部分。 |'
- en: '| Application-related configuration | Some security frameworks may define the
    security policies in configurations that should also be reviewed. For example,
    the `web.xml` file in Spring MVC or the Spring Security framework is very critical
    to the access control. |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| 应用程序相关配置 | 一些安全框架可能在配置中定义安全策略，这些配置也应进行审查。例如，Spring MVC 或 Spring Security
    框架中的 `web.xml` 文件对于访问控制非常关键。 |'
- en: '| Communication interface or ports | The purpose of listing external API interfaces
    and communication ports is to understand how they interact with external input
    from an untrusted source, insecure communication protocols, or mistakenly exposed
    APIs. |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| 通信接口或端口 | 列出外部 API 接口和通信端口的目的是了解它们如何与来自不可信源的外部输入、不安全的通信协议或错误暴露的 API 进行交互。
    |'
- en: 'For some external dependencies or third-party components, there will be cases
    that we would like to do the certain analysis of the components to identify if
    there is no backdoor, weak encryption, hard or coded passwords without the availability
    of source code. This will require reverse engineering and dynamic run-time analysis.
    This table provides some of the tools for further reference:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 对于一些外部依赖或第三方组件，在没有源代码的情况下，我们可能需要对这些组件进行某些分析，以确定是否存在后门、弱加密、硬编码或密码。这将需要逆向工程和动态运行时分析。下表提供了一些工具供进一步参考：
- en: '| **Description** | **Tools** |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| **描述** | **工具** |'
- en: '| Cuckoo | Cuckoo Sandbox is an open source virtualized environment to do the
    static and dynamic analysis of any binary files. For more information refer to [https://cuckoosandbox.org](https://cuckoosandbox.org).
    |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| Cuckoo | Cuckoo Sandbox 是一个开源虚拟化环境，用于对任何二进制文件进行静态和动态分析。欲了解更多信息，请参阅 [https://cuckoosandbox.org](https://cuckoosandbox.org)。
    |'
- en: '| REMnux | REMnux includes lots of Linux toolkits for reverse engineering.
    For more information refer to [https://remnux.org/](https://remnux.org/). |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| REMnux | REMnux包含了许多用于逆向工程的Linux工具包。欲了解更多信息，请参阅 [https://remnux.org/](https://remnux.org/)。
    |'
- en: Viewing the whole project
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 查看整个项目
- en: 'The top-down approach means we use the source code analysis tool to view programming
    flow diagrams, such as a class diagram, a call graph, or the dependency graph.
    The following table lists some recommended tools that will help you to analyze
    the source code more easily:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 自上而下的方法意味着我们使用源代码分析工具来查看编程流程图，如类图、调用图或依赖图。下表列出了一些推荐的工具，帮助你更容易地分析源代码：
- en: '| **Tools** | **Description** |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| **工具** | **描述** |'
- en: '| Doxygen | It can generate documentation from the source code and also automatically
    visualize the relationships between modules, dependency graphs, and inheritance
    diagrams, by using the dot tool from Graphviz. Refer to the website at [www.doxygen.org](http://www.doxygen.org).To
    be able to generate documents from the source code, it requires proper comments
    and tags in the source code. Here are some tips that may be worth reading. Bear
    in mind that the generation of documents by doxygen can take a long time. Don''t
    tie the doxygen to parts of the compiler jobs. Check out the following links for
    more information:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '| Doxygen | 它可以从源代码生成文档，并且还可以通过使用Graphviz的dot工具，自动可视化模块之间的关系、依赖图和继承图。请参阅网站
    [www.doxygen.org](http://www.doxygen.org)。要能够从源代码生成文档，需要在源代码中添加适当的注释和标签。以下是一些可能值得阅读的提示。请记住，通过doxygen生成文档可能需要较长时间。不要将doxygen与编译器的部分任务绑定。有关更多信息，请查看以下链接：'
- en: '[https://www.rosettacommons.org/docs/latest/development_documentation/tutorials/doxygen-tips](https://www.rosettacommons.org/docs/latest/development_documentation/tutorials/doxygen-tips).'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.rosettacommons.org/docs/latest/development_documentation/tutorials/doxygen-tips](https://www.rosettacommons.org/docs/latest/development_documentation/tutorials/doxygen-tips)。'
- en: '[http://www.stack.nl/~dimitri/doxygen/manual/commands.html](http://www.stack.nl/~dimitri/doxygen/manual/commands.html).'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.stack.nl/~dimitri/doxygen/manual/commands.html](http://www.stack.nl/~dimitri/doxygen/manual/commands.html)。'
- en: '|'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Graphviz | It''s not a code analysis tool, but it helps doxygen to generate
    diagrams. For more information, refer to [www.graphviz.org/Download.php](http://www.graphviz.org/Download.php).
    |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| Graphviz | 它不是一个代码分析工具，但它帮助doxygen生成图表。欲了解更多信息，请参阅 [www.graphviz.org/Download.php](http://www.graphviz.org/Download.php)。
    |'
- en: '| HTML Help Workshop | It''s used to transform HTML files that are generated
    by doxygen to CHM documents. Check out [https://msdn.microsoft.com/en-us/library/windows/desktop/ms669985(v=vs.85).aspx](https://msdn.microsoft.com/en-us/library/windows/desktop/ms669985(v=vs.85).aspx).
    |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| HTML Help Workshop | 用于将doxygen生成的HTML文件转换为CHM文档。请查看 [https://msdn.microsoft.com/en-us/library/windows/desktop/ms669985(v=vs.85).aspx](https://msdn.microsoft.com/en-us/library/windows/desktop/ms669985(v=vs.85).aspx)。
    |'
- en: '| phpDocumentor  | If the programming language of the project is PHP, the phpDocumentor
    will do a good job to generate the API documents and also the class inheritance
    diagram directly from the PHP source code. Check out [https://www.phpdoc.org/](https://www.phpdoc.org/).
    |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| phpDocumentor | 如果项目的编程语言是PHP，phpDocumentor能够很好地直接从PHP源代码生成API文档和类继承图。请查看
    [https://www.phpdoc.org/](https://www.phpdoc.org/)。 |'
- en: '| Natural docs | It supports over 20 programming languages and allows developers
    to document the source code in a very straightforward way. Just bear in mind that
    the source document still requires the development team to comment the source
    code properly. Check out [http://www.naturaldocs.org/](http://www.naturaldocs.org/). Here
    is an example of the comments in the source code:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '| Natural docs | 它支持超过 20 种编程语言，并允许开发者以非常直接的方式记录源代码。请记住，源文档仍然需要开发团队正确地注释源代码。请查看 [http://www.naturaldocs.org/](http://www.naturaldocs.org/)。以下是源代码中注释的示例：'
- en: '[PRE0]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '|'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Pandoc | It''s a universal document format converter. Check out the following
    link for for more information:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '| Pandoc | 它是一个通用的文档格式转换器。请查看以下链接以获取更多信息：'
- en: '[http://pandoc.org/try/](http://pandoc.org/try/)'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://pandoc.org/try/](http://pandoc.org/try/)'
- en: '|'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Sphinx  | It''s mainly for Python documentation. Check out [http://www.sphinx-doc.org/](http://www.sphinx-doc.org/).
    |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| Sphinx  | 它主要用于 Python 文档。请查看 [http://www.sphinx-doc.org/](http://www.sphinx-doc.org/)。
    |'
- en: In summary, to generate the documents from the source code directly, we will
    use the following—natural docs and doxygen for general programming languages,
    phpDocumentor for PHP, and Sphinx for Python. These document generators are not
    magic. If the development team doesn't follow certain coding comment practices,
    the generated information will also be limited. For the whitebox review, we use
    the source code document generator to identify the security issues more efficiently.
    However, if the generated documents don't help a lot in that way, move on to the
    following review approaches. Consider the following sections carefully.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，为了直接从源代码生成文档，我们将使用以下工具——Natural docs 和 doxygen 用于一般编程语言，phpDocumentor 用于
    PHP，Sphinx 用于 Python。这些文档生成工具并非魔法。如果开发团队没有遵循某些编码注释规范，生成的信息也会受到限制。对于白盒审查，我们使用源代码文档生成工具来更高效地识别安全问题。然而，如果生成的文档在这方面帮助不大，可以转向以下审查方法。请仔细考虑以下各节内容。
- en: High-risk module
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 高风险模块
- en: Once we have a good view of the whole project, we will need to identify those
    modules or functions that need further manual code review. We don't just do a
    manual code review with high-risk modules; we do automated code scanning for all
    the modules, and we do a further manual code review for those high-risk modules
    with potentially hidden security issues that may not be easily identified by automation
    scanning tools.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们对整个项目有了清晰的了解，我们将需要识别那些需要进一步手动代码审查的模块或功能。我们不仅仅对高风险模块进行手动代码审查；我们会对所有模块进行自动化代码扫描，并对那些可能隐藏安全问题的高风险模块进行进一步的手动代码审查，这些问题可能无法通过自动化扫描工具轻易识别。
- en: 'When we are identifying high-risk modules to prioritize the whitebox source
    code review modules, try to think like a hacker. *Which modules will interest
    a hacker?* *What information can be most valuable to a hacker?* *What is the weakest
    link out of all the applications?* The following table lists typical high-risk
    modules that should be considered for further whitebox review:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们识别高风险模块，以优先考虑白盒源代码审查模块时，尽量像黑客一样思考。*哪些模块会吸引黑客？* *哪些信息对黑客最有价值？* *所有应用中最薄弱的环节是什么？*
    以下表格列出了应考虑进行进一步白盒审查的典型高风险模块：
- en: '| **High-risk modules** | **Business functions** |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| **高风险模块** | **业务功能** |'
- en: '| Authentication |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| 身份验证 |'
- en: Accounts registration.
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 账户注册。
- en: Login and CAPTCHA.
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 登录与验证码。
- en: Password recovery or reset.
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密码恢复或重置。
- en: Password changes.
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密码更改。
- en: Identity and password storage and access control.
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 身份和密码存储与访问控制。
- en: Account lockout control after multiple failures.
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多次失败后的账户锁定控制。
- en: '|'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Authorization |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| 授权 |'
- en: Sensitive resource access.
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 敏感资源访问。
- en: Administration management.
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理管理。
- en: '|'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Administrativeconfiguration | There are two kinds of review in configuration.
    One is the configuration values, and the other is how the application installs
    or updates the configuration. Generally, there are web, database, and service
    configuration needs to pay attention to. |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| 配置管理 | 配置审查有两种类型。一种是配置值，另一种是应用程序如何安装或更新配置。一般来说，网页、数据库和服务配置需要特别注意。 |'
- en: '| Finance |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| 财务 |'
- en: Payment functions.
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支付功能。
- en: Order and shopping carts.
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 订单和购物车。
- en: '|'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| File handling |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| 文件处理 |'
- en: File upload.
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件上传。
- en: File download.
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件下载。
- en: File handling.
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件处理。
- en: '|'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Database |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| 数据库 |'
- en: Database query operations.
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据库查询操作。
- en: Database create, add, update, and delete options.
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据库创建、添加、更新和删除选项。
- en: '|'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| API interface |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| API 接口 |'
- en: Restful API interfaces or other communication interfaces.
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Restful API 接口或其他通信接口。
- en: Third-party integration interfaces.
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第三方集成接口。
- en: '|'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Legacy |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| 遗留 |'
- en: Modules that don't support secure communication.
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不支持安全通信的模块。
- en: Modules that may still use a weak encryption algorithm.
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可能仍在使用弱加密算法的模块。
- en: Uses of banned or dangerous APIs.
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用禁用或危险的 API。
- en: '|'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Encryption |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| 加密 |'
- en: Uses of banned encryption algorithms.
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用禁用的加密算法。
- en: Hard-coded sensitive information or comments in the source code during development,
    such as IP, email, password, or hidden hotkey.
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在开发过程中，源代码中硬编码的敏感信息或注释，例如 IP、电子邮件、密码或隐藏的快捷键。
- en: '|'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Whitebox review checklist
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 白盒审查检查表
- en: It's suggested to have a checklist to do the whitebox review. A security checklist
    during a whitebox source code review can help the team decide what it should focus
    on. A typical security checklist for a code review may include critical security
    controls, such as authentication, data validation, authorization, session management,
    error handling, cryptography, logging, security configuration, administration
    functions, payment, money-related functions, and the handling of private data.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 建议制定检查表进行白盒审查。在白盒源代码审查中使用安全检查表可以帮助团队决定应该关注的重点内容。典型的代码审查安全检查表可能包括关键安全控制项，如身份验证、数据验证、授权、会话管理、错误处理、加密、日志记录、安全配置、管理功能、支付、与金钱相关的功能以及私人数据处理。
- en: The reference sources of the security checklist can be from industry best practices
    or historical projects experiences. The contents of the checklist can be different
    based on the objective of the review.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 安全检查表的参考来源可以来自行业最佳实践或历史项目经验。检查表的内容可以根据审查的目标不同而有所不同。
- en: 'Take a look at the following table:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 请查看下表：
- en: '| **Category of security checklist** | **Objectives and references** |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| **安全检查表类别** | **目标和参考** |'
- en: '| General security code review checklist | The objective is to provide the
    project team with a security code review checklist template. The project team
    may further add or customize the list based on the project profile.The following
    are the industry references links:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '| 一般安全代码审查检查表 | 目标是为项目团队提供一个安全代码审查检查表模板。项目团队可以根据项目概况进一步添加或自定义列表。以下是行业参考链接：'
- en: '*OWASP Secure Coding Practices* at [https://www.owasp.org/index.php/OWASP_Secure_Coding_Practices_-_Quick_Reference_Guide](https://www.owasp.org/index.php/OWASP_Secure_Coding_Practices_-_Quick_Reference_Guide).'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*OWASP 安全编码实践* 在 [https://www.owasp.org/index.php/OWASP_Secure_Coding_Practices_-_Quick_Reference_Guide](https://www.owasp.org/index.php/OWASP_Secure_Coding_Practices_-_Quick_Reference_Guide)。'
- en: '*OWASP Code Review Guide* at [https://www.owasp.org/index.php/Category:OWASP_Code_Review_Project](https://www.owasp.org/index.php/Category:OWASP_Code_Review_Project).'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*OWASP 代码审查指南* 在 [https://www.owasp.org/index.php/Category:OWASP_Code_Review_Project](https://www.owasp.org/index.php/Category:OWASP_Code_Review_Project)。'
- en: '|'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Top common issues | An ideal top-common-issues checklist is summarized based
    on historical project records, programming languages, or types of projects. If
    there is not enough project data to make the list, refer to the CWE or OWASP.The
    following are the industry references links:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '| 常见问题 | 理想的常见问题检查表是根据历史项目记录、编程语言或项目类型总结的。如果没有足够的项目数据来生成该列表，可以参考 CWE 或 OWASP。以下是行业参考链接：'
- en: '*CWE Top 25 Most Dangerous Software Errors* at [http://cwe.mitre.org/top25/](http://cwe.mitre.org/top25/).'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*CWE Top 25 最危险的软件错误* 在 [http://cwe.mitre.org/top25/](http://cwe.mitre.org/top25/)。'
- en: '[*OWASP Top Ten Project* at](http://cwe.mitre.org/top25/) [https://www.owasp.org/index.php/Category:OWASP_Top_Ten_Project](https://www.owasp.org/index.php/Category:OWASP_Top_Ten_Project)[.](http://cwe.mitre.org/top25/)'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*OWASP Top Ten 项目*](http://cwe.mitre.org/top25/) [https://www.owasp.org/index.php/Category:OWASP_Top_Ten_Project](https://www.owasp.org/index.php/Category:OWASP_Top_Ten_Project)[.](http://cwe.mitre.org/top25/)'
- en: '|'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Specific security issues (struts, deserialization) | The objective is to
    focus on the security review of a specific security issue. There are some circumstances
    that we may find these kinds of security reviews helpful. The attacks again Java
    Struts framework are happening, and the team may want to check whether the struts-related
    implementation is vulnerable. One major security issue has been identified in
    project A, and the organization would like to know whether other projects also
    have a similar security issue. The driver to check for the specific security issue
    may be caused by the recently released CVE or the major security events news or
    one security issue reported by customers, and we would like to check whether all
    other projects have the same issue. Here is a list of examples in this category:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '| 特定安全问题（Struts，反序列化） | 目标是专注于某一特定安全问题的安全审查。在某些情况下，我们可能会发现这些类型的安全审查很有帮助。例如，Java
    Struts框架正在遭受攻击，团队可能希望检查与Struts相关的实现是否存在漏洞。项目A中已经发现了一个重大安全问题，组织希望了解其他项目是否也有类似的安全问题。检查特定安全问题的驱动因素可能来自最近发布的CVE、重大安全事件新闻，或是客户报告的安全问题，我们希望检查所有其他项目是否存在同样的问题。以下是这一类别的示例列表：'
- en: Struts security issue.
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Struts安全问题。
- en: Java deserialization security issue.
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Java反序列化安全问题。
- en: REST API security.
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: REST API 安全。
- en: '|'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Top common issues
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 常见安全问题
- en: A top-common-issues checklist can be very effective for a project team to decide
    what to focus on during secure code review. To build a top-common-security checklist,
    it's suggested to refer to the CWE Top 25\. The security team and the project
    team may take the CWE Top 25 basis and in-house top security issues, based on
    historical project data, to reach a consensus of the top five security issues.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 一个常见问题的清单对项目团队在进行安全代码审查时非常有效。为了构建一个常见的安全问题清单，建议参考CWE Top 25。安全团队和项目团队可以基于历史项目数据，以CWE
    Top 25为基础，结合公司内部的安全问题，共同达成关于前五大安全问题的共识。
- en: 'To summarize in-house top security issues is critical; it''s because the CWE
    Top 25 may not be exactly the same for in-house projects, due to the business
    background, technology stacks, and the implementation. Once an in-house top-security-issue
    list is identified, it should also be listed with suggested mitigation approaches.
    Refer to the following table for what it may look like. The purpose of the table
    is to give a sample that you may also define the one fits your organization not
    just copy the whole list from CWE Top 25. Be aware that the following is just
    an example, not a comprehensive list. Let''s take a look at the table:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 总结公司内部的主要安全问题至关重要，因为CWE Top 25可能不完全适用于公司内部项目，这与业务背景、技术栈和实现方式密切相关。一旦识别出公司内部的安全问题列表，应该同时列出相应的缓解方法。请参阅下表，了解它可能的样式。表格的目的是给出一个示例，您也可以根据自己的组织定义适合的列表，而不是直接复制CWE
    Top 25中的全部内容。请注意，以下仅为示例，而非全面列表。让我们看看这个表格：
- en: '| **Example of top issues** | **Mitigation approaches for the top security
    issues** |'
  id: totrans-111
  prefs: []
  type: TYPE_TB
  zh: '| **主要问题示例** | **主要安全问题的缓解方法** |'
- en: '| CWE-89 SQL injection | A SQL injection can be detected effectively by tools
    for specific source code patterns. Focus on those SQL statements without using
    the prepared statement or the uses of `$` as SQL parameters in iBATIS framework.
    |'
  id: totrans-112
  prefs: []
  type: TYPE_TB
  zh: '| CWE-89 SQL注入 | 通过工具可以有效检测特定源代码模式中的SQL注入问题。重点检查那些没有使用预编译语句的SQL语句，或者在iBATIS框架中使用`$`作为SQL参数的情况。
    |'
- en: '| CWE-78 OS command injection | Due to the fact that the code-scanning tool
    can detect the OS command injection issue, the team decides to list those high-risk
    APIs that may result in command injection, and also develop a tool to do the source
    code search. |'
  id: totrans-113
  prefs: []
  type: TYPE_TB
  zh: '| CWE-78 操作系统命令注入 | 由于代码扫描工具可以检测操作系统命令注入问题，团队决定列出可能导致命令注入的高风险API，并开发一个工具进行源代码搜索。
    |'
- en: '| CWE-120 buffer overflow | Based on historical records, buffer overflow problems
    were one of the common issues. The team further identifies the common APIs that
    may cause the buffer overflow. Take C/C++ as an example listed:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '| CWE-120 缓冲区溢出 | 根据历史记录，缓冲区溢出问题曾是常见问题之一。团队进一步识别了可能导致缓冲区溢出的常见API。例如，列出了C/C++相关的API：'
- en: '`strcpy`, `strncpy_s`, `strncpy`'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`strcpy`, `strncpy_s`, `strncpy`'
- en: '`strncat`, `strcat`'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`strncat`, `strcat`'
- en: '`sprint`, `snprintf`'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sprint`, `snprintf`'
- en: '`memcpy`'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`memcpy`'
- en: '`memmove_s`, `memset`, `memset_s`'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`memmove_s`, `memset`, `memset_s`'
- en: '`scanf_s`, `gets`, `vscanf`'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`scanf_s`, `gets`, `vscanf`'
- en: '|'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| CWE-79 XSS | The team also identified that XSS was one of the top issues.
    To review the XSS issue, the team decided to list all potential APIs that may
    lead to XSS. Here are some of the examples—in JS/JSP/HTML, look for the following
    related functions:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '| CWE-79 跨站脚本攻击 (XSS) | 团队还发现 XSS 是最主要的问题之一。为了审查 XSS 问题，团队决定列出所有可能导致 XSS 的
    API。以下是一些例子——在 JS/JSP/HTML 中，查找以下相关函数：'
- en: '`document.location`'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`document.location`'
- en: '`document.URL`'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`document.URL`'
- en: '`document.write`'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`document.write`'
- en: '`document.open`'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`document.open`'
- en: '`eval`'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`eval`'
- en: 'In Java, review the parameters for the following API:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Java 中，查看以下 API 的参数：
- en: '`Request.getParameter`'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Request.getParameter`'
- en: '`innerHTML.innerText`'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`innerHTML.innerText`'
- en: '`getAttribute`'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`getAttribute`'
- en: '`getHeader`'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`getHeader`'
- en: '`getServerName`'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`getServerName`'
- en: '|'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| CWE-306 missing authentication for critical function | A missing authentication
    for a specific URL or resource can be a common security issue that is difficult
    to detect with any tool. Which URLs can be visited by visitors without authentication,
    and which URLs need authentication are highly related to business logic. This
    kind of security issue is also difficult to be identified by a whitebox source
    code review. Based on historical project records, here are some tips for Java
    source patterns of the issue:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '| CWE-306 关键功能缺少认证 | 特定 URL 或资源缺少认证是一个常见的安全问题，且难以通过任何工具检测。哪些 URL 可以在没有认证的情况下被访问，哪些
    URL 需要认证，通常与业务逻辑紧密相关。此类安全问题也很难通过白盒源代码审查识别。基于历史项目记录，以下是 Java 源代码模式的一些提示：'
- en: The uses of partial URL match API to determine the need for authentication,
    such as `StartsWith` and `EndsWith`
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用部分 URL 匹配 API 来确定是否需要认证，如 `StartsWith` 和 `EndsWith`
- en: No path canonicalization before validation
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 验证之前没有进行路径规范化
- en: No data normalization before validation
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 验证之前没有进行数据标准化
- en: '|'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Secure coding patterns and keywords
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安全编码模式和关键字
- en: The objective of a source code keyword or a specific patterns-based search technique
    is not to replace any other automated code-scanning tools. It's to support both
    the whitebox review and automated code-scanning tools by searching potentially
    high-risk strings. The security team may prepare or define a set of keywords or
    regular expression strings that can lead to security issues. Once the project
    team has a set of search strings, it may use any search tool, such as **GREP**,
    to do the search, and analyze the search results. This kind of search can be done
    with partial source code, and is programming-language independent. It's simple
    to search for a specific issue, as long as we have well-defined search strings.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 基于源代码关键字或特定模式的搜索技术的目标不是替代任何其他自动化代码扫描工具。它是通过搜索潜在的高风险字符串来支持白盒审查和自动化代码扫描工具。安全团队可以准备或定义一组可能导致安全问题的关键字或正则表达式字符串。一旦项目团队拥有一组搜索字符串，可以使用任何搜索工具（如
    **GREP**）进行搜索，并分析搜索结果。这种搜索可以在部分源代码中进行，并且与编程语言无关。只要我们有明确定义的搜索字符串，搜索特定问题就变得非常简单。
- en: 'The following diagram shows a general process of this kind of whitebox review
    technique:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了这种类型的白盒审查技术的一般过程：
- en: '![](img/00037.jpeg)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00037.jpeg)'
- en: Here is an example of how to search code for potential security risks, based
    on specific patterns or keywords. You may also refer to the *OWASP Code Review
    Guide 2.0, Appendix—Crawling* *Code *for further information and other programming
    languages.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是如何根据特定模式或关键字搜索代码潜在安全风险的示例。你也可以参考 *OWASP 代码审查指南 2.0，附录——爬虫* *代码* 获取更多信息以及其他编程语言。
- en: 'Take a lok at the following table:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 请查看以下表格：
- en: '| **Category of security issues** | **Java code patterns/keyword examples**
    |'
  id: totrans-146
  prefs: []
  type: TYPE_TB
  zh: '| **安全问题类别** | **Java 代码模式/关键字示例** |'
- en: '| Command injection | `Runtime.exec`, `ProcessBuilder` |'
  id: totrans-147
  prefs: []
  type: TYPE_TB
  zh: '| 命令注入 | `Runtime.exec`, `ProcessBuilder` |'
- en: '| Buffer overflow risks | `strcpy`, `strcat`, `sprint`, `sscanf`, `vscanf`,
    `gets` |'
  id: totrans-148
  prefs: []
  type: TYPE_TB
  zh: '| 缓冲区溢出风险 | `strcpy`, `strcat`, `sprint`, `sscanf`, `vscanf`, `gets` |'
- en: '| XML injection | `SAXParser`, `DocumentBuilderFactory`, `BeanReader` , `XmlReader`,
    `DOMParser`, `SAXReader`, `XMLInputFactory` |'
  id: totrans-149
  prefs: []
  type: TYPE_TB
  zh: '| XML 注入 | `SAXParser`, `DocumentBuilderFactory`, `BeanReader`, `XmlReader`,
    `DOMParser`, `SAXReader`, `XMLInputFactory` |'
- en: '| Sensitive information |'
  id: totrans-150
  prefs: []
  type: TYPE_TB
  zh: '| 敏感信息 |'
- en: Backdoor, password, admin, root
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 后门、密码、管理员、root
- en: Cipher, `getInstance`
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加密、`getInstance`
- en: '`MessageDigest.getInstance`'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MessageDigest.getInstance`'
- en: Encode, ciphers, shareKey, token
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编码、加密、共享密钥、令牌
- en: URL, Email, IP address
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: URL、电子邮件、IP 地址
- en: '|'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| HTTPS **man-in-the -middle** (**MITM**) |'
  id: totrans-157
  prefs: []
  type: TYPE_TB
  zh: '| HTTPS **中间人攻击** (**MITM**) |'
- en: '`ALLOW_ALL_HOSTNAME_VERIFIER`'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ALLOW_ALL_HOSTNAME_VERIFIER`'
- en: '`X509Certificate`, `X509TrustManager`'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`X509Certificate`, `X509TrustManager`'
- en: '`getAcceptedIssuers`'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`getAcceptedIssuers`'
- en: '|'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Insecure cryptography |'
  id: totrans-162
  prefs: []
  type: TYPE_TB
  zh: '| 不安全的加密技术 |'
- en: RC4, SSL, AES, DEC, ECB, MD5, SHA1
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RC4, SSL, AES, DEC, ECB, MD5, SHA1
- en: '`Java.util.Random`'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Java.util.Random`'
- en: '`Cipher.newInstance("DES`'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Cipher.newInstance("DES`'
- en: '`Cipher.getInstance("ECB`'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Cipher.getInstance("ECB`'
- en: '|'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| XSS |'
  id: totrans-168
  prefs: []
  type: TYPE_TB
  zh: '| XSS |'
- en: '`document.location`, `document.URL`'
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`document.location`, `document.URL`'
- en: '`document.referrer`, `document.write`, `document.print`'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`document.referrer`, `document.write`, `document.print`'
- en: '`document.body.innerHTML`'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`document.body.innerHTML`'
- en: '`window.location`, `window.execScript`'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`window.location`, `window.execScript`'
- en: '`window.setTimeout`, `window.open`'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`window.setTimeout`, `window.open`'
- en: '`request.getParameter`'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`request.getParameter`'
- en: '|'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| De-serialization issue |'
  id: totrans-176
  prefs: []
  type: TYPE_TB
  zh: '| 反序列化问题 |'
- en: '`XMLDecoder`'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`XMLDecoder`'
- en: '`XStream`'
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`XStream`'
- en: '`readObject`, `readResolve`, `readExternal`'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`readObject`, `readResolve`, `readExternal`'
- en: '|'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| User data input |'
  id: totrans-181
  prefs: []
  type: TYPE_TB
  zh: '| 用户数据输入 |'
- en: '`getParameter`, `getQueryString`, `getRequest`'
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`getParameter`, `getQueryString`, `getRequest`'
- en: '`getCookies`, `getInputStream`, `getReader`'
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`getCookies`, `getInputStream`, `getReader`'
- en: '`getInputSteam`, `getMethod`, `getReader`'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`getInputSteam`, `getMethod`, `getReader`'
- en: '`getRemoteUser`, `getServerName`'
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`getRemoteUser`, `getServerName`'
- en: '|'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: 'Here are the security code-scanning tools in this category that can do source
    code, based on regular expression patterns. Normally, these tools will also have
    pre-defined vulnerable source code patterns and security signatures. It''s suggested
    to review those security signatures and customize those regular expressions or
    strings to fit your project environment. Take a look at this table:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是此类别中可以进行源代码扫描的安全代码扫描工具，基于正则表达式模式。通常，这些工具还会具有预定义的易受攻击的源代码模式和安全签名。建议审查这些安全签名，并根据您的项目环境定制这些正则表达式或字符串。请查看下表：
- en: '| **Tools** | **References** |'
  id: totrans-188
  prefs: []
  type: TYPE_TB
  zh: '| **工具** | **参考资料** |'
- en: '| drek |'
  id: totrans-189
  prefs: []
  type: TYPE_TB
  zh: '| drek |'
- en: '**Tool**: [https://github.com/chrisallenlane/drek](https://github.com/chrisallenlane/drek)'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**工具**: [https://github.com/chrisallenlane/drek](https://github.com/chrisallenlane/drek)'
- en: '**Signature**: [https://github.com/chrisallenlane/drek-signatures/tree/master/signatures](https://github.com/chrisallenlane/drek-signatures/tree/master/signatures) 
    (refer to the `*.yml`)'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**签名**: [https://github.com/chrisallenlane/drek-signatures/tree/master/signatures](https://github.com/chrisallenlane/drek-signatures/tree/master/signatures)  （参考
    `*.yml`）'
- en: '|'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Graudit     |'
  id: totrans-193
  prefs: []
  type: TYPE_TB
  zh: '| Graudit |'
- en: '**Tool**: [https://github.com/wireghoul/graudit](https://github.com/wireghoul/graudit)'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**工具**: [https://github.com/wireghoul/graudit](https://github.com/wireghoul/graudit)'
- en: '**Signature**: [https://github.com/wireghoul/graudit/tree/master/signatures](https://github.com/wireghoul/graudit/tree/master/signatures) (refer
    to the `*.db`)'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**签名**: [https://github.com/wireghoul/graudit/tree/master/signatures](https://github.com/wireghoul/graudit/tree/master/signatures)  （参考
    `*.db`）'
- en: '|'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| **VisualCodeGrepper** (**VCG**) |'
  id: totrans-197
  prefs: []
  type: TYPE_TB
  zh: '| **VisualCodeGrepper** (**VCG**) |'
- en: '**Tool**: [https://github.com/nccgroup/VCG](https://github.com/nccgroup/VCG)'
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**工具**: [https://github.com/nccgroup/VCG](https://github.com/nccgroup/VCG)'
- en: '**Signature**: [https://github.com/nccgroup/VCG/tree/master/VisualCodeGrepper/bin/Release](https://github.com/nccgroup/VCG/tree/master/VisualCodeGrepper/bin/Release) (refer
    to the `*.conf`)'
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**签名**: [https://github.com/nccgroup/VCG/tree/master/VisualCodeGrepper/bin/Release](https://github.com/nccgroup/VCG/tree/master/VisualCodeGrepper/bin/Release)  （参考
    `*.conf`）'
- en: '|'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| CRASS Grep IT  | This tool is recommended because it requires no dependencies.
    It just needs one shell script to execute.'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '| CRASS Grep IT  | 推荐使用此工具，因为它无需任何依赖，仅需要一个 shell 脚本即可执行。'
- en: '**Tool**: [https://github.com/floyd-fuh/crass/blob/master/grep-it.sh](https://github.com/floyd-fuh/crass/blob/master/grep-it.sh)'
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**工具**: [https://github.com/floyd-fuh/crass/blob/master/grep-it.sh](https://github.com/floyd-fuh/crass/blob/master/grep-it.sh)'
- en: '**Signature**: [https://github.com/floyd-fuh/crass/blob/master/grep-it.sh](https://github.com/floyd-fuh/crass/blob/master/grep-it.sh) (refer
    to the `search "......"`)'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**签名**: [https://github.com/floyd-fuh/crass/blob/master/grep-it.sh](https://github.com/floyd-fuh/crass/blob/master/grep-it.sh)  （参考
    `search "......"`)'
- en: '|'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: These are all static code analysis tools that use a GREP-like search to identify
    vulnerable source code. This kind of source code review approach best works for
    banned APIs, dangerous APIs, weak encryption algorithm, or hard-coded secrets.
    It's flexible, so you can scan parts of source code without the need for the while
    buildable project, and it can be used to scan multiple programming languages,
    as long as the security code patterns signatures are properly defined.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 这些都是静态代码分析工具，使用类似 GREP 的搜索方法来识别易受攻击的源代码。这种源代码审查方法对于禁止的 API、不安全的 API、弱加密算法或硬编码的秘密最为有效。它灵活性高，因此可以扫描部分源代码，无需完整构建项目，并且可以用于扫描多种编程语言，只要安全代码模式签名已正确定义。
- en: Case study – Java struts security review
  id: totrans-206
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 案例研究 – Java Struts 安全审查
- en: Susan, who is the CTO of a software company, seeks security team advice on struts.
    Susan understands that the security review of struts requires not only the domain
    knowledge of struts but also threats knowledge specific to struts. To identify
    the struts security requires automated code scanning, whitebox review, secure
    configuration review, and also blackbox with the malicious payload, the security
    team proposed the following security review approaches with industry practices
    resources. The purpose of the case study is not to give a comprehensive struts
    security review guide but to demonstrate how to proceed security whitebox review
    which is framework specific to Struts security.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 苏珊，作为一家软件公司的CTO，寻求安全团队关于Struts的建议。苏珊理解，Struts的安全审查不仅需要Struts的领域知识，还需要特定于Struts的威胁知识。为了识别Struts的安全性，需要自动化代码扫描、白盒审查、安全配置审查，以及带有恶意负载的黑盒测试，安全团队提出了以下结合行业实践资源的安全审查方法。此案例研究的目的是展示如何进行针对Struts安全性的白盒审查，而非提供全面的Struts安全审查指南。
- en: Susan and the security team discuss possible review approaches and also deliver
    a struts security checklist for the project team as a code review baseline.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 苏珊和安全团队讨论了可能的审查方法，并为项目团队提供了一个Struts安全检查清单，作为代码审查的基准。
- en: Struts security review approaches
  id: totrans-209
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Struts安全审查方法
- en: 'The following table gives an example of the key review approaches for the Java
    struts frameworks:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 下表给出了Java Struts框架关键审查方法的示例：
- en: '| **Struts security review approaches** | **Objective and references** |'
  id: totrans-211
  prefs: []
  type: TYPE_TB
  zh: '| **Struts安全审查方法** | **目标和参考资料** |'
- en: '| Struts security check | The security checklist is used for developers to
    do struts secure implementation and review. The struts official site provides
    a good reference. Check out for the link at [https://struts.apache.org/security/](https://struts.apache.org/security/).
    |'
  id: totrans-212
  prefs: []
  type: TYPE_TB
  zh: '| Struts安全检查 | 安全检查清单供开发人员用于执行Struts的安全实施和审查。Struts官方网站提供了一个很好的参考。可以查看链接：[https://struts.apache.org/security/](https://struts.apache.org/security/)。
    |'
- en: '| Struts potential risks strings | In addition to code scanning, we may also
    search for specific strings that can lead to struts security. For struts security,
    we focus more on the secure configuration, `struts.xml`, instead of source code.
    |'
  id: totrans-213
  prefs: []
  type: TYPE_TB
  zh: '| Struts潜在风险字符串 | 除了代码扫描外，我们还可以搜索可能导致Struts安全问题的特定字符串。对于Struts的安全性，我们更关注安全配置，`struts.xml`，而不是源代码。
    |'
- en: '| Struts exploit scripts | To test each vulnerability of struts, it''s suggested
    to refer to the published exploit scripts. Refer to [https://www.exploit-db.com/search/?action=search&q=struts](https://www.exploit-db.com/search/?action=search&q=struts).
    |'
  id: totrans-214
  prefs: []
  type: TYPE_TB
  zh: '| Struts漏洞利用脚本 | 为了测试Struts的每个漏洞，建议参考已发布的漏洞利用脚本。参考：[https://www.exploit-db.com/search/?action=search&q=struts](https://www.exploit-db.com/search/?action=search&q=struts)。
    |'
- en: '| OWASP dependency | Most of the known struts vulnerabilities were fixed in
    the latest releases. The OWASP dependency scanning tool can help to detect the
    uses of old versions of struts. Take a look at [https://www.owasp.org/index.php/OWASP_Dependency_Check](https://www.owasp.org/index.php/OWASP_Dependency_Check).
    |'
  id: totrans-215
  prefs: []
  type: TYPE_TB
  zh: '| OWASP依赖项 | 大多数已知的Struts漏洞在最新版本中已修复。OWASP依赖项扫描工具可以帮助检测旧版本Struts的使用。查看链接：[https://www.owasp.org/index.php/OWASP_Dependency_Check](https://www.owasp.org/index.php/OWASP_Dependency_Check)。
    |'
- en: Struts security checklist
  id: totrans-216
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Struts安全检查清单
- en: 'The security checklist will remind the team what it should focus on during
    the code review. Specifically, for the struts framework security, the struts security
    implementation checklist is summarized in the following points. The struts security
    reference source is at link [https://struts.apache.org/security/](https://struts.apache.org/security/):'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 安全检查清单将提醒团队在代码审查过程中应关注的重点。具体来说，对于Struts框架的安全性，Struts安全实施检查清单总结了以下几点。Struts安全参考资料的链接：[https://struts.apache.org/security/](https://struts.apache.org/security/)：
- en: The **Config Browser Plugin** should be used only in the development environment
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**配置浏览器插件**应仅在开发环境中使用'
- en: Group actions in one namespace by security level
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按安全级别将动作分组到一个命名空间中
- en: Put all the JSP files under `WEB-INF` to avoid direct access of JSP files
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将所有JSP文件放置在`WEB-INF`中，以避免JSP文件的直接访问
- en: Disable the development mode `` `devMode` ``
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 禁用开发模式`` `devMode` ``
- en: Reduce the logging level in the production environment
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在生产环境中减少日志记录级别
- en: UTF-8 encoding
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: UTF-8编码
- en: Validate the data input parameters for `getText()`
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 验证`getText()`的输入数据参数
- en: Don't use a raw `${} EL` expression directly for the input parameters
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要直接使用原始的`${} EL`表达式来处理输入参数
- en: Disable the static method access
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 禁用静态方法访问
- en: Disable the dynamic method invocation
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 禁用动态方法调用
- en: Struts security strings search in struts.xml and API
  id: totrans-228
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在`struts.xml`和API中搜索Struts安全字符串
- en: 'This list of keywords directly related to the struts security issues will help
    us to use a search tool (such as drek or Graudit) to locate and to identify the
    issue; take a look at the following table:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 这份直接与Struts安全问题相关的关键字列表将帮助我们使用搜索工具（如drek或Graudit）定位并识别问题；请看以下表格：
- en: '| **Struts security** | **Keyword search in bold** |'
  id: totrans-230
  prefs: []
  type: TYPE_TB
  zh: '| **Struts安全性** | **粗体关键字搜索** |'
- en: '| Development mode | `struts.devMode`.**Review tips**: The suggested value
    should be false in `struts.xml`. |'
  id: totrans-231
  prefs: []
  type: TYPE_TB
  zh: '| 开发模式 | `struts.devMode`。**审查提示**：建议值应在`struts.xml`中设置为false。|'
- en: '| Dynamic method invocation | `struts.enable.DynamicMethodInvocation`.**Review
    tips**: The suggested value should be false in `struts.xml`. |'
  id: totrans-232
  prefs: []
  type: TYPE_TB
  zh: '| 动态方法调用 | `struts.enable.DynamicMethodInvocation`。**审查提示**：建议值应在`struts.xml`中设置为false。|'
- en: '| OGNL static method access | `struts.ognl.allowStaticMethodAccess`.**Review
    tips**: The suggested value should be false in `struts.xml`. |'
  id: totrans-233
  prefs: []
  type: TYPE_TB
  zh: '| OGNL静态方法访问 | `struts.ognl.allowStaticMethodAccess`。**审查提示**：建议值应在`struts.xml`中设置为false。|'
- en: '| File upload | `Allowedtypes`.`maximumSize`.`allowedExtensions`.**Review tips**:
    These parameters should be defined to limit the file upload types, size, and extensions
    in `struts.xml`. Check out the link at [https://struts.apache.org/core-developers/file-upload.html](https://struts.apache.org/core-developers/file-upload.html).
    |'
  id: totrans-234
  prefs: []
  type: TYPE_TB
  zh: '| 文件上传 | `Allowedtypes`.`maximumSize`.`allowedExtensions`.**审查提示**：这些参数应在`struts.xml`中定义，以限制文件上传的类型、大小和扩展名。请查看链接
    [https://struts.apache.org/core-developers/file-upload.html](https://struts.apache.org/core-developers/file-upload.html)。|'
- en: '| Data input injection | `findValue`, `getValue`, `setValue`.**Review tips**:
    Review the external input parameters of these APIs to avoid OGNL injection attacks
    in `struts.xml`. |'
  id: totrans-235
  prefs: []
  type: TYPE_TB
  zh: '| 数据输入注入 | `findValue`，`getValue`，`setValue`。**审查提示**：审查这些API的外部输入参数，以避免`struts.xml`中的OGNL注入攻击。|'
- en: '| Validation | `validate`.**Review tips**: The secure value of validating should
    be true in `struts.xml`. |'
  id: totrans-236
  prefs: []
  type: TYPE_TB
  zh: '| 验证 | `validate`。**审查提示**：验证的安全值应在`struts.xml`中设置为true。|'
- en: '| Data input injection | `request.getParameter`.**Review tips**: Review the
    external input parameters of these APIs to avoid potential injection attacks.
    |'
  id: totrans-237
  prefs: []
  type: TYPE_TB
  zh: '| 数据输入注入 | `request.getParameter`。**审查提示**：审查这些API的外部输入参数，以避免潜在的注入攻击。|'
- en: '| Class loader manipulation | `getClass`.**Review tips**: Review the external
    input parameters of these APIs to avoid potential injection attacks. |'
  id: totrans-238
  prefs: []
  type: TYPE_TB
  zh: '| 类加载器操作 | `getClass`。**审查提示**：审查这些API的外部输入参数，以避免潜在的注入攻击。|'
- en: Summary
  id: totrans-239
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: We discussed the practices of the whitebox review. To have an effective whitebox
    review, there is some preparation and input needed, such as the source code, threat-modeling
    analysis, architecture and design documents, automated static code analysis report,
    configurations, and the list of communication interfaces.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 我们讨论了白盒审查的实践。为了进行有效的白盒审查，需要一些准备和输入，如源代码、威胁建模分析、架构和设计文档、自动化静态代码分析报告、配置文件和通信接口列表。
- en: There are several approaches to proceed the whitebox source code review. We
    can use doxygen and naturaldocs to generate documents and flow diagrams from the
    source code. It will help us to gain an overall understanding of the source code.
    Then, we identify the high-risk modules to do a manual code inspection. The high-risk
    modules are those that handle sensitive information, security controls, or administrative
    functions.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 进行白盒源代码审查有几种方法。我们可以使用doxygen和naturaldocs从源代码生成文档和流程图。这将帮助我们全面了解源代码。然后，我们识别高风险模块进行手动代码检查。高风险模块是那些处理敏感信息、安全控制或管理功能的模块。
- en: During the whitebox review, it's necessary to build a checklist. This comprises
    some of the recommended industry practices, such as OWASP Secure Coding Practices,
    OWASP Code Review Guide, CWE Top 25, and OWASP Top 10\. Based on these practices,
    it's suggested an organization may build its own top common security issues with
    mitigation approaches.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 在白盒审查过程中，必须建立一个检查清单。这包括一些推荐的行业实践，如OWASP安全编码实践、OWASP代码审查指南、CWE Top 25和OWASP Top
    10。基于这些实践，建议组织可以构建自己最常见的安全问题及其缓解方法。
- en: Then, last but not least, we discussed the secure coding patterns and keywords.
    We listed some common Java code patterns for the security issues and introduced
    some tools, such as drek, Graudit, VCG, and CRASS Grep IT.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，最后但同样重要的是，我们讨论了安全编码模式和关键字。我们列出了针对安全问题的一些常见Java代码模式，并介绍了一些工具，如drek、Graudit、VCG和CRASS
    Grep IT。
- en: The case study gave a security code review example specific to the struts framework.
    In this case, the team applied some of the review approaches and also defined
    a struts-related security checklist.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 案例研究给出了一个特定于 Struts 框架的安全代码审查示例。在该案例中，团队应用了一些审查方法，并且定义了一个与 Struts 相关的安全检查清单。
- en: In the next chapter, we will explore more security-testing toolkits in each
    security-testing domain.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章节中，我们将探讨每个安全测试领域中的更多安全测试工具包。
- en: Questions
  id: totrans-246
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: Which of the following is not the input of whitebox review?
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪项不是白盒审查的输入？
- en: Source code
  id: totrans-248
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 源代码
- en: Threat-modeling documents
  id: totrans-249
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 威胁建模文档
- en: Automated static code analysis results
  id: totrans-250
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 自动化静态代码分析结果
- en: Antivirus scanning results
  id: totrans-251
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 杀毒扫描结果
- en: What are the tools doxygen and naturaldocs used for?
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: doxygen 和 naturaldocs 工具的用途是什么？
- en: Generating documents directly from source code
  id: totrans-253
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 直接从源代码生成文档
- en: Static code scanning
  id: totrans-254
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 静态代码扫描
- en: Dynamic code scanning
  id: totrans-255
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 动态代码扫描
- en: Reverse engineering
  id: totrans-256
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 逆向工程
- en: Which of the following are high-risk modules?
  id: totrans-257
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪项是高风险模块？
- en: Authentication
  id: totrans-258
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 认证
- en: Authorization
  id: totrans-259
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 授权
- en: API interfaces
  id: totrans-260
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: API 接口
- en: All of the above
  id: totrans-261
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以上所有
- en: Which one of the following APIs is not related to buffer overflow?
  id: totrans-262
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪个 API 与缓冲区溢出无关？
- en: strcpy
  id: totrans-263
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: strcpy
- en: strncat
  id: totrans-264
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: strncat
- en: memcpy
  id: totrans-265
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: memcpy
- en: fwrite
  id: totrans-266
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: fwrite
- en: What can cause missing authentication?
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 什么原因可能导致认证缺失？
- en: The uses of partial URL match API to determine the need for authentication such
    as StartsWith and EndsWith
  id: totrans-268
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用部分 URL 匹配 API 来确定是否需要认证，如 StartsWith 和 EndsWith
- en: No path canonicalization before validation
  id: totrans-269
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在验证之前没有进行路径标准化
- en: No data normalization before validation
  id: totrans-270
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在验证之前没有进行数据规范化
- en: All of the above
  id: totrans-271
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以上所有
- en: Further reading
  id: totrans-272
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 深入阅读
- en: 'Consider reading the following links for more information:'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 参考以下链接了解更多信息：
- en: '**US CERT WhiteBox Testing**: [https://www.us-cert.gov/bsi/articles/best-practices/white-box-testing/white-box-testing](https://www.us-cert.gov/bsi/articles/best-practices/white-box-testing/white-box-testing).'
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**US CERT 白盒测试**：[https://www.us-cert.gov/bsi/articles/best-practices/white-box-testing/white-box-testing](https://www.us-cert.gov/bsi/articles/best-practices/white-box-testing/white-box-testing)。'
- en: '**Security Code Scan – static code analyzer for .NET**: [https://security-code-scan.github.io/](https://security-code-scan.github.io/)'
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Security Code Scan – .NET 静态代码分析器**：[https://security-code-scan.github.io/](https://security-code-scan.github.io/)'
- en: '**SEI CERT Coding Standards**: [https://wiki.sei.cmu.edu/confluence/display/seccode/SEI+CERT+Coding+Standards](https://wiki.sei.cmu.edu/confluence/display/seccode/SEI+CERT+Coding+Standards).'
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SEI CERT 编码标准**：[https://wiki.sei.cmu.edu/confluence/display/seccode/SEI+CERT+Coding+Standards](https://wiki.sei.cmu.edu/confluence/display/seccode/SEI+CERT+Coding+Standards)。'
- en: '**Find Security Bugs**: [http://find-sec-bugs.github.io/](http://find-sec-bugs.github.io/).'
  id: totrans-277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Find Security Bugs**：[http://find-sec-bugs.github.io/](http://find-sec-bugs.github.io/)。'
- en: '**DevBug is an on-line PHP secure code analysis (SCA)**: [http://www.devbug.co.uk/](http://www.devbug.co.uk/).'
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**DevBug 是一个在线 PHP 安全代码分析 (SCA)**：[http://www.devbug.co.uk/](http://www.devbug.co.uk/)。'
- en: '**MITRE Secure Code Review**: [https://www.mitre.org/publications/systems-engineering-guide/enterprise-engineering/systems-engineering-for-mission-assurance/secure-code-review](https://www.mitre.org/publications/systems-engineering-guide/enterprise-engineering/systems-engineering-for-mission-assurance/secure-code-review).'
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MITRE 安全代码审查**：[https://www.mitre.org/publications/systems-engineering-guide/enterprise-engineering/systems-engineering-for-mission-assurance/secure-code-review](https://www.mitre.org/publications/systems-engineering-guide/enterprise-engineering/systems-engineering-for-mission-assurance/secure-code-review)。'
- en: '**MITRE Cyber Threat Susceptibility Assessment**: [https://www.mitre.org/publications/systems-engineering-guide/enterprise-engineering/systems-engineering-for-mission-assurance/cyber-threat-susceptibility-assessment](https://www.mitre.org/publications/systems-engineering-guide/enterprise-engineering/systems-engineering-for-mission-assurance/cyber-threat-susceptibility-assessment).'
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MITRE 网络威胁易感性评估**：[https://www.mitre.org/publications/systems-engineering-guide/enterprise-engineering/systems-engineering-for-mission-assurance/cyber-threat-susceptibility-assessment](https://www.mitre.org/publications/systems-engineering-guide/enterprise-engineering/systems-engineering-for-mission-assurance/cyber-threat-susceptibility-assessment)。'
- en: '**PCI Prioritized Approach Tool**: [https://www.pcisecuritystandards.org/documents/Prioritized-Approach-v3_2.xlsx](https://www.pcisecuritystandards.org/documents/Prioritized-Approach-v3_2.xlsx).'
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PCI 优先级方法工具**：[https://www.pcisecuritystandards.org/documents/Prioritized-Approach-v3_2.xlsx](https://www.pcisecuritystandards.org/documents/Prioritized-Approach-v3_2.xlsx)。'
- en: '**MSND How to Perform a Security Code Review for Managed Code**: [https://cwiki.apache.org/confluence/display/WW/Security+Bulletins](https://cwiki.apache.org/confluence/display/WW/Security+Bulletins).'
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MSND 如何进行托管代码的安全代码审查**: [https://cwiki.apache.org/confluence/display/WW/Security+Bulletins](https://cwiki.apache.org/confluence/display/WW/Security+Bulletins)。'
- en: '**Apache Struts CVE lists**: [https://www.cvedetails.com/vulnerability-list/vendor_id-45/product_id-6117/Apache-Struts.html](https://www.cvedetails.com/vulnerability-list/vendor_id-45/product_id-6117/Apache-Struts.html).'
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Apache Struts CVE 列表**: [https://www.cvedetails.com/vulnerability-list/vendor_id-45/product_id-6117/Apache-Struts.html](https://www.cvedetails.com/vulnerability-list/vendor_id-45/product_id-6117/Apache-Struts.html)。'
- en: '**Apache Struts File Upload**: [https://struts.apache.org/core-developers/file-upload.html](https://struts.apache.org/core-developers/file-upload.html).'
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Apache Struts 文件上传**: [https://struts.apache.org/core-developers/file-upload.html](https://struts.apache.org/core-developers/file-upload.html)。'
