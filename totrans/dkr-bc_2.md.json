["```\ndocker image pull russmckendrick/cluster\n\n```", "```\ndocker image pull registry.domain.com/myapp\n\n```", "```\ndockercontainer run -i -t ubuntu:16.04 /bin/bash\n\n```", "```\ndocker  container stop 3 de97cc32051\n\n```", "```\ndocker container ps -a\n\n```", "```\ndocker start 3de97cc32051\n\n```", "```\ndocker container attach 3de97cc32051\n\n```", "```\ndocker container ps\n\n```", "```\ndocker container run -i -t ubuntu:16.04 /bin/bash\n\n```", "```\nwhile true; do date; sleep 5; done\n\n```", "```\ndocker container pause 9724f4e0e444\n\n```", "```\ndocker container ps\n\n```", "```\ndocker container unpause 9724f4e0e444\n\n```", "```\ndocker container stop 9724f4e0e444\n\n```", "```\ndocker image pull mysql\n\n```", "```\ndocker container run -d \\\n --name mysql \\\n -e MYSQL_ROOT_PASSWORD=wordpress \\\n -e MYSQL_DATABASE=wordpress \\\n mysql\n\n```", "```\ndocker container ps\n\n```", "```\ndocker container logs mysql\n\n```", "```\ndocker image pull wordpress\n\n```", "```\ndocker container run -d \\\n --name wordpress \\\n--link mysql:mysql\\\n -p 8080:80 \\\n -e WORDPRESS_DB_PASSWORD=wordpress \\\n wordpress\n\n```", "```\ndocker container ps\n\n```", "```\ndocker container logs wordpress\n\n```", "```\ndocker container stop wordpressmysql\ndocker container rmwordpressmysql\ndocker image rm wordpress mysql\n\n```", "```\ndocker container run -i -t ubuntu:16.04 /bin/bash\n\n```", "```\ncd chapter2/compose-wordpress\n\n```", "```\nversion: \"3\" \n\nservices:\nmysql:\n     image: mysql\n     volumes:\n       - db_data:/var/lib/mysql\n     restart: always\n     environment:\n       MYSQL_ROOT_PASSWORD: wordpress\n       MYSQL_DATABASE: wordpress\nwordpress:\ndepends_on:\n       - mysql\n     image: wordpress\n     ports:\n       - \"8080:80\"\n     restart: always\n     environment:\n       WORDPRESS_DB_PASSWORD: wordpress\n\nvolumes:\ndb_data:\n```", "```\ndocker-compose pull\ndocker-compose up -d\n\n```", "```\ndocker-compose ps\ndocker container ps\n\n```", "```\ndocker-compose logs\n\n```", "```\ncd .\\chapter02\\wordpress-compose\ndocker-compose.exe pull\ndocker-compose.exe up -d\ndocker container ps\n\n```", "```\ndocker-compose stop\ndocker-compose rm\n\n```", "```\ndocker-compose.exestop\ndocker-compose.exe rm\n\n```", "```\nFROM alpine:latest\nCMD echo Hello World!!\n```", "```\ndockerimagebuild\n\n```", "```\ndocker container run 0080692cf8db\n\n```", "```\ndocker image tag 0080692cf8dbbasicbuild\n\n```", "```\ndocker image build -t basicbuild\n\n```", "```\n# Comment\n\nINSTRUCTION arguments\n```", "```\nFROM apline:latest\nCMD echo Hello World!!\n```", "```\n    # This is my first Dockerfile comment\n    ```", "```\n    CMD echo ### Welcome to Docker ###\n    ```", "```\n    # this is an invalid comment line\n    ```", "```\n# Example of a really bsaicDockerfile\n\nFROM alpine:latest\nCMD echo Hello World!!\n```", "```\n# escape='\n```", "```\nFROM <image>[:<tag>|@<digest>]\n```", "```\nFROM centos\n```", "```\nMAINTAINER <author's detail>\n```", "```\n# Example Dockerfile showing MAINTAINER\n\nFROM alpine:latest\nMAINTAINER Russ McKendrick<russ@mckendrick.io>\n```", "```\n    RUN <command>\n    ```", "```\n    RUN [\"<exec>\", \"<arg-1>\", ..., \"<arg-n>\"]\n    ```", "```\n# Example Dockerfile showing RUN\n\nFROM alpine:latest\nMAINTAINER Russ McKendrick<russ@mckendrick.io>\n\nRUN apk add --update supervisor nginx&&rm -rf /var/cache/apk/*\n```", "```\nCOPY <src> ... <dst>\n```", "```\n# Example Dockerfile showing COPY\n\nFROM alpine:latest\nMAINTAINER Russ McKendrick<russ@mckendrick.io>\n\nRUN apk add --update supervisor nginx&&rm -rf /var/cache/apk/*\n\nCOPY start.sh /script/\nCOPY files/default.conf /etc/nginx/conf.d/\nCOPY files/nginx.conf /etc/nginx/nginx.conf\nCOPY files/supervisord.conf /etc/supervisord.conf\n```", "```\nADD <src> ... <dst>\n```", "```\n# Example Dockerfile showing ADD\n\nFROM alpine:latest\nMAINTAINER Russ McKendrick<russ@mckendrick.io>\n\nRUN apk add --update supervisor nginx&&rm -rf /var/cache/apk/*\n\nCOPY start.sh /script/\nCOPY files/default.conf /etc/nginx/conf.d/\nCOPY files/nginx.conf /etc/nginx/nginx.conf\nCOPY files/supervisord.conf /etc/supervisord.conf\n\nADD webroot.tar /\nRUN chown -R nginx:nginx /var/www/html\n```", "```\nEXPOSE <port>[/<proto>] [<port>[/<proto>]...]\n```", "```\n# Example Dockerfile showing EXPOSE\n\nFROM alpine:latest\nMAINTAINER Russ McKendrick<russ@mckendrick.io>\n\nRUN apk add --update supervisor nginx&&rm -rf /var/cache/apk/*\n\nCOPY start.sh /script/\nCOPY files/default.conf /etc/nginx/conf.d/\nCOPY files/nginx.conf /etc/nginx/nginx.conf\nCOPY files/supervisord.conf /etc/supervisord.conf\n\nADD webroot.tar /\n\nRUN chown -R nginx:nginx /var/www/html\n\nEXPOSE 80/tcp\n```", "```\n    ENTRYPOINT <command>\n    ```", "```\n    ENTRYPOINT [\"<exec>\", \"<arg-1>\", ..., \"<arg-n>\"]\n    ```", "```\n# Example Dockerfile showing ENTRYPOINT\n\nFROM alpine:latest\nMAINTAINER Russ McKendrick<russ@mckendrick.io>\n\nRUN apk add --update supervisor nginx&&rm -rf /var/cache/apk/*\n\nCOPY start.sh /script/\nCOPY files/default.conf /etc/nginx/conf.d/\nCOPY files/nginx.conf /etc/nginx/nginx.conf\nCOPY files/supervisord.conf /etc/supervisord.conf\n\nADD webroot.tar /\n\nRUN chown -R nginx:nginx /var/www/html\n\nEXPOSE 80/tcp\n\nENTRYPOINT [\"supervisord\"]\n```", "```\n    CMD <command>\n\n    ```", "```\n    CMD [\"<exec>\", \"<arg-1>\", ..., \"<arg-n>\"]\n\n    ```", "```\n    CMD [\"<arg-1>\", ..., \"<arg-n>\"]\n\n    ```", "```\n# Example Dockerfile showing CMD\n\nFROM alpine:latest\nMAINTAINER Russ McKendrick<russ@mckendrick.io>\n\nRUN apk add --update supervisor nginx&&rm -rf /var/cache/apk/*\n\nCOPY start.sh /script/\nCOPY files/default.conf /etc/nginx/conf.d/\nCOPY files/nginx.conf /etc/nginx/nginx.conf\nCOPY files/supervisord.conf /etc/supervisord.conf\n\nADD webroot.tar /\n\nRUN chown -R nginx:nginx /var/www/html\n\nEXPOSE 80/tcp\n\nENTRYPOINT [\"supervisord\"]\nCMD [\"-c\",\"/etc/supervisord.conf\"]\n```", "```\ndocker image build -t cluster\n\n```", "```\ndocker image ls\ndocker container run -d -p 8080:80 cluster\n\n```", "```\ndocker container ps\ndocker container stop de9a26a1d149\ndocker container rm de9a26a1d149\n\n```", "```\ndocker image rm cluster\n\n```", "```\n# Adds wp-cli to the offical WordPress image\nFROM wordpress:latest\nMAINTAINER Russ McKendrick<russ@mckendrick.io>\n\n# Install the packages we need to run wp-cli\nRUN apt-get update &&\\\napt-get install -y sudo less mysql-client &&\\\ncurl -o /bin/wp-cli.pharhttps://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar\n\n# Copy the wrapper for wp-cli and set the correct execute permissions\nCOPY wp /bin/wp\nRUN chmod 755 /bin/wp-cli.phar /bin/wp\n\n# Clean up the installation files\nRUN apt-get clean &&rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/\n```", "```\ndocker image build -t wordpress-custom .\n\n```", "```\ndocker image ls\n\n```", "```\ndocker image rm wordpress-custom\n\n```", "```\nversion: \"3\"\n\nservices:\nmysql:\n     image: mysql\n     volumes:\n       - db_data:/var/lib/mysql\n     restart: always\n     environment:\n       MYSQL_ROOT_PASSWORD: wordpress\n       MYSQL_DATABASE: wordpress\nwordpress:\ndepends_on:\n       - mysql\n     build: ./\n     ports:\n       - \"8080:80\"\n     restart: always\n     environment:\n       WORDPRESS_DB_PASSWORD: wordpress\n\nvolumes:\ndb_data:\n```", "```\ndocker-compose up -d\n\n```", "```\ndocker-compose exec wordpress wp core version\n\n```", "```\ndocker-compose exec wordpress wp core install --url=http://localhost:8080/ --title=Testing --admin_user=admin --admin_password=adminpasswIt ord --admin_email=russ@mckendrick.io\n\n```", "```\ndocker-compose stop\ndocker-compose rm\n\n```", "```\ndocker login\n\n```", "```\ndocker image build -t russmckendrick/exampleimage .\n\n```", "```\ndocker image ls\n\n```", "```\ndocker image push russmckendrick/exampleimage\n\n```"]