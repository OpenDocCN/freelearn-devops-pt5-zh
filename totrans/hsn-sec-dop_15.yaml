- en: Security Monitoring
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The topic of incident response was discussed in the previous chapter. In this
    chapter, we will introduce some security monitoring techniques. The objective
    of this chapter is to prepare our security monitoring mechanism to protect and prevent
    our cloud services from being attacked. To be prepared for this, our security
    monitoring procedures should include logging, monitoring the framework, threat
    intelligence, and security scanning for malicious programs. The topics that will
    be covered in this chapter are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Logging policy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Security monitoring framework
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Source of information
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Threat intelligence toolset
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Security scanning toolset
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Malware behavior matching—YARA
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Logging policy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The general objective of security monitoring is to understand the existing security
    posture of the data, the network, endpoint hosts, gateway, cloud services, web
    services, databases, applications, and security configurations. This monitoring
    can be done by various kinds of security tools, such as host IDS, network IDS/IPS,
    antivirus software, firewalls, and also **security information and event management**
    (**SIEM**). The security monitoring scenario will decide which logs should be
    collected, what should be monitored, and the focus of the threat visualization.
  prefs: []
  type: TYPE_NORMAL
- en: If the logs are collected too often, the information can be overwhelming and
    occupy too many resources, such as storage and network traffic. On the other hand,
    if the logs that are collected are not detailed enough, it's likely that the security
    professionals may not be able to identify potential risks or perform the post-mortem
    of a security event.
  prefs: []
  type: TYPE_NORMAL
- en: 'The NIST SP 800-92 Guide to Computer Security Log Management suggests that
    the log collection configuration should be based on the security impact to the
    systems. It is suggested that the logging collection and retention policies should
    be based on the value of the data and the business impact. An organization may
    define such security policies to manage the whole log infrastructure. The following
    table is an example of some logging policies:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Examples of logging configuration settings by NIST SP 800-92**:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Category** | **Low impact** | **Moderate impact** | **High impact** |'
  prefs: []
  type: TYPE_TB
- en: '| How long to retain log data(Keep in mind that the cybersecurity law may also
    have explicitly requested the log retention period. The number here is just an
    example.) | One to two weeks | One to three months | Three to 12 months |'
  prefs: []
  type: TYPE_TB
- en: '| How often to rotate logs | Optional (if performed, at least every week, or
    for every 25 MB) | Every six to 24 hours, or every 2 to 5 MB | Every 15 to 60
    minutes or every 0.5 to 1.0 MB |'
  prefs: []
  type: TYPE_TB
- en: '| How frequently the organization requires the system to transfer log data
    to the log management infrastructure, if it has this policy | Every 3 to 24 hours
    | Every 15 to 60 minutes | At least every five minutes |'
  prefs: []
  type: TYPE_TB
- en: '| How often log data needs to be analyzed locally (through automated or manual
    means) | Every 1 to 7 days | Every 12 to 24 hours | At least six times a day |'
  prefs: []
  type: TYPE_TB
- en: '| Whether log file integrity checking needs to be performed for rotated logs
    | Optional | Yes | Yes |'
  prefs: []
  type: TYPE_TB
- en: '| Whether rotated logs need to be encrypted | Optional | Optional | Yes |'
  prefs: []
  type: TYPE_TB
- en: '| Whether log data transfers to the log management infrastructure need to be
    encrypted or performed on a separate logging network | Optional | Yes, if feasible
    | Yes |'
  prefs: []
  type: TYPE_TB
- en: Security monitoring framework
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Once the security detection solutions are in place, security monitoring management
    can be planned to perform security events correlation analysis. The purpose of
    the security monitoring framework is not to replace existing endpoint or network
    security solutions, it''s to provide the security posture, the security trending,
    and the security events correlation of the whole environment. Some advanced security
    monitoring frameworks may even apply machine learning for the security events
    correlation to identify the abnormalities. Don''t just assume that setting up
    a security monitoring management framework will do everything related to security
    monitoring. Building a complete security monitoring framework involves incorporating
    the following key components:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Log collector**: This is responsible for collecting and forwarding all the
    logs to the security monitoring team for further analysis. In the production environment,
    the concern of the log collection is the performance impact of the host and the
    number of logs needed to be forwarded. Syslog is the most common way to send the
    logs to security monitoring management.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Security monitoring** **(SIEM)**: This gives the security administrator a
    visualized security overview of the whole environment. An ideal SIEM can even
    do automated security correlation analysis based on predefined rules to identify
    abnormalities and potential risks.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Threat intelligence**: Threat intelligence is used to correlate the collected in-house
    security logs with external threat information, such as blacklisted IPs, Tor exit
    nodes, known malicious domains, user agents, file hashes, and the **indicators
    of compromise** (**IOC**).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Threat intelligence feeds**: These form the threat database that includes
    known current threat information provided by cybersecurity communities, security
    vendors, or customer submissions. An organization may use the external threat
    intelligence feeds to correct internal security events in order to identify whether
    there are any suspicious activities, such as internal hosts connected to a known
    cybercrime IP.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In practice, it's suggested that you build the threat intelligence and security
    monitoring after the security scanning solutions, such as host IDS/IPS and network
    security, are deployed and optimized. Security monitoring and threat intelligence
    may help you to visualize and correlate the security events across hosts and network
    segments, but those security monitoring technologies still rely on the host and
    network IDS/IPS detection and actions.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram shows the typical scope of security monitoring:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00049.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Source of information
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The various log sources will help you to provide security events in different
    respects. Here are some of the general recommendations of the security monitoring
    focuses:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Source of information** | **Security monitoring focuses** |'
  prefs: []
  type: TYPE_TB
- en: '| Application logs | These are the operational and error logs generated by
    the application. If the application is a web service, the logs may be included
    in Apache or nginx logs:'
  prefs: []
  type: TYPE_NORMAL
- en: Monitor the user activities, especially those activities that involve access
    to sensitive data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Monitor the major changes of user profiles, such as login IPs, abnormal endpoint
    devices, non-browser connection clients, and concurrent connections from different
    IP sources
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Monitor the activities of administration and service accounts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Monitor login failures and web errors, such as 401, 404, and 501
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Host security,database logs | These mainly rely on the host-based IDS/IPS
    detection logs, OS, and database logs:'
  prefs: []
  type: TYPE_NORMAL
- en: Successful and failed authentication of users
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Administrative access and changes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Unauthorized login failure
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Major configuration file changes, such as mysql.cnf
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Database accounts added
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Massive data transmission to specific hosts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Vulnerability | The OpenVAS or NMAP scanning results of CVE vulnerabilitiesInsecure
    communication ports or protocols, such as Telnet, SSH v1, SSL, and FTP |'
  prefs: []
  type: TYPE_TB
- en: '| OpenSCAP | The adoption of OpenSCAP scanning tools can help you to identify
    the insecure configuration of the applications, OS, database, and web services
    |'
  prefs: []
  type: TYPE_TB
- en: '| Network security,firewalls | Rely on the network IDS/IPS detection logs,
    and also the logs from the load balancer, switches, and routers. For the updated
    firewall rules for IPtables, Snort, and Suricata, refer to the EmergingThreats
    website.  |'
  prefs: []
  type: TYPE_TB
- en: '| Web security | Rely on the web application firewall detection logs:'
  prefs: []
  type: TYPE_NORMAL
- en: Client IP is from a blacklisted IP
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: User-agent associated with suspicious clients
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Too many errors in the weblogs, such as 401, 404, and 500
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Refer to the OWASP ModSecurity CRS which includes the web application firewall
    ruleset.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Email security | Reply to the email security scanning and detection logs:'
  prefs: []
  type: TYPE_NORMAL
- en: Unusual mail receivers or senders
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Malicious attachment files
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Malicious URL in the message body
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Threat intelligence toolset
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The purpose of threat intelligence is to help an organization to prepare for
    known and unknown threats. To address the unknown threats, the external threat
    feeds can be used to identify whether the existing environment may have similar
    threats, and also be used to optimize the security detection rules. For example,
    a known cybercrime IP or the Tor exit IP can be used to block the outbound connection
    IP lists in the firewall.
  prefs: []
  type: TYPE_NORMAL
- en: 'Integrate the internal threat log information, and the external threat feeds
    will help to combine the known and unknown threats and take proactive steps. The
    whole threat intelligence process normally includes the following key components:'
  prefs: []
  type: TYPE_NORMAL
- en: '**The log collector**: This is used to collect the internal system, applications,
    and security logs'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**SIEM/visualization**: This is used to visualize the security posture in one
    dashboard'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Threat intelligence platform**: This is used to correlate the internal and
    external threat information'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Threat intelligence feeds**: This is the external threat database, such as
    the blacklist IP, malicious hash, suspicious domain, and so on'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Here are some of the open source tools that will help you to build the whole
    threat intelligence solution:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Category** | **Open source security tools** |'
  prefs: []
  type: TYPE_TB
- en: '| Log collector/sensor | **Syslog-NG**: Syslog-ng is an enhanced log daemon
    which can handle not only standard syslog message but also unstructured data. **Rsyslog**: Rsyslog
    stands for a **r**ocket-fast **sys**tem for **log** processing. **FileBeat**: Filebeat
    provides a backpressure-sensitive protocol that controls the flow of sending data
    to Logstash or Elasticsearch**LogStash**: Logstash is a data processing pipeline
    that collects the data, transforms it, and then sends it to Elasticsearch.  |'
  prefs: []
  type: TYPE_TB
- en: '| SIEM/visualization | **Kibana**: Kibana provides the visualization of the
    Elasticsearch data.**ElasticSearch**: Search, index and analyze the data in real
    time.**AlienValut OSSIM**: It''s an open source SIEM (Security Information and
    Event Management) solution provided by AlienValut.**Grafana**: It provides a quick
    solution for log query and visualization regardless of the data store.**GrayLog**: It''s
    an open soure solution for enterprise log management. |'
  prefs: []
  type: TYPE_TB
- en: '| Threat intelligence platforms | **MISP - open source threat intelligence
    platform**:The MISP is the threat sharing platform which can search and correlate
    IoC (Indicators of Compromise), threat intelligence feeds and vulnerability information.
    |'
  prefs: []
  type: TYPE_TB
- en: '| Threat intelligence feeds | **External threat feeds for blacklisted IP list
    and firewall rules suggestions**:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://rules.emergingthreats.net/fwrules/](https://rules.emergingthreats.net/fwrules/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://www.spamhaus.org/drop/](https://www.spamhaus.org/drop/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://rules.emergingthreats.net/fwrules/emerging-Block-IPs.txt](https://rules.emergingthreats.net/fwrules/emerging-Block-IPs.txt)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://check.torproject.org/exit-addresses](https://check.torproject.org/exit-addresses)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[http://iplists.firehol.org/](http://iplists.firehol.org/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Security scanning toolset
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Here are some open source tools that can perform security monitoring, scanning,
    and detection. Although your organization may have some commercial security solutions
    in place, these open source security detection rules can be a good reference when
    optimizing the existing security detection, such as the IDS/IPS, firewall, and
    web security.
  prefs: []
  type: TYPE_NORMAL
- en: 'You may find the following rules helpful to update or improve your existing
    firewall rules:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Wazuh host IDS rules**: Host-based intrusion defense rules.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**OSSEC host IDS rules**: Host-based intrusion defense rules.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**ModSecurity WAF rules**: Web Application Firewall rules.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Suricata network IDS/IPS rules**: Network-based intrusion prevention firewall
    rules.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Snort network IDS/IPS rules**: Network-based intrusion prevention firewall
    rules.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The table lists the security monitoring tools in each category.
  prefs: []
  type: TYPE_NORMAL
- en: '| **Category** | **Open source security monitoring tools** |'
  prefs: []
  type: TYPE_TB
- en: '| All-in-one security scanning (host, network, visualization) | **Security
    Onion**: [https://github.com/Security-Onion-Solutions](https://github.com/Security-Onion-Solutions)This
    includes several open source security tools, such as Elasticsearch, Logstash,
    Kibana, Snort, Suricata, Bro, OSSEC, Sguil, Squert, and NetworkMiner. |'
  prefs: []
  type: TYPE_TB
- en: '| All-in-one host-based IDS, secure configuration, and visualization | The
    Wazuh integrates the OSSEC (a host-based IDS), OpenSCAP (secure configuration
    scanner), and Elastic Stack (threat visualization).  |'
  prefs: []
  type: TYPE_TB
- en: '| Secure configuration | The OpenSCAP defines the secure configuration for
    OS, Web, database, and application. |'
  prefs: []
  type: TYPE_TB
- en: '| Vulnerability | The OpenVAS and OWASP dependency are two of popular open
    source vulnerability scanners. |'
  prefs: []
  type: TYPE_TB
- en: '| Antivirus | The CalmAV is the open source antivirus for Windows.The LMD (Linux
    Malware Detect) is the Linux version open source antivirus. |'
  prefs: []
  type: TYPE_TB
- en: '| Host IDS/IPS | The OSSEC and Samhain are two of open source host IDS/IPS
    solutions to be considered. |'
  prefs: []
  type: TYPE_TB
- en: '| Web application firewall (WAF) | The ModSecurity which is one of OWASP open
    source project is a light-weight web application firewall.  |'
  prefs: []
  type: TYPE_TB
- en: '| Network IDS/IPS | Snort and Suricata are two of the popular open source network
    IDS/IPS solutions. These two solutions also provide frequently updated rules.
    |'
  prefs: []
  type: TYPE_TB
- en: Malware behavior matching – YARA
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: YARA ([https://virustotal.github.io/yara/](https://virustotal.github.io/yara/))
    is a pattern-matching Swiss army knife for malware detection. YARA rules consist
    of the descriptions of malware characteristics based on textual or binary patterns.
    YARA can be used to perform malware detection, and the detection signatures can
    also be easily defined. The YARA scanner/rules can be seen as an antivirus scanner
    and signatures.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, say that one host identifies suspicious webshell activities, but
    the antivirus software does not detect any suspicious activities. The security
    administrator can use the YARA detector with predefined YARA rules to scan all
    the files on the host or to scan the collected logs. Here is one example of a YARA
    rule to detect the web shell:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The YARA rules define two characteristics of a web shell. When the YARA rules
    are scanned with any binary files, and if the files match the conditions where
    the file size is less than 15 KB and the criteria stipulated under `x1` and `x2`
    are also met, then the YARA scanner will identify a match.
  prefs: []
  type: TYPE_NORMAL
- en: The YARA scanner can be executed as a standalone command-line tool or as a Python
    plugin. Refer to the YARA introductory guide *Compiling and Installing YARA* to
    get your YARA scanner on Windows, Linux, and macOS. You can find the guide at [https://yara.readthedocs.io/](https://yara.readthedocs.io/).
  prefs: []
  type: TYPE_NORMAL
- en: 'The latest YARA rules—as well as the signatures and detection of malware, malicious
    emails, webshells, packers, documents, exploit kits, CVEs, and cryptography—can
    be found at the following links:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://github.com/Yara-Rules/rules](https://github.com/Yara-Rules/rules)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://github.com/Neo23x0/signature-base](https://github.com/Neo23x0/signature-base)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://github.com/InQuest/awesome-yara](https://github.com/InQuest/awesome-yara)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we discussed using the NIST 800-92 Guide to Computer Security
    Log Management to define the logging policy. We also explored the key components
    of a security monitoring framework, such as the log collector, SIEM, and threat
    intelligence. The security monitoring framework requires a source of information
    logs. We also discussed the source of information and stated what we are looking
    for in the logs. The application logs, host security logs, database logs, vulnerability
    scanning results, network security logs, and web and email security logs are typically
    the source logs for security monitoring.
  prefs: []
  type: TYPE_NORMAL
- en: We also introduced the toolset that you need to build your own in-house threat
    intelligence framework. We apply the threat intelligence framework to identify
    known and unknown threats. Some of the open source tools that are used to build
    a threat intelligence framework are also shared, such as the MISP—an open source
    threat intelligence platform. There are three key categories of tools—, the log
    collector, the SIEM/visualization, and the threat intelligence feeds. On the other
    hand, open source security scanning toolsets are also available, such as Security
    Onion, host IDS, vulnerability scanner, antivirus, WAF, network security, and
    the adoption of YARA.
  prefs: []
  type: TYPE_NORMAL
- en: In summary, security monitoring relies on the security scanning tools, the correlation
    of logs from various sources by SIEM, and also the threat intelligence feeds that
    are used to identify known and unknown threats.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Which of the following is not a part of the security monitoring framework?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Log collector
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Security monitoring
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Threat intelligence
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Encryption
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: What kinds of logs will help security monitoring?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Application logs
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Host security logs
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Vulnerability scanning results
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: All of the above
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Which of the following facts is not directly related to web security?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Client IP is from blacklisted IP
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: User-agent is associated with suspicious clients
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Unusual mail receivers or senders
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Too many errors in the weblogs, such as 401, 404, 500
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Which one of the following tools is not a log collector/sensor?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Syslog
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Kibana
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: FileBeat
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: LogStash
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: What is Security Onion used for?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: It's an all-in-one security scanning and monitoring tool (host, network, visualization)
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: It's a vulnerability scanner
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: It's an antivirus scanner
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: It's a WAF (web application firewall)
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: What is YARA?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: It's an encryption module
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: YARA is a pattern-matching Swiss army knife for malware detection
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: It's a vulnerability scanner
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: It's an automation framework
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**SANS Continuous Monitoring—What It Is, Why It Is Needed, and How to Use It**: [https://www.sans.org/reading-room/whitepapers/analyst/continuous-monitoring-is-needed-35030](https://www.sans.org/reading-room/whitepapers/analyst/continuous-monitoring-is-needed-35030)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**PCI DSS Part 11 - Regularly test security systems and processes**: [https://www.pcisecuritystandards.org/document_library?category=pcidss&document=pci_dss](https://www.pcisecuritystandards.org/document_library?category=pcidss&document=pci_dss)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Guide to Computer Security Log Management (SP 800-92)**: [https://ws680.nist.gov/publication/get_pdf.cfm?pub_id=50881](https://ws680.nist.gov/publication/get_pdf.cfm?pub_id=50881)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**NIST 800-137 Information Security Continuous Monitoring**: [https://nvlpubs.nist.gov/nistpubs/legacy/sp/nistspecialpublication800-137.pdf](https://nvlpubs.nist.gov/nistpubs/legacy/sp/nistspecialpublication800-137.pdf)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Loki - Simple IOC and Incident Response Scanner**: [https://github.com/Neo23x0/Loki](https://github.com/Neo23x0/Loki)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Malware Indicators**: [https://github.com/citizenlab/malware-indicators](https://github.com/citizenlab/malware-indicators)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**OSINT Threat Feeds**: [https://www.circl.lu/doc/misp/feed-osint/](https://www.circl.lu/doc/misp/feed-osint/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**SANS How to Use Threat Intelligence effectively**: [https://www.sans.org/reading-room/whitepapers/analyst/threat-intelligence-is-effectively-37282](https://www.sans.org/reading-room/whitepapers/analyst/threat-intelligence-is-effectively-37282)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**NIST 800-150 Guide to Cyber Threat Information Sharing**: [https://nvlpubs.nist.gov/nistpubs/specialpublications/nist.sp.800-150.pdf](https://nvlpubs.nist.gov/nistpubs/specialpublications/nist.sp.800-150.pdf)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
