- en: Chapter 8. Configuring JIRA User Directories to Connect with LDAP, Crowd, and
    JIRA User Server
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In companies with thousands of employees, there are several internal tools and
    systems. There are tools to track time, leave management, and intranet portals.
    It's very difficult to manage user accounts on multiple applications; companies
    use **Lightweight Directory Access Protocol** (**LDAP**) servers for user management,
    where a single user account works on more than one tool and users don't need to
    remember multiple passwords. JIRA also supports integration with LDAP. This is
    a great feature; it really helps system administrators to manage users. Apart
    from LDAP, we will also discuss how to connect JIRA to another JIRA instance for
    user management, as well as for **Crowd**, which is a single sign-on software
    from Atlassian.
  prefs: []
  type: TYPE_NORMAL
- en: 'This chapter will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Authentication mechanism in JIRA
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allowing other applications to connect to JIRA
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Synchronizing user and group information
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Authentication mechanism in JIRA
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: JIRA is a web-based tool used by multiple users, each having different permissions
    depending on the group they are part of or what role they are performing in the
    project. JIRA has a built-in authentication mechanism known as **JIRA internal
    directory**, but it's possible to connect JIRA to external directories as well.
    Let's take a look at how this is done.
  prefs: []
  type: TYPE_NORMAL
- en: JIRA internal directory
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: JIRA comes with an internal directory that is enabled by default; the first
    administrative user is a part of the internal directory, and, until you add another
    directory, all additional users are added in this internal directory. JIRA stores
    this in its own database.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring LDAP
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: LDAP is an application protocol to query and modify information in directory
    services. In medium-to large-scale companies, where there are hundreds or thousands
    of users, everyone has their e-mails, phone numbers, and other details stored
    on a directory server. Users can find each other in this directory. Each user's
    login details are also stored, and various applications can rely on directory
    services for authentication.
  prefs: []
  type: TYPE_NORMAL
- en: 'Instead of JIRA''s internal authentication, it''s possible to connect to existing
    directory services through LDAP:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to JIRA **Administration** | **User management** | **User Directories** (under
    **USER DIRECTORIES**). You will notice **JIRA Internal Directory** already added
    there, but after we add additional directories, such as LDAP or Crowd, the order
    in which the user is searched is defined using the **Order** column. Users may
    be present in one or more directories, but they will be searched for first in
    the directory that is listed at the top:![Configuring LDAP](img/image_08_001.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Add Directory**. A popup will appear. Select **Microsoft Active Directory**
    and click on **Next**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In the following screenshot, we need to configure the LDAP user directory.
    First, fill in the **Server Settings**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the **Name** as `Active Director server` or any other useful name.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Select the **Directory Type** as **Microsoft Active Directory**.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Enter the **Hostname** of your LDAP server.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Enter the **Port** number of your LDAP server.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Enter the **Username** of your LDAP server. It's usually in a format such as
    `user@domain.name` or `cn=username,dc=domain,dc=com`.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Enter the **Password**.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Configuring LDAP](img/image_08_002.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: 'Then, enter the **LDAP Schema** settings:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Enter **Base DN**; it''s usually in the `dc=domain,dc=local` format. Ask your
    LDAP administrators for specific information:'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Configuring LDAP](img/image_08_003.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Now, set **LDAP Permissions** as **Read Only**, where the user information is
    only retrieved from the LDAP server. In this case, the password can only be changed
    from the LDAP server and not from the JIRA application. However, if you want users
    who are newly logged in to be automatically added to one or more JIRA groups,
    then select **Read Only, with Local Groups** and enter the name of the groups
    in the **Default Group Memberships:** field:![Configuring LDAP](img/image_08_004.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Save and Test** button to save the configuration.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, a new user who is already a part of the LDAP server can log in to the JIRA
    instance using the same username and password. Also, this user will be added to
    the additional JIRA groups that we configured previously.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding Base DN
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The LDAP directory used in companies could have thousands of employees; it may
    not be necessary to give JIRA access to all the users in the company. For instance,
    consider a scenario when there are users in the U.S. as well as in Asia, and access
    of JIRA needs to be given only to users in the U.S. Now, LDAP also has its own
    groups known as domains that can be leveraged to limit access to JIRA.
  prefs: []
  type: TYPE_NORMAL
- en: 'Refer to the following table to understand the possible Base DN for corresponding
    LDAP domains:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **LDAP domain** | **Base DN** | **Remarks** |'
  prefs: []
  type: TYPE_TB
- en: '| `example.com` | `dc=example,dc=com` | All users in the LDAP directory can
    access JIRA |'
  prefs: []
  type: TYPE_TB
- en: '| `us.example.com` | `dc=us,dc=example,dc=com` | Only U.S. users can access
    JIRA |'
  prefs: []
  type: TYPE_TB
- en: '| `asia.example.com` | `dc=asia,dc=example,dc=com` | Only Asian users can access
    JIRA |'
  prefs: []
  type: TYPE_TB
- en: Contact your JIRA administrator to understand the LDAP domain. Also, make sure
    that if you are using LDAP, then any user with an active account can log in to
    JIRA and your license limit can exhaust quickly.
  prefs: []
  type: TYPE_NORMAL
- en: Connecting to Crowd
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Crowd is another application from Atlassian for single sign-on. This application
    can be used to manage multiple user directories.
  prefs: []
  type: TYPE_NORMAL
- en: Implementing Atlassian Crowd
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Crowd supports various types of directory. It can use its own Crowd internal
    directory or it can also connect to the LDAP directory already used in the organization.
    As a first step, at least one of these directories should be configured in Crowd.
    Then, make sure the group that is required to authenticate the users is added
    in the directory that you add and configure in Crowd. For instance, **jira-software-users**
    is a group defined in JIRA. Users who are part of this group can login to JIRA.
    Just make sure this group is also added to your Crowd directory. Finally, to communicate
    with JIRA an application needs to be created in Crowd. Remember the application
    name and application password; you will need them when configuring Crowd in JIRA.
  prefs: []
  type: TYPE_NORMAL
- en: 'Organizations with an existing Crowd instance can connect their JIRA to utilize
    single sign-on:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to JIRA **Administration** | **User management** | **User Directories** (under
    **USER DIRECTORIES**).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Add Directory** button and select **Directory Type:** as **Atlassian
    Crowd**:![Implementing Atlassian Crowd](img/image_08_005.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'On the next screen, fill in **Server Settings**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the **Name** of the Crowd server
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Enter the **Server URL** of your crowd instance
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Enter the name of the **Application Name**; this application needs to be created
    in Crowd by the administrator
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Provide the **Application Password** given to you by the Crowd administrator
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Then, select **Crowd Permissions** as **Read/Write** if you want the changes
    to be applied to the Crowd server, or **Read Only** if you just want to retrieve
    the information.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: First, click on **Test Settings** and if everything works, then you will be
    able to **Save and Test** the connection to the Crowd server.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connecting to a JIRA user server
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In large organizations, there could be more than one instance of JIRA used
    by various teams or projects. Users may need to access all these instances to
    track projects; in such cases, separate accounts need to be created for the same
    person. It''s not only cumbersome for the JIRA administrator, but also difficult
    for the user to remember one more username and password. JIRA allows you to connect
    to another JIRA instance for user management:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to JIRA **Administration** | **User management** | **User Directories** (under
    **USER DIRECTORIES**).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Add Directory** button and select **Directory Type:** as **Atlassian
    JIRA**:![Connecting to a JIRA user server](img/image_08_006.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'On the next screen, fill in **Server Settings**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the **Name** of the JIRA server
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Enter the **Server URL** of your JIRA instance
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Enter the name of the **Application Name**; this application needs to be created
    in JIRA by the administrator
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Provide the **Application Password** given to you by the JIRA administrator
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Then, select **JIRA Server Permissions** as **Read/Write** if you want the changes
    to be applied to the JIRA server, or **Read Only** if you just want to retrieve
    the information.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: First, click on **Test Settings** and if everything works, then you will be
    able to **Save and Test** the connection to the JIRA server.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Allowing other applications to connect to JIRA
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In the previous section, we connected one JIRA instance to another for user
    management. The instance used as a JIRA user server needs to have the application
    created so that other instances can connect to it:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to JIRA **Administration** | **User management** | **JIRA User Server**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on the **Add application** button in the top-right corner:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Allowing other applications to connect to JIRA](img/image_08_007.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: On the next screen, enter **Application name** as `jira-user-server` or something
    meaningful.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the **Password** for this application.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Finally, enter the IP address of the actual JIRA server in the **IP Addresses**
    field. This step is quite important. Without this step, the connection may not
    work.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The JIRA user server URL, application name, and password are important features
    to note here and need to be used in the JIRA instance that will connect to it.
    Allowing other applications from Atlassian, such as Confluence, to connect to
    JIRA to share the user base is possible because JIRA internally uses a trimmed
    version of Crowd.
  prefs: []
  type: TYPE_NORMAL
- en: Synchronizing user and group information
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that we have seen how to connect JIRA to LDAP, Crowd, and another JIRA server,
    it's also important to understand how the user information is synchronized. Any
    new user who is a part of the directory should be able to log in to a JIRA instance,
    but all new users who have recently been added to the directory will not be able
    to access JIRA until the user list is synchronized.
  prefs: []
  type: TYPE_NORMAL
- en: 'Go to JIRA **Administration** | **User management** | **User Directories**
    (under **USER DIRECTORIES**). Here, you will see the list of user directories
    added in the instance. There is a **Synchronise** link against each entry:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Synchronizing user and group information](img/image_08_008.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Click on the **Synchronise** link and JIRA will compare and fetch the list of
    users from the JIRA server; if there are new users on the server, they will be
    created in the instance. This will also create the groups in our JIRA instance.
  prefs: []
  type: TYPE_NORMAL
- en: Note that the users created via this synchronization will not be editable, and
    you cannot delete them if the permission is set in the **Read Only** mode.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, you learned how to integrate JIRA with LDAP, Crowd, and a JIRA
    user server. This way, users don't need to remember multiple logins for different
    tools, and it's also much easier for the administrators to manage users efficiently
    from a single place. You also learned how to create the application link on the
    JIRA server, and discussed the synchronization of user accounts.
  prefs: []
  type: TYPE_NORMAL
- en: Until now, we have seen the power of JIRA and the flexibility it offers. JIRA
    can be customized very easily; we know that more functionality can be added to
    JIRA by installing add-ons from the marketplace. While some of these add-ons are
    free, others need to be purchased. It's also possible to create your own add-on
    to bring a new feature in JIRA and modify it. In the next chapter, we will take
    a look at how to create these add-ons along with some simple examples.
  prefs: []
  type: TYPE_NORMAL
