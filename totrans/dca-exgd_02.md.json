["```\n$ docker container ls\n```", "```\n[Service]\nEnvironment=\"HTTPS_PROXY=https://proxy.example.com:443/\" \"NO_PROXY=localhost,127.0.0.1,docker-registry.example.com,.corp\"\n```", "```\n\"proxies\":\n{\n    \"default\":\n    {\n        \"httpProxy\": \"http://my-company-proxy:3001\",\n        \"httpsProxy\": \"http://my-company-proxy:3001\",\n        \"noProxy\": \"*.test.example.com,.example2.com\"\n    }\n}\n```", "```\n--env HTTP_PROXY=\"http://my-company-proxy:3001\"\n--env HTTPS_PROXY=\"https://my-company-proxy:3001\"\n--env NO_PROXY=\"*.test.example.com,.example2.com\"\n```", "```\n{\n \"psFormat\": \"table {{.ID}}\\\\t{{.Image}}\\\\t{{.Command}}\\\\t{{.Labels}}\",\n  \"imagesFormat\": \"table {{.ID}}\\\\t{{.Repository}}\\\\t{{.Tag}}\\\\t{{.CreatedAt}}\",\n  \"statsFormat\": \"table {{.Container}}\\t{{.CPUPerc}}\\t{{.MemUsage}}\"\n}\n```", "```\n$ openssl genrsa -aes256 -out ca-key.pem 4096\n Generating RSA private key, 4096 bit long modulus\n ............................................................................................................................................................................................++\n ........++\n e is 65537 (0x10001)\n Enter pass phrase for ca-key.pem:\n Verifying - Enter pass phrase for ca-key.pem:\n $ openssl req -new -x509 -days 365 -key ca-key.pem -sha256 -out ca.pem\n Enter pass phrase for ca-key.pem:\n You are about to be asked to enter information that will be incorporated\n into your certificate request.\n What you are about to enter is what is called a Distinguished Name or a DN.\n There are quite a few fields but you can leave some blank\n For some fields there will be a default value,\n If you enter '.', the field will be left blank.\n -----\n Country Name (2 letter code) [AU]:\n State or Province Name (full name) [Some-State]:Queensland\n Locality Name (eg, city) []:Brisbane\n Organization Name (eg, company) [Internet Widgits Pty Ltd]:Docker Inc\n Organizational Unit Name (eg, section) []:Sales\n Common Name (e.g. server FQDN or YOUR name) []:$HOST\n Email Address []:Sven@home.org.au\n```", "```\n$ openssl genrsa -out server-key.pem 4096\n Generating RSA private key, 4096 bit long modulus\n .....................................................................++\n .................................................................................................++\n e is 65537 (0x10001)\n\n$ openssl req -subj \"/CN=$HOST\" -sha256 -new -key server-key.pem -out server.csr\n $ echo subjectAltName = DNS:$HOST,IP:10.10.10.20,IP:127.0.0.1 >> extfile.cnf\n $ echo extendedKeyUsage = serverAuth >> extfile.cnf\n $ openssl x509 -req -days 365 -sha256 -in server.csr -CA ca.pem -CAkey ca-key.pem \\\n -CAcreateserial -out server-cert.pem -extfile extfile.cnf\n\nSignature ok\n subject=/CN=your.host.com\n Getting CA Private Key\n Enter pass phrase for ca-key.pem:\n```", "```\n$ chmod -v 0400 ca-key.pem key.pem server-key.pem\n$ chmod -v 0444 ca.pem server-cert.pem cert.pem\n$ dockerd --tlsverify --tlscacert=ca.pem --tlscert=server-cert.pem --tlskey=server-key.pem \\\n -H=0.0.0.0:2376\n```", "```\n$ openssl genrsa -out key.pem 4096\n Generating RSA private key, 4096 bit long modulus\n .........................................................++\n ................++\n e is 65537 (0x10001)\n $ openssl req -subj '/CN=client' -new -key key.pem -out client.csr\n $ echo extendedKeyUsage = clientAuth > extfile-client.cnf\n $ openssl x509 -req -days 365 -sha256 -in client.csr -CA ca.pem -CAkey ca-key.pem \\\n -CAcreateserial -out cert.pem -extfile extfile-client.cnf\n Signature ok\n subject=/CN=client\n Getting CA Private Key\n Enter pass phrase for ca-key.pem:\n```", "```\n$ docker --tlsverify --tlscacert=ca.pem --tlscert=cert.pem --tlskey=key.pem -H=$HOST:2376 version\n```", "```\n$ docker container run --cap-add=NET_ADMIN--rm -it --security-opt seccomp=custom-profile.json alpine sh\n```", "```\nDocker-Certified-Associate-DCA-Exam-Guide/environments/standalone$ vagrant up\nBringing machine 'standalone' up with 'virtualbox' provider...\n==> standalone: Cloning VM...\n==> standalone: Matching MAC address for NAT networking...\n==> standalone: Checking if box 'frjaraur/centos7' version '1.4' is up to date...\n==> standalone: Setting the name of the VM: standalone\n...\n==> standalone: Running provisioner: shell...\n standalone: Running: inline script\n standalone: Delta RPMs disabled because /usr/bin/applydeltarpm not installed.\nDocker-Certified-Associate-DCA-Exam-Guide/environments/standalone$ vagrant status\nCurrent machine states:\nstandalone running (virtualbox)\n...\nDocker-Certified-Associate-DCA-Exam-Guide/environments/standalone$\n```", "```\nDocker-Certified-Associate-DCA-Exam-Guide/environments/standalone$ vagrant ssh standalone\n[vagrant@standalone ~]$ \n```", "```\n[vagrant@standalone ~]$ sudo yum remove docker*\n\n```", "```\n[vagrant@standalone ~]$ sudo yum install -y yum-utils   device-mapper-persistent-data   lvm2\n```", "```\n[vagrant@standalone ~]$ sudo yum-config-manager \\\n--add-repo https://download.docker.com/linux/centos/docker-ce.repo\n```", "```\n[vagrant@standalone ~]$ sudo yum install -y docker-ce docker-ce-cli containerd.io\n\n```", "```\n[vagrant@standalone ~]$ sudo systemctl enable docker\n[vagrant@standalone ~]$ sudo systemctl start docker\n```", "```\n[vagrant@standalone ~]$ sudo docker container run hello-world\n Unable to find image 'hello-world:latest' locally\n latest: Pulling from library/hello-world\n 1b930d010525: Pull complete\n Digest: \nsha256:b8ba256769a0ac28dd126d584e0a2011cd2877f3f76e093a7ae560f2a5301c00\n Status: Downloaded newer image for hello-world:latest\n\nHello from Docker!\n\nThis message shows that your installation appears to be working correctly. To generate this message, Docker took the following steps:\n1\\. The Docker client contacted the Docker daemon.\n2\\. The Docker daemon pulled the \"hello-world\" image from the Docker Hub. (amd64)\n3\\. The Docker daemon created a new container from that image that runs the executable, which produces the output you are currently reading.\n4\\. The Docker daemon streamed that output to the Docker client, which sent it to your terminal.\n\nTo try something more ambitious, you can run an Ubuntu container with:\n$ docker run -it ubuntu bash\n\nShare images, automate workflows, and more with a free Docker ID: \nhttps://hub.docker.com/.\n\nFor more examples and ideas, visit: \nhttps://docs.docker.com/get-started/.\n```", "```\n[vagrant@standalone ~]$ docker container ls\nGot permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get http://%2Fvar%2Frun%2Fdocker.sock/v1.40/containers/json\n: dial unix /var/run/docker.sock: connect: permission denied\n\n[vagrant@standalone ~]$ sudo usermod -a -G docker $USER\n\n[vagrant@standalone ~]$ newgrp docker\n\n[vagrant@standalone ~]$ docker container ls -a\nCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES\n5f7abd49b3e7 hello-world \"/hello\" 19 minutes ago Exited (0) 19 minutes ago  festive_feynman\n```", "```\n[vagrant@standalone ~]$ sudo systemctl status docker\n ● docker.service - Docker Application Container Engine\n Loaded: loaded (/usr/lib/systemd/system/docker.service; enabled; vendor preset: disabled)\n Active: active (running) since sáb 2019-09-28 19:34:30 CEST; 25min ago\n Docs: https://docs.docker.com\n Main PID: 20407 (dockerd)\n Tasks: 10\n Memory: 58.9M\n CGroup: /system.slice/docker.service\n └─20407 /usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock\n\n sep 28 19:34:30 centos7-base dockerd[20407]: time=\"2019-09-28T19:34:30.222200934+02:00\" level=info msg=\"[graphdriver] using prior storage driver: overlay2\"\n sep 28 19:34:30 centos7-base dockerd[20407]: time=\"2019-09-28T19:34:30.234170886+02:00\" level=info msg=\"Loading containers: start.\"\n sep 28 19:34:30 centos7-base dockerd[20407]: time=\"2019-09-28T19:34:30.645048459+02:00\" level=info msg=\"Default bridge (docker0) is assigned with an IP a... address\"\n sep 28 19:34:30 centos7-base dockerd[20407]: time=\"2019-09-28T19:34:30.806432227+02:00\" level=info msg=\"Loading containers: done.\"\n sep 28 19:34:30 centos7-base dockerd[20407]: time=\"2019-09-28T19:34:30.834047449+02:00\" level=info msg=\"Docker daemon\" commit=6a30dfc graphdriver(s)=over...n=19.03.2\n sep 28 19:34:30 centos7-base dockerd[20407]: time=\"2019-09-28T19:34:30.834108635+02:00\" level=info msg=\"Daemon has completed initialization\"\n sep 28 19:34:30 centos7-base dockerd[20407]: time=\"2019-09-28T19:34:30.850703030+02:00\" level=info msg=\"API listen on /var/run/docker.sock\"\n sep 28 19:34:30 centos7-base systemd[1]: Started Docker Application Container Engine.\n sep 28 19:34:43 centos7-base dockerd[20407]: time=\"2019-09-28T19:34:43.558580560+02:00\" level=info msg=\"ignoring event\" module=libcontainerd namespace=mo...skDelete\"\n sep 28 19:34:43 centos7-base dockerd[20407]: time=\"2019-09-28T19:34:43.586395281+02:00\" level=warning msg=\"5f7abd49b3e75c58922c6e9d655d1f6279cf98d9c325ba2d3e53c36...\n\n```", "```\n[vagrant@standalone ~]$ docker run -d nginx:alpine\n Unable to find image 'nginx:alpine' locally\n alpine: Pulling from library/nginx\n 9d48c3bd43c5: Already exists \n 1ae95a11626f: Pull complete \n Digest: sha256:77f340700d08fd45026823f44fc0010a5bd2237c2d049178b473cd2ad977d071\n Status: Downloaded newer image for nginx:alpine\n dcda734db454a6ca72a9b9eef98aae6aefaa6f9b768a7d53bf30665d8ff70fe7\n\n```", "```\n[vagrant@standalone ~]$ ps -efa|grep -v grep|egrep -e containerd -e nginx \n root     15755     1  0 sep27 ?        00:00:42 /usr/bin/containerd\n root     20407     1  0 19:34 ?        00:00:02 /usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock\n root     20848 15755  0 20:06 ?        00:00:00 containerd-shim -namespace moby -workdir /var/lib/containerd/io.containerd.runtime.v1.linux/moby/dcda734db454a6ca72a9\n b9eef98aae6aefaa6f9b768a7d53bf30665d8ff70fe7 -address /run/containerd/containerd.sock -containerd-binary /usr/bin/containerd -runtime-root /var/run/docker/runtime-runc\n root     20863 20848  0 20:06 ?        00:00:00 nginx: master process nginx -g daemon off;\n 101      20901 20863  0 20:06 ?        00:00:00 nginx: worker process\n\n```", "```\n[vagrant@standalone ~]$ sudo ls -laRt /var/run/docker/runtime-runc/moby\n /var/run/docker/runtime-runc/moby:\n total 0\n drwx--x--x. 2 root root 60 sep 28 20:06 dcda734db454a6ca72a9b9eef98aae6aefaa6f9b768a7d53bf30665d8ff70fe7\n drwx------. 3 root root 60 sep 28 20:06 .\n drwx------. 3 root root 60 sep 28 13:42 ..\n /var/run/docker/runtime-runc/moby/dcda734db454a6ca72a9b9eef98aae6aefaa6f9b768a7d53bf30665d8ff70fe7:\n total 28\n drwx--x--x. 2 root root    60 sep 28 20:06 .\n -rw-r--r--. 1 root root 24966 sep 28 20:06 state.json\n drwx------. 3 root root    60 sep 28 20:06 ..\n```", "```\n[vagrant@standalone ~]$ docker container exec dcda734db454 ps -ef\n PID USER TIME COMMAND\n 1 root 0:00 nginx: master process nginx -g daemon off;\n 6 nginx 0:00 nginx: worker process\n 7 root 0:00 ps -ef\n\n```", "```\n[vagrant@standalone ~]$ sudo lsns\n NS TYPE NPROCS PID USER COMMAND\n ..............\n ..............\n 4026532197 mnt 2 20863 root nginx: master process nginx -g daemon off\n 4026532198 uts 2 20863 root nginx: master process nginx -g daemon off\n 4026532199 ipc 2 20863 root nginx: master process nginx -g daemon off\n 4026532200 pid 2 20863 root nginx: master process nginx -g daemon off\n 4026532202 net 2 20863 root nginx: master process nginx -g daemon off\n```", "```\n[vagrant@standalone ~]$ docker container run --rm -it alpine sh -c \"chown nobody /etc/passwd; ls -l /etc/passwd\"\n -rw-r--r-- 1 nobody root 1230 Jun 17 09:00 /etc/passwd\n```", "```\n[vagrant@standalone ~]$ docker container run --rm -it --cap-drop=ALL alpine sh -c \"chown nobody /etc/passwd; ls -l /etc/passwd\"\n chown: /etc/passwd: Operation not permitted\n -rw-r--r-- 1 root root 1230 Jun 17 09:00 /etc/passwd\n```", "```\n[vagrant@standalone ~]$ docker container run --rm -it --cap-drop=ALL --cap-add CHOWN alpine sh -c \"chown nobody /etc/passwd; ls -l /etc/passwd\"\n -rw-r--r-- 1 nobody root 1230 Jun 17 09:00 /etc/passwd\n```"]