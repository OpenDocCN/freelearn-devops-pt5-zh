["```\n    $ /usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n    ```", "```\n    $ brew --versionHomebrew 3.6.16Homebrew/homebrew-core (git revision 025fe79713b; last commit 2022-12-26)Homebrew/homebrew-cask (git revision 15acb0b64a; last commit 2022-12-26)\n    ```", "```\n    $ brew install vim\n    ```", "```\nPS> Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))\n```", "```\nPS> choco --version0.10.15\n```", "```\nPS> choco install -y vim\n```", "```\n    $ brew install git\n    ```", "```\n    PS> choco install git -y\n    ```", "```\n    $ sudo apt update && sudo apt install -y git\n    ```", "```\n    $ git --version\n    ```", "```\ngit version 2.39.1\n```", "```\n    $ cd ~$ git clone https://github.com/PacktPublishing/The-Ultimate-Docker-Container-Book\n    ```", "```\n    $ brew cask install visual-studio-code\n    ```", "```\n    $ cd ~\n    ```", "```\n    $ code The-Ultimate-Docker-Container-Book\n    ```", "```\n    PS> choco install vscode -y\n    ```", "```\n    PS> cd ~\n    ```", "```\n    PS> code The-Ultimate-Docker-Container-Book\n    ```", "```\n    $ sudo snap install --classic code\n    ```", "```\n    $ cd ~\n    ```", "```\n    $ code The-Ultimate-Docker-Container-Book\n    ```", "```\n    code --install-extension vscjava.vscode-java-packcode --install-extension ms-dotnettools.csharpcode --install-extension ms-python.pythoncode --install-extension ms-azuretools.vscode-dockercode --install-extension eamodio.gitlens\n    ```", "```\n    $ code --list-extensions\n    ```", "```\n    $ docker version\n    ```", "```\n    $ docker container run hello-world\n    ```", "```\n    $ docker container run rancher/cowsay Hello\n    ```", "```\n    $ brew install minikube\n    ```", "```\n    $ brew versionminikube version: v1.28.0commit: 986b1ebd987211ed16f8cc10aed7d2c42fc8392f\n    ```", "```\n    $ minikube start\n    ```", "```\n    Done! kubectl is now configured to use \"minikube\" cluster and \"default\" namespace by default\n    ```", "```\n    $ kubectl config get-contexts\n    ```", "```\n    $ kubectl get nodes\n    ```", "```\n    $ cd ~/The-Ultimate-Docker-Container-Book\n    ```", "```\n    $ kubectl apply -f setup/nginx.yaml\n    ```", "```\npod/nginx created\n```", "```\n$ kubectl get pods\n```", "```\nNAME     READY   STATUS     RESTARTS   AGEnginx     1/1    Running       0       11m\n```", "```\n    $ kubectl expose pod nginx --type=NodePort --port=80\n    ```", "```\nservice/nginx exposed\n```", "```\n    $ kubectl get services\n    ```", "```\n    $ minikube service nginx\n    ```", "```\n    $ kubectl delete service nginx$ kubectl delete pod nginx\n    ```", "```\n    $ minikube stop\n    ```", "```\n    $ minikube start --nodes 3 –p demo\n    ```", "```\n    $ kubectl get nodesNAME          STATUS    ROLES            AGE      VERSIONdemo          Ready     control-plane    84s      v1.25.3demo-m02      Ready     <none>           45s      v1.25.3demo-m03      Ready     <none>           22s      v1.25.3\n    ```", "```\n    $ minikube stop -p demo\n    ```", "```\n    $ minikube delete --all\n    ```", "```\n    $ brew install kind\n    ```", "```\n    $ choco install kind -y\n    ```", "```\n    $ curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.17.0/kind-linux-amd64$ chmod +x ./kind$ sudo mv ./kind /usr/local/bin/kind\n    ```", "```\n    $ kind version\n    ```", "```\nkind v0.17.0 go1.19.2 darwin/arm64\n```", "```\n    $ kind create cluster\n    ```", "```\n    $ kind get clusters\n    ```", "```\n    $ kind create cluster --name demo\n    ```", "```\n    $ kind show clustersKinddemo\n    ```", "```\n    $ kubectl config get-contexts\n    ```", "```\n    $ kubectl config use-context kind-demo\n    ```", "```\n    $ kubectl get nodes\n    ```", "```\n    $ kubectl apply -f setup/nginx.yaml\n    ```", "```\npod/nginx created\n```", "```\n    $ kubectl port-forward nginx 8080 80\n    ```", "```\nForwarding from 127.0.0.1:8080 -> 80Forwarding from [::1]:8080 -> 80\n```", "```\n    $ kubectl delete –f setup/nginx.yaml\n    ```", "```\n    $ kind delete cluster --name kind$ kind delete cluster --name demo\n    ```"]