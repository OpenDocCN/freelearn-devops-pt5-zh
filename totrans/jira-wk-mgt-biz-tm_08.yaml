- en: '*Chapter 6*: Forms, Issues, Dashboards, and Reports'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Our previous chapters have explored how to create **Jira Work Management** (**JWM**)
    projects and issues, which represent the work we do. We then looked at the new
    tools from JWM, how issues appear in each one, and the functionality they provide.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we will guide you through the creation of a simple JWM form,
    along with other reporting functions such as viewing issues, and working with
    dashboards, filters, and built-in system reports.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we are going to cover the following main topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Creating forms
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Viewing issues
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Accessing and using reports
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating simple filters
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implementing dashboards and incorporating gadgets
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New terms learned in this chapter
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Upon completion of this chapter, you will be able to create a simple form that
    allows users inside or external to your team to be able to submit requests for
    work to be done. While the out-of-the-box reports provided with Jira offer little
    real insight, you will learn how to access and run the reports that are available.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, you will be able to create ad hoc reports in the form of Jira filters
    and utilize filters to build informative dashboards. Then, you can view your issues
    in a variety of displays using the knowledge you have about filters.
  prefs: []
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'As JWM is only available in the Jira Cloud environment, the requirement for
    this chapter is simple: *access to a Jira Cloud environment*.'
  prefs: []
  type: TYPE_NORMAL
- en: If you already have access to Jira Cloud, that's great—you are ready to go!
    If not, Atlassian provides a free JWM account for up to 10 users. You can create
    an account by going to [https://www.atlassian.com/try/cloud/signup?bundle=jira-core&edition=free](https://www.atlassian.com/try/cloud/signup?bundle=jira-core&edition=free)
    and following the instructions.
  prefs: []
  type: TYPE_NORMAL
- en: Creating forms
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Until the rollout of JWM projects, there was no way to have organization-wide
    Jira project forms available without using a third-party vendor, which usually
    meant additional cost. There have been Atlassian Marketplace apps available for
    years, as well as portal forms for JSM, but this meant either additional license
    fees for JSM agents or purchasing an app from the vendor.
  prefs: []
  type: TYPE_NORMAL
- en: This will, of course, change as Atlassian begins to incorporate the **ProForma
    forms** functionality near the end of 2021 from the acquisition of ThinkTilt.
    It is unknown at the time of writing this book as to the effect of the ProForma
    tool across the Jira family, but it is thought that the built-in forms for JWM
    projects will continue alongside ProForma.
  prefs: []
  type: TYPE_NORMAL
- en: 'So, what''s the big deal about using forms anyway? What advantages does a form
    provide that the normal **Create** button and its associated screen do not? The
    fast answer is that it can remove many pain points we experience with the typical
    request process on both the receiving and submitting ends of a request. Here is
    a quick list, with more details to follow in the subsequent highlighted section:'
  prefs: []
  type: TYPE_NORMAL
- en: Only ask for the initial information you need in an easy-to-fill format. (*Adding
    fields to a form*)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Capture the information you want and eliminate back-and-forth emails. (*Adding
    fields to a form*)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Change field labels to provide better context. (*Required fields and changing
    field labels*)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An easy-to-share **Uniform Resource Locator** (**URL**) address for fast entry.
    (*Sharing a form*)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now, let's look at how we get to the **Forms** feature and create a new form.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a form
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You can get to your form by clicking the **Forms** link on the left-hand menu,
    as illustrated in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.1 – Creating a form'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.1_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.1 – Creating a form
  prefs: []
  type: TYPE_NORMAL
- en: 'You can then click on the **Create a new form** button to begin the process.
    Let''s take a glance at the features of the form in the following screenshot,
    and then delve into the details in the subsequent paragraphs:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.2 – New form'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.2_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.2 – New form
  prefs: []
  type: TYPE_NORMAL
- en: The large middle section is your actual form. It will contain a few default
    fields to get you started. Additional fields (including any custom fields you
    have created) are located on the right-hand side. The top-middle section contains
    the form name, description, and the ability to share the form.
  prefs: []
  type: TYPE_NORMAL
- en: Adding fields to a form
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Nothing is more frustrating to a user than trying to figure out which fields
    really need to be populated when creating an issue. Screens are often awash with
    a sea of fields, most of which have nothing to do with the form creation process.
    Yes—you can provide the user with a separate **Create** screen with limited fields,
    but the layout can often be confusing.
  prefs: []
  type: TYPE_NORMAL
- en: Many helpdesks and request processes allow users to simply submit an email to
    an address. Subsequently, that results in an issue automatically being created
    on the appropriate project. However, the information submitted is usually lacking
    the depth and details needed for the receiver of the request to actually work
    on a solution.
  prefs: []
  type: TYPE_NORMAL
- en: The result is several emails back and forth to try to bring clarity by getting
    to the root of the problem. Not only is this impractical for the sheer number
    of emails that might happen, but the conversation becomes disjointed, and much
    time is wasted in the lag between sending and receiving the emails.
  prefs: []
  type: TYPE_NORMAL
- en: 'But with forms, you can identify the exact information you need captured upfront
    when a request is submitted. Simply add any custom fields you need for new information
    and drag the field to the left to build the form. Add your custom fields to the
    project, and they will show up on the right-hand side ready to be used. Then,
    it''s a simple drag and drop, as seen in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.3 – Adding fields to a form'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.3_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.3 – Adding fields to a form
  prefs: []
  type: TYPE_NORMAL
- en: Once a field has been added to the form, you can drag the fields up and down
    to re-order the sequence in which they appear to the user. Of course, if you no
    longer want the field to appear on your form, simply drag the field back to the
    right-hand side under the **Drag fields to build the form** section.
  prefs: []
  type: TYPE_NORMAL
- en: Adding a description for a form
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For clarity when sharing the form, it is a good idea to add a description to
    the form so that users can determine if this is the project and form desired.
    The description has wiki-style rendering available if you would like to make it
    look a little nicer. The following screenshot shows where you can enter a description:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.4 – Adding a form description'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.4_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.4 – Adding a form description
  prefs: []
  type: TYPE_NORMAL
- en: Next, we will see how required fields are identified and how to change labels
    for the fields.
  prefs: []
  type: TYPE_NORMAL
- en: Required fields and changing field labels
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Having the ability to change the label of a field that users see makes the
    form clearer as to the intent of the desired value for the field. On normal **Create**
    screens, we are stuck with the label of the field being the actual field name.
    You cannot change that label without changing the actual field name in those cases.
    But with JWM forms, you simply click the pencil icon, which gives you access to
    edit the field, as illustrated in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.5 – Changing the field label'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.5_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.5 – Changing the field label
  prefs: []
  type: TYPE_NORMAL
- en: 'After making your label change, the field name will show your new name followed
    by the actual field name stored in the database. The field name will retain its
    original value; however, the requester will only see the new label. The label
    will be displayed above the entry box for the field, as shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.6 – Changed label name'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.6_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.6 – Changed label name
  prefs: []
  type: TYPE_NORMAL
- en: Notice also that there is an asterisk next to the field label. The asterisk
    represents that the field is required to have a value in order to save and submit
    the request. You cannot make fields required directly in the JWM form—that must
    be done in the **Field Configuration** file associated with the project and issue
    type. You can find more details on field configurations in [*Chapter 7*](B17952_07_ePub.xhtml#_idTextAnchor121),
    *Managing Fields, Screens, and Issue Layouts*.
  prefs: []
  type: TYPE_NORMAL
- en: Previewing a form
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'After you have completed adding fields to your form and making any cosmetic
    changes such as changing label names or adding a description, it''s time to preview
    your form. Of course, it is always a good idea to take a look at your form before
    sharing it with others. To see the form, click on the **Preview** button, as seen
    previously in *Figure 6.6*. Next, we see a preview of the created form, as illustrated
    in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.7 – Previewing a finished form'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.7_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.7 – Previewing a finished form
  prefs: []
  type: TYPE_NORMAL
- en: Clicking on the **Preview** button will cause the form to show up in a new tab
    in your browser while your form layout remains open in the original tab. You can
    continue to make changes to the form and then click the **Preview** button each
    time to see how it looks.
  prefs: []
  type: TYPE_NORMAL
- en: Sharing a form
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now that your form looks how it should, let's share it with others so that they
    can begin to use it. To do that, simply click on the **Share** button, which will
    open the dialog box shown in *Figure 6.8*. You can share a link to the form both
    with users in your Jira instance and external users to your system.
  prefs: []
  type: TYPE_NORMAL
- en: 'As you begin typing a name or email address, the names of users in your instance
    that match the characters you are typing will begin to show. You can select the
    names as they become visible. For an email address, continue to type the full
    address and then click on the result to be sure it is placed in the edit box,
    as illustrated here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.8 – Sharing a form'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.8_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.8 – Sharing a form
  prefs: []
  type: TYPE_NORMAL
- en: Your form is now ready to be used. Submissions will be added as issues on your
    project and will use the default issue type for the project if you have more than
    one standard issue type.
  prefs: []
  type: TYPE_NORMAL
- en: 'After the form is submitted, the user will receive an immediate notification
    on their screen that the issue has been received, as illustrated in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.9 – Form submission'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.9_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.9 – Form submission
  prefs: []
  type: TYPE_NORMAL
- en: Now that users have an easy way to send you requests, let's look at some ways
    to interact with the issues.
  prefs: []
  type: TYPE_NORMAL
- en: Viewing issues
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: No matter how you receive issues—whether you create them directly yourself,
    or if they come via email or form submission—you will want to be able to view
    them and update them. If you receive an email notifying you that an issue has
    been created, clicking on the link in the email will take you directly to the
    issue.
  prefs: []
  type: TYPE_NORMAL
- en: However, you sometimes just need to take a look at a list of your current issues,
    or maybe even ones that have been completed in the past. While in your project,
    you are just a click away from this.
  prefs: []
  type: TYPE_NORMAL
- en: 'Regardless of which feature you might currently be viewing, you can click on
    the **Issues** menu option on the left to see your issues, as illustrated in the
    following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.10 – Issues menu option'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.10_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.10 – Issues menu option
  prefs: []
  type: TYPE_NORMAL
- en: The **Issues** feature is a carryover tool from the previous Jira Core product.
    There's not been much of a change to it for those who have used it in the past,
    but for those of you who are new to the product now known as JWM, there are two
    standard views for issues—**List View** and **Detail View**.
  prefs: []
  type: TYPE_NORMAL
- en: '`through a **Basic**` **filter interface or you can switch to **Jira Query
    Language** (**JQL**), Jira''s built-in querying language.**'
  prefs: []
  type: TYPE_NORMAL
- en: '****List View** was previously displayed in *Figure 6.10*, while **Detail View**
    can be seen in the following screenshot, which also shows where to click to switch
    between the two views:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.11 – Detail View with buttons to switch'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.11_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.11 – Detail View with buttons to switch
  prefs: []
  type: TYPE_NORMAL
- en: '**Detail View** allows you to edit a single issue using the project''s **Edit**
    screen while also displaying the list of issues on the left-hand side. You can
    run a basic or advanced search on both **List View** and **Detail View**. Next,
    we will see how to access and run reports.'
  prefs: []
  type: TYPE_NORMAL
- en: Accessing and using reports
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Another holdover from the Jira Core product is the built-in Jira reports. These
    reports are not unique to JWM/business-type projects but are widely available
    across the Jira product family. Nevertheless, they can provide some informative
    insights into your project.
  prefs: []
  type: TYPE_NORMAL
- en: 'To access a list of reports, click on the **Reports** option on the left-hand
    side menu, as illustrated in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.12 – Accessing reports'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.12_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.12 – Accessing reports
  prefs: []
  type: TYPE_NORMAL
- en: 'The result will be a display of all built-in reports available for JWM projects
    and is shown in the following screenshot. You are encouraged to explore each one
    individually:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.13 – List of reports'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.13_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.13 – List of reports
  prefs: []
  type: TYPE_NORMAL
- en: To run a report, just click on the link and follow the subsequent steps as directed.
    As you can imagine, there is not a lot of functionality for this basic reporting
    feature, and most users will end up creating ad hoc reports in the form of filters.
    Those filters can then be used in a variety of gadgets within dashboards or as
    filters themselves. We will explore all of those next.
  prefs: []
  type: TYPE_NORMAL
- en: Creating simple filters
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Filters** are Jira''s way of searching for issues that exist in your instance
    that can be used as a base for further insight and reporting/sharing or to find
    a single issue that you are looking for. Perhaps the easiest way is to access
    these through **Issues View**, as discussed in the *Viewing issues* section earlier
    in this chapter. That will allow you to create a simple filter, which can then
    be used to see a list of issues immediately, or it can be saved and used as a
    base for building a dashboard.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Alternatively, you can click on the search box found in the top navigation
    menu. Once inside the search box, click on the **Advanced issue search** link,
    as illustrated in the following screenshot. Finally, you can also click on the
    **Filters** menu option at the bottom of the page:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.14 – Creating a filter'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.14_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.14 – Creating a filter
  prefs: []
  type: TYPE_NORMAL
- en: Even newcomers to Jira and JWM projects will be able to create simple filters
    to retrieve lists of issues that can be used for a variety of purposes, including
    gadgets in dashboards, for exporting to **comma-separated values** (**CSV**) files,
    or even just getting a count of how much work you are doing.
  prefs: []
  type: TYPE_NORMAL
- en: Entering the filter creation function in Jira will bring the user to the tool
    in basic mode, as shown in *Figure 6.15*. Simply click on each heading and supply
    the values you would like to use for the resulting list of issues, and then click
    on **Search**. There are many built-in fields already available to you to speed
    up the creation of a filter.
  prefs: []
  type: TYPE_NORMAL
- en: As you select each field, the filter builds upon itself, using an `AND` function
    between each field. This means that all of the values selected for every field
    will be used to return the results.
  prefs: []
  type: TYPE_NORMAL
- en: 'An initial filter to try is to select just the project you are working on and
    click the **Search** button, as illustrated here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.15 – Basic filter'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.15_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.15 – Basic filter
  prefs: []
  type: TYPE_NORMAL
- en: 'You can also click on **Detail View** to see a single issue displayed, as we
    saw previously in *Figure 6.11*. In the following screenshot, we are filtering
    by **List View**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.16 – Filtering by List View'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.16_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.16 – Filtering by List View
  prefs: []
  type: TYPE_NORMAL
- en: 'For more experienced users, you can switch to the advanced search function
    directly using **JQL**. This allows you to enter code directly in the search box
    to see more granular results. If you are not familiar with JQL, you should take
    some training on how to use it before attempting to use it here. One such course
    is available through Atlassian University here: [https://university.atlassian.com/student/path/849533-gain-project-insights-through-jql](https://university.atlassian.com/student/path/849533-gain-project-insights-through-jql).'
  prefs: []
  type: TYPE_NORMAL
- en: 'You can change back to the basic search function by clicking on the **Switch
    to basic** link to the right of the **Search** button, as illustrated in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.17 – Advanced JQL filter'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.17_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.17 – Advanced JQL filter
  prefs: []
  type: TYPE_NORMAL
- en: More than likely, you are going to want to run these same filters repeatedly
    or use them in a dashboard gadget. Therefore, you will need to save the filter
    first. To start that process, click the **Save as** link at the top of the search
    display.
  prefs: []
  type: TYPE_NORMAL
- en: Saving a filter
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Saving a filter is very simple. Just provide a unique name in the `STAFF –
    All Issues`, as illustrated in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.18 – Saving a filter'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.18_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.18 – Saving a filter
  prefs: []
  type: TYPE_NORMAL
- en: 'When you initially save a filter, you will be the only person able to see the
    results. You can leave it that way if you intend to keep the filter private, but
    if you want to share the filter and its results, you will need to modify the permissions.
    The place to do that is a little hidden. You will need to click on the **Details**
    link at the top of the filter screen, as illustrated in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.19 – Filter permissions and sharing a filter'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.19_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.19 – Filter permissions and sharing a filter
  prefs: []
  type: TYPE_NORMAL
- en: After clicking on the **Details** link, you will navigate to the **Edit filter**
    screen. Incidentally, this is also where you will change the name of the filter
    if you wish to do that at some point. You can also add a description for the filter
    on this screen.
  prefs: []
  type: TYPE_NORMAL
- en: To share the filter, click on the drop-down box under the **Viewers** label.
    As you see in *Figure 6.19*, you can share the filter with persons linked to the
    **Project** through project roles, or to a **Group** of users already created
    in your Jira instance, or to your organization as a whole—meaning any logged-in
    user. If you wish to keep the filter to yourself, select the **Private** option.
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, you can create a **subscription** for the filter, which will email
    the filter and its results on a scheduled basis, as identified when creating it.
    To produce a subscription, click on the **New subscription** link on the **Details**
    page, as previously seen in *Figure 6.19*. Enter the details of the subscription
    and click the **Subscribe** button to save it, as illustrated in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Filter 6.20 – Creating a filter subscription'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.20_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Filter 6.20 – Creating a filter subscription
  prefs: []
  type: TYPE_NORMAL
- en: After you have created some filters, you can begin to use those filters in a
    variety of gadgets on a dashboard. Next, we will walk through the process of creating
    a dashboard and adding different types of gadgets.
  prefs: []
  type: TYPE_NORMAL
- en: Implementing dashboards and incorporating gadgets
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Dashboards** are a great way to see multiple reports on a single screen.
    Jira refers to these mini-reports as **gadgets**. Gadgets come in a variety of
    formats—bar graphs, pie charts, simple lists, and **two-dimensional** (**2D**)
    pivots. To create a new dashboard, click on the **Dashboards** option in the top
    navigation menu bar and select **Create dashboard**, as illustrated in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.21 – Dashboards'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.21_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.21 – Dashboards
  prefs: []
  type: TYPE_NORMAL
- en: 'The ensuing dialog box allows you to name the dashboard, along with entering
    a description. On this screen, you can also share the dashboard using the same
    permissions functionality we discussed earlier for filters (see *Figure 6.19)*.
    I have named mine `Staff Meeting Dashboard`, as illustrated in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.22 – Naming and sharing a dashboard'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.22_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.22 – Naming and sharing a dashboard
  prefs: []
  type: TYPE_NORMAL
- en: 'After clicking the **Save** button, you will see the initially created dashboard.
    By default, the layout is a two-column dashboard. You can change the layout to
    a single column, triple columns, or dual columns, with either the right or left
    column being wider. Click the **Change layout** button to select your desired
    layout, as illustrated in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.23 – Changing the dashboard layout'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.23_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.23 – Changing the dashboard layout
  prefs: []
  type: TYPE_NORMAL
- en: 'We will continue to use the two-column layout for our example here. Our next
    step will be to add some gadgets. So, click on the **add a new gadget** link on
    one of the sides of the screen. The initial list of gadgets will be very small.
    You will need to click the **Load all gadgets** option to see a more thorough
    list, as illustrated in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.24 – Load all gadgets'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.24_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.24 – Load all gadgets
  prefs: []
  type: TYPE_NORMAL
- en: The resulting list will show more than 30 options. Each will have a thumbnail
    image to the left to give you an idea of what the end report will look like. The
    name of the gadget and a short description appear in the middle section. Be sure
    to scroll down the alphabetical list to see all the available gadgets. Click on
    the **Add gadget** button on the right for each desired gadget.
  prefs: []
  type: TYPE_NORMAL
- en: 'The same list screen will continue to be displayed after you click on the **Add
    gadget** button. This enables you to select multiple gadgets without having to
    go back to the list for subsequent options. When you have finished selecting all
    your desired gadgets, click the **Close** button, as illustrated in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.25 – Adding a gadget'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.25_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.25 – Adding a gadget
  prefs: []
  type: TYPE_NORMAL
- en: Each gadget will have different parameters within the configuration page to
    capture the details of the filter, column headings, and so on. These should be
    self-explanatory as you complete the configuration.
  prefs: []
  type: TYPE_NORMAL
- en: Once the gadget has been added and the parameters have been entered, the results
    will be displayed (see the subsequently completed dashboard in *Figure 6.26*).
  prefs: []
  type: TYPE_NORMAL
- en: 'However, there is a good chance that you will need to modify the gadget to
    note additional information, change the filter, add new columns, and so on. To
    do that, click on the three dots (ellipsis) menu in the upper-right corner of
    the gadget and select **Configure**. This will return you to the configuration
    page for the gadget, as illustrated in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.26 – Configuring a gadget'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.26_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.26 – Configuring a gadget
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you are on the configuration page, you can change out the filter, the
    fields being used, and so on. Again, as each gadget is different, the configuration
    page for each is different. The following screenshot shows an example of a completed
    dashboard using three separate gadgets, which display a good variety available:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 6.27 – Completed dashboard'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_6.27_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 6.27 – Completed dashboard
  prefs: []
  type: TYPE_NORMAL
- en: I think you will find that a dashboard that is well laid out and has a good
    variety of gadget types that include a summary and detailed information will be
    a great way to share your project data with stakeholders and others.
  prefs: []
  type: TYPE_NORMAL
- en: New terms learned in this chapter
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let''s conclude the chapter by going through a list of new terms learned in
    it, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Dashboard**: A consolidated display of multiple reports (known as gadgets).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Gadgets**: Usually based on filters, these mini-reports can be displayed
    as lists, graphs, charts, pivot tables, and so on.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**ProForma forms**: An app or add-on that provides the extensive customization
    of standard forms.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Subscription**: Filter results that can be emailed to selected users on an
    ongoing basis.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Basically, at this point, you have all the knowledge you need to create a project
    and some issues and interact with them in a variety of ways to help manage your
    work. In this chapter, we have learned how to build a form, which will provide
    an easy way for persons inside or exterior to your team to make a work request.
    We have also seen how to use the **Issues** feature, along with the reporting
    function. This allows you to view your issues in a way that gives you good data
    and allows you to search with more control.
  prefs: []
  type: TYPE_NORMAL
- en: And finally, we learned how dashboards can provide you and stakeholders with
    easy-to-read gadgets that display your work in totals and groups or as easy-to-use
    graphics such as pie charts and bar graphs. These dashboards provide real-time
    views of your data, all in a single location. This is beneficial because you do
    not need additional presentation software or cut and paste efforts to transfer
    the Jira data to another format.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will learn how to create additional screens and custom
    fields for organization-wide use, and how to make modifications to those screens.
    This will be done in the context of understanding the associated screen scheme
    and issue-type screen scheme. And finally, we will see how we can change the layouts
    of the screens so that they can be unique to your project if so desired.**
  prefs: []
  type: TYPE_NORMAL
