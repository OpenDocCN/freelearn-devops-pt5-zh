- en: Monitoring and Optimizing Application
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 监控和优化应用程序
- en: Application monitoring is the simple process of keeping track of various aspects
    of an application and how they are performing. It is very important for consistent
    quality checks and improvement, and it is important for finding out problems in
    an application before it gets to users.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序监控是简单地跟踪应用程序各个方面及其表现的过程。它对于持续的质量检查和改进非常重要，并且对于在应用程序到达用户之前发现问题至关重要。
- en: Application monitoring will not only let us know the performance of an application
    and issues within it, but will also keep records of the status of its related
    databases and APIs.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序监控不仅可以让我们了解应用程序的表现及其内部问题，还可以记录相关数据库和API的状态。
- en: 'In this chapter, we''ll be discussing various methods for application monitoring.
    Here are the high-level topics that we''ll be covering in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中，我们将讨论各种应用程序监控方法。以下是本章将涵盖的高级主题：
- en: API level monitoring and various tools for API monitoring
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: API级别监控及各种API监控工具
- en: Monitoring the application with Test Cloud
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用测试云监控应用程序
- en: Monitoring the application using Android monitoring tools
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Android监控工具监控应用程序
- en: API level monitoring
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: API级别监控
- en: '**Application Programming Interfaces** (**APIs**) are an integral part of today''s
    integrated development environments. They can also be understood through the client-server
    relationship, where the mobile app is the client requesting a resource and the
    API is at the server side and has a URL for any application that wants to make
    a request.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**应用程序编程接口** (**APIs**) 是当今集成开发环境中不可或缺的一部分。它们也可以通过客户端-服务器关系来理解，其中移动应用是请求资源的客户端，而API位于服务器端，并为任何想要发出请求的应用程序提供URL。'
- en: Most applications share common APIs between web and mobile. APIs are a great
    way of providing consistent operating behavior across different platforms. It
    also helps share the same business and data layer operations between different
    mobile application platforms, so you can use the same APIs for iOS, Android, and
    web applications.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数应用程序在Web和移动端之间共享公共API。API是一种提供跨不同平台一致操作行为的有效方式。它还帮助在不同的移动应用平台之间共享相同的业务和数据层操作，因此，你可以在iOS、Android和Web应用中使用相同的API。
- en: APIs are so important in the development of a mobile application that it becomes
    equally critical to monitor APIs to ensure high availability. If an API goes down,
    the entire application can stop working and the user might not be able to perform
    any operation that requires the API to be available, which usually is any server
    operation, though not offline.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: API在移动应用开发中非常重要，因此监控API以确保高可用性变得同样关键。如果API发生故障，整个应用程序可能会停止工作，用户可能无法执行任何需要API可用的操作，这通常是任何服务器操作，尽管不包括离线操作。
- en: Why API monitoring is critical
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么API监控至关重要
- en: APIs are a very important part of any kind of app, be it a mobile or web application.
    APIs are used extensively in projects nowadays to provide more flexibility in
    the way the client (mobile app or web app) interacts with the server-side business
    logic and data access layers. Because applications are so dependent on APIs to
    perform operations for the user, it is critical to have API monitoring in place
    to avoid any kind of downtime or bad user experience. When proper API monitoring
    is not in place, it can compromise the quality of the application and response
    times, and sometimes even result in application downtime.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: API是任何应用程序中非常重要的一部分，无论是移动应用还是Web应用。如今，API在项目中被广泛使用，为客户端（移动应用或Web应用）与服务器端的业务逻辑和数据访问层交互提供更多灵活性。由于应用程序在执行用户操作时非常依赖API，因此必须实施API监控，以避免任何停机或糟糕的用户体验。当没有适当的API监控时，可能会影响应用程序的质量和响应时间，有时甚至会导致应用程序停机。
- en: Also, it is very important to monitor APIs not only that you are developing,
    but also third-party ones that you might be using in the application.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，监控你所开发的API，以及你可能在应用程序中使用的第三方API也非常重要。
- en: Important factors in API monitoring
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: API监控中的重要因素
- en: 'When monitoring APIs, there are some key points or areas that need to be covered
    to ensure availability:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在监控API时，有一些关键点或领域需要涵盖，以确保可用性：
- en: '**API availability**: We need to make sure the API is available; sometimes
    the server might be down for some reason or the connection can be interrupted
    based on location and server'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**API可用性**：我们需要确保API可用；有时，服务器可能由于某些原因宕机，或者根据位置和服务器，连接可能会中断。'
- en: '**Quality of response**: When we call an API, what is the quality of the response
    returned from the API—is it according to the agreement or not?'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**响应质量**：当我们调用 API 时，API 返回的响应质量如何？是否符合协议？'
- en: '**Response time**: What is the response time to get a result when calling the
    API'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**响应时间**：调用 API 时获取结果的响应时间是多少？'
- en: Developer's role in handling API unavailability
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开发者在处理 API 不可用情况中的角色
- en: It is also a good idea for an application developer to keep in mind that APIs
    might not be available some of the time, and write code in a way that handles
    these kinds of situations gracefully. Even when the application is not able to
    perform some API operations, if it informs the user in a nice way, it can help
    the user experience much more than facing runtime exceptions. Write code to handle
    API exceptions and scenarios where the API does not respond.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 对于应用程序开发者来说，记住 API 可能并非始终可用，并以优雅的方式处理这些情况，是一个不错的建议。即使应用程序无法执行某些 API 操作，如果它能够友好地告知用户，往往比面对运行时异常能够带来更好的用户体验。编写代码来处理
    API 异常和 API 无响应的场景。
- en: Various tools for API monitoring
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 各种用于 API 监控的工具
- en: There are many tools available in the market for API monitoring and testing.
    What to choose totally depends on what you want to achieve through those tools.
    Some tools provide great support for performance monitoring, and other tools are
    better suited for quality testing and recognizing erroneous data.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 市场上有许多用于 API 监控和测试的工具。选择哪种工具完全取决于你希望通过这些工具实现什么目标。有些工具对性能监控提供了很好的支持，而另一些工具则更适合质量测试和识别错误数据。
- en: 'Some popular tools are as follows:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 一些流行的工具如下：
- en: Postman
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Postman
- en: Karate DSL
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Karate DSL
- en: SoapUI
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SoapUI
- en: HttpMaster
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HttpMaster
- en: REST Assured
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: REST Assured
- en: RestSharp
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RestSharp
- en: Mockbin
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mockbin
- en: You can read more about the benefits of, and support for, these tools on their
    respective sites and choose the tools best suited to the project's needs.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在各自的网站上阅读更多关于这些工具的好处和支持内容，并选择最适合项目需求的工具。
- en: Using Test Cloud for monitoring
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Test Cloud 进行监控
- en: You learned about Xamarin Test Cloud in previous chapters and how to use it
    for continuous testing in the continuous integration life cycle. Here, we will
    discuss in more detail how to use Xamarin Test Cloud and the analytics it provides
    after running an application on different sets of devices.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 你在前几章中了解了 Xamarin Test Cloud 以及如何在持续集成生命周期中使用它进行持续测试。在这里，我们将更详细地讨论如何使用 Xamarin
    Test Cloud 以及在不同设备组上运行应用程序后，它提供的分析数据。
- en: We will be using two different applications here to see the monitoring analytics
    and compare them, to get a better understanding of how this helps us identify
    various performance and functionality-related issues in our application.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在这里使用两个不同的应用程序，查看监控分析并进行比较，以更好地理解如何帮助我们识别应用程序中的各种性能和功能相关问题。
- en: 'These are the applications we will be using for the walkthrough:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是我们将在演示过程中使用的应用程序：
- en: '**PhoneCallApp** (the application we developed in previous chapters)'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PhoneCallApp**（我们在前几章中开发的应用程序）'
- en: '**Xamarin Store** (a sample Android application provided by Test Cloud)'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Xamarin Store**（Test Cloud 提供的一个示例 Android 应用程序）'
- en: Xamarin Test Cloud can help us identify applications' functionality-related
    issues on real devices.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: Xamarin Test Cloud 可以帮助我们识别应用程序在真实设备上的功能相关问题。
- en: It is a great source of application monitoring in terms of testing on different
    mobile devices and with different versions of operating systems.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 它是一个非常好的应用程序监控工具，尤其是在不同移动设备和操作系统版本上进行测试时。
- en: Getting a detailed analysis of various applications' functions is very important
    to make sure our application is running as expected on our target devices.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 获取各种应用程序功能的详细分析对于确保我们的应用程序在目标设备上按预期运行非常重要。
- en: With that being said, it is also critical to the application to be able to run
    on different operating system versions, and to analyze how it performs and how
    much memory usage it has.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，应用程序能够在不同操作系统版本上运行，以及分析其性能和内存使用情况，也是至关重要的。
- en: Benefits of monitoring with Test Cloud
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Test Cloud 进行监控的好处
- en: Test Cloud not only provides monitoring capabilities, but also relieves us from
    testing the same application's functionality on different devices manually, thus
    giving us a true continuous integration process.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: Test Cloud 不仅提供监控功能，还可以免去我们手动测试相同应用程序在不同设备上的功能，从而实现真正的持续集成过程。
- en: It provides continuous testing capabilities to our CI process with automated
    test runs and detailed reports with notifications
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它为我们的CI过程提供了持续的测试功能，支持自动化测试运行和详细的报告通知。
- en: Testing an application on different OS versions is critical to the success of
    a mobile application, and Test Cloud serves that purpose very well
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在不同操作系统版本上测试应用程序对于移动应用的成功至关重要，而Test Cloud很好地实现了这一目的。
- en: Testing an application on different devices from its huge device list is available
    on the cloud
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在云端，您可以从大量设备列表中选择不同设备进行应用程序测试。
- en: Test Cloud analyzes the performance of applications
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Test Cloud 分析应用程序的性能。
- en: Test Cloud analyzes memory usage on different devices with different hardware
    configurations
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Test Cloud 分析不同硬件配置下不同设备的内存使用情况。
- en: PhoneCallApp
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PhoneCallApp
- en: 'Let''s go through some steps to see how to monitor our PhoneCallApp:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过一些步骤，了解如何监控我们的PhoneCallApp：
- en: Go to [https://testcloud.xamarin.com/](https://testcloud.xamarin.com/).
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问 [https://testcloud.xamarin.com/](https://testcloud.xamarin.com/)。
- en: 'Click on the PhoneCallApp icon to get to the details of the test runs:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击PhoneCallApp图标，查看测试运行的详细信息：
- en: '![](img/7af0ddef-9673-47aa-9ce5-b4f23efde184.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7af0ddef-9673-47aa-9ce5-b4f23efde184.png)'
- en: 'On the next page, you''ll see a list of tests run for the application:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一页中，您将看到应用程序运行的测试列表：
- en: '![](img/d00e4410-6401-486a-90b9-7088ed53e33b.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d00e4410-6401-486a-90b9-7088ed53e33b.png)'
- en: Now, because we have only run one test so far, Test Cloud does not provide us
    with the graphical metrics shown in the preceding screenshot. In other examples
    we'll see next, you'll be able to see a more detailed comparison of different
    test runs.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，由于我们目前只运行了一个测试，因此Test Cloud没有提供前面截图中显示的图形化度量。在接下来的其他示例中，您将能够看到不同测试运行的更详细对比。
- en: 'Click on the test run from the list to see its results:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击列表中的测试运行，查看其结果：
- en: '![](img/dc91bc25-de3b-420a-9d21-10deb16c90c4.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dc91bc25-de3b-420a-9d21-10deb16c90c4.png)'
- en: The test run listed is the one we ran earlier in previous chapters and uploaded
    from our machine to Xamarin Test Cloud using the command line.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 列出的测试运行是我们之前在章节中运行的，并通过命令行将其上传到Xamarin Test Cloud。
- en: To get an idea of this interface, let's have a look at different parts of Xamarin
    Test Cloud's interface.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了了解这个界面，我们来看看Xamarin Test Cloud界面中的不同部分。
- en: 'Now, this is an overview screen that shows a summary of all the tests run for
    this application:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这是一个概览屏幕，显示该应用程序所有测试运行的总结：
- en: '![](img/3cb504b0-354c-4246-bc16-8d417ff58e2d.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3cb504b0-354c-4246-bc16-8d417ff58e2d.png)'
- en: This screen shows summary details, such as how many tests failed from the total
    number of tests run, how many times the app ran on a device, how many devices
    these tests were run on, and much more.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这个屏幕显示了摘要信息，如从总运行测试中有多少测试失败、应用程序在设备上运行了多少次、这些测试在哪些设备上运行等。
- en: This screen is very useful to get a brief idea when you want to get a report
    on how your application is doing on different devices and OS versions.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你想获取应用程序在不同设备和操作系统版本上的表现报告时，这个屏幕非常有用，可以帮助你简要了解情况。
- en: 'The next thing you''ll see in the left pane is the list of UITests included
    in the test run:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步，左侧窗格中会显示在测试运行中包含的UITests列表：
- en: '![](img/12f70ec9-801f-4316-9d10-4ac48ed63369.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](img/12f70ec9-801f-4316-9d10-4ac48ed63369.png)'
- en: This screen basically has a list of all the Xamarin.UITests that you included
    in your project. You can click on these different tests to see their respective
    results on the right side of the screen.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此屏幕基本上列出了您在项目中包含的所有Xamarin.UITests。您可以点击这些不同的测试，查看它们在屏幕右侧的相应结果。
- en: Let's click on the test from the list in the preceding screen.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们点击前一屏幕列表中的测试。
- en: 'This will take us to the next screen, which has detailed reports for the test
    run:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将带我们到下一个屏幕，其中包含测试运行的详细报告：
- en: '![](img/7ff71190-2f28-4bc3-9cf0-a868ec489fc1.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7ff71190-2f28-4bc3-9cf0-a868ec489fc1.png)'
- en: Have a close look at the left pane on this screen.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 仔细看看此屏幕左侧窗格。
- en: It gives us some steps of the test run on the device.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它提供了一些关于在设备上运行测试的步骤。
- en: These steps are only what we had written previously in the code to take a screenshot
    of every activity the test does.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这些步骤仅是我们之前在代码中编写的，以便在每次测试操作时截取屏幕截图。
- en: 'The steps are as mentioned (we are using the screens of the test code written
    in previous chapters here):'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这些步骤如上所述（我们在这里使用的是之前章节中编写的测试代码屏幕）：
- en: '**App started**: Take a screenshot when the app starts; this was written in
    the `BeforeEachTest()` method in the `Tests.cs` file:'
  id: totrans-75
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**应用程序启动**：应用程序启动时截取屏幕截图；这是在`Tests.cs`文件中的`BeforeEachTest()`方法中编写的：'
- en: '![](img/40ffa47c-6c21-4365-b517-da845e3154f1.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](img/40ffa47c-6c21-4365-b517-da845e3154f1.png)'
- en: '**Call button pressed**: This step is when the Xamarin.UITest presses the call
    button to make a call:'
  id: totrans-77
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**按下拨号按钮**：这是 Xamarin.UITest 按下拨号按钮以发起通话的步骤：'
- en: '![](img/3c471fbd-416e-4ebe-acee-b33bbb630929.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3c471fbd-416e-4ebe-acee-b33bbb630929.png)'
- en: '**Failed step (the assert)**: This is the last step and is shown to provide
    proof of the failed step, so you can see the outcome that we received and compare
    it with what was expected. This was the final assert that decides whether the
    test passes or not, based on the outcome in the `Assert.IsTrue()` condition.'
  id: totrans-79
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**失败的步骤（断言）**：这是最后一步，显示的是失败步骤的证据，您可以看到我们收到的结果，并将其与预期结果进行比较。这是决定测试是否通过的最终断言，基于
    `Assert.IsTrue()` 条件中的结果。'
- en: You can click on each of these steps in the left pane and analyze the screenshots
    taken to see exactly what went on during the test. This is a great way to see
    exactly what went wrong when the test failed.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以点击左侧窗格中的每个步骤并分析所拍摄的屏幕截图，以准确查看测试过程中发生了什么。这是一种很好的方式，可以在测试失败时准确找出问题所在。
- en: 'Now, sometimes the screenshots are not enough to identify the issue. For a
    more detailed analysis, Test Cloud also provides us with Device Log, as shown
    in the following screenshot:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 有时，仅凭截图不足以确定问题。为了进行更详细的分析，Test Cloud 还为我们提供了设备日志，正如下图所示：
- en: '![](img/0160c05a-790b-47bf-a920-b3ffacf242b2.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0160c05a-790b-47bf-a920-b3ffacf242b2.png)'
- en: Device logs are a great way to see what's going on under the hood and get more
    detailed information about the application's behavior and how the device itself
    behaves when the application is run on it.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设备日志是查看应用程序行为和设备在运行应用程序时的表现的绝佳方式，它可以提供更详细的信息。
- en: This can help pinpoint the issues when a test fails on the device; logs are
    always a savior in that sort of scenario.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这可以帮助我们在设备上测试失败时准确定位问题；在这种情况下，日志总是拯救我们的利器。
- en: 'Click on the Device Log and you can see step-by-step logs for each screenshot
    on the same screen:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击设备日志，您可以看到每个截图的逐步日志，所有日志都在同一屏幕上展示：
- en: '![](img/c8c9768c-b5fd-4e70-ab7b-7a8a1df6d81c.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c8c9768c-b5fd-4e70-ab7b-7a8a1df6d81c.png)'
- en: 'When a test fails, Test Cloud provides us with one more option, to see the
    Test Failures:'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当测试失败时，Test Cloud 还为我们提供了一个额外的选项，即查看测试失败：
- en: '![](img/bbca5074-34c6-407d-b9ae-5cee3d2cef5a.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bbca5074-34c6-407d-b9ae-5cee3d2cef5a.png)'
- en: It's very useful for automated test developers to see the exception information
    when a test fails.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于自动化测试开发人员来说，在测试失败时查看异常信息非常有用。
- en: 'Last but not least, there is also a Test Log option, which can be used to get
    a consolidated log of the entire test run:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后但同样重要的是，还有一个“测试日志”选项，可以用来获取整个测试运行的汇总日志：
- en: '![](img/a6ec785d-bb9f-492a-a77d-0175e7665e62.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a6ec785d-bb9f-492a-a77d-0175e7665e62.png)'
- en: Xamarin Store app
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Xamarin Store 应用
- en: Now that we have seen different options provided by Test Cloud to monitor our
    application and its functionality using test runs, let's see how the dashboard
    and tests look when we have multiple test runs on various physical devices with
    different OS versions.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经看到了 Test Cloud 提供的不同选项，用于通过测试运行来监控我们的应用程序及其功能，接下来让我们看看仪表板和测试在多个物理设备上运行、不同操作系统版本下的情况。
- en: This will give us a better idea of how comparative monitoring can be done on
    Test Cloud to analyze an application's behavior on different devices, and compare
    them with one another.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 这将帮助我们更好地了解如何在 Test Cloud 上进行对比监控，以分析应用程序在不同设备上的行为，并将其进行比较。
- en: 'The Xamarin Store application is a sample application provided by Test Cloud
    on its platform to help understand the platform and get an idea of the dashboard.
    Let''s go through the steps to understand how to monitor your application running
    on multiple devices, and how to compare different test runs:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: Xamarin Store 应用程序是 Test Cloud 在其平台上提供的示例应用，旨在帮助了解平台并了解仪表板的使用。让我们通过以下步骤，了解如何监控应用程序在多个设备上的运行情况，并比较不同的测试运行：
- en: 'Go to the Test Cloud home page, just like in the previous example, and click
    on the Xamarin Store icon:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 像之前的例子一样，前往 Test Cloud 的主页并点击 Xamarin Store 图标：
- en: '![](img/c7e51c4c-3afe-45d6-9b8a-cb1b097bff93.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c7e51c4c-3afe-45d6-9b8a-cb1b097bff93.png)'
- en: 'On the next screen, you''ll see a graphical representation of different test
    runs and brief information about how many tests failed of the total tests run,
    what the application size is, and its peak memory usage information during different
    test runs:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一个屏幕上，您将看到不同测试运行的图形表示，并简要了解在所有测试中失败的测试数量、应用程序大小以及不同测试运行期间的峰值内存使用情况：
- en: '![](img/2300f86f-8098-4308-917d-913c0efa42b1.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2300f86f-8098-4308-917d-913c0efa42b1.png)'
- en: This gives us a nice comparative look at how our application is performing on
    different test runs. It is possible that the application was performing fine during
    the first run, and then some code changes made some functionality fail. So, this
    graph is very useful to monitor a timeline of changes that affected application
    functionality.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这为我们提供了一个很好的对比视角，展示了应用程序在不同测试运行中的表现。可能应用程序在第一次运行时表现良好，而之后的一些代码更改导致某些功能失败。因此，这个图表非常有用，可以监控影响应用程序功能的变更时间线。
- en: You can further click on the graph or the test run to see an overview of it.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你还可以点击图表或测试运行，查看其概述。
- en: 'Now, this screen gives us a great view of how an application running on different
    devices can be monitored. It''s a very nice way to keep track of the application
    on different devices and OS versions:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，这个界面为我们提供了一个很好的视图，展示了如何监控在不同设备上运行的应用程序。这是一个非常好的方式，可以跟踪不同设备和操作系统版本上的应用程序：
- en: '![](img/a47bfb69-897c-4c4f-87cf-e5ab5384b745.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a47bfb69-897c-4c4f-87cf-e5ab5384b745.png)'
- en: 'Let''s click on one of the steps to see the results of the step on multiple
    devices:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们点击其中一个步骤，查看在多个设备上该步骤的结果：
- en: '![](img/b2694589-ee52-4d21-8271-cc7a438848de.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b2694589-ee52-4d21-8271-cc7a438848de.png)'
- en: The red icon shows failed tests. This page shows all the devices you chose to
    run the test on; it shows all the devices the test passed on, and shows a red
    flag on failed devices.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 红色图标表示测试失败。此页面显示了你选择运行测试的所有设备；它显示了测试通过的所有设备，并在失败的设备上标记红旗。
- en: You can further click on each device to get device-specific screens and logs.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以进一步点击每个设备，获取特定设备的屏幕和日志。
- en: Using Android monitoring tools
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Android 监视工具
- en: 'An Android app''s performance is equally important for a great user experience
    and a fast-responsive application. **Android Device Monitor** (**ADM**) is a great
    tool to identify performance issues and build reports upon them, for profiling
    and to ensure good application performance when it comes to Android apps:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 一个 Android 应用程序的性能对于良好的用户体验和快速响应的应用程序同样重要。**Android 设备监视器**（**ADM**）是一个出色的工具，能够识别性能问题，并基于这些问题生成报告，用于分析和确保
    Android 应用程序的良好性能：
- en: 'Go to Visual Studio, and from the toolbar, run Android Device Monitor:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 Visual Studio，并从工具栏中运行 Android 设备监视器：
- en: '![](img/529b04a9-ea50-46c7-8872-988ec04a5669.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![](img/529b04a9-ea50-46c7-8872-988ec04a5669.png)'
- en: 'A new application, Android Device Manager, should open:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个新的应用程序，Android 设备管理器，应该会打开：
- en: '![](img/9bfebfd6-5c81-4645-9631-0fe6c5982901.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9bfebfd6-5c81-4645-9631-0fe6c5982901.png)'
- en: Go back to Visual Studio and run PhoneCallApp to get the device listed in Android
    Device Monitor.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回 Visual Studio 并运行 PhoneCallApp，以便在 Android 设备监视器中列出设备。
- en: You can run the application on an emulator or a physical device connected to
    the computer.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以在模拟器或连接到计算机的物理设备上运行应用程序。
- en: Once the application has started, come back to Android Device Monitor and you
    should be able to see the device running in the left pane.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 应用程序启动后，返回到 Android 设备监视器，你应该能够在左侧窗格中看到正在运行的设备。
- en: Under the device name, you should be able to see all the processes running on
    the device.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在设备名称下，你应该能够看到设备上所有正在运行的进程。
- en: 'In that list, select your application and you should be able to see related
    info:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在列表中选择你的应用程序，你应该能够看到相关信息：
- en: '![](img/d1c48096-4716-4dac-8fb3-3bd1f2317637.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d1c48096-4716-4dac-8fb3-3bd1f2317637.png)'
- en: 'To monitor different threads running in your application, click on the Update
    Threads button on the left pane''s toolbar, and then you should be able to see
    different threads running by your application on the right-hand side:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要监控应用程序中运行的不同线程，请点击左侧窗格工具栏上的“更新线程”按钮，接着你应该能够看到在右侧显示的由应用程序运行的不同线程：
- en: '![](img/dd279fb3-50ca-4d82-b302-22193d618aed.png)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dd279fb3-50ca-4d82-b302-22193d618aed.png)'
- en: Being able to monitor threads run by your application can be very helpful in
    finding any unwanted background threads that might be causing extra battery usage
    or slowing down your application.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 能够监控由应用程序运行的线程，对于找出可能导致额外电池消耗或拖慢应用程序的后台线程非常有帮助。
- en: Sometimes, a thread might get deadlocked and it is very difficult to identify
    issues in such scenarios. This feature of ADM helps in a big way.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 有时，线程可能会发生死锁，在这种情况下很难识别问题。ADM 的这一功能在这方面提供了很大帮助。
- en: Similarly, monitoring the memory usage of your application is a great tool to
    optimize your app and support low-memory devices, and sometimes improve the performance
    by reducing memory consumption.
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 同样，监控应用程序的内存使用情况是优化应用程序和支持低内存设备的一个重要工具，有时还可以通过减少内存消耗来提高性能。
- en: 'Click on Cause **garbage collection** (**GC**) from the toolbar in the left
    pane and then select Heap on the right side to see the heap memory allocation
    details:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击左侧面板中的**垃圾回收**(**GC**)，然后在右侧选择堆（Heap）以查看堆内存分配的详细信息：
- en: '![](img/bb3f2998-3930-48c0-a631-35a8ed557e5b.png)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bb3f2998-3930-48c0-a631-35a8ed557e5b.png)'
- en: 'You can get more detailed allocation monitoring in the Allocation Tracker tab.
    Click on Start Tracking and then the Get Allocations button to get allocation
    details:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以在“分配跟踪器”标签页中获得更详细的分配监控。点击“开始跟踪”，然后点击“获取分配”按钮以获取分配详情：
- en: '![](img/38984534-077b-4c70-b88a-833ab204f6a7.png)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![](img/38984534-077b-4c70-b88a-833ab204f6a7.png)'
- en: There are also options to monitor network-related usage.
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 还有用于监控网络相关使用的选项。
- en: A very important feature of Android Device Monitor is profiling, which helps
    in profiling time taken and other details, based on methods in your application
    code. It is a great tool to identify method-level performance and latency.
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Android设备监控器的一个非常重要的功能是性能分析，它帮助分析在应用程序代码中各个方法所花费的时间及其他细节。它是识别方法级性能和延迟的一个重要工具。
- en: 'To use this feature, click on the Start Method Profiling button on the toolbar
    in the left pane:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用此功能，点击左侧面板中的“开始方法性能分析”按钮：
- en: '![](img/6b18866c-bc47-4d38-a927-33e9ed0df9b2.png)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6b18866c-bc47-4d38-a927-33e9ed0df9b2.png)'
- en: 'For the next step, select whether you want Sample based profiling or Trace
    based profiling and click OK:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步，选择是否进行基于样本的性能分析或基于跟踪的性能分析，然后点击确定：
- en: '![](img/9f31cd02-a59d-4aa3-8c2f-01076a648e1e.png)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9f31cd02-a59d-4aa3-8c2f-01076a648e1e.png)'
- en: Do your tasks on the application, come back to ADM, and click on the Stop Method
    Profiling button.
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在应用程序中执行你的任务，返回到ADM并点击“停止方法性能分析”按钮。
- en: 'A trace file is generated, containing the trace information you want to analyze:'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 会生成一个跟踪文件，包含你想要分析的跟踪信息：
- en: '**A timeline panel**: It describes when each thread and method started and
    stopped. We can go to a specific timespan and check what each thread did at that
    moment.'
  id: totrans-137
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**时间轴面板**：它描述了每个线程和方法的开始和结束时间。我们可以进入特定的时间段，查看每个线程在那个时刻做了什么。'
- en: '**A profile panel**: This provides a summary of what happened inside a method.
    We can see which one took the most CPU time, or how many calls it made.'
  id: totrans-138
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分析面板**：提供了方法内部发生事件的摘要。我们可以看到哪个方法占用了最多的CPU时间，或者它调用了多少次。'
- en: '![](img/894fe773-bc48-4e9c-91e4-4eb34a08a49c.png)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![](img/894fe773-bc48-4e9c-91e4-4eb34a08a49c.png)'
- en: Methods are at the Android level, and you might need to compare to see which
    method might have called these Android methods.
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 方法位于Android层级，可能需要比较哪些方法可能调用了这些Android方法。
- en: Summary
  id: totrans-141
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we learned about different types of monitoring techniques,
    such as API monitoring, performance monitoring, and functional monitoring. We
    also discussed different tools for API level monitoring. We learned in detail
    about functional monitoring on multiple devices using Xamarin Test Cloud and performance
    monitoring using Android Device Monitor. In the next chapter, we'll discuss debugging
    and troubleshooting during different phases of development.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了不同类型的监控技术，如API监控、性能监控和功能监控。我们还讨论了用于API级监控的不同工具。我们详细了解了使用Xamarin Test
    Cloud在多个设备上进行功能监控，以及使用Android Device Monitor进行性能监控。在下一章中，我们将讨论在不同开发阶段的调试和故障排除。
