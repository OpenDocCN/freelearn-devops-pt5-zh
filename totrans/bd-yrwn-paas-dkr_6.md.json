["```\n54.148.253.187 domain1.com\n54.148.253.187 domain2.com\n54.148.253.187 domain3.com\n\n```", "```\nglobal\n    daemon\n    maxconn 4096\n    pidfile /var/run/haproxy.pid\ndefaults\n    mode http\n    timeout connect 5000ms\n    timeout client 50000ms\n    timeout server 50000ms\n```", "```\nfrontend http-in\n    bind *:80\n    acl is_site1 hdr_end(host) -i domain1.com\n    use_backend site1 if is_site1\n```", "```\nbackend site1\n    balance roundrobin\n    option httpclose\n    option forwardfor\n    server s1 127.0.0.1:49187 maxconn 450\n```", "```\nhaproxy -f /etc/haproxy/docker.cfg –c\n\n```", "```\nhaproxy -f /etc/haproxy/docker.cfg –D\n\n```", "```\ncd..\ncp –r crane-wp crane-wp2\ncd crane-wp2\nsed -i \"s/wp/wp2/g\" crane.yaml\nsed -i \"s/mydata/mydata2/g\" crane.yaml\nsed -i \"s/mymysql/mymysql2/g\" crane.yaml\ncrane lift data_db\ncrane lift wp2\n\n#check out port for new container named wp2\ndocker ps\n\n```", "```\nacl is_site2 hdr_end(host) -i domain2.com\nuse_backend site2 if is_site2\n\n```", "```\nbackend site2\n balance roundrobin\n option httpclose\n option forwardfor\n server s2 127.0.0.1:49188 maxconn 450\n\n```", "```\nhaproxy -f /etc/haproxy/docker.cfg -p /var/run/haproxy.pid -sf $(cat /var/run/haproxy.pid)\n\n```", "```\nserver {\n    listen 80;\n    server_name domain1.com;\n    charset UTF-8;\n\n    if ($host !~ ^(domain1.com)$ ) {\n         return 444;\n    }\n}\n```", "```\nlocation / {\n    proxy_pass http://wp1;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header X-NginX-Proxy true;\n    proxy_set_header Host $host;\n    proxy_set_header X-Forwarded-Proto $scheme;\n    proxy_redirect off;\n}\n```", "```\nupstream wp1 {\n    server 127.0.0.1:49187;\n}\n```", "```\nupstream wp1 {\n  server 127.0.0.1:49187;\n}\n\nserver {\n  listen 80;\n  server_name domain1.com;\n  charset UTF-8;\n\n  if ($host !~ ^(domain1.com)$ ) {\n    return 444;\n  }\n\n  location / {\n    proxy_pass http://wp1;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n    proxy_set_header X-NginX-Proxy true;\n    proxy_set_header Host $host;\n    proxy_set_header X-Forwarded-Proto $scheme;\n    proxy_redirect off;\n  }\n}\n```", "```\n/etc/init.d/haproxy stop\n\n```", "```\ncp /etc/nginx/conf.d/wp1.conf /etc/nginx/conf.d/wp2.conf\nsed -i \"s/wp1/wp2/g\" /etc/nginx/conf.d/wp2.conf\nsed -i \"s/domain1/domain2/g\" /etc/nginx/conf.d/wp2.conf\nsed -i \"s/49187/49188/g\" /etc/nginx/conf.d/wp2.conf\n\n#test config\n/etc/init.d/nginx configtest\n\n#reload config\n/etc/init.d/nginx reload\n\n```", "```\ndocker run -d -p 80:80 -v /var/run/docker.sock:/tmp/docker.sock jwilder/nginx-proxy\n\n```", "```\n/etc/init.d/nginx stop\n\n```", "```\ncontainers:\n wp:\n image: oskarhane/wordpress\n run:\n volumes-from: [\"mydata\"]\n link:\n - mymysql:mysql\n publish: [\"80\"]\n detach: true\n env: [\"VIRTUAL_HOST=domain1.com\"]\n\n```", "```\ncrane lift web --recreate\n\n```"]