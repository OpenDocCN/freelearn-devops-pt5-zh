- en: Connecting Hybrid Applications
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous chapter, we covered the networking objective. We covered how
    to design virtual networks in Azure and how to design solutions that use virtual
    networks. We also covered external connectivity for Azure VNets and how to design
    security strategies for networking solutions.
  prefs: []
  type: TYPE_NORMAL
- en: This chapter introduces the designing connectivity for the hybrid applications
    objective. It starts with how to design connectivity to on-premises data from
    Azure applications using the different services that Azure provides.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following topics will be covered:'
  prefs: []
  type: TYPE_NORMAL
- en: Azure Relay service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Azure Data Management Gateway for Data Factory
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Azure On-premises Data Gateway
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Azure App Service Hybrid Connections
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Azure App Service Virtual Network Integration
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Azure AD Application Proxy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Joining VMs to domains
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Azure Relay service
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With Azure Relay services you can connect your on-premises application with
    a gateway in Azure, without having to open a firewall connection or make any other
    big adjustments to your on-premises network.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can create an Azure Relay service in the Azure Portal. Inside the Azure
    Relay service, a secure connection is created by using an outbound port and a
    bi-directional connection to your on-premises application. This connection is
    dedicated to one client and encrypted using **Transport Layer Security** (**TLS**).
    The on-premises application imports the Azure Relay namespace and makes a call
    to the Azure Relay service in the Azure Portal using access keys for authentication:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/bafda8cd-e262-48a5-99a6-8cef2fe71a1f.png)'
  prefs: []
  type: TYPE_IMG
- en: Azure Relay services
  prefs: []
  type: TYPE_NORMAL
- en: Azure Relay services support peer-to-peer traffic, one-way, request/response
    traffic, publish/subscribe scenarios, and bi-directional socket communication
    for increased point-to-point efficiency.
  prefs: []
  type: TYPE_NORMAL
- en: The difference of using Azure Relay services instead of using a VPN to create
    a hybrid connection, is that the Azure Relay service can be scoped to one application
    on a single machine instead of using one connection for all sorts of connection
    types.
  prefs: []
  type: TYPE_NORMAL
- en: Azure Relay services offer two features, hybrid connection and WCF Relays which
    are different implementations, but both share the same gateway.
  prefs: []
  type: TYPE_NORMAL
- en: Hybrid connections
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With hybrid connections a rendezvous point is established in the cloud. An application
    can then connect to this using HTTP and web sockets. You can use all programming
    languages that support web sockets, such as .NET Core, JavaScript, and NodeJS
    and multiple remote procedure models.
  prefs: []
  type: TYPE_NORMAL
- en: For more information about the Azure Relay hybrid connections protocol you can
    refer to the following website: [https://docs.microsoft.com/en-us/azure/service-bus-relay/relay-hybrid-connections-protocol](https://docs.microsoft.com/en-us/azure/service-bus-relay/relay-hybrid-connections-protocol).
  prefs: []
  type: TYPE_NORMAL
- en: For more information on how to get started with relay hybrid connections, you
    can refer to the following tutorial: [https://docs.microsoft.com/en-us/azure/service-bus-relay/relay-hybrid-connections-dotnet-get-started](https://docs.microsoft.com/en-us/azure/service-bus-relay/relay-hybrid-connections-dotnet-get-started).
  prefs: []
  type: TYPE_NORMAL
- en: WCF Relays
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: WCF Relays (formerly Service Bus Relays) uses the .NET Framework and WCF to
    establish a connection and sending a message. The on-premises application uses
    WCF Relay bindings which creates WCF channels that integrate with the Azure Service
    Bus.
  prefs: []
  type: TYPE_NORMAL
- en: For more information on How to use Azure Relay WCF Relays with .NET, you can
    refer to the following article: [https://docs.microsoft.com/en-us/azure/service-bus-relay/relay-wcf-dotnet-get-started](https://docs.microsoft.com/en-us/azure/service-bus-relay/relay-wcf-dotnet-get-started).
  prefs: []
  type: TYPE_NORMAL
- en: Azure Data Management Gateway for Data Factory
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Azure Data Factory offers a data-integration service which you can use to create
    workflows that automate movement and transformation of data. With Data Factory,
    you can create data workflows that can aggregate data from different data stores
    and transform and process data using Azure services, such as Azure Machine Learning, Azure
    HDInsight Hadoop, and Azure Data Lake Analytics and Output data to different data
    stores.
  prefs: []
  type: TYPE_NORMAL
- en: Azure Data Management Gateway for Data Factory acts as a bridge to connect your
    on-premises to the cloud. It consists of a client agent which is installed on
    the on-premises system and which then connects to Azure Data Factory. This agent
    copies your data to the cloud. The gateway can be scaled out by installing the
    agent on multiple on-premises environments and increasing the data movement jobs
    that can run simultaneously on a node. Data is processed in parallel using the
    jobs.
  prefs: []
  type: TYPE_NORMAL
- en: You don't have to open firewall ports to copy the data. It sends data securely
    over HTTP using certificates. It also offers a monitoring and management feature
    from Azure Data Factory in the Azure Portal.
  prefs: []
  type: TYPE_NORMAL
- en: Azure Data Management Gateway for Data Factory supports a variety of data sources
    which are listed here: [https://docs.microsoft.com/en-us/azure/data-factory/v1/data-factory-data-movement-activities#supported-data-stores-and-formats](https://docs.microsoft.com/en-us/azure/data-factory/v1/data-factory-data-movement-activities#supported-data-stores-and-formats).
  prefs: []
  type: TYPE_NORMAL
- en: Azure On-premises Data Gateway
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Azure On-premises Data Gateway acts as a bridge between your on-premises
    data sources and Azure. It can connect to a number of Azure services, such as Azure
    Analysis Services, Azure Logic Apps, Microsoft Flow, Power Apps, and Power BI.
    For the on-premises side, there are a number of products which can be connected
    to the gateway, such as SQL Server, SQL Analysis Services, SharePoint, and more.
  prefs: []
  type: TYPE_NORMAL
- en: For an overview of the on-premises data sources that are supported for the Azure
    On-premises Data Gateway, you can refer to the following website: [https://docs.microsoft.com/en-us/azure/analysis-services/analysis-services-datasource](https://docs.microsoft.com/en-us/azure/analysis-services/analysis-services-datasource).
  prefs: []
  type: TYPE_NORMAL
- en: To use the Azure On-premises Data Gateway, a client needs to be installed on
    the on-premises environment. This client consists of a Windows service which is
    responsible for setting up the connection with Azure. In Azure, a Gateway Cloud
    Service needs to be created. The client then communicates with the Gateway Cloud
    Service using the Azure Service Bus.
  prefs: []
  type: TYPE_NORMAL
- en: When a request for data is created by one of the Azure services, The cloud gateway
    service creates a query and encrypts the on-premises credentials. This query and
    the credentials are then sent to a queue inside the gateway. The gateway then
    sends the query to the Azure Service Bus.
  prefs: []
  type: TYPE_NORMAL
- en: The on-premises client polls the Azure Service Bus regularly and when a message
    is waiting inside the Service Bus, it decrypts the credentials from the on-premises
    data source and then runs the query on it to retrieve the data.
  prefs: []
  type: TYPE_NORMAL
- en: The data is returned to the Gateway Cloud Service by using the Azure Service
    Bus again. The Gateway Cloud Service is responsible for routing the data between
    the different Azure services.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/cd044dac-3e2b-4f75-bcbd-42ff67b33569.png)'
  prefs: []
  type: TYPE_IMG
- en: Azure On-premises Data Gateway architecture
  prefs: []
  type: TYPE_NORMAL
- en: Azure App Service Hybrid Connections
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Azure App Service Hybrid Connections is both part of the Azure App Service and
    is a separate feature in Azure. It uses the Azure Relay service to establish a
    connection between applications that are hosted in Azure and applications that
    are hosted in your on-premises environment. It creates an application endpoint
    in the cloud which your app can connect to. It uses the Azure Relay services to
    establish the connection.
  prefs: []
  type: TYPE_NORMAL
- en: The hybrid connection manager connects to the Azure Relay service, and the application
    itself connects to the Azure Relay services as well. Azure Relay services is then
    responsible for setting up a TCP tunnel over which they both can safely communicate.
    By using the TCP connection, you don't have to open a firewall port on the on-premises
    server.
  prefs: []
  type: TYPE_NORMAL
- en: 'Inside Azure App Service, a hybrid connection is created to access application
    resources on the on-premises environment. You can create a hybrid connection from
    the Azure Relay service but it is best to create the connection from within the
    app settings in Azure:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/facdde79-fe5d-4db6-a379-8b73509a874c.png)'
  prefs: []
  type: TYPE_IMG
- en: Azure App Service Hybrid Connections settings
  prefs: []
  type: TYPE_NORMAL
- en: Azure App Service Virtual Network Integration
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can use the Azure App Service Virtual Network Integration to deploy your
    application inside a VNet. This enables access from your application to other
    services, VMs, or databases that are deployed inside the same VNet as well.
  prefs: []
  type: TYPE_NORMAL
- en: To establish the connection from your application to the VNet, Azure App Service
    VNet integration uses a point-to-site VPN with a dynamic routing gateway. By using
    the point-to-site type of VPN connection, there is only one connection created
    for the VM on which your app is hosted. Other resources that are deployed inside
    the same App Service plan, are not connected. When you want to set up a connection
    for that resources as well, you have to set up a separate point-to-site VPN connection
    for each resource that resides in the App Service plan.
  prefs: []
  type: TYPE_NORMAL
- en: This point-to-site VPN connects to an Azure VPN Gateway, which is connected
    to the VNet. When a VNet is connected to your on-premises network using the Azure
    VPN Gateway and a site-to-site VPN, you can use the connection to connect the
    resource with the resources which reside in the on-premises network as well.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ce2a7aec-b64c-41fe-9942-609b1e6829c6.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Azure App Service VNet Integration.
  prefs: []
  type: TYPE_NORMAL
- en: App VNet Integration supports communication over UDP and TCP. You can connect
    to the App by using it's private IP address. Public IP addresses don't have to
    be created for your App. They can be accessed by their private IP address by all
    the services that are deployed inside the same VNet.
  prefs: []
  type: TYPE_NORMAL
- en: The VNet Integration can be used for apps that use the Basic, Standard, or Isolated
    App Service plans. Inside the App Service plan, you can create up to five VNets.
    However, you can only assign your application to one VNet at a time.
  prefs: []
  type: TYPE_NORMAL
- en: 'VNet Integration can be set up from the App Settings in the Azure Portal under
    Networking:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6f4ea2d2-f700-475a-a0b2-c07a72063d92.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Azure App Service VNet integration from the Azure Portal
  prefs: []
  type: TYPE_NORMAL
- en: Another way for VNet Integration for your App is by using an **Application Service
    Environment** (**ASE**), which is described in [Chapter 3](de2f1b21-edb1-4616-a8ff-8fbf484459a0.xhtml),
    *Designing Web Applications*. An ASE is deployed inside a VNet as well.
  prefs: []
  type: TYPE_NORMAL
- en: There are some constraints when using VNet Integration for your apps. VNet Integration
    cannot enable private site access for your app. Private site access makes your
    app only accessible from resources inside the same virtual network. Private site
    access can only be accomplished using an Application Service Environment configured
    with an **Internal Load Balancer** (**ILB**).
  prefs: []
  type: TYPE_NORMAL
- en: For more information on how to create an ASE with an ILB, you can refer to the
    following article: [https://docs.microsoft.com/en-us/azure/app-service/environment/create-ilb-ase](https://docs.microsoft.com/en-us/azure/app-service/environment/create-ilb-ase).
  prefs: []
  type: TYPE_NORMAL
- en: Azure AD Application Proxy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With the Azure Active Directory Application Proxy, you can access on-premises
    web applications from the cloud. It provides **Single Sign On** (**SSO**) and
    secure remote access for your web applications. Applications are integrated with
    Azure Active Directory and published through the Azure Portal. You don't have
    to make any adjustments to your on-premises network or use a VPN connection to
    use the Azure AD Application Proxy for your applications.
  prefs: []
  type: TYPE_NORMAL
- en: The type of applications that can work with Azure AD Application Proxy, are web
    APIs, web applications that use integrated Windows Authentication for authentication,
    use form-based or header-based access, applications integrated with the **Active
    Directory Authentication Library** (**ADAL**), and applications hosted behind
    a remote desktop gateway.
  prefs: []
  type: TYPE_NORMAL
- en: 'Azure AD Application Proxy uses two components that need to be configured:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Connector**: The connector is a lightweight agent that needs to be installed
    inside the on-premises network on a Windows Server. It facilitates the network
    connection between your on-premises application and the Application Proxy service
    in Azure. It only uses outbound connections, so you don''t have to install it
    in a DMZ or  open any inbound ports.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**External endpoint**: The external endpoint is how your users access the web
    application. This can be an direct URL or this can be accessed from the MyApps
    portal. Users authenticate with Azure AD and then they are routed to the on-premises
    application, through the connector.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The MyApps portal can be accessed using the following URL: [https://myapps.microsoft.com](https://myapps.microsoft.com).
    It offers a web portal where all users who have a Azure AD account, can view and
    launch the applications to which they have been granted access.
  prefs: []
  type: TYPE_NORMAL
- en: Joining VMs to domains
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The last way for creating hybrid applications is by joining an Azure VM to an
    on-premises domain. You can connect an Azure Virtual Machine, which has your application
    deployed in it for instance, with an on-premises domain using Azure AD Domain
    Services. To set up this connection, you don't have to install and manage a domain
    controller in Azure.
  prefs: []
  type: TYPE_NORMAL
- en: Azure AD Domain Services is a feature which can be enabled inside your Azure
    subscription. It creates a managed domain which is fully integrated with the Azure
    AD tenant and available inside Azure VNets. On-premises VMs and Azure VMs can
    then join this managed domain and use the usernames, passwords, and group memberships
    from Azure AD to log in or authenticate. Applications that are deployed inside
    these VMs can benefit from this as well.
  prefs: []
  type: TYPE_NORMAL
- en: Azure AD Domain Services provides group policies, LDAP and Kerberos/NTLM authentication'
    which is compatible with Windows Server Active Directory. You can use this feature
    for cloud-only Azure AD tenants and for hybrid Azure AD tenants, where the on-premises
    identities are synced with Azure using Azure AD Connect.
  prefs: []
  type: TYPE_NORMAL
- en: Enabling Azure AD Domain Services
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To enable Azure AD Domain Services inside your Azure tenant, you can take the
    following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to the Azure Portal by opening [https://portal.azure.com/](https://portal.azure.com/).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on New and type `Azure AD Domain Services`in the search bar.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Azure AD Domain Services is automatically mapped to your Azure AD tenant, so
    the only thing you have to specify in the next blade is the resource group and
    the location and click OK:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/b40624cf-ab90-4549-a100-54908eb6ea3b.png)'
  prefs: []
  type: TYPE_IMG
- en: Enable Azure AD Domain Services
  prefs: []
  type: TYPE_NORMAL
- en: 'In the next blade, you can create a new VNet or associate Azure AD Domain Services
    with a VNet. Note that it is recommended to create a separate subnet for it and
    click OK:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/2606ae25-bbc8-40d2-9bec-df013a266665.png)'
  prefs: []
  type: TYPE_IMG
- en: Set VNet
  prefs: []
  type: TYPE_NORMAL
- en: 'There is automatically a group created called AAD DC Administrators. You can
    add users to this group in here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/73ab4bcb-5b00-4f94-ab6e-46b939c995dc.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Add administrators
  prefs: []
  type: TYPE_NORMAL
- en: 'The last blade provides a summary of the settings. Click on OK to create the
    service:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/d9c47745-58d9-4372-b2ee-b4b7a03e6565.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Summary
  prefs: []
  type: TYPE_NORMAL
- en: Adding the VM to the managed domain
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Next is to add a VM to the managed domain which is created in the previous
    step:'
  prefs: []
  type: TYPE_NORMAL
- en: Open a VM, which was created earlier, from the Azure Portal or create a new
    VM. Make sure the VM is deployed in the same VNet as the Azure AD Domain Service
    (but in a separate subnet).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Start the VM, connect to it and log in using the credential you provided when
    the VM was created.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Open Server Manager | Local Server and click on WORKGROUP, as shown in the
    following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/d7c26ec5-ca3c-4fd1-8096-ef07c9bcd140.png)'
  prefs: []
  type: TYPE_IMG
- en: Local Server settings
  prefs: []
  type: TYPE_NORMAL
- en: Add the name of the managed domain of Azure AD Domain Services and add the VM
    to it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we covered the designing connectivity for hybrid applications
    objective. We covered the different services that Azure offers for connecting
    on-premises applications, data, and services with Azure. You should now know,
    when to use the different features inside your own solutions and architectures.
  prefs: []
  type: TYPE_NORMAL
- en: The next chapter will focus on the different storage solutions that Azure offers.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Answer the following questions to test your knowledge of the information in
    this chapter. You can find the answers in the *Assessments* section at the end
    of this book.
  prefs: []
  type: TYPE_NORMAL
- en: You want to use Azure App VNet Integration to secure your application from outside
    access. Will this work?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Yes'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 'No'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You want to connect your on-premises domain with Azure Active Directory as easy
    as possible. Can we use Azure Active Directory Domain Services for this without
    using Azure AD Connect?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Yes'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 'No'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Can we add applications deployed in Azure App Services to a VNet?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Yes'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 'No'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You can check the following links for more information about the topics that
    are covered in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: '**What is Azure Relay?**: [https://docs.microsoft.com/en-us/azure/service-bus-relay/relay-what-is-it](https://docs.microsoft.com/en-us/azure/service-bus-relay/relay-what-is-it)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Service Bus Relay Documentation**: [https://docs.microsoft.com/en-us/azure/service-bus-relay/](https://docs.microsoft.com/en-us/azure/service-bus-relay/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Data Management Gateway**: [https://docs.microsoft.com/en-us/azure/data-factory/v1/data-factory-data-management-gateway](https://docs.microsoft.com/en-us/azure/data-factory/v1/data-factory-data-management-gateway)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Connecting to on-premises data sources with Azure On-premises Data Gateway**: [https://docs.microsoft.com/en-us/azure/analysis-services/analysis-services-gateway](https://docs.microsoft.com/en-us/azure/analysis-services/analysis-services-gateway)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Azure App Service Hybrid Connections**: [https://docs.microsoft.com/en-us/azure/app-service/app-service-hybrid-connections.](https://docs.microsoft.com/en-us/azure/app-service/app-service-hybrid-connections)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**How to provide secure remote access to on-premises applications**: [https://docs.microsoft.com/en-us/azure/active-directory/active-directory-application-proxy-get-started](https://docs.microsoft.com/en-us/azure/active-directory/active-directory-application-proxy-get-started)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Join a Windows Server virtual machine to a managed domain**: [https://docs.microsoft.com/en-us/azure/active-directory-domain-services/active-directory-ds-admin-guide-join-windows-vm-portal](https://docs.microsoft.com/en-us/azure/active-directory-domain-services/active-directory-ds-admin-guide-join-windows-vm-portal)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
