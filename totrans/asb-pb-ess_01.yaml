- en: Setting Up the Learning Environment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To use this book most effectively and to examine, run, and write code that is
    part of exercises supplied in this book, it's essential to set up a learning environment.
    Even though Ansible can work with any type of nodes, virtual machines, cloud servers,
    or bare metal hosts with an operating system installed and SSH service running,
    the preferred mode is to use virtual machines.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this session, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the learning environment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding the pre requisites
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing and configuring virtualbox and vagrant
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating virtual machines
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing Ansible
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using the sample code
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding the learning environment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We assume that most of our learners would like to set up the environment locally,
    and thus recommend using the open source and freely available software VirtualBox
    and Vagrant, which have support for most of the desktop operating systems, including
    Windows, OSX, and Linux.
  prefs: []
  type: TYPE_NORMAL
- en: 'The ideal setup includes five virtual machines, the purpose of which is explained
    as follows. You can also consolidate some of the services, for example, the load
    balancer and web server can be the same host:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Controller**: This is the only host that needs to have Ansible installed,
    and works as a controller. This is used to launch the `ansible-playbook` commands
    from the controller.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Database (Ubuntu)**: This host is configured with Ansible to run the MySQL
    database service and runs the Ubuntu distribution of Linux.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Database (CentOS)**: This host is configured with Ansible to run the MySQL
    database service, however, it runs the CentOS distribution of Linux. This is added
    to test multiplatform support while writing the MySQL role for Ansible.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Web Server**: This host is configured with Ansible to run the Apache web
    server application.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Load balancer**: This host gets configured with the haproxy application,
    which is an open source HTTP proxy service. This host acts as a load balancer,
    which accepts HTTP requests and spreads the load across available web servers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Prerequisites
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For most up-to-date instructions on prerequisites, software and hardware requirements,
    as well as setup instructions, refer to the following GitHub repository:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://github.com/schoolofdevops/ansible-playbook-essentials](https://github.com/schoolofdevops/ansible-playbook-essentials).'
  prefs: []
  type: TYPE_NORMAL
- en: Systems prerequisites
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'A moderately configured desktop or a laptop system should be sufficient to
    set up the learning environment. The following are the recommended prerequisites
    in the context of of software and hardware:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Processor** | 2 cores |'
  prefs: []
  type: TYPE_TB
- en: '| **Memory** | 2.5 GB RAM available |'
  prefs: []
  type: TYPE_TB
- en: '| **Disk Space** | 20 GB of free space |'
  prefs: []
  type: TYPE_TB
- en: '| **Operating System** | Windows, OS X (Mac), Linux |'
  prefs: []
  type: TYPE_TB
- en: The base software
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For the purpose of setting up the learning environment, we recommend using
    the following software:'
  prefs: []
  type: TYPE_NORMAL
- en: '**VirtualBox**: Oracle''s virtualbox is a desktop virtualization software,
    which is freely available. It works on a variety of operating systems, including
    Windows, OS X, Linux, FreeBSD, Solaris, and so on. It provides a layer of hypervisor
    and allows one to create and run virtual machines on top of an existing base OS.
    The code provided along with this book has been tested on 4.3x versions of virtualbox.
    However, any version of virtualbox, which is compatible with the vagrant version
    can be used.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Vagrant**: This is a tool that allows one to easily create and share virtual
    environments on most hypervisors and cloud platforms, including but not limited
    to virtualbox. It can automate tasks such as importing an image, specifying resources,
    such as memory and CPUs assigned to VMs, and setting up network interfaces, hostnames,
    user credentials, and so on. Since it provides a text configuration in the form
    of a Vagrant file, virtual machines can be provisioned programmatically, making
    them easy to use it with other tools such as **Jenkins** to automate build and
    test pipelines.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Git for Windows**: Even though we do not intend to use Git, which is a version
    control software, we use this software to install the SSH utility on the Windows
    system. Vagrant needs an SSH binary available in the path. Windows is not packaged
    with the SSH utility, and Git for Windows is the easiest way to install it on
    Windows. Alternative options such as **Cygwin** exist.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following table lists the version OS the software used to develop the code
    provided with the book, with download links:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Software | Version | Download URI |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| VirtualBox | 4.3.30 | [https://www.virtualbox.org/wiki/Downloads](https://www.virtualbox.org/wiki/Downloads)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Vagrant | 1.7.3 | [https://www.vagrantup.com/downloads.html](https://www.vagrantup.com/downloads.html)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Git for Windows | 1.9.5 | [https://git-scm.com/download/win](https://git-scm.com/download/win)
    |'
  prefs: []
  type: TYPE_TB
- en: Learners are advised to download, install, and refer to the respective documentation
    pages to get familiar with these tools before proceeding.
  prefs: []
  type: TYPE_NORMAL
- en: Creating virtual machines
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Once you have installed the base software, you can use vagrant to bring up
    the virtual machines required. Vagrant uses a specification file by the name `Vagrantfile`,
    a sample of which is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The preceding Vagrant file contains specifications to set up five virtual machines,
    as described in the beginning of this chapter, which are, `control`, `db`, `dbel`,
    `www`, and `lb`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Learners are advised to use following instructions to create and start the
    virtual machines required to set up the learning environment:'
  prefs: []
  type: TYPE_NORMAL
- en: Create a directory structure for the learning environment setup, for example,
    `learn/ansible`, anywhere on the system.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Copy the `Vagrantfile` file provided previously to the `learn/ansible` directory.
    The tree should now look as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: The `Vagrantfile` file contains specifications for the virtual machines described
    in the earlier section.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Open a terminal and go to `learn/ansible`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Bring up the control node and log in to it, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'From a separate terminal window, from the `learn/ansible` directory, bring
    up the remaining virtual machine, one at a time, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Installing Ansible on the controller
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Once the virtual machines are created and brought up, Ansible needs to be installed
    on the controller. Since Ansible is agentless and manages nodes using SSH transport,
    no additional setup is needed on the nodes except for ensuring that the SSH service
    is running. To install Ansible on the controller, refer to the following steps.
    These instructions are specific to the Ubuntu distribution of Linux, as that''s
    what we use on our controller. For generic installation instructions, please refer
    to the following page:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://docs.ansible.com/intro_installation.html](http://docs.ansible.com/intro_installation.html).'
  prefs: []
  type: TYPE_NORMAL
- en: 'The steps are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Log in to the controller using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Update the repository cache using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Install the prerequisite software and repositories:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Update the repository cache after adding a new repository, such as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Install Ansible using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Validate Ansible using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Using sample code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The sample code provided with this book is divided as per the chapter numbers.
    A directory named after the chapter number contains the snapshot of the state
    of the code at the end of the respective chapter. Learners are advised to independently
    create their own code and use the sample code as a reference. Moreover, if the
    readers skip one or more chapters, they can use the sample code from the previous
    chapter as a base.
  prefs: []
  type: TYPE_NORMAL
- en: For example, while using [Chapter 6](ch06.html "Chapter 6. Iterative Control
    Structures – Loops"), *Iterative Control Structures – Loops*, you can use the
    sample code from [Chapter 5](ch05.html "Chapter 5. Controlling Execution Flow
    – Conditionals"), *Controlling Execution Flow – Conditionals*, as a base.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Downloading the example code**'
  prefs: []
  type: TYPE_NORMAL
- en: You can download the example code files for all Packt books you have purchased
    from your account at [http://www.packtpub.com](http://www.packtpub.com). If you
    purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  prefs: []
  type: TYPE_NORMAL
