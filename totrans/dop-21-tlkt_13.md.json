["```\nexport DIGITALOCEAN_ACCESS_TOKEN=[...]\n\n```", "```\ncurl -X GET \n    -H \"Authorization: Bearer $DIGITALOCEAN_ACCESS_TOKEN\"  \n    \"https://api.digitalocean.com/v2/regions\"  \n    | jq '.'\n\n```", "```\n{\n  \"regions\": [\n    ...\n    {\n      \"name\": \"San Francisco 2\",\n      \"slug\": \"sfo2\",\n      \"sizes\": [\n\"512mb\",\n\"1gb\",\n\"2gb\"\n      ],\n      \"features\": [\n\"private_networking\",\n\"backups\",\n\"ipv6\",\n\"metadata\",\n\"storage\"\n      ],\n      \"available\": true\n},\n    ...\n  ],\n  \"links\": {},\n  \"meta\": {\n    \"total\": 12\n}\n}\n\n```", "```\nexport DIGITALOCEAN_REGION=sfo2\n\n```", "```\ncd cloud-provisioning\n\ngit pull\n\n```", "```\ndocker-machine create \\\n    --driver digitalocean  \\\n    --digitalocean-size 1gb  \\\n    --digitalocean-private-networking \\  \n    swarm-1\n\n```", "```\ncurl -X GET \\\n    -H \"Authorization: Bearer $DIGITALOCEAN_ACCESS_TOKEN\"  \\\n\"https://api.digitalocean.com/v2/droplets\"  \\\n    | jq '.'\n\n```", "```\n{\n\"droplets\": [\n    {\n          \"id\": 33906152,\n          \"name\": \"swarm-1\",\n          ...\n          \"networks\": {\n          \"v4\": [\n            {\n              \"ip_address\": \"138.68.11.80\",\n              \"netmask\": \"255.255.240.0\",\n              \"gateway\": \"138.68.0.1\",\n              \"type\": \"public\"\n           },\n          {\n              \"ip_address\": \"10.138.64.175\",\n              \"netmask\": \"255.255.0.0\",\n              \"gateway\": \"10.138.0.1\",\n              \"type\": \"private\"\n          }\n        ],\n        \"v6\": []\n      },\n      ...\n],\n\"links\": {},\n\"meta\": {\n   \"total\": 1\n  }\n}\n\n```", "```\nMANAGER_IP=$(curl -X GET  \\\n    -H \"Authorization: Bearer $DIGITALOCEAN_ACCESS_TOKEN\"  \\\n\"https://api.digitalocean.com/v2/droplets\"  \\\n    | jq -r '.droplets[]\n    | select(.name==\"swarm-1\").networks.v4[]\n    | select(.type==\"private\").ip_address')\n\n```", "```\necho $MANAGER_IP\n\n```", "```\n10.138.64.175\n\n```", "```\neval $(docker-machine env swarm-1)\n\ndocker swarm init \\\n    --advertise-addr $MANAGER_IP\n\n```", "```\ndocker node ls\n\n```", "```\nHOSTNAME STATUS  AVAILABILITY  MANAGER STATUS\nswarm-1  Ready   Active        Leader\n\n```", "```\nMANAGER_TOKEN=$(docker swarm join-token -q manager)\n\nfor i in 2 3; do\n  docker-machine create \\\n    --driver digitalocean \\\n    --digitalocean-size 1gb \\ \n    --digitalocean-private-networking \\ \n    swarm-$i\n\n  IP=$(curl -X GET \\\n    -H \"Authorization: Bearer $DIGITALOCEAN_ACCESS_TOKEN\" \\ \n\"https://api.digitalocean.com/v2/droplets\" \\ \n    | jq -r \".droplets[]\n    | select(.name==\\\"swarm-$i\\\").networks.v4[]\n    | select(.type==\\\"private\\\").ip_address\")\n\neval $(docker-machine env swarm-$i)\n\n  docker swarm join \\\n    --token $MANAGER_TOKEN \\\n    --advertise-addr $IP \\\n$MANAGER_IP:2377 \ndone\n\n```", "```\nWORKER_TOKEN=$(docker swarm join-token -q worker)\n\nfor i in 4 5; do\n docker-machine create \\\n --driver digitalocean \\\n --digitalocean-size 1gb \\\n --digitalocean-private-networking \\ \n swarm-$i\n\n IP=$(curl -X GET \\\n -H \"Authorization: Bearer $DIGITALOCEAN_ACCESS_TOKEN\" \\\n \"https://api.digitalocean.com/v2/droplets\" \\\n | jq -r \".droplets[]\n | select(.name==\\\"swarm-$i\\\").networks.v4[]\n | select(.type==\"\\private\\\").ip_address\")\n\n eval $(docker-machine env swarm-$i)\n\n docker swarm join \\\n --token $WORKER_TOKEN \\\n --advertise-addr $IP \\\n $MANAGER_IP:2377\ndone\n\n```", "```\neval $(docker-machine env swarm-1)\n\ndocker node ls\n\n```", "```\nHOSTNAME STATUS AVAILABILITY MANAGER STATUS\nswarm-5  Ready  Active\nswarm-1  Ready  Active       Leader\nswarm-4  Ready  Active\nswarm-2  Ready  Active       Reachable\nswarm-3  Ready  Active       Reachable\n\n```", "```\ndocker-machine ssh swarm-1\n\nsudo docker network create --driver overlay proxy\n\ncurl -o proxy-stack.yml \\\n    https://raw.githubusercontent.com/ \\\nvfarcic/docker-flow-proxy/master/docker-compose-stack.yml\n\nsudo docker stack deploy \\\n    -c proxy-stack.yml proxy\n\ncurl -o go-demo-stack.yml \\\n    https://raw.githubusercontent.com/ \\\nvfarcic/go-demo/master/docker-compose-stack.yml\n\nsudo docker stack deploy \\\n    -c go-demo-stack.yml go-demo\n\nexit\n\ndocker service ls\n\n```", "```\nNAME           REPLICAS IMAGE                              COMMAND\ngo-demo        3/3      vfarcic/go-demo:1.2\ngo-demo-db     1/1      mongo:3.2.10\nproxy          3/3      vfarcic/docker-flow-proxy\nswarm-listener 1/1      vfarcic/docker-flow-swarm-listener\n\n```", "```\ncurl -i $(docker-machine ip swarm-1)/demo/hello\n\n```", "```\nHTTP/1.1 200 OK\nDate: Wed, 07 Dec 2016 05:05:58 GMT\nContent-Length: 14\nContent-Type: text/plain; charset=utf-8\n\nhello, world!\n\n```", "```\nfor i in 1 2 3 4 5; do \n    docker-machine rm -f swarm-$i\ndone\n\n```", "```\ncd terraform/do\n\n```", "```\nexport DIGITALOCEAN_API_TOKEN=[...]\n\n```", "```\ncat packer-ubuntu-docker.json\n\n```", "```\n{\n   \"builders\": [{\n     ...\n   }],\n   \"provisioners\": [{\n     ...\n   }]\n}\n\n```", "```\n\"builders\": [{\n   \"type\": \"digitalocean\",\n   \"region\": \"sfo2\",\n   \"image\": \"ubuntu-16-04-x64\",\n   \"size\": \"1gb\",\n   \"private_networking\": true,\n   \"snapshot_name\": \"devops21-{{timestamp}}\"\n}]\n\n```", "```\n\"provisioners\": [{\n  \"type\": \"shell\",\n  \"inline\": [\n    \"sudo apt-get update\",\n    \"sudo apt-get install -y apt-transport-https ca-certificates nfs-common\",\n    \"sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80\\ \n--recv-keys 58118E89F3A912897C070ADBF76221572C52609D\",\n    \"echo 'deb https://apt.dockerproject.org/repo ubuntu-xenial main'\\ \n| sudo tee /etc/apt/sources.list.d/docker.list\",\n    \"sudo apt-get update\",\n    \"sudo apt-get install -y docker-engine\"\n  ]\n}]\n\n```", "```\npacker build -machine-readable \\\n    packer-ubuntu-docker.json \\\n    | tee packer-ubuntu-docker.log\n\n```", "```\n...\n1481087549,,ui,say,Build 'digitalocean' finished.\n1481087549,,ui,say,n==> Builds finished. The artifacts of successful builds are:\n1481087549,digitalocean,artifact-count,1\n1481087549,digitalocean,artifact,0,builder-id,pearkes.digitalocean\n1481087549,digitalocean,artifact,0,id,sfo2:21373017\n1481087549,digitalocean,artifact,0,string,A snapshot was created: \\\n'devops21-1481087268' (ID: 21373017) in region 'sfo2'\n1481087549,digitalocean,artifact,0,files-count,0\n1481087549,digitalocean,artifact,0,end\n1481087549,,ui,say,--> digitalocean: A snapshot was created:\\ \n'devops21-1481087268' (ID: 21373017) in region 'sfo2'\n\n```", "```\nexport DIGITALOCEAN_TOKEN=[...]\n\n```", "```\nvariable \"swarm_manager_token\" {\n   default = \"\"\n}\nvariable \"swarm_worker_token\" {\n   default = \"\"\n}\nvariable \"swarm_snapshot_id\" {\n   default = \"unknown\"\n}\nvariable \"swarm_manager_ip\" {\n   default = \"\"\n}\nvariable \"swarm_managers\" {\n   default = 3\n}\nvariable \"swarm_workers\" {\n   default = 2\n}\nvariable \"swarm_region\" {\n   default = \"sfo2\"\n}\nvariable \"swarm_instance_size\" {\n   default = \"1gb\"\n}\nvariable \"swarm_init\" {\n   default = false\n}\n\n```", "```\nresource \"digitalocean_ssh_key\" \"docker\" {\n  name = \"devops21-do\"\n  public_key = \"${file(\"devops21-do.pub\")}\"\n}\n\nresource \"digitalocean_floating_ip\" \"docker_1\" {\n  droplet_id = \"${digitalocean_droplet.swarm-manager.0.id}\"\n  region = \"${var.swarm_region}\"\n}\n\nresource \"digitalocean_floating_ip\" \"docker_2\" {\n  droplet_id = \"${digitalocean_droplet.swarm-manager.1.id}\"\n  region = \"${var.swarm_region}\"\n}\n\nresource \"digitalocean_floating_ip\" \"docker_3\" {\n  droplet_id = \"${digitalocean_droplet.swarm-manager.2.id}\"\n  region = \"${var.swarm_region}\"\n}\noutput \"floating_ip_1\" {\n  value = \"${digitalocean_floating_ip.docker_1.ip_address}\"\n}\n\noutput \"floating_ip_2\" {\n  value = \"${digitalocean_floating_ip.docker_2.ip_address}\"\n}\n\noutput \"floating_ip_3\" {\n  value = \"${digitalocean_floating_ip.docker_3.ip_address}\"\n}\n\n```", "```\nresource \"digitalocean_droplet\" \"swarm-manager\" {\n  image = \"${var.swarm_snapshot_id}\"\n  size = \"${var.swarm_instance_size}\"\n  count = \"${var.swarm_managers}\"\n  name = \"${format(\"swarm-manager-%02d\", (count.index + 1))}\"\n  region = \"${var.swarm_region}\"\n  private_networking = true\n  ssh_keys = [\n\"${digitalocean_ssh_key.docker.id}\"\n  ]\n  connection {\n    user = \"root\"\n    private_key = \"${file(\"devops21-do\")}\"\n    agent = false\n  }\n  provisioner \"remote-exec\" {\n    inline = [\n\"if ${var.swarm_init}; then docker swarm init \\\n--advertise-addr ${self.ipv4_address_private}; fi\",\n\"if ! ${var.swarm_init}; then docker swarm join \\\n--token ${var.swarm_manager_token} --advertise-addr \n${self.ipv4_address_private} ${var.swarm_manager_ip}:2377; fi\"\n    ]\n  }\n}\n\n```", "```\nresource \"digitalocean_droplet\" \"swarm-worker\" {\n  image = \"${var.swarm_snapshot_id}\"\n  size = \"${var.swarm_instance_size}\"\n  count = \"${var.swarm_workers}\"\n  name = \"${format(\"swarm-worker-%02d\", (count.index + 1))}\"\n  region = \"${var.swarm_region}\"\n  private_networking = true\n  ssh_keys = [\n   \"${digitalocean_ssh_key.docker.id}\"\n  ]\n  connection {\n    user = \"root\"\n    private_key = \"${file(\"devops21-do\")}\"\n    agent = false\n  }\n  provisioner \"remote-exec\" {\n    inline = [\n      \"docker swarm join --token ${var.swarm_worker_token} \\\n--advertise-addr ${self.ipv4_address_private} ${var.swarm_manager_ip}:\\\n2377\"\n    ]\n  }\n}\n\n```", "```\noutput \"swarm_manager_1_public_ip\" {\n  value = \"${digitalocean_droplet.swarm-manager.0.ipv4_address}\"\n}\n\noutput \"swarm_manager_1_private_ip\" {\n  value = \"${digitalocean_droplet.swarm-manager.0.ipv4_address_private}\"\n}\n\noutput \"swarm_manager_2_public_ip\" {\n  value = \"${digitalocean_droplet.swarm-manager.1.ipv4_address}\"\n}\n\noutput \"swarm_manager_2_private_ip\" {\n  value = \"${digitalocean_droplet.swarm-manager.1.ipv4_address_private}\"\n}\n\noutput \"swarm_manager_3_public_ip\" {\n  value = \"${digitalocean_droplet.swarm-manager.2.ipv4_address}\"\n}\n\noutput \"swarm_manager_3_private_ip\" {\n  value = \"${digitalocean_droplet.swarm-manager.2.ipv4_address_private}\"\n}\n\n```", "```\ncat packer-ubuntu-docker.log\n\n```", "```\n1481087549,digitalocean,artifact,0,id,sfo2:21373017\n\n```", "```\nexport TF_VAR_swarm_snapshot_id=$( \\\n    grep 'artifact,0,id' \\\n    packer-ubuntu-docker.log \\\n    | cut -d: -f2)\n\n```", "```\necho $TF_VAR_swarm_snapshot_id\n\n```", "```\n21373017\n\n```", "```\nssh-keygen -t rsa\n\n```", "```\nGenerating public/private rsa key pair.\nEnter file in which to save the key (/Users/vfarcic/.ssh/id_rsa): devops21-do\nEnter passphrase (empty for no passphrase):\nEnter same passphrase again:\nYour identification has been saved in devops21-do.\nYour public key has been saved in devops21-do.pub.\nThe key fingerprint is:\nSHA256:a9BqjLkcC9eMnuKH+TZPE6E9S0w+cDQD4HTWEY9CuVk \\\nvfarcic@Viktors-MacBook-Pro-2.local\nThe key's randomart image is:\n+---[RSA 2048]----+\n|  o.=+*o         |\n| o +..E=         |\n|  . o+= .        |\n|    oX o         |\n|    . X S        |\n|     O B .       |\n|  .o* X o        |\n|  +=+B o         |\n| ..=Bo.          |\n+----[SHA256]-----+\n\n```", "```\nterraform plan \\\n    -target digitalocean_droplet.swarm-manager \\ \n    -target digitalocean_droplet.swarm-worker \\\n\n```", "```\n...\n+ digitalocean_droplet.swarm-manager.0\n...\n+ digitalocean_droplet.swarm-manager.1\n...\n+ digitalocean_droplet.swarm-manager.2\n...\n+ digitalocean_droplet.swarm-worker.0\n...\n+ digitalocean_droplet.swarm-worker.1\n...\n+ digitalocean_ssh_key.docker\n...\nPlan: 6 to add, 0 to change, 0 to destroy.\n\n```", "```\nterraform graph\n\n```", "```\ndigraph {\n    compound = \"true\"\n    newrank = \"true\"\n    subgraph \"root\" {\n\"[root] digitalocean_droplet.swarm-manager\" [label = \\\n\"digitalocean_droplet.swarm-manager\", shape = \"box\"]\n\"[root] digitalocean_droplet.swarm-worker\" [label = \\\n\"digitalocean_droplet.swarm-worker\", shape = \"box\"]\n\"[root] digitalocean_floating_ip.docker_1\" [label = \\\n\"digitalocean_floating_ip.docker_1\", shape = \"box\"]\n\"[root] digitalocean_floating_ip.docker_2\" [label = \\\n\"digitalocean_floating_ip.docker_2\", shape = \"box\"]\n\"[root] digitalocean_floating_ip.docker_3\" [label = \\\n\"digitalocean_floating_ip.docker_3\", shape = \"box\"]\n\"[root] digitalocean_ssh_key.docker\" [label = \\\n\"digitalocean_ssh_key.docker\", shape = \"box\"]\n\"[root] provider.digitalocean\" [label = \\\n\"provider.digitalocean\", shape = \"diamond\"]\n\"[root] digitalocean_droplet.swarm-manager\" \\\n-> \"[root] digitalocean_ssh_key.docker\"\n\"[root] digitalocean_droplet.swarm-manager\" \\\n-> \"[root] provider.digitalocean\"\n\"[root] digitalocean_droplet.swarm-worker\" \\\n-> \"[root] digitalocean_ssh_key.docker\"\n\"[root] digitalocean_droplet.swarm-worker\" \\\n-> \"[root] provider.digitalocean\"\n\"[root] digitalocean_floating_ip.docker_1\" \n-> \"[root] digitalocean_droplet.swarm-manager\"\n\"[root] digitalocean_floating_ip.docker_1\" \\\n-> \"[root] provider.digitalocean\"\n\"[root] digitalocean_floating_ip.docker_2\" \\\n-> \"[root] digitalocean_droplet.swarm-manager\"\n\"[root] digitalocean_floating_ip.docker_2\" \\\n-> \"[root] provider.digitalocean\"\n\"[root] digitalocean_floating_ip.docker_3\" \\\n-> \"[root] digitalocean_droplet.swarm-manager\"\n\"[root] digitalocean_floating_ip.docker_3\" \\\n-> \"[root] provider.digitalocean\"\n\"[root] digitalocean_ssh_key.docker\" \\\n-> \"[root] provider.digitalocean\"\n    }\n}\n\n```", "```\nterraform graph | dot -Tpng > graph.png\n\n```", "```\nterraform plan \\\n    -target digitalocean_droplet.swarm-manager \\\n    -var swarm_init=true \\\n    -var swarm_managers=1\n\n```", "```\n+ digitalocean_droplet.swarm-manager\n...\n+ digitalocean_ssh_key.docker\n...\nPlan: 2 to add, 0 to change, 0 to destroy.\n\n```", "```\nterraform apply \\\n    -target digitalocean_droplet.swarm-manager \\\n    -var swarm_init=true \\\n    -var swarm_managers=1\n\n```", "```\nApply complete! Resources: 2 added, 0 changed, 0 destroyed.\n\n...\n\nOutputs:\n\nswarm_manager_1_private_ip = 10.138.255.140\nswarm_manager_1_public_ip = 138.68.57.39\n\n```", "```\nterraform output swarm_manager_1_public_ip\n\n```", "```\n138.68.57.39\n\n```", "```\nssh -i devops21-do \\\n    root@$(terraform output \\\n    swarm_manager_1_public_ip) \\\n    docker node ls\n\n```", "```\nHOSTNAME          STATUS  AVAILABILITY  MANAGER STATUS\nswarm-manager-01  Ready   Active        Leader\n\n```", "```\nexport TF_VAR_swarm_manager_token=$(ssh \\\n    -i devops21-do \\\n    root@$(terraform output \\\n    swarm_manager_1_public_ip) \\\n    docker swarm join-token -q manager)\n\nexport TF_VAR_swarm_worker_token=$(ssh \\\n    -i devops21-do \\\n    root@$(terraform output \\\n    swarm_manager_1_public_ip) \\\n    docker swarm join-token -q worker)\n\n```", "```\nexport TF_VAR_swarm_manager_ip=$(terraform \\\n    output swarm_manager_1_private_ip)\n\n```", "```\nterraform plan \\\n    -target digitalocean_droplet.swarm-manager \\\n    -target digitalocean_droplet.swarm-worker\n\n```", "```\n...\n+ digitalocean_droplet.swarm-manager.1\n...\n+ digitalocean_droplet.swarm-manager.2\n...\n+ digitalocean_droplet.swarm-worker.0\n...\n+ digitalocean_droplet.swarm-worker.1\n...\nPlan: 4 to add, 0 to change, 0 to destroy.\n\n```", "```\nterraform apply \\\n    -target digitalocean_droplet.swarm-manager \\\n    -target digitalocean_droplet.swarm-worker\n\n```", "```\n...\nApply complete! Resources: 4 added, 0 changed, 0 destroyed.\n\n...\n\nOutputs:\n\nswarm_manager_1_private_ip = 10.138.255.140\nswarm_manager_1_public_ip = 138.68.57.39\nswarm_manager_2_private_ip = 10.138.224.161\nswarm_manager_2_public_ip = 138.68.17.88\nswarm_manager_3_private_ip = 10.138.224.202\nswarm_manager_3_public_ip = 138.68.29.23\n\n```", "```\nssh -i devops21-do \\\n    root@$(terraform \\\n    output swarm_manager_1_public_ip)\n\ndocker node ls\n\n```", "```\nHOSTNAME         STATUS AVAILABILITY MANAGER STATUS\nswarm-manager-02 Ready  Active       Reachable\nswarm-manager-01 Ready  Active       Leader\nswarm-worker-02  Ready  Active\nswarm-manager-03 Ready  Active       Reachable\nswarm-worker-01  Ready  Active\n\n```", "```\nsudo docker network create --driver overlay proxy\n\ncurl -o proxy-stack.yml \\\n    https://raw.githubusercontent.com/\\\nvfarcic/docker-flow-proxy/master/docker-compose-stack.yml\n\nsudo docker stack deploy \\\n    -c proxy-stack.yml proxy\n\ncurl -o go-demo-stack.yml \\\n    https://raw.githubusercontent.com/\\\nvfarcic/go-demo/master/docker-compose-stack.yml\n\nsudo docker stack deploy \\\n    -c go-demo-stack.yml go-demo\n\n```", "```\ndocker service ls\n\n```", "```\nNAME           REPLICAS IMAGE                              COMMAND\ngo-demo-db     1/1      mongo:3.2.10\nproxy          3/3      vfarcic/docker-flow-proxy\ngo-demo        3/3      vfarcic/go-demo:1.2\nswarm-listener 1/1      vfarcic/docker-flow-swarm-listener\n\n```", "```\ncurl -i localhost/demo/hello\n\n```", "```\nHTTP/1.1 200 OK\nDate: Wed, 07 Dec 2016 06:21:01 GMT\nContent-Length: 14\nContent-Type: text/plain; charset=utf-8\n\nhello, world!\n\n```", "```\nexit\n\ncurl -i $(terraform output \\\n    swarm_manager_1_public_ip)/demo/hello\n\n```", "```\nHTTP/1.1 200 OK\nDate: Wed, 07 Dec 2016 06:21:33 GMT\nContent-Length: 14\nContent-Type: text/plain; charset=utf-8\n\nhello, world!\n\n```", "```\nterraform plan\n\n```", "```\n...\n+ digitalocean_floating_ip.docker_1\n...\n+ digitalocean_floating_ip.docker_2\n...\n+ digitalocean_floating_ip.docker_3\n...\nPlan: 3 to add, 0 to change, 0 to destroy.\n\n```", "```\nterraform apply\n\n```", "```\n...\nApply complete! Resources: 3 added, 0 changed, 0 destroyed.\n\n...\n\nOutputs:\n\nfloating_ip_1 = 138.197.232.121\nfloating_ip_2 = 138.197.232.119\nfloating_ip_3 = 138.197.232.120\nswarm_manager_1_private_ip = 10.138.255.140\nswarm_manager_1_public_ip = 138.68.57.39\nswarm_manager_2_private_ip = 10.138.224.161\nswarm_manager_2_public_ip = 138.68.17.88\nswarm_manager_3_private_ip = 10.138.224.202\nswarm_manager_3_public_ip = 138.68.29.23\n\n```", "```\ncurl -i $(terraform output \\\n    floating_ip_1)/demo/hello\n\n```", "```\nHTTP/1.1 200 OK\nDate: Wed, 07 Dec 2016 06:23:27 GMT\nContent-Length: 14\nContent-Type: text/plain; charset=utf-8\n\nhello, world!\n\n```", "```\nterraform state show \"digitalocean_droplet.swarm-worker[1]\"\n\n```", "```\nid                   = 33909722\ndisk                 = 30\nimage                = 21373017\nipv4_address         = 138.68.57.13\nipv4_address_private = 10.138.224.209\nlocked               = false\nname                 = swarm-worker-02\nprivate_networking   = true\nregion               = sfo2\nresize_disk          = true\nsize                 = 1gb\nssh_keys.#           = 1\nssh_keys.0           = 5080274\nstatus               = active\ntags.#               = 0\nvcpus                = 1\n\n```", "```\ncurl -i -X DELETE \\\n    -H \"Authorization: Bearer $DIGITALOCEAN_TOKEN\" \\\n\"https://api.digitalocean.com/v2/droplets/33909722\"\n\n```", "```\nHTTP/1.1 204 No Content\n...\n\n```", "```\nterraform plan\n\n```", "```\n...\n+ digitalocean_droplet.swarm-worker.1\n...\nPlan: 1 to add, 0 to change, 0 to destroy.\n\n```", "```\nterraform apply\n\n```", "```\n...\nApply complete! Resources: 1 added, 0 changed, 0 destroyed.\n\n...\n\nOutputs:\n\nfloating_ip_1 = 138.197.232.121\nfloating_ip_2 = 138.197.232.119\nfloating_ip_3 = 138.197.232.120\nswarm_manager_1_private_ip = 10.138.255.140\nswarm_manager_1_public_ip = 138.68.57.39\nswarm_manager_2_private_ip = 10.138.224.161\nswarm_manager_2_public_ip = 138.68.17.88\nswarm_manager_3_private_ip = 10.138.224.202\nswarm_manager_3_public_ip = 138.68.29.23\n\n```", "```\nterraform destroy -force\n\n```", "```\n...\nDestroy complete! Resources: 9 destroyed.\n\n```", "```\ncurl -X GET \\\n    -H \"Authorization: Bearer $DIGITALOCEAN_ACCESS_TOKEN\" \\\n\"https://api.digitalocean.com/v2/snapshots?resource_type=droplet\" \\\n    | jq '.'\n\n```", "```\n{\n  \"snapshots\": [\n    {\n      \"id\": \"21373017\",\n      \"name\": \"devops21-1481087268\",\n      \"regions\": [\n\"sfo2\"\n      ],\n      \"created_at\": \"2016-12-07T05:11:05Z\",\n      \"resource_id\": \"33907398\",\n      \"resource_type\": \"droplet\",\n      \"min_disk_size\": 30,\n      \"size_gigabytes\": 1.32\n}\n  ],\n  \"links\": {},\n  \"meta\": {\n    \"total\": 1\n}\n}\n\n```", "```\nSNAPSHOT_ID=$(curl -X GET \\\n    -H \"Authorization: Bearer $DIGITALOCEAN_ACCESS_TOKEN\" \\\n\"https://api.digitalocean.com/v2/snapshots?resource_type=droplet\" \\\n    | jq -r '.snapshots[].id')\n\n```", "```\ncurl -X DELETE \\\n    -H \"Authorization: Bearer $DIGITALOCEAN_ACCESS_TOKEN\" \\\n\"https://api.digitalocean.com/v2/snapshots/$SNAPSHOT_ID\"\n\n```", "```\nHTTP/1.1 204 No Content\n...\n\n```"]