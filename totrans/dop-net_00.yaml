- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: The title of this book is "DevOps For Networking". DevOps, as you are probably
    well-aware, is an abbreviated amalgamation of "Development" and "Operations",
    so why does it have any significance to networking? It is true that there is no
    "Net" in the DevOps name, though it is fair to say that the remit of DevOps has
    extended well beyond its initial goal.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的标题是《面向网络的DevOps》。你可能已经非常了解，DevOps是“开发（Development）”和“运维（Operations）”的缩写，那么它为什么与网络有关系呢？的确，DevOps的名称中并没有“Net”，尽管可以说，DevOps的职责范围已经远远超出了最初的目标。
- en: The initial DevOps movement sought to remove the "chucking it over the fence"
    and reactive mentality that existed between development and operations teams,
    but DevOps can be efficiently used to promote collaboration between all teams
    in IT, not just Development and Operations staff.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 最初的DevOps运动旨在消除开发与运营团队之间的“把问题扔过墙”的被动心态，但DevOps可以有效地用于促进IT所有团队之间的协作，而不仅仅是开发和运营人员。
- en: DevOps, as a concept, initially aimed to solve the scenario where developers
    would develop code, make significant architectural changes, and not consider the
    Operations team that needed to deploy the code to production. So when the time
    came for the operations team to deploy the developers' code changes to production,
    this would result in a broken deployment, meaning crucial software fixes or new
    products would not reach customers as planned, and the deployment process would
    typically take days or weeks to fix.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps作为一个概念，最初旨在解决开发人员编写代码、做出重大架构更改时，不考虑需要将代码部署到生产环境的运营团队的情况。所以，当运营团队准备将开发人员的代码变更部署到生产环境时，这通常会导致部署失败，意味着关键的软件修复或新产品无法按计划到达客户，部署过程通常需要几天甚至几周才能修复。
- en: This led to frustration to all the teams involved, as developers would have
    to stop coding new features and instead would have to help operations staff fix
    the deployment process. Operations teams would also be frustrated, as often they
    would not have been told that infrastructure changes were required to deploy the
    new release to production. As a result, the operations team did not have the idea
    to adequately prepare the production environment to support the architectural
    changes.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 这导致了所有相关团队的挫败感，因为开发人员不得不停止编写新功能，而是要帮助运营人员修复部署过程。运营团队也会感到沮丧，因为他们通常没有被告知部署新版本到生产环境时需要对基础设施做出更改。因此，运营团队没有准备好生产环境，以支持架构变更。
- en: This common IT scenario highlights the broken process and operational model
    that would happen continually and cause friction between development and operations
    teams.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 这一常见的IT场景突出了一个断裂的流程和操作模型，这种情况不断发生，并在开发和运营团队之间引发摩擦。
- en: '"DevOps" was an initiative setup to foster an environment of collaboration
    and communication between these previously conflicting teams. It promotes teams
    to speak daily, making each other aware of changes and consequently preventing
    avoidable situations from happening. So, it just so happens that development and
    operations staff were the first set of silos that DevOps aimed to solve. Consequently,
    it branded DevOps as a way to unify the teams to work, as one consolidated fluid
    function, but it could easily have been called something else.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: “DevOps”是一个旨在促进之前有冲突的团队之间的合作与沟通的倡议。它鼓励团队每天进行沟通，彼此了解变更，从而避免可避免的情况发生。因此，恰恰是开发和运营人员是DevOps最早试图解决的孤岛。结果，DevOps被标榜为一种将团队统一为一个流畅的整体功能的方式，但它本来也可以叫别的名字。
- en: DevOps aims to create better working relationships between teams and a happier
    working environment, as frankly nobody enjoys conflict or firefighting preventable
    issues on a daily basis. It also aims to share knowledge between teams to prevent
    the development teams being viewed as "ignorant to infrastructure" and operations
    teams to be "blockers to changes" and "slowing down devs". These are the common
    misconceptions that teams working in silos have of one another when they don't
    take the time to understand each other's goals.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps旨在改善团队之间的工作关系，并创造一个更愉快的工作环境，因为坦白说，没有人喜欢每天处理冲突或修复可以避免的问题。它还旨在促进团队之间的知识共享，以防止开发团队被视为“对基础设施一无所知”，而运营团队则被视为“变更的障碍”和“拖慢开发进度”。这些是各个部门孤立工作时常见的误解，因为他们没有花时间去理解彼此的目标。
- en: DevOps strives to build an office environment where teams appreciate other teams
    and their aims, and they are respectful of their common goals. DevOps is undoubtedly
    one most talked about topics in the IT industry today. It is not a coincidence
    that its popularity has risen with the emergence of agile software development,
    as an alternative to using the more traditional waterfall approach.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps努力构建一个团队之间彼此欣赏、尊重共同目标的办公环境。DevOps无疑是当今IT行业讨论最多的话题之一。它的流行与敏捷软件开发的兴起并非偶然，因为敏捷软件开发是作为瀑布式方法的替代方案出现的。
- en: Waterfall development and the "V-Model" encompass the separate phases of analysis,
    design, implementation (coding), and testing. These phases are split up traditionally
    into different isolated teams, with formalized project hand-off dates that are
    set in stone.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 瀑布式开发和“V模型”包括了分析、设计、实现（编码）和测试的不同阶段。这些阶段传统上被划分为不同的孤立团队，并设有正式的项目交接日期，这些日期是固定不变的。
- en: Agile was born out of the realization that in the fast-paced software industry,
    long running projects were suboptimal and not the best way of delivering real
    value to customers. As a result, agile has moved projects to shorter iteration
    cycles that incorporated analysis, design, implementation, and testing into two-week
    cycles (sprints) and aimed at using a prototyping approach instead.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 敏捷诞生于意识到在快节奏的软件行业中，长期运行的项目并不是最佳选择，不能为客户提供真正的价值。因此，敏捷推动项目进入更短的迭代周期，将分析、设计、实现和测试纳入两周一轮的周期（冲刺），并采用原型化方法。
- en: The prototyping approach uses the notion of incremental development, which has
    allowed companies to gather feedback on products earlier in the release cycle,
    rather than utilizing a big bang approach that delivered the full solution in
    one big chunk at the end of the implementation phase.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 原型化方法采用增量开发的概念，使得公司能够在发布周期的早期收集产品反馈，而不是使用“大爆炸”方法，在实施阶段结束时一次性交付完整解决方案。
- en: Delivering projects in a waterfall fashion at the end of the waterfall implementation
    stage ran the risk of delivering products that customers did not want or where
    developers had misinterpreted requirements. These issues were typically only discovered
    in the final test phase when the project was ready to be taken to market. This
    often resulted in projects being deemed a failure or resulting in huge delays,
    whereas costly rework and change requests could be actioned.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在瀑布式实施阶段结束时以瀑布方式交付项目，存在交付客户不需要的产品或开发人员误解需求的风险。这些问题通常仅在最终测试阶段被发现，此时项目已经准备好推向市场。这常常导致项目被认为是失败，或者出现巨大的延迟，而此时可以进行昂贵的返工和变更请求。
- en: Agile software development for the best part has fostered the need to collapse
    down those team silos that were typically associated with waterfall software development,
    and this strengthened the need for daily collaboration.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 敏捷软件开发大部分时间推动了团队之间的孤岛现象的打破，这种孤岛现象通常与瀑布式软件开发相关，并且加强了每天进行协作的需求。
- en: With the introduction of agile software development, it also has changed the
    way software testing is carried out too, with the same DevOps principles also
    being applied to testing functions.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 随着敏捷软件开发的引入，软件测试的方式也发生了变化，DevOps的原则同样被应用于测试功能。
- en: Quality assurance test teams can no longer afford to be reactive either, much
    like operations teams before them. So, this promoted the need for test teams to
    work more efficiently and not delay products reaching market. This, however, could
    not be done at the expense of the product, so they needed to find a way to make
    sure applications are tested adequately and pass all quality assurance checks
    while working in a smarter way.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 质量保证测试团队再也不能只是被动应对，就像之前的运营团队一样。因此，这促使测试团队需要更高效地工作，不再拖延产品进入市场的时间。然而，这不能以牺牲产品质量为代价，因此他们需要找到一种方式，确保应用程序得到充分测试，并通过所有质量保证检查，同时以更智能的方式工作。
- en: It was readily accepted that quality assurance test teams can no longer operate
    in silos separate from development teams; instead, agile software development
    has promoted test cases being written in parallel to the software development,
    so they are not a separate activity. This is in stark contrast to code being deployed
    into a test environment and left to a team of testers to execute manual tests
    or run a set of test packs where they deal with issues reactively.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 已广泛接受质量保证测试团队不能再与开发团队分开孤立运作；相反，敏捷软件开发推动了测试用例与软件开发并行编写，因此它们不再是一个独立的活动。这与将代码部署到测试环境中，并交给测试团队执行手动测试或运行一组测试包来被动处理问题的做法截然不同。
- en: Agile has promoted developers and quality assurance testers to instead work
    together in scrum teams on a daily basis to test software before it is packaged
    for deployment, with those same tests then being maintained and kept up to date
    and used to seed the regression test packs.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 敏捷方法促进了开发人员和质量保证测试人员每天在敏捷团队中共同工作，在软件打包部署之前进行测试，之后这些相同的测试将得到维护、更新，并用于生成回归测试包。
- en: This has been used to mitigate the friction caused by developers checking in
    code changes that break quality assurance test team's regression packs. With siloed
    test teams, a common scenario that would often cause friction is be that a graphical
    user interface (GUI) would suddenly be changed by a developer, resulting in a
    portion of regression tests breaking. This change would be done without notifying
    the test team. The tests would be failing because they were written for an old
    GUI and were suddenly outdated, as opposed to breaking because developers had
    actually introduced a software failure or a bug.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这已被用来减轻由于开发人员提交的代码更改破坏了质量保证测试团队的回归测试包所引起的摩擦。在独立的测试团队中，一个常见的摩擦场景是开发人员突然更改了图形用户界面（GUI），导致部分回归测试失败。这个更改没有通知测试团队。测试失败是因为它们是为旧版
    GUI 编写的，而突然变得过时，而不是因为开发人员实际上引入了软件故障或 bug。
- en: This reactive approach to testing did not build confidence in the validity of
    the test failures reported by automated test packs as they are not always conclusively
    down to a software failure, and this introduced unnecessary delays due to suboptimal
    IT structure.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这种反应式的测试方法没有建立对自动化测试包报告的测试失败有效性的信心，因为这些失败并不总是完全由于软件故障，而且由于 IT 结构的次优，导致了不必要的延迟。
- en: Instead if the communication between development and test teams had been better,
    using the principles promoted by DevOps, then these delays and suboptimal ways
    of working can be avoided.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 如果开发和测试团队之间的沟通更好，运用 DevOps 提倡的原则，那么这些延迟和次优的工作方式是可以避免的。
- en: More recently, we have seen the emergence of DevSecOps that have looked at integrating
    security and compliance into the software delivery process, as opposed to being
    bolted on manual actions and separate reactive initiatives. DevSecOps has looked
    at using DevOps and agile philosophies and embraced the idea of embedding security
    engineers in scrum teams to make sure that security requirements are met at the
    point of inception.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 最近，我们看到了 DevSecOps 的兴起，它通过将安全性和合规性集成到软件交付过程中，取代了手动操作和分离的反应性举措。DevSecOps 借助 DevOps
    和敏捷哲学，并采用了将安全工程师嵌入到敏捷团队中的想法，以确保在项目开始时就满足安全要求。
- en: This means that security and compliance can be integrated as automated phases
    in Continuous Delivery pipelines, to run security compliance checks on every software
    release, and not slow down the software development lifecycle for developers and
    generate the necessary feedback loops.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着安全性和合规性可以作为自动化阶段集成到持续交付管道中，在每次软件发布时运行安全合规检查，并且不会延缓开发人员的软件开发生命周期，同时生成必要的反馈循环。
- en: So networking teams can learn from DevOps methodologies too much like development,
    operations, quality assurance, and security teams. These teams have utilized agile
    processes to improve their interaction with the software development process and
    benefit from using feedback loops.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，网络团队也可以从 DevOps 方法论中学习，就像开发、运维、质量保证和安全团队一样。这些团队已经利用敏捷流程来改善与软件开发过程的互动，并从使用反馈循环中受益。
- en: How many times have network engineers had no choice but to delay a software
    release, as network changes need to be implemented and have been done so inefficiently
    using ticket-based systems that are not aligned with the processes other departments
    use? How many times have manually implemented network changes broken production
    services? This isn't a criticism of network teams or the ability of network engineers;
    it's the realization that the operational model needs to change and they can.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 网络工程师有多少次不得不推迟软件发布，因为需要实施网络变更，而这些变更通过与其他部门流程不对接的票务系统低效地进行？网络工程师手动实施的网络变更又有多少次导致生产服务中断？这并不是对网络团队或网络工程师能力的批评，而是认识到运营模型需要改变，并且他们有能力做到这一点。
- en: What this book covers
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书内容概览
- en: This book will look at how networking changes can be made more efficient so
    as not to slow down the software development lifecycle. It will help outline strategies
    network engineers can adopt to automate network operations. We will focus on setting
    up network teams to succeed in an automation-driven environment, enabling the
    teams to work in a more collaborative fashion, and improve efficiency.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 本书将探讨如何提高网络变更的效率，以免影响软件开发生命周期。它将帮助概述网络工程师可以采用的自动化网络操作策略。我们将重点讨论如何建立成功的网络团队，使其能够在一个自动化驱动的环境中协作工作，从而提高效率。
- en: It will also show that network teams need to build new skills and learn configuration
    management tools such as Ansible to help them achieve this goal. The book will
    show the advantages that these tools bring, using the network modules they provide,
    and that they will help make automation easy and act as a self-starter guide.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 本书还将展示网络团队需要建立新的技能，学习如 Ansible 这样的配置管理工具，以帮助他们实现这一目标。书中将展示这些工具带来的优势，使用它们提供的网络模块，并将帮助简化自动化过程，成为一个自我启动的指南。
- en: We will focus on some of the cultural challenges that need to be overcome to
    influence and implement automation processes for network functions and convince
    network teams to make the most of networking APIs that are now provided by vendors
    can be trusted.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将重点讨论需要克服的一些文化挑战，以便影响和实施网络功能的自动化流程，并说服网络团队充分利用目前供应商提供的可信网络 API。
- en: The book will discuss public and private clouds such as AWS and OpenStack, and
    ways they are used to provide networking to users. It will also discuss the emergence
    of software-defined networking solutions, such as Juniper Contrail, VMWare NSX,
    CISCO ACI, and focus on the Nokia Nuage VSP solution, which aims to make networking
    functions a self-service commodity.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 本书将讨论公有云和私有云，如 AWS 和 OpenStack，以及它们如何为用户提供网络服务。还将讨论软件定义网络解决方案的出现，如 Juniper Contrail、VMWare
    NSX、CISCO ACI，并重点介绍诺基亚 Nuage VSP 解决方案，旨在将网络功能变成自服务商品。
- en: The book will also highlight how continuous integration and delivery processes
    and deployment pipelines can be applied to govern network changes. It will also
    show ways that unit testing can be applied to automated network changes to integrate
    them with the software delivery lifecycle.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 本书还将重点讲解如何将持续集成和交付流程以及部署管道应用于网络变更的管理。还将展示如何将单元测试应用于自动化网络变更，以便将其与软件交付生命周期集成。
- en: 'A detailed chapter overview for the book is detailed below:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的详细章节概述如下：
- en: '[Chapter 1](ch01.html "Chapter 1. The Impact of Cloud on Networking"), *The
    Impact of Cloud on Networking*, will discuss ways in which the emergence of AWS
    for public cloud and OpenStack for private cloud have changed the way developers
    want to consume networking. It will look at some of the networking services AWS
    and OpenStack provide out of the box and look at some of the networking features
    they provide. It will show examples of how these cloud platforms have made networking
    a commodity much like infrastructure.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '[第1章](ch01.html "第1章. 云对网络的影响")，*云对网络的影响*，将讨论公有云的 AWS 和私有云的 OpenStack 的出现如何改变了开发者对网络的需求。它将探讨
    AWS 和 OpenStack 提供的一些即插即用的网络服务，并展示它们提供的部分网络功能。书中将举例说明这些云平台如何将网络变成像基础设施一样的商品。'
- en: '[Chapter 2](ch02.html "Chapter 2. The Emergence of Software-defined Networking"),
    *The Emergence of Software-defined Networking*, will discuss how software-defined
    networking has emerged. It will look at the methodology and focus on some of the
    scaling benefits and features this provides over and above the out-of-the-box
    experience from AWS and OpenStack. It will illustrate how one of the market-leading
    SDN solutions, Nuage, applies these concepts and principles and discusses other
    SDN solutions on the market.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](ch03.html "Chapter 3. Bringing DevOps to Network Operations"),
    *Bringing DevOps to Network Operations*, will detail the pros and cons of a top-down
    and bottom-up DevOps initiatives with regards to networking. It will give readers
    food for thought on some of the strategies that have been a success and which
    ones have typically failed. This chapter will help CTOs, senior managers, and
    engineers who are trying to initiate a DevOps model in their company''s network
    department and outline some of the different strategies they could use to achieve
    the cultural changes they desire.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](ch04.html "Chapter 4. Configuring Network Devices Using Ansible"),
    *Configuring Network Devices Using Ansible*, will outline the benefits of using
    configuration management tools to install and push configuration to network devices
    and discuss some of the open source network modules available to do this at the
    moment and how they work. It will give some examples of process flows that could
    be adopted to maintain device configuration.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](ch05.html "Chapter 5. Orchestrating Load Balancers Using Ansible"),
    *Orchestrating Load Balancers Using Ansible*, will describe the benefits of using
    Ansible to orchestrate load balancers and the approaches to roll new software
    releases into service without the need for downtime or manual intervention. It
    will give some examples of some process flows that could be adopted to allow orchestration
    of both immutable and static servers looking at the different load balancer technologies
    available.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](ch06.html "Chapter 6. Orchestrating SDN Controllers Using Ansible"),
    *Orchestrating SDN Controllers Using Ansible*, will outline the benefits of using
    Ansible to orchestrate SDN controllers. It will outline the benefits of software-defined
    networking and why it is paramount to automate the network functions that an SDN
    controller exposes. This includes setting ACL rules dynamically, which will allow
    network engineers to provide a Network as a Service (NaaS) allowing developers
    to self-service their networking needs. It will discuss deployment strategies
    such as blue green networks as well as exploring some of the process flows that
    could be used to implement a NaaS approach.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](ch07.html "Chapter 7. Using Continuous Integration Builds for Network
    Configuration"), *Using Continuous Integration Builds for Network Configuration*,
    will discuss moving to a model where network configuration is stored in source
    control management systems, so it is easily audited and versioned and changes
    can be rolled back.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '[第7章](ch07.html "第7章 使用持续集成构建进行网络配置")，*使用持续集成构建进行网络配置*，将讨论如何转向一种将网络配置存储在源代码管理系统中的模式，以便于审计、版本控制和回滚变更。'
- en: It will look at workflows that can be used to set up network configuration CI
    builds using tools such as Jenkins and Git.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 它将探讨使用如Jenkins和Git等工具设置网络配置CI构建的工作流。
- en: '[Chapter 8](ch08.html "Chapter 8. Testing Network Changes"), *Testing Network
    Changes*, will outline the importance of using test environments to test network
    changes before applying them in production. It will explore some of the open source
    tooling available and walk through some of the test strategies that can be applied
    to make sure that network changes are thoroughly tested before applying them to
    production.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '[第8章](ch08.html "第8章 测试网络变更")，*测试网络变更*，将概述在将网络变更应用到生产环境之前，使用测试环境进行测试的重要性。它将探讨一些可用的开源工具，并详细介绍一些可以应用的测试策略，确保网络变更在应用到生产环境之前经过充分测试。'
- en: '[Chapter 9](ch09.html "Chapter 9. Using Continuous Delivery Pipelines to Deploy
    Network Changes"), *Using Continuous Delivery Pipelines to Deploy Network Changes*,
    will show readers how to use continuous integration and Continuous Delivery pipelines
    to deliver network changes to production and put them through associated test
    environments. It will give some examples of some process flows that could be adopted
    to deliver network changes to production and how they can easily sit alongside
    infrastructure and code changes in deployment pipelines.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '[第9章](ch09.html "第9章 使用持续交付流水线部署网络变更")，*使用持续交付流水线部署网络变更*，将展示读者如何使用持续集成和持续交付流水线将网络变更交付到生产环境，并通过相关测试环境进行验证。它将给出一些可以采用的流程示例，说明如何将网络变更轻松地与基础设施和代码变更一起放入部署流水线。'
- en: '[Chapter 10](ch10.html "Chapter 10. The Impact of Containers on Networking"),
    *The Impact of Containers on Networking*, dedicated container technologies such
    as Docker and container orchestration engines such as Kubernetes and Swarm are
    becoming more and more popular with companies that are moving to microservice
    architectures. As a result, this has changed networking requirements. This chapter
    will look at how containers operate and the impact they have had on networking.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '[第10章](ch10.html "第10章 容器对网络的影响")，*容器对网络的影响*，专用容器技术，如Docker，以及容器编排引擎，如Kubernetes和Swarm，越来越受到迁移到微服务架构的公司的青睐。因此，这改变了网络需求。本章将探讨容器的运作方式及其对网络的影响。'
- en: '[Chapter 11](ch11.html "Chapter 11. Securing the Network"), *Securing the Network*,
    will look at how this approach makes a security engineer''s job of auditing the
    network easier. It will look at the possible attack vectors in a software-defined
    network and ways that security checks can be integrated into a DevOps model.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '[第11章](ch11.html "第11章 网络安全")，*网络安全*，将探讨这种方法如何使安全工程师在审计网络时的工作变得更加轻松。它将分析软件定义网络中的可能攻击路径，以及如何将安全检查集成到DevOps模型中。'
- en: What you need for this book
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书所需的内容
- en: This book assumes a medium level on networking knowledge, a basic level of Linux
    knowledge, a basic knowledge of cloud computing technologies, and a broad knowledge
    of IT. It is focusing primarily on particular process workflows that can be implemented
    rather than base technologies, so the ideas and content can be applied to any
    organization, no matter the technology that is used.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 本书假设读者具备中级的网络知识、基础的Linux知识、基础的云计算技术知识以及广泛的IT知识。重点主要放在可以实施的特定流程工作流上，而非基础技术，因此这些思想和内容可以应用于任何组织，无论使用何种技术。
- en: 'However, that being said, it could be beneficial to readers to access the following
    technologies when digesting some of the chapters'' content:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，尽管如此，在消化某些章节内容时，读者访问以下技术可能会有所帮助：
- en: AWS [https://aws.amazon.com/free/](https://aws.amazon.com/free/)
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AWS [https://aws.amazon.com/free/](https://aws.amazon.com/free/)
- en: OpenStack [http://trystack.org/](http://trystack.org/)
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenStack [http://trystack.org/](http://trystack.org/)
- en: Nuage VSP [http://nuagex.io/](http://nuagex.io/)
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nuage VSP [http://nuagex.io/](http://nuagex.io/)
- en: Who this book is for
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书适合的人群
- en: The target audience for this book is network engineers who want to automate
    the manual and repetitive parts of their job or developers or system admins who
    want to automate all network functions.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: This book will also provide a good insight to CTOs or managers who want to understand
    ways in which they can make their network departments more agile and initiate
    real cultural change within their organizations.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: The book will also aid casual readers who want to understand more about DevOps,
    continuous integration, and Continuous Delivery and how they can be applied to
    real-world scenarios as well as insights on some of the tooling that is available
    to facilitate automation.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "These
    services are then bound to the `lbvserver` entity."'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: 'Any command-line input or output is written as follows:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "Click the **Search** button on Google."'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: Reader feedback
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome. Let us know what you think about
    this book—what you liked or disliked. Reader feedback is important for us as it
    helps us develop titles that you will really get the most out of.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: To send us general feedback, simply e-mail `<[feedback@packtpub.com](mailto:feedback@packtpub.com)>`,
    and mention the book's title in the subject of your message. If there is a topic
    that you have expertise in and you are interested in either writing or contributing
    to a book, see our author guide at [www.packtpub.com/authors](http://www.packtpub.com/authors).
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: Customer support
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that you are the proud owner of a Packt book, we have a number of things
    to help you to get the most from your purchase.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the color images of this book
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We also provide you with a PDF file that has color images of the screenshots/diagrams
    used in this book. The color images will help you better understand the changes
    in the output. You can download this file from [http://www.packtpub.com/sites/default/files/downloads/DevOpsforNetworking_ColorImages.pdf](http://www.packtpub.com/sites/default/files/downloads/DevOpsforNetworking_ColorImages.pdf).
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: Errata
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our books—maybe a mistake in the text
    or the code—we would be grateful if you could report this to us. By doing so,
    you can save other readers from frustration and help us improve subsequent versions
    of this book. If you find any errata, please report them by visiting [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the **Errata Submission Form** link, and entering
    the details of your errata. Once your errata are verified, your submission will
    be accepted and the errata will be uploaded to our website or added to any list
    of existing errata under the Errata section of that title.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们已尽力确保内容的准确性，但错误仍然可能发生。如果您在我们的书籍中发现错误——可能是文本或代码中的错误——我们将非常感激您向我们报告。通过这样做，您不仅能为其他读者避免困惑，还能帮助我们改进后续版本的书籍。如果您发现任何勘误，请通过访问[http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata)，选择您的书籍，点击**勘误提交表格**链接，并填写勘误的详细信息。一旦您的勘误得到验证，我们将接受您的提交，并将勘误上传到我们的网站，或将其添加到该书标题下的现有勘误列表中。
- en: To view the previously submitted errata, go to [https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)
    and enter the name of the book in the search field. The required information will
    appear under the **Errata** section.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 若要查看之前提交的勘误，请访问[https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)并在搜索框中输入书名。所需信息将显示在**勘误**部分。
- en: Piracy
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 盗版
- en: Piracy of copyrighted material on the Internet is an ongoing problem across
    all media. At Packt, we take the protection of our copyright and licenses very
    seriously. If you come across any illegal copies of our works in any form on the
    Internet, please provide us with the location address or website name immediately
    so that we can pursue a remedy.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 网络上的版权盗版问题在各类媒体中普遍存在。在Packt，我们非常重视版权和许可证的保护。如果您在互联网上发现我们作品的任何非法复制品，请立即向我们提供该位置地址或网站名称，以便我们采取相应措施。
- en: Please contact us at `<[copyright@packtpub.com](mailto:copyright@packtpub.com)>`
    with a link to the suspected pirated material.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您发现涉嫌盗版的内容，请通过`<[copyright@packtpub.com](mailto:copyright@packtpub.com)>`与我们联系，并提供盗版内容的链接。
- en: We appreciate your help in protecting our authors and our ability to bring you
    valuable content.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 我们感谢您在保护我们的作者和帮助我们为您提供有价值内容方面的帮助。
- en: Questions
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: If you have a problem with any aspect of this book, you can contact us at `<[questions@packtpub.com](mailto:questions@packtpub.com)>`,
    and we will do our best to address the problem.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您对本书的任何部分有问题，可以通过`<[questions@packtpub.com](mailto:questions@packtpub.com)>`与我们联系，我们将尽最大努力解决问题。
