- en: DevOps Continuous Deployment
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DevOps 持续部署
- en: 'DevOps continuous deployment enables changes to be ported quickly from development
    to production. Infrastructure and automation play key roles for enabling continuous
    deployment. In this chapter, we will learn about configuration automation and
    the implementation of infrastructure automation (Infrastructure as Code) with
    tools such as Chef and Ansible. We will also discuss the continuous monitoring
    process with the tools, Splunk and Nagios:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: DevOps 持续部署使得变更可以快速地从开发迁移到生产环境。基础设施和自动化在实现持续部署中起着关键作用。在本章中，我们将学习配置自动化和基础设施自动化（基础设施即代码）的实现，使用的工具包括
    Chef 和 Ansible。我们还将讨论使用工具 Splunk 和 Nagios 进行持续监控的过程：
- en: Continuous deployment
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 持续部署
- en: Chef
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chef
- en: Components
  id: totrans-4
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 组件
- en: Terminology
  id: totrans-5
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 术语
- en: Architecture
  id: totrans-6
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 架构
- en: Ansible
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ansible
- en: Components
  id: totrans-8
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 组件
- en: Terminology
  id: totrans-9
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 术语
- en: Architecture
  id: totrans-10
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 架构
- en: Continuous Monitoring
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 持续监控
- en: Splunk
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Splunk
- en: Nagios
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nagios
- en: As we have discussed in the previous chapters, the following figure shows the
    process of continuous integration, continuous deployment, and continuous delivery
    alignment.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在前几章中讨论的，下面的图示展示了持续集成、持续部署和持续交付的对齐过程。
- en: '![](img/4cec5b6a-f83c-48ae-ba6e-7575c0cd1e58.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4cec5b6a-f83c-48ae-ba6e-7575c0cd1e58.png)'
- en: '**Continuous Integration** (**CI**) is the process of making the development,
    unit test and build process on a continuous mode as opposed to staggered (step-by-step)
    methodology. In the CI process, every developer merges their code changes to a
    central version control system, each commit triggers automated build. So the latest
    versions are always available in the code repository and also built executable
    is from latest code.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**持续集成**（**CI**）是将开发、单元测试和构建过程进行持续化处理，而不是分阶段（逐步）的过程。在 CI 过程中，每个开发者将他们的代码更改合并到中央版本控制系统，每次提交都会触发自动化构建。因此，最新的版本始终可用在代码库中，构建出来的可执行文件也来自最新的代码。'
- en: '**Continuous Delivery** (**CD**) is a next step to the continuous integration
    process for software engineering to produce software in short cycles of testing,
    and releasing software faster and more frequently. The automated testing process
    ensures that the software can be reliably released at any time.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**持续交付**（**CD**）是持续集成过程的下一步，旨在通过短周期的测试和更频繁的软件发布，使软件工程能更快速和频繁地交付。自动化测试过程确保软件可以随时可靠地发布。'
- en: Continuous deployment is the process to minimize lead time (the elapsed time)
    between the development of new code and its availability in production for usage.
    To accomplish this, continuous deployment relies on infrastructure that automates
    various steps, after each successful code integration meeting the release criteria,
    leading to deployment, the live application is updated with new code.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 持续部署是通过减少开发新代码和代码在生产环境中可用之间的时间间隔（也就是“前置时间”）的过程。为了实现这一目标，持续部署依赖于自动化的基础设施，自动化执行各种步骤，确保每次成功的代码集成符合发布标准，最终导致部署，并且实时应用程序会更新为新代码。
- en: Traditionally, a new machine is built by administrators and system engineers
    from documentation and customized scripts, and so on. Managing Infrastructure
    through manual procedures such as custom scripts, golden image configurations,
    and so on, are both time consuming and error-prone. Organizations looking for
    faster and matured deployments and concepts adopt infrastructure configuration
    automation, which means managing Infrastructure like a software code for reproducible
    results, hence it's also termed as **Infrastructure as Code**.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 传统上，新机器是由管理员和系统工程师根据文档和定制脚本等构建的。通过手动程序（如自定义脚本、黄金镜像配置等）管理基础设施既耗时又容易出错。寻求更快速和成熟部署的组织采用基础设施配置自动化，这意味着像管理软件代码一样管理基础设施，以实现可重复的结果，因此它也被称为**基础设施即代码**。
- en: 'Just like the SDLC process, infrastructure can be managed with similar tools
    and processes such as version control, continuous integration, code review, and
    automated testing extended to make configuration changes for infrastructure robust
    and automated. The infrastructure code and configuration changes are consistently
    tested, shared, and promoted across all the environments from development to QA
    test systems and to production more easily, rapidly, safely, and reliably with
    the detailed audit trail of changes. With infrastructure code as a service, the
    configuration of the new machines to the desired state can be written as a code
    to set up multiple machines at the same time. This scalable model is more effective
    by leveraging the elasticity of the cloud. Adopting DevOps to Infrastructure as
    Code str, and so on goes beyond simple infrastructure automation to extend multiple
    benefits as below:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 就像SDLC过程一样，基础设施也可以使用类似的工具和流程进行管理，如版本控制、持续集成、代码审查和自动化测试，扩展为使基础设施的配置变更更加强大和自动化。基础设施代码和配置更改会在从开发到QA测试系统，再到生产的所有环境中一致地进行测试、共享和推广，更加容易、快速、安全和可靠，并附有详细的变更审计日志。通过基础设施代码作为服务，新机器的配置可以像代码一样编写，并同时设置多个机器。通过利用云的弹性，这种可扩展模型更加高效。采用DevOps到基础设施即代码的转换等，不仅仅是简单的基础设施自动化，还能带来以下多种好处：
- en: Ensure error-free automation scripts are repeatable
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保无误的自动化脚本是可重复的
- en: To be redeployed on multiple servers
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可在多个服务器上重新部署
- en: Ability to roll back in case of issues
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在出现问题时具有回滚能力
- en: Infrastructure code testing standards such as unit testing, functional testing,
    and integration testing can be effectively enforced
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以有效执行基础设施代码的测试标准，如单元测试、功能测试和集成测试
- en: Since the documented state of the machine is maintained as code and made up-to-date,
    written documentation is avoided
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于机器的文档化状态以代码形式维护并保持最新，因此避免了书面文档
- en: Enable collaboration between dev and ops around infrastructure configuration
    and provisioning, infrastructure code as change management
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使开发和运维团队在基础设施配置和供应上进行协作，将基础设施代码作为变更管理的一部分
- en: '![](img/dbef7987-5f46-4a03-a8de-7aad250be31a.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](img/dbef7987-5f46-4a03-a8de-7aad250be31a.png)'
- en: We will discuss continuous deployment from the perspective of popular tool features
    and functionality listed in the preceding figure.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从流行工具功能和前述图中列出的功能角度讨论持续部署。
- en: Chef
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Chef
- en: Chef is one of the prominent configuration management and infrastructure automation
    platforms; it provides a full suite of enterprise capabilities such as workflow,
    visibility, and compliance. It enables continuous deployments for both infrastructure
    and applications from development to production. Infrastructure configuration
    automation as code is written, tested, deployed, and managed by Chef across networks
    such as the cloud, on-premises, or hybrid environments with comprehensive 24 x
    7 support services. Examples are client systems, security patches can be updated
    from master server by writing configurations as a set of instructions and executed
    on multiple nodes simultaneously.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: Chef是一个突出的配置管理和基础设施自动化平台；它提供了一整套企业级功能，如工作流、可视化和合规性。它支持从开发到生产的基础设施和应用程序的持续部署。基础设施配置自动化作为代码由Chef编写、测试、部署和管理，适用于云环境、本地环境或混合环境，并提供全面的24/7支持服务。例如，客户端系统、安全补丁可以通过主服务器写入配置作为一组指令，并在多个节点上同时执行。
- en: The Chef platform as shown in the following figure, supports multiple environments
    such as Amazon Web Services, Azure, VMware, OpenStack, Google Cloud, and so on.
    Platforms such as Windows, Linux, VMware, and so on, are available. All the popular
    continuous integration tools such as Bitbucket, Jenkins, GitHub, CircleCI, and
    so on, are supported for workflow integration. The runtime environment is available
    on Kubernetes, Docker, and Swarm.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如下图所示，Chef平台支持多个环境，如亚马逊Web服务（AWS）、Azure、VMware、OpenStack、谷歌云等。Windows、Linux、VMware等平台也可用。所有流行的持续集成工具，如Bitbucket、Jenkins、GitHub、CircleCI等，都支持工作流集成。运行时环境可在Kubernetes、Docker和Swarm上运行。
- en: Chef landscape components
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Chef平台组件
- en: The Chef landscape comprising various elements of Chef, including the nodes,
    the server, and the workstation along with their relationships is shown here.
    We will discuss each of the components, the terminology, and the role it plays
    in the ecosystem to enable a Chef client to execute the job assigned. Chef terminology
    resembles food preparation. Cookbooks are the formula to make food dishes and
    recipes are ingredients.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: Chef landscape 包括 Chef 的各个元素，如节点、服务器和工作站，以及它们之间的关系，如下图所示。我们将讨论每个组件、术语及其在生态系统中的角色，以使
    Chef 客户端能够执行分配的任务。Chef 术语类似于食品准备。食谱是制作菜肴的配方，而配方则是原料。
- en: 'The components of Chef are:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: Chef 的组成部分包括：
- en: Chef server
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chef 服务器
- en: Chef client
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chef 客户端
- en: Chef workstation
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chef 工作站
- en: Chef repo
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chef 仓库
- en: Chef server
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Chef 服务器
- en: The Chef server is the hub for maintaining the configuration data across the
    network, storing cookbooks, applying policies to nodes, and each registered node
    detailed metadata managed by the Chef client. Chef server provides configuration
    details, such as recipes, templates, and file distributions through the Chef client
    installed on the respective nodes. Accordingly, the Chef clients implement the
    configuration on their nodes relieving the Chef server of any processing tasks.
    This model is scalable to consistently apply the configuration throughout the
    organization.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: Chef 服务器是用于维护网络中配置数据的中心，存储食谱、将策略应用于节点，并由 Chef 客户端管理每个注册节点的详细元数据。Chef 服务器通过安装在相应节点上的
    Chef 客户端提供配置细节，如配方、模板和文件分发。因此，Chef 客户端在其节点上实现配置，减轻了 Chef 服务器的处理任务负担。该模型具有可扩展性，可以在整个组织内一致地应用配置。
- en: Features of Chef server
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Chef 服务器的特性
- en: Web-enabled user interface with management console and search.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 具有管理控制台和搜索功能的 Web 启用用户界面。
- en: 'Management console on the chef server is a web-based interface for managing
    multiple functions such as:'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chef 服务器上的管理控制台是一个基于 Web 的界面，用于管理多个功能，如：
- en: Nodes in the network
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络中的节点
- en: Cookbooks and recipes
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 食谱和配方
- en: Roles assigned
  id: totrans-46
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分配的角色
- en: Data bags--JSON datastores, might include encrypted data
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据包——JSON 数据存储，可能包含加密数据
- en: Environment details
  id: totrans-48
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 环境详情
- en: Search facility for indexed data
  id: totrans-49
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 索引数据的搜索功能
- en: Administrative user accounts and data for chef server access
  id: totrans-50
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理用户账户和 Chef 服务器访问数据
- en: Search functionality facilitates querying any types of data indexed on Chef
    server such as nodes, roles, platforms, environments, data bags, and so on. The
    Apache Solr search engine is the base search engine and extends all the features
    such as pattern search with exact, wildcard, range, and fuzzy. A full indexed
    search can be run with different options within the recipe, command line, management
    console search feature, and so on.
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 搜索功能方便查询任何在 Chef 服务器上索引的数据类型，如节点、角色、平台、环境、数据包等。Apache Solr 搜索引擎是基础搜索引擎，并扩展了所有功能，如精确匹配、通配符、范围搜索和模糊搜索等。可以在食谱、命令行、管理控制台搜索功能等中运行完整的索引搜索，具有不同选项。
- en: Data bags are located in a secure sub-area on the Chef server; they store sensitive
    data such as passwords, user account data, and other confidential types of data.
    They can only be accessed by nodes with the authentic SSL certificates validated
    by the Chef server. A data bag is accessed by the Chef server with its global
    variables stored in JSON format. It can be searched and accessed by recipe and
    loaded.
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据包位于 Chef 服务器上的安全子区域中；它们存储敏感数据，如密码、用户账户数据和其他机密类型的数据。只有通过 Chef 服务器验证的具有有效 SSL
    证书的节点才能访问它们。数据包通过 Chef 服务器以其存储在 JSON 格式中的全局变量进行访问。可以通过食谱进行搜索和访问并加载。
- en: 'A policy defines how roles, environments, and cookbook versions are to be implemented
    in the business and operational requirements, processes, and production workflows:'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 策略定义了如何在业务和操作需求、流程及生产工作流中实施角色、环境和食谱版本：
- en: A role is a way to assign the tasks based on specific functions, patterns, and
    processes performed in an organization such as power or business user, and so
    on. Each node, web, or database server consists of unique attributes and a run
    list is assigned per role. When a node is to perform a task, it compares its attributes
    list with those required to execute the function. The Chef client ensures the
    attributes and run lists are up-to-date with those on the server.
  id: totrans-54
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 角色是基于在组织中执行的特定功能、模式和流程来分配任务的一种方式，例如权限用户或业务用户等。每个节点、Web 或数据库服务器都有独特的属性，并根据角色分配运行列表。当节点要执行任务时，它会将其属性列表与执行该功能所需的属性进行比较。Chef
    客户端确保属性和运行列表与服务器上的保持一致。
- en: Environments reflect organizations real-life requirements such as development,
    staging, or production systems, each are maintained with a cookbook version.
  id: totrans-55
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 环境反映了组织的实际需求，例如开发、测试或生产系统，每个环境都维护有对应版本的 cookbook。
- en: 'Cookbooks maintain organization-specific configuration policies. Different
    cookbook versions are maintained such as source control with associated environments,
    metadata, run lists for different needs; they are uploaded on to a Chef server
    and applied by a Chef client while configuring the nodes. A cookbook defines a
    scenario and everything that is required to support that scenario is contained
    such as:'
  id: totrans-56
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cookbook 维护着特定组织的配置政策。不同版本的 cookbook 会进行版本控制，并维护关联的环境、元数据以及满足不同需求的运行列表；它们被上传到
    Chef 服务器，并由 Chef 客户端在配置节点时应用。Cookbook 定义了一个场景，并包含支持该场景所需的一切，例如：
- en: Recipes that specify which resources to use and the order as well
  id: totrans-57
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 指定使用哪些资源及其顺序的食谱（Recipes）
- en: Attribute values
  id: totrans-58
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 属性值
- en: File distributions
  id: totrans-59
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件分发
- en: Templates
  id: totrans-60
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模板
- en: Chef extensions such as custom resources and libraries
  id: totrans-61
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chef 扩展，例如自定义资源和库
- en: A run-list contains all the required information for Chef to configure a node
    to a desired state. It is an ordered list of roles and recipes specified in the
    exact order to be run to reach its intended state. It's tailored for each node
    and stored on the Chef server as part of the node object. It is maintained using
    knife commands or using the Chef management console on the workstation and uploaded
    to the Chef server.
  id: totrans-62
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行列表（Run-list）包含所有 Chef 配置节点到目标状态所需的信息。它是一个有序的角色和食谱列表，按照执行顺序排列，用于将节点配置到预期的状态。每个节点的运行列表都是定制的，并作为节点对象的一部分存储在
    Chef 服务器上。它可以通过 knife 命令或通过工作站上的 Chef 管理控制台进行维护，并上传到 Chef 服务器。
- en: Chef client on nodes
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 节点上的 Chef 客户端
- en: Chef clients can be installed on different node types--physical, virtual, cloud,
    network device, and so on, that are registered with Chef server.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: Chef 客户端可以安装在不同类型的节点上——物理节点、虚拟节点、云节点、网络设备等，这些节点都已注册到 Chef 服务器。
- en: 'Types of nodes:'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 节点类型：
- en: A physical node is an active device (system or virtual machine) attached to
    a network on which a Chef client is installed to communicate with a Chef server.
  id: totrans-66
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 物理节点是一个活动设备（系统或虚拟机），它连接到一个网络，安装了 Chef 客户端，用于与 Chef 服务器通信。
- en: A cloud-based node is hosted in external cloud environments such as AWS, Microsoft
    Azure OpenStack, Google Compute Engine, or Rackspace. Knife with plugins provides
    support for external cloud-based services and creates instances to deploy, configure,
    and maintain those instances.
  id: totrans-67
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 云节点是托管在外部云环境中的节点，如 AWS、Microsoft Azure OpenStack、Google Compute Engine 或 Rackspace。Knife
    配合插件支持外部云服务，并创建实例来部署、配置和维护这些实例。
- en: A virtual node is a system that runs like a software implementation without
    direct physical machine access.
  id: totrans-68
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 虚拟节点是一个像软件实现一样运行的系统，不需要直接访问物理机器。
- en: A network node such as a switch can be configured with Chef and automated for
    physical and logical Ethernet link properties and VLANs. Examples of network devices
    are Juniper Networks, Arista, Cisco, and F5.
  id: totrans-69
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络节点，如交换机，可以通过 Chef 进行配置，并自动化物理和逻辑以太网链路属性及 VLAN 配置。网络设备的示例包括 Juniper Networks、Arista、Cisco
    和 F5。
- en: Containers are virtual systems running individual configurations sharing the
    same operating system. Containers are effective at managing distributed and scalable
    applications and services.
  id: totrans-70
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 容器是运行各自配置的虚拟系统，多个容器共享同一操作系统。容器在管理分布式和可扩展的应用程序与服务时非常有效。
- en: 'Chef client:'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chef 客户端：
- en: The Chef client does the actual configuration. It contacts the Chef server periodically
    to retrieve the latest cookbooks to update the current state of the node, if required,
    in accordance with the cookbook instructions. This iterative process is enforced
    by business policy to ensure the network is in accordance with the envisioned
    target state.
  id: totrans-72
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chef 客户端执行实际的配置。它定期联系 Chef 服务器，获取最新的 cookbook，并根据 cookbook 指令更新节点的当前状态（如果需要）。这一迭代过程由业务策略强制执行，以确保网络符合预期的目标状态。
- en: The Chef client is the local agent that is installed and runs on every node
    registered with the Chef server to ensure the node is at the expected state. Chef
    client does most of the computational effort. It's typically a virtual machine,
    container instance, or physical server.
  id: totrans-73
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chef 客户端是安装并运行在每个注册到 Chef 服务器上的节点上的本地代理，用于确保节点处于预期状态。Chef 客户端承担大部分计算工作。它通常是虚拟机、容器实例或物理服务器。
- en: Authentication between Chef client with the Chef server happens through RSA
    public key/pairs for every transaction request. The data stored on the Chef server
    is shared after authentication of registered nodes. Any unauthorized data access
    is avoided.
  id: totrans-74
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chef 客户端与 Chef 服务器之间的认证通过 RSA 公钥/密钥对进行，针对每个交易请求进行身份验证。Chef 服务器上存储的数据在注册节点身份验证后共享，避免任何未经授权的数据访问。
- en: 'After installation of the chef client, the nodes become compute resources on
    infrastructure that is managed by Chef for performing the tasks such as:'
  id: totrans-75
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装 Chef 客户端后，节点成为基础设施上的计算资源，由 Chef 管理，用于执行如下任务：
- en: Registering the node with the Chef server
  id: totrans-76
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将节点注册到 Chef 服务器
- en: Authentication services
  id: totrans-77
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 认证服务
- en: Creating the node object
  id: totrans-78
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建节点对象
- en: Synchronizing cookbooks with Chef server
  id: totrans-79
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与 Chef 服务器同步 cookbook
- en: The required cookbooks, with recipes, attributes, and all other dependencies,
    are compiled and loaded
  id: totrans-80
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所需的 cookbook（包括食谱、属性和所有其他依赖项）被编译并加载
- en: Configuring the node as per the requirements
  id: totrans-81
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据需求配置节点
- en: Exception handling and notifications
  id: totrans-82
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 异常处理和通知
- en: Ohai
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ohai
- en: 'Ohai is a tool run by Chef client to collect system configuration and metrics
    data with many built-in plugins to determine the system state for use within cookbooks.
    The metrics collected by Ohai are:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: Ohai 是 Chef 客户端运行的一个工具，用于收集系统配置和度量数据，具有许多内置插件，可以确定系统状态以供 cookbook 使用。Ohai 收集的度量数据包括：
- en: Operating System
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 操作系统
- en: Kernel
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内核
- en: Host names
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主机名
- en: Fully-qualified domain names
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 完全限定域名
- en: Virtualization
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 虚拟化
- en: Cloud service provider metadata
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 云服务提供商元数据
- en: Network
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络
- en: Memory
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内存
- en: Disk
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 磁盘
- en: CPU
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CPU
- en: Attributes that are collected by Ohai are automatically used by the Chef client
    to ensure that these attributes remain consistent with the definitions on the
    server.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: Ohai 收集的属性会被 Chef 客户端自动使用，以确保这些属性与服务器上的定义保持一致。
- en: Workstations
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作站
- en: 'Workstations facilitate users to author, test, and maintain cookbooks and interact
    with the Chef server and nodes. The Chef development toolkit is also installed
    and configured on a workstation. The Chef development kit is a package comprising
    prescribed sets of tools, and includes Chef, the command-line tools, Test Kitchen,
    ChefSpec, Berkshelf, and a few others. Users use workstations for:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 工作站使用户能够编写、测试和维护 cookbook，并与 Chef 服务器和节点进行交互。Chef 开发工具包也会安装并配置在工作站上。Chef 开发工具包是一个软件包，包含一组规定的工具，包括
    Chef、命令行工具、Test Kitchen、ChefSpec、Berkshelf 等。用户通过工作站进行：
- en: Developing the cookbooks and test recipes
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发 cookbook 和测试食谱
- en: Testing the Chef code in different environments
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在不同环境中测试 Chef 代码
- en: Version source control synchronized with Chef repo
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 版本源控制与 Chef 仓库同步
- en: Defining and configuring roles and environments and organizational policy
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义和配置角色、环境和组织政策
- en: Enforcing data bags are used for storing the critical data
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 强制数据包用于存储关键信息
- en: Performing a bootstrap operation on nodes
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在节点上执行引导操作
- en: Cookbooks are repositories for files, templates, recipes, attributes, libraries,
    custom resources, tests, and metadata. Chef client configures each node in the
    organization through cookbooks and recipes, the fundamental unit of configuration
    is the cookbook and provides structure to your recipes. Infrastructure state is
    defined as a file, a template, or a package in policy distribution as per the
    required scenario.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: Cookbook 是存放文件、模板、食谱、属性、库、定制资源、测试和元数据的存储库。Chef 客户端通过 cookbook 和食谱配置组织中的每个节点，配置的基本单位是
    cookbook，它为食谱提供结构。基础设施状态被定义为文件、模板或包，按照所需场景在策略分发中进行配置。
- en: The programming language for Chef cookbooks is Ruby as a full-fledged programming
    language with syntax definitions. Recipes are simple patterns for specific configuration
    items such as packages, files, services, templates, and users with blocks that
    define properties and values that map to them. Recipes are the fundamental configuration
    element in a cookbook. A Chef recipe is a file that groups related resources,
    such as everything needed to configure a web server, database server, or a load
    balancer. Recipes are stored in cookbooks and can have dependencies on other recipes.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: Chef cookbook 使用 Ruby 编程语言，这是一种完整的编程语言，具有语法定义。食谱是配置特定项（如软件包、文件、服务、模板和用户）的简单模式，其中包含定义属性和值的块，这些属性和值与其对应项相匹配。食谱是
    cookbook 中的基本配置元素。Chef 食谱是一个文件，它将相关资源组合在一起，例如配置 Web 服务器、数据库服务器或负载均衡器所需的所有内容。食谱存储在
    cookbook 中，并且可以依赖于其他食谱。
- en: Chef repo
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Chef 仓库
- en: The Chef repo, as the name suggests, is the repository artifact to author, test,
    and maintain the cookbooks. The Chef repo is managed like source code, synchronizing
    with a version control system (such as GitHub, Bitbucket, and so on). The Chef
    repo directory structure can contain a Chef repo for every cookbook or all of
    their cookbooks in a single Chef repo.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: Chef 仓库，顾名思义，是用于编写、测试和维护 cookbooks 的存储库制品。Chef 仓库像源代码一样进行管理，并与版本控制系统（如 GitHub、Bitbucket
    等）同步。Chef 仓库的目录结构可以包含每个 cookbook 的 Chef 仓库，或者将所有 cookbooks 存放在一个 Chef 仓库中。
- en: 'The `knife` is a command interface to communicate with the Chef server from
    the workstation to upload the cookbooks. To specify configuration details, the
    `knife.rb` file is used, `knife` helps to manage:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '`knife` 是一个命令接口，用于从工作站与 Chef 服务器通信并上传 cookbooks。为了指定配置细节，使用 `knife.rb` 文件，`knife`
    帮助管理：'
- en: Nodes bootstrapping
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 节点引导
- en: Recipes and cookbooks
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配方和 cookbooks
- en: Environments, roles, and data bags
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 环境、角色和数据包
- en: Various cloud environment resources
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 各种云环境资源
- en: Chef client installation to nodes
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chef 客户端安装到节点
- en: Chef server indexed data search features
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chef 服务器索引数据搜索功能
- en: 'The package of tools and utilities to work with Chef is called **Chef Development
    Kit** (**Chef DK**). It includes command-line tools interacting with Chef such
    as `knife` Chef server and Chef clients and with local Chef code repository (`chef-repo`).
    The components of Chef DK are as follows:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 与 Chef 配合使用的工具和实用程序包称为 **Chef 开发工具包**（**Chef DK**）。它包括与 Chef 交互的命令行工具，例如 `knife`
    Chef 服务器和 Chef 客户端，以及本地 Chef 代码库（`chef-repo`）。Chef DK 的组件如下：
- en: Chef client
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chef 客户端
- en: Chef and `knife` command-line tools
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chef 和 `knife` 命令行工具
- en: Test Kitchen, Cookstyle, and Foodcritic as testing tools
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Test Kitchen、Cookstyle 和 Foodcritic 作为测试工具
- en: Compliance and security requirements with InSpec as executable code
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 InSpec 作为可执行代码的合规性和安全性要求
- en: Cookbooks are authored to upload to Chef server
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为上传到 Chef 服务器而编写的 cookbooks
- en: To encryption and decryption of data bag items is with Chef-Vault using the
    public keys for registered nodes
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据包项的加密和解密使用 Chef-Vault，并使用已注册节点的公钥
- en: Cookbooks dependency manager
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cookbooks 依赖管理工具
- en: Workflow tool Chef
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工作流工具 Chef
- en: Unit testing framework Chef Specto tests resources locally
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单元测试框架 Chef Specto 在本地测试资源
- en: For style-checking to write clean cookbooks Rubocop-based tool Cookstyle
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于编写干净的 cookbooks 风格检查的 Rubocop 基于工具 Cookstyle
- en: Continuous delivery workflow on Chef Automate server also command-line tools
    to set up and execute
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chef Automate 服务器上的持续交付工作流，还提供命令行工具来设置和执行
- en: For static analysis of recipe code Foodcritic is a lint tool
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于配方代码静态分析的工具是 Foodcritic
- en: It is to test cookbooks across platforms, an integration testing framework tool
    is Test Kitchen
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它用于跨平台测试 cookbooks，集成测试框架工具是 Test Kitchen
- en: For rapid cookbook testing and container development `kitchen-dokken` is `test-kitchen`
    plugin with a driver, transport, and provisioner for using Docker and Chef
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为了快速进行 cookbook 测试和容器开发，`kitchen-dokken` 是一个带有驱动程序、传输工具和提供者的 `test-kitchen`
    插件，用于在 Docker 和 Chef 中使用
- en: Kitchen driver for Vagrant is `` `kitchen-vagrant` ``
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于 Vagrant 的 Kitchen 驱动程序是 `` `kitchen-vagrant` ``
- en: People to work together in the same `chef-repo` and Chef server knife workflow
    plugin is `knife-spork`
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 人们在同一个 `chef-repo` 和 Chef 服务器中协作，`knife` 工作流插件是 `knife-spork`
- en: The preferred language for Chef is Ruby
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chef 的首选语言是 Ruby
- en: A recipe is the collection of resources, defined using patterns such as resource
    names, attribute-value pairs, and actions. It is the fundamental configuration
    element designed to read and act in a predictable manner and authored in Ruby
    programming language.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 配方是资源的集合，通过资源名称、属性值对和操作等模式定义。它是读取并以可预测的方式执行的基本配置元素，并用 Ruby 编程语言编写。
- en: 'A few properties are as follows:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 一些属性如下：
- en: Include all that is required to configure the system
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包括配置系统所需的所有内容
- en: To be stored in a cookbook
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储在 cookbook 中
- en: For the Chef client to be used, it must be added to a run list
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要使用 Chef 客户端，必须将其添加到运行列表中
- en: It is executed in the same sequence as listed in a run list
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它按照运行列表中列出的相同顺序执行
- en: Chef client will run the recipe only when instructed
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chef 客户端仅在指示时运行配方
- en: Could be included in another recipe
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以包含在另一个配方中
- en: Might read the contents of a data bag (encrypted data bag)
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可能会读取数据包的内容（加密的数据包）
- en: Might input the results of a search query
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可能会输入搜索查询的结果
- en: Might have dependency on other recipes
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可能依赖于其他配方
- en: Facilitate the creation of arbitrary groupings by tagging a node
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过标记节点来促进任意分组的创建
- en: If the recipe is constant, then there won't be any change by repeated execution
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果配方是常量，则重复执行时不会发生任何变化。
- en: Recipe DSL is a Ruby DSL that is used to declare resources primarily from within
    a recipe. It also helps to ensure recipes interact with nodes (and node properties)
    in the expected manner. Most of the Recipe DSL methods find a specific parameter
    to advise Chef client on actions to take according to the node parameter.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 配方 DSL 是一种 Ruby DSL，用于声明资源，主要来自配方内。它还有助于确保配方按预期方式与节点（和节点属性）交互。大多数配方 DSL 方法会找到特定的参数，指导
    Chef 客户端根据节点参数采取相应的操作。
- en: 'A resource is a configuration policy statement that:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 资源是一种配置策略声明，说明：
- en: Describes the configuration item desired state
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 描述所需配置项的期望状态
- en: Declares the steps on the item required for the desired state
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 声明所需的步骤，以使项达到期望状态
- en: Resource type is specified such as package, template, or service
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 资源类型被指定，例如包、模板或服务
- en: Lists additional resource properties
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列出额外的资源属性
- en: Are grouped into recipes, that describe working configurations
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 被分组为配方，描述工作配置
- en: Chef has built-in resources to cover common actions across common platforms
    and can be built to handle any customized situation.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: Chef 具有内置资源，覆盖常见平台上的常见操作，并且可以构建以处理任何定制的情况。
- en: With different versions of cookbooks, multiple environments of production, staging,
    development/testing are managed.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 通过不同版本的烹饪书，管理多个生产、预发布、开发/测试环境。
- en: Cookbook template resources are used to add to recipes for dynamic generation
    of static text files.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 烹饪书模板资源用于添加到配方中，以动态生成静态文本文件。
- en: To manage configuration files, **Embedded Ruby** (**ERB**) templates are used.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 为了管理配置文件，使用 **嵌入式 Ruby**（**ERB**）模板。
- en: The cookbooks/templates directory contains ERB template files with Ruby expressions
    and statements.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 烹饪书/模板目录包含带有 Ruby 表达式和语句的 ERB 模板文件。
- en: The cookbooks are written consistently as per standards and tested for same.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 烹饪书按照标准一致编写，并进行相应的测试。
- en: With unit and integration testing, the cookbooks recipes are validated, testing
    code quality is also called **syntax testing**.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 通过单元和集成测试，验证烹饪书配方，测试代码质量也叫做 **语法测试**。
- en: Test Kitchen, ChefSpec, and Foodcritic, and so on, are tools for testing Chef
    recipes.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: Test Kitchen、ChefSpec、Foodcritic 等是用于测试 Chef 配方的工具。
- en: The attribute files are executed in the same order as defined in the cookbook.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 属性文件的执行顺序与在烹饪书中定义的顺序相同。
- en: Chef is built on top of Ruby, it is a thin **domain-specific language** (**DSL**) with
    built-in taxonomy for customizations need of organization.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: Chef 基于 Ruby 构建，它是一个轻量级的**领域特定语言**（**DSL**），具有内建的分类法，用于满足组织的定制需求。
- en: To manage environments, cookbooks, data bags, and to configure role-based access
    for users and groups, attributes, run lists, roles, and so on, the Chef server
    user interface is the Chef management console.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 为了管理环境、烹饪书、数据包，并为用户和组配置基于角色的访问，属性、运行列表、角色等，Chef 服务器用户界面是 Chef 管理控制台。
- en: Chef Supermarket is the community location to share and manage. Cookbooks may
    be used by any Chef user or organization.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: Chef 超市是一个社区平台，用于共享和管理。任何 Chef 用户或组织都可以使用烹饪书。
- en: Extended features of Chef
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Chef 的扩展功能
- en: It is a powerful automation platform that transforms infrastructure into code
    that operates on the cloud, on-premises, or in a hybrid environment. Infrastructure
    is configured, deployed, and managed across your network irrespective of the organization
    size with Chef Automate. Integral parts of Chef Automate are Chef, Habitat, and
    InSpec.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 它是一个强大的自动化平台，将基础设施转化为在云端、本地或混合环境中运行的代码。通过 Chef Automate，基础设施可以在网络中跨组织规模进行配置、部署和管理。Chef
    Automate 的核心部分包括 Chef、Habitat 和 InSpec。
- en: 'Three open source power-packed engines are shown in the following image:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图片显示了三个开源、强大的引擎：
- en: '![](img/a15d9069-6e23-475c-b965-21dc9e6ce48c.png)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a15d9069-6e23-475c-b965-21dc9e6ce48c.png)'
- en: Chef is the core engine for infrastructure automation. Habitat is an application
    automation tool emulating concepts of containers and microservices. InSpec ensures
    compliance and security requirements by specifying executable code.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: Chef 是基础设施自动化的核心引擎。Habitat 是一个应用程序自动化工具，模拟容器和微服务的概念。InSpec 通过指定可执行代码来确保合规性和安全性要求。
- en: Habitat
  id: totrans-170
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Habitat
- en: Habitat comes with a prescribed packaging format for application automation;
    the Habitat supervisor and application dependencies are packaged and deployed
    as one unit. The Habitat package format defines on how to be structured, these
    are isolated, immutably executed for any kind of runtime environments such as
    a container, bare metal, or PaaS. The Habitat supervisor manages the package's
    peer relationships, upgrade strategy, and security policies, which are auditable
    as well.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: Habitat 提供了一种预定义的应用程序自动化打包格式；Habitat 管理员和应用程序依赖项被打包并作为一个单元进行部署。Habitat 包格式定义了如何结构化，它们是隔离的、不可变执行的，适用于任何类型的运行时环境，如容器、裸金属或
    PaaS。Habitat 管理员管理包的同级关系、升级策略和安全政策，这些都可以审计。
- en: InSpec
  id: totrans-172
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: InSpec
- en: 'InSpec is an open source to test for adherence to security policies. It''s
    a framework for specifying compliance, security, and policy requirements to automatically
    testing any node in the infrastructure. Compliance can be expressed as code and
    integrated into a deployment pipeline:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: InSpec 是一个开源工具，用于测试是否符合安全策略。它是一个框架，用于指定合规性、安全性和政策要求，以便自动测试基础设施中的任何节点。合规性可以通过代码表示，并集成到部署管道中：
- en: InSpec using the Compliance DSL enables you to write auditing rules quickly
    and easily
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Compliance DSL，InSpec 使你能够快速轻松地编写审计规则。
- en: InSpec examines infrastructure nodes to run the tests locally or remotely
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: InSpec 检查基础设施节点，以便在本地或远程运行测试。
- en: Security, compliance, or policy issues noncompliance is logged
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全性、合规性或政策问题的不合规情况会被记录。
- en: The InSpec audit resource framework and Chef Compliance are fully compatible.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: InSpec 审计资源框架与 Chef Compliance 完全兼容。
- en: It runs on multiple platforms with remote commands such as SSH or using Docker
    API, apart from ensuring compliance using APIs, it can access the database, inspect,
    and can restrict usage of services or protocols and the configuration of virtual
    machines. An example is to Restrict Telnetd or the FTP service on the client or
    server machines.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 它可以在多个平台上运行，使用 SSH 等远程命令或使用 Docker API，除了通过 API 确保合规性外，它还可以访问数据库、检查并限制服务或协议的使用，以及虚拟机的配置。例如，可以限制客户端或服务器机器上的
    Telnetd 或 FTP 服务。
- en: The continuous deployment full-stack pipeline is Chef Automate. It includes
    automated testing for compliance and security. The workflow provides visibility
    for both applications and infrastructure, as well as changes propagating throughout
    the pipeline from development production.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 持续部署全栈管道是 Chef Automate。它包括自动化的合规性和安全性测试。该工作流提供了应用程序和基础设施的可见性，同时在开发和生产过程中的更改会传播整个管道。
- en: 'Chef High Level Architecture components are Chef DK, Chef Server, and clients:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: Chef 高级架构组件包括 Chef DK、Chef Server 和客户端：
- en: '![](img/6bab3b21-48b8-450c-ac19-67c271e35774.png)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6bab3b21-48b8-450c-ac19-67c271e35774.png)'
- en: The Chef server plays multiple roles and acts as a hub for configuration data.
    It stores cookbooks, applies the policies to the systems in accordance with the
    infrastructure, and metadata defined for each system.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: Chef 服务器扮演多个角色，充当配置数据的中心。它存储 cookbook，并根据基础设施应用政策到系统，按照每个系统定义的元数据进行操作。
- en: 'Cookbook development workflow is prescribed by the Chef Development kit as
    below:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: Cookbook 开发工作流由 Chef 开发工具包规定，如下所示：
- en: 'Skeleton cookbook creation: A cookbook with the standard files already part
    of the Chef Development kit, the Berkshelf is the package manager that helps manage
    cookbooks and related dependencies.'
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 骨架 cookbook 创建：一个包含 Chef 开发工具包标准文件的 cookbook，Berkshelf 是帮助管理 cookbook 和相关依赖项的包管理器。
- en: 'Virtual machine environment creation using Test Kitchen: Environment that develops
    the cookbook with the location details for performing automated testing and debugging
    of that cookbook during development.'
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Test Kitchen 创建虚拟机环境：该环境用于开发包含位置详细信息的 cookbook，以便在开发过程中进行自动化测试和调试。
- en: 'Prepare and debug the recipes for the cookbook: An iterative process to develop
    and test cookbooks, fix bugs, and test till they meet their purpose. Cookbooks
    are authored with any text editor such as Sublime Text, vim, TextMate, EditPad,
    and so on.'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 准备和调试 cookbook 的配方：一个迭代过程，用于开发和测试 cookbook、修复 bug 并进行测试，直到它们达到预期目标。Cookbook
    可以使用任何文本编辑器编写，例如 Sublime Text、vim、TextMate、EditPad 等。
- en: 'Conduct acceptance tests: These tests are done against a full Chef server using
    a near production environment as opposed to development environment.'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行验收测试：这些测试是在完整的 Chef 服务器上进行的，使用接近生产环境的环境，而不是开发环境。
- en: The cookbooks that pass all the acceptance tests in the desired manner are deployed
    to the production environment.
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过所有验收测试的 cookbooks 以期望的方式部署到生产环境。
- en: Chef Automate workflow
  id: totrans-189
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Chef Automate 工作流
- en: Chef Automate pipeline is for continuous delivery of full-stack approaches for
    infrastructure and applications. It facilitates safe deployment with any application,
    changes at high velocity, and relates infrastructure changes.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: Chef Automate 管道是基础设施和应用程序的全栈连续交付方法。它为任何应用程序的安全部署提供支持，支持高速度的变更，并与基础设施变更相关联。
- en: The Chef Automate pipeline quality gates are automated to move changes from
    a developer's workstation from deployment to production. A proposed change is
    approved by a team and afterwards, acceptance tests are approved and released
    to the respective artefact for delivery into production.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: Chef Automate 管道质量门控自动将开发者的工作站中的变更从部署推送到生产环境。提议的变更经过团队审批后，接受测试通过并发布到相应的工件中进行生产交付。
- en: 'This diagram shows the workflow from development, test, and deployment of Chef
    code:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 此图显示了 Chef 代码的开发、测试和部署工作流：
- en: '![](img/542c68a8-e78b-4246-a18f-82a67f557f87.png)'
  id: totrans-193
  prefs: []
  type: TYPE_IMG
  zh: '![](img/542c68a8-e78b-4246-a18f-82a67f557f87.png)'
- en: The artefact moves through the pipeline after the acceptance stage, moves to
    the union stage of quality assurance, rehearsal (pre-production), and delivered
    (production).
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 工件在验收阶段之后通过管道，进入质量保证的联合阶段、彩排（预生产）阶段，并最终交付到生产环境。
- en: The Chef Automate graphical user interface provides views into operational and
    workflow events. Its data warehouse collects inputs from Chef, Habitat, Automate
    workflow, and compliance. Dashboards track each change status through the pipeline
    and query languages available to customize dashboards.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: Chef Automate 图形用户界面提供了操作和工作流事件的视图。其数据仓库收集来自 Chef、Habitat、Automate 工作流和合规性的输入。仪表盘跟踪每个变更状态通过管道，并且可以使用查询语言自定义仪表盘。
- en: '[![](img/168eaf6a-35b1-4467-b831-72cdef762d60.png)](https://github.com/chef/chef-web-docs/blob/master/images/visibility1.png)'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '[![](img/168eaf6a-35b1-4467-b831-72cdef762d60.png)](https://github.com/chef/chef-web-docs/blob/master/images/visibility1.png)'
- en: Compliance
  id: totrans-197
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 合规性
- en: Compliance issues, security risks, and outdated software can be identified by
    creating customizable reports with compliance rules in InSpec. There are built-in
    profiles with predefined rule sets for security frameworks such as **Centre for
    Internet Security** (**CIS**) benchmarks, and so on. Compliance reposting can
    be standalone or integrated. Also, the Chef Automate server provides high availability
    with fault tolerance, real-time data about your infrastructure, and consistent
    search results.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过创建自定义报告，使用 InSpec 中的合规规则，识别合规问题、安全风险和过时的软件。内置的配置文件包含针对安全框架（如 **Centre for
    Internet Security**（**CIS**）基准）的预定义规则集等。合规报告可以是独立的，也可以是集成的。同时，Chef Automate 服务器提供高可用性和容错能力，提供有关基础设施的实时数据，并确保一致的搜索结果。
- en: 'The Chef Compliance server facilitates centralized management of the infrastructure''s
    compliance, performing the following tasks:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: Chef Compliance 服务器促进了基础设施合规性的集中管理，执行以下任务：
- en: Create and manage profiles of rules
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建和管理规则配置文件
- en: Test nodes as per the organization's security management life cycle regularly
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据组织的安全管理生命周期定期测试节点
- en: The scans are fully executed remotely; no footprint is installed on the node
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扫描完全远程执行；节点上不会安装任何足迹
- en: Compliance reports ensure infrastructure meets security requirements
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 合规报告确保基础设施满足安全要求
- en: Auditing statistics for nodes compliance are available
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 节点合规性审计统计信息已提供
- en: '![](img/7e235ecf-8702-4fee-8eaa-576b4c48536b.png)'
  id: totrans-205
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7e235ecf-8702-4fee-8eaa-576b4c48536b.png)'
- en: 'Chef compliance reports detailing multiple parameters such as node wise for
    patch and compliance are shown in the following:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: Chef 合规报告详细列出了多个参数，如按节点划分的补丁和合规性，以下为示例：
- en: '![](img/c5f443fa-23f8-4649-a1fe-40e8a913e728.png)'
  id: totrans-207
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c5f443fa-23f8-4649-a1fe-40e8a913e728.png)'
- en: Chef Compliance Report views from Automate.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 来自 Automate 的 Chef 合规报告视图。
- en: Chef Automate provides the ability to analyze compliance reports to pivot the
    data for either nodes, platform of the node, environment, or profiles with the
    ability to drill down on the information.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: Chef Automate 提供分析合规报告的能力，可以根据节点、节点平台、环境或配置文件来调取数据，并深入挖掘相关信息。
- en: Chef Automate compliance control status report provides a comprehensive dashboard
    on major, minor, critical, patch levels, and so on.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: Chef Automate 合规控制状态报告提供了关于主要、次要、关键、补丁级别等的全面仪表盘。
- en: Ansible
  id: totrans-211
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ansible
- en: 'Ansible is a popular and powerful automation framework for continuous delivery
    with features and benefits are listed in the following topics:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible 是一个流行且强大的自动化框架，专为持续交付而设计，其特点和优点在以下主题中列出：
- en: Prominent features
  id: totrans-213
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 突出功能
- en: 'Ansible provides following features:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible 提供以下功能：
- en: '**Modernize**'
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**现代化**'
- en: Automate existing deployment process
  id: totrans-216
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动化现有的部署过程
- en: Manage legacy systems and process, updated like DevOps
  id: totrans-217
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理遗留系统和流程，像 DevOps 一样更新
- en: '**Migrate**'
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**迁移**'
- en: Define applications once and redeploy anywhere
  id: totrans-219
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义应用一次并可在任何地方重新部署
- en: '**DevOps**'
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**DevOps**'
- en: Model everything, deploy continuously
  id: totrans-221
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模拟所有内容，持续部署
- en: Benefits of Ansible
  id: totrans-222
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ansible 的优点
- en: 'Using Ansible provides multiple advantages as listed following:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Ansible 提供了以下列出的多个优势：
- en: '**Simple to use**'
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**简单易用**'
- en: Special coding skills not required
  id: totrans-225
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不需要特殊的编码技能
- en: Tasks are executed sequentially
  id: totrans-226
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 任务按顺序执行
- en: Get productive quickly
  id: totrans-227
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 快速提高生产力
- en: Automation is easily understood
  id: totrans-228
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动化易于理解
- en: '**Powerful with functionality**'
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**功能强大**'
- en: App deployment
  id: totrans-230
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用部署
- en: Configuration management
  id: totrans-231
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置管理
- en: Orchestration of workflow
  id: totrans-232
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工作流编排
- en: Orchestration of app life cycle
  id: totrans-233
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用生命周期编排
- en: '**Agentless**'
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**无代理**'
- en: Agentless architecture
  id: totrans-235
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无代理架构
- en: Uses OpenSSH and WinRM
  id: totrans-236
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 OpenSSH 和 WinRM
- en: No agents to exploit or update
  id: totrans-237
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无需代理进行利用或更新
- en: More efficient and secure
  id: totrans-238
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更高效且更安全
- en: Ansible is a multi-dimensional IT automation engine that simplifies automation
    of cloud provisioning, intra-service orchestration, configuration management,
    application deployment, and many other IT functionalities.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible 是一个多维度的 IT 自动化引擎，它简化了云资源配置、服务间编排、配置管理、应用部署及其他许多 IT 功能的自动化。
- en: Ansible models your IT infrastructure by prescribing to interrelate systems
    for multi-tier deployments against managing the systems individually.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible 通过规定系统间的相互关系来模拟 IT 基础设施，支持多层级的部署，而非单独管理每个系统。
- en: As discussed under features, there are neither client-side agents nor additional
    custom security infrastructure for Ansible. It makes deployment very simple by
    describing automation jobs in a plain English language called YAML and in the
    form of Ansible playbooks.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，Ansible 没有客户端代理，也不需要额外的自定义安全基础设施。通过使用一种称为 YAML 的普通英语语言描述自动化任务，并以 Ansible
    剧本的形式，使得部署非常简单。
- en: 'Ansible architecture is as shown in the following:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible 架构如下所示：
- en: '![](img/b56855b6-bede-4875-9a4c-7728f5b1df17.png)'
  id: totrans-243
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b56855b6-bede-4875-9a4c-7728f5b1df17.png)'
- en: Ansible terminology, key concepts, workflow, and usage
  id: totrans-244
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ansible 术语、关键概念、工作流和使用方法
- en: 'Ansible Tower is a web-based solution for enterprise automation frameworks
    designed to be the hub for controlling, securing, and managing your Ansible environment
    with a user interface and RESTful APIs. It provides the following rich features:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible Tower 是一个基于 Web 的企业自动化框架解决方案，旨在成为控制、保护和管理 Ansible 环境的中心，提供用户界面和 RESTful
    API。它提供以下丰富的功能：
- en: Access control is role-based to keep the environment secure, and efficient in
    managing – allows sharing of SSH credentials but not transfer
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问控制基于角色，以确保环境的安全，并有效管理——允许共享 SSH 凭据但不传输
- en: With push-button deployment access even non-privileged users can safely deploy
    entire applications by providing access on the fly
  id: totrans-247
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过一键部署访问，即使是非特权用户也可以通过即时访问安全地部署整个应用
- en: Ensuring complete auditability and compliance as all Ansible automations are
    centrally logged
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保完整的审计和合规性，因为所有 Ansible 自动化任务都集中记录
- en: Inventory with a wide variety of cloud sources, can be graphically managed or
    synced
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 拥有各种云源的库存，可以通过图形界面管理或同步
- en: It's based on a robust REST API, integrates well with LDAP, and logs all jobs
  id: totrans-250
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它基于强大的 REST API，能够与 LDAP 集成，并记录所有任务
- en: Easy integration with the continuous integration tool Jenkins, command-line
    tools options are available
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可与持续集成工具 Jenkins 轻松集成，提供命令行工具选项
- en: Supports auto scaling topologies though provisioning callback
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持通过配置回调来进行自动扩展拓扑
- en: Ansible Tower is installed using Ansible playbooks
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ansible Tower 使用 Ansible 剧本进行安装
- en: '![](img/605db491-99ad-4f78-9b38-1438862f5749.png)'
  id: totrans-254
  prefs: []
  type: TYPE_IMG
  zh: '![](img/605db491-99ad-4f78-9b38-1438862f5749.png)'
- en: CMDB
  id: totrans-255
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CMDB
- en: Ansible **configuration management database** (**CMDB**) maintains the entire
    configuration information of the enterprise in the database and supports cloud
    creation options in multiple formats for different vendors.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible **配置管理数据库**（**CMDB**）在数据库中维护企业的所有配置信息，并支持多种格式的云创建选项，适用于不同的供应商。
- en: '![](img/9211e19d-1b53-4b95-bdc3-2435de60e80b.png)'
  id: totrans-257
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9211e19d-1b53-4b95-bdc3-2435de60e80b.png)'
- en: Playbooks
  id: totrans-258
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 剧本
- en: Playbooks are the configuration programs written in YAML to automate the systems.
    Ansible can finely orchestrate multiple instances of infrastructure topology with
    very detailed control over many machines at the same time. Ansible's approach
    to orchestration is finely-tuned automation code managed through simple YAML on
    syntax or features.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 剧本是用YAML编写的配置程序，用于自动化系统。Ansible能够精细地编排多个基础设施拓扑实例，并对许多机器进行非常详细的控制。Ansible的编排方法是通过简单的YAML语法或功能来管理精细调度的自动化代码。
- en: Ansible playbooks describe a policy to be orchestrated for enforcement on remote
    systems for configuration and deployment to enforce general IT process adherence
    steps.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible剧本描述了一项策略，以便在远程系统上执行配置和部署，强制执行一般的IT流程遵循步骤。
- en: A simple analogy is, an inventory of hosts is raw material, instruction manuals
    are playbooks, and Ansible modules are the tools in the workshop.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 一个简单的类比是，主机库存是原材料，说明书是剧本，Ansible模块是车间里的工具。
- en: To manage configurations of deployments to remote machines, playbooks can be
    used at a basic level. They can sequence multi-tier rollouts involving rolling
    updates on a more advanced level, to interact with monitoring servers and load
    balancers along the way and delegate actions to other hosts.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 要管理部署到远程机器的配置，可以在基本层面使用剧本（playbook）。在更高级的层面，它们可以控制多层次的滚动更新，涉及到与监控服务器和负载均衡器的交互，并将操作委托给其他主机。
- en: Playbooks are developed in a basic text language conveniently designed to be
    human-readable. Organizing playbooks and the files can be done in multiple ways.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 剧本是用一种基本的文本语言开发的，旨在便于人类阅读。剧本和文件的组织可以有多种方式。
- en: A simple playbook example**:**
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 一个简单的剧本示例**：**
- en: '[PRE0]'
  id: totrans-265
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![](img/f97f57d2-1b78-4efa-a7f7-3735c4645e97.png)'
  id: totrans-266
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f97f57d2-1b78-4efa-a7f7-3735c4645e97.png)'
- en: Modules
  id: totrans-267
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 模块
- en: Ansible modules can control system resources, such as services, packages, or
    files to handle and execute system commands. These resource modules are pushed
    by Ansible on nodes to configure them to the desired state of the system. These
    Ansible modules are executed over SSH (Secured Shell) on the target nodes and
    removed after accomplishing the task. The module library is shipped by default
    with a number of modules to be executed through playbooks or directly on remote
    hosts. The modules can reside on any machine, there is no concept of servers,
    daemons, or databases to maintain them. The modules and libraries are customizable,
    typically created with any terminal program, a text editor, and to keep track
    of changes to the content, the version control system is used effectively.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible模块可以控制系统资源，如服务、软件包或文件，用于处理和执行系统命令。这些资源模块由Ansible推送到节点，配置它们为所需的系统状态。这些Ansible模块通过SSH（安全外壳）在目标节点上执行，任务完成后会被移除。模块库默认随多个模块一起提供，这些模块可以通过剧本或直接在远程主机上执行。模块可以驻留在任何机器上，不需要维护服务器、守护进程或数据库的概念。模块和库是可定制的，通常使用任何终端程序和文本编辑器创建，并通过版本控制系统来有效地跟踪内容的变化。
- en: '![](img/ab4aae27-96d4-4b4d-8a1c-88664d81b55c.png)'
  id: totrans-269
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ab4aae27-96d4-4b4d-8a1c-88664d81b55c.png)'
- en: Inventory
  id: totrans-270
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 库存
- en: 'Ansible inventory is a list of resources:'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible库存是一个资源列表：
- en: Hosts and groups
  id: totrans-272
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主机和组
- en: Host variables
  id: totrans-273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主机变量
- en: Group variables
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 组变量
- en: Groups of groups and group variables
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 组和组变量
- en: Default groups
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认组
- en: Splitting out group and host and specific data
  id: totrans-277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 拆分组和主机以及特定数据
- en: List of inventory behavioral Parameters
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 库存行为参数列表
- en: Non-SSH connection types
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 非SSH连接类型
- en: Ansible, through the inventory list, works on multiple systems in the infrastructure
    simultaneously. The dynamic inventory mechanism allows multiple inventory files
    to be flexible and customizable at the same time through inventory plugins. The
    inventory list can be in a default location or specify inventory file location
    of your choice from dynamic or cloud sources, EC2, Rackspace, OpenStack, or different
    formats.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible通过库存列表，能够同时在多个系统上操作基础设施。动态库存机制允许多个库存文件通过库存插件灵活且可定制。库存列表可以位于默认位置，或者从动态或云源（如EC2、Rackspace、OpenStack等）指定库存文件的位置，支持不同格式。
- en: 'Here''s what a plain text inventory file looks like:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一个纯文本库存文件的示例：
- en: '[PRE1]'
  id: totrans-282
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](img/184531f5-f278-4b0a-82bd-dc9def97e184.png)'
  id: totrans-283
  prefs: []
  type: TYPE_IMG
  zh: '![](img/184531f5-f278-4b0a-82bd-dc9def97e184.png)'
- en: Plugins
  id: totrans-284
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 插件
- en: Ansible's core functionality is augmented by a number of handy plugins and can
    be customized in JSON (Ruby, Python, Bash, and so on). Plugins can connect to
    any data source, extend the connection types for transport other than with SSH,
    call back for logs, and even add new server-side behaviors.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible 的核心功能通过一系列便捷的插件得到增强，并且可以用 JSON（Ruby、Python、Bash 等）进行自定义。插件可以连接到任何数据源，扩展
    SSH 以外的其他传输连接类型，回调日志，甚至增加新的服务器端行为。
- en: Ansible Tower
  id: totrans-286
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ansible Tower
- en: 'Offers multiple features such as:'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 提供多个功能，例如：
- en: LDAP, AD, SAML, and other directories can be connected
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以连接 LDAP、AD、SAML 和其他目录
- en: Access control engines that are role based
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于角色的访问控制引擎
- en: Credentials without exposure storage
  id: totrans-290
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无暴露存储的凭据
- en: Simple for first time users
  id: totrans-291
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对首次使用者友好
- en: Smart Search enabled information lookup
  id: totrans-292
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用智能搜索的信息查找
- en: Configure automation at runtime
  id: totrans-293
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在运行时配置自动化
- en: REST API based integration with processes and tools
  id: totrans-294
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于 REST API 的与流程和工具的集成
- en: Tower clusters to extend capacity
  id: totrans-295
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扩展容量的 Tower 集群
- en: Ansible Tower can invoke multi-playbook workflows to link any number of playbooks,
    with different inventories, run as different users, run as batch, or with different
    credentials.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible Tower 可以调用多 playbook 工作流，链接任意数量的 playbook，使用不同的清单，以不同用户身份运行，批量运行，或使用不同的凭证。
- en: Ansible Tower workflows facilitate many complex operations, build workflows
    to provision the machines, apply base configurations of systems, and deploy the
    applications by different teams maintaining different playbooks. A workflow can
    be built for CI/CD to build an application, deploy to a test environment, run
    tests, and based on test results, automatically promotes the application. Ansible
    Tower's intuitive workflow editor easily models complex processes with different
    playbooks set up to run as alternatives in case of success or failure of a prior
    workflow playbook.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible Tower 工作流促进了许多复杂操作，可以构建工作流来配置机器、应用系统的基本配置，并由不同团队维护不同的 playbook 来部署应用程序。可以为
    CI/CD 构建工作流，构建一个应用程序，将其部署到测试环境，运行测试，并根据测试结果自动提升应用程序。Ansible Tower 直观的工作流编辑器可以轻松地将不同的
    playbook 设为备用，在先前的工作流 playbook 成功或失败时进行替代执行。
- en: 'A typical workflow may be as follows, it can be effectively used on multiple
    systems quickly without taking their infrastructure offline. To achieve continuous
    deployment, automated QA is vital to mature to this level:'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 一个典型的工作流可能如下所示，它可以快速在多个系统上有效使用，而不会将其基础设施下线。为了实现持续部署，自动化 QA 对成熟到此水平至关重要：
- en: Script automation to deploy local development VMs
  id: totrans-299
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 脚本自动化以部署本地开发虚拟机
- en: CI system such as Jenkins to deploy to a staging environment on every code change
  id: totrans-300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CI 系统，如 Jenkins，每次代码更改时部署到暂存环境
- en: The deploy job executes the test scripts on build for pass/fail for every deploy
  id: totrans-301
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署作业执行构建时的测试脚本，通过每次部署的 pass/fail 结果
- en: Upon success of the deploy job, the same playbook is run against production
    inventory
  id: totrans-302
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在部署作业成功后，同一个 playbook 会对生产环境清单进行运行
- en: 'The Ansible Tower workflow brings the following features and functionality:'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible Tower 工作流带来了以下功能：
- en: Jobs schedule
  id: totrans-304
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作业调度
- en: Built-in notifications to inform the teams
  id: totrans-305
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内置通知，通知团队
- en: Stabilized API to connect to existing tooling and processes
  id: totrans-306
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 稳定的 API 可与现有工具和流程连接
- en: New workflows to model entire processes
  id: totrans-307
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 新的工作流以建模整个过程
- en: '![](img/cb0550aa-ac5f-4b7a-9bce-433b5fd347b0.png)'
  id: totrans-308
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cb0550aa-ac5f-4b7a-9bce-433b5fd347b0.png)'
- en: 'The Ansible Tower dashboard (refer to the image) offers functionality as listed:'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible Tower 仪表板（参见图片）提供以下功能：
- en: Dashboard and real-time automation updates
  id: totrans-310
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 仪表板和实时自动化更新
- en: Graphical inventory management
  id: totrans-311
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图形化库存管理
- en: Integrated RBAC with credential management
  id: totrans-312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集成的 RBAC 和凭据管理
- en: Ansible Vault
  id: totrans-313
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ansible Vault
- en: Ansible Vault is a feature to keep sensitive data in encrypted form, for example
    passwords or keys as opposed to saving them as plain text in roles or playbooks.
    These vault files can be placed in source control or distributed to multiple locations.
    The data files such as Ansible tasks, handlers, arbitrary files, even binary files
    can be encrypted with Vault as well. These are decrypted at the destination on
    target host.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible Vault 是一个将敏感数据以加密形式存储的功能，例如密码或密钥，而不是将其作为纯文本保存在角色或 playbook 中。这些 Vault
    文件可以放在源代码管理中，或者分发到多个位置。数据文件，如 Ansible 任务、处理程序、任意文件，甚至二进制文件也可以使用 Vault 加密。这些文件在目标主机上解密。
- en: Ansible Galaxy
  id: totrans-315
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ansible Galaxy
- en: Ansible Galaxy is an open source website designed for community information
    and contributing to collaborate on building IT automation solutions to bring together
    administrators and developers. There are preconfigured roles to downloaded and
    jump start automation projects with Galaxy search index. These are also available
    with a GitHub account.
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible Galaxy 是一个开源网站，旨在为社区提供信息，并协作构建 IT 自动化解决方案，汇聚管理员和开发者。网站提供了预配置的角色，可以通过
    Galaxy 搜索索引下载并快速启动自动化项目。这些角色也可以与 GitHub 账户一起使用。
- en: Testing strategies with Ansible
  id: totrans-317
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Ansible 的测试策略
- en: Though testing is a very organizational and site-specific concept, Ansible Integrated
    Testing with Ansible playbooks is designed as an ordered and fail-fast system.
    It facilitates embed testing directly in Ansible playbooks through a push-based
    mechanism.
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管测试是一个非常组织化和站点特定的概念，但 Ansible 集成测试与 Ansible playbook 一起设计为一个有序的、快速失败的系统。它通过基于推送的机制，方便地将测试嵌入到
    Ansible playbook 中。
- en: Ansible playbooks are models of desired-state of the system that will ensure
    the things declared, such as services to be started and packages installed, are
    in accordance with declarative statements. Ansible is an order-based system on
    unhandled errors. A host will fail immediately and prevent further configuration
    of that host and shows them as a summary at the end of the Ansible run. Ansible
    is a multi-tier orchestration system to incorporate tests into the playbook run,
    either as tasks or roles.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible playbook 是系统的期望状态模型，它将确保声明的事项，如要启动的服务和已安装的软件包，符合声明性声明。Ansible 是一个基于命令的系统，处理未处理的错误时，主机会立即失败并防止该主机进一步配置，并在
    Ansible 执行结束时以摘要形式显示它们。Ansible 是一个多层次的编排系统，可以将测试嵌入到 playbook 执行中，作为任务或角色。
- en: Testing the application for integrating tests of infrastructure before deployment
    in the workflow will be effective to check the code quality and performance before
    it moves to production systems. Being push-based, the checks and balances in the
    workflow and even upgrading is very easy to maintain on the localhost or test
    servers.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 在工作流中进行基础设施集成测试的应用程序测试，将有效检查代码质量和性能，确保其在进入生产系统之前得到验证。由于是基于推送的，工作流中的检查和平衡机制，甚至升级，都很容易在本地主机或测试服务器上维护。
- en: Monitoring
  id: totrans-321
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 监控
- en: 'Enterprise monitoring is a primary activity and it categorizes monitoring development
    milestones, application logs, server health, operations, infrastructure, vulnerabilities,
    deployments, and user activity. These are accomplished with:'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 企业监控是一个主要活动，它将监控开发里程碑、应用日志、服务器健康状况、操作、基础设施、漏洞、部署和用户活动进行分类。这些通过以下方式完成：
- en: Collecting and key messages
  id: totrans-323
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 收集和关键信息
- en: Mature monitoring tools
  id: totrans-324
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 成熟的监控工具
- en: Avoid perceptions and making decisions based on uncertainty
  id: totrans-325
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 避免基于不确定性做出判断和决策
- en: Participative monitoring and evaluation
  id: totrans-326
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 参与式监控与评估
- en: Selecting and using right indicators
  id: totrans-327
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择并使用正确的指标
- en: Interpreting indicator results in business context
  id: totrans-328
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在业务背景下解读指标结果
- en: Real-time data collection
  id: totrans-329
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实时数据收集
- en: Managing data and information
  id: totrans-330
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理数据和信息
- en: 'Development Milestones: Monitoring of development milestones is an indicator
    of how well your DevOps adoption strategy is working by gaining insights of the
    actual process and team effectively. Some of the metrics are sprint scope changes,
    bugs count of field and fixed, and the ratio of promised-to-delivered features.
    These metrics are the drivers on team effectiveness and adherence to the schedule,
    this monitoring is built-in as an Agile plugin for issue tracking.'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 开发里程碑：监控开发里程碑是衡量 DevOps 采纳策略是否有效的指标，通过深入了解实际过程和团队的表现来进行评估。一些度量标准包括冲刺范围变化、现场修复的
    bug 数量、以及承诺与交付功能的比例。这些指标驱动团队效率和按时完成任务的遵守情况，此监控作为敏捷插件集成于问题追踪中。
- en: 'Code Vulnerabilities: Monitoring vulnerabilities in application code, lists
    the weaknesses induced in the top-level code by insecure coding practices. These
    can be addressed by conducting regular code reviews or changing third-party dependencies
    , and so on.'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 代码漏洞：监控应用程序代码中的漏洞，列出不安全编码实践引入的顶层代码弱点。这些可以通过定期进行代码审查或更改第三方依赖关系等方式加以解决。
- en: 'Deployments: Deployment monitoring is configuring your build servers to have
    some monitoring built into the process to notify the team. Notification-capable
    continuous integration servers communicate with chat servers and promptly alert
    teams of failed builds and deployments.'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 部署：部署监控是配置构建服务器，使其在过程中内建一些监控，通知团队。具有通知功能的持续集成服务器与聊天服务器通信，迅速提醒团队构建和部署失败。
- en: 'Application log output: Application log output to be planned for centralized
    logging if services are distributed to gain full benefit, errors and exceptions
    provides value in real-time. The ability to trace notifications from error-producing
    code in a searchable format generates benefit, before production move.'
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 应用日志输出：如果服务分布式部署，应计划将应用日志输出到集中式日志记录，以便充分利用，实时提供错误和异常的价值。能够以可搜索的格式追踪错误代码生成的通知，在生产之前带来收益。
- en: 'Server Health: Monitoring of uptime and performance of available resources
    downed or over-utilized servers fall in this category. Intrusion detection and
    health monitoring systems being on the same notification pipeline will provide
    additional value.'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器健康：监控可用资源的正常运行时间和性能，包括停机或过度利用的服务器。入侵检测和健康监控系统与同一通知管道集成，将提供额外的价值。
- en: 'Activity Monitoring: User activity monitoring is both feature development and
    the scaling of infrastructure. Along with monitoring development milestones volume
    of data is monitored.'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 活动监控：用户活动监控既包括功能开发，也包括基础设施扩展。同时监控开发里程碑和数据量。
- en: The centralized storage of consolidated logging data for application logs, user
    activity monitoring, project history enhances the value to detect and analyze
    in a global context correlating different log sources about the state of the application
    and the project.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 集中存储应用日志、用户活动监控、项目历史等合并日志数据，为检测和分析提供价值，能够在全球范围内关联不同的日志源，以了解应用和项目的状态。
- en: Splunk
  id: totrans-338
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Splunk
- en: Splunk is a popular application monitoring tool to gain real-time visibility
    into DevOps-driven application delivery for Continuous Delivery or Continuous
    Integration to move from concept to production quickly. Splunk enterprise helps
    improve the business impact of application delivery by enhancing velocity and
    quality.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: Splunk是一个流行的应用监控工具，可帮助实时监控由DevOps驱动的应用交付，支持持续交付或持续集成，帮助快速从概念转向生产。Splunk企业版通过提升速度和质量，帮助提高应用交付对业务的影响。
- en: '![](img/5790a9bb-77d6-451d-ae6d-af701ffde362.png)'
  id: totrans-340
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5790a9bb-77d6-451d-ae6d-af701ffde362.png)'
- en: 'Splunk improves code quality with the following benefits:'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: Splunk通过以下优势提升代码质量：
- en: Resolve code issues before customers see them
  id: totrans-342
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在客户看到问题之前解决代码问题。
- en: Detect and fix issues related to production faster
  id: totrans-343
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更快速地检测和修复与生产相关的问题。
- en: Objective metrics are available to ensure code is operational and meets quality
    SLAs
  id: totrans-344
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以通过客观指标确保代码正常运行并满足质量服务水平协议（SLA）。
- en: Splunk is a platform to capture and record all the activity and behavior of
    your customers, machine data, users, transactions, applications, servers, networks,
    and mobile devices.
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: Splunk是一个平台，能够捕捉并记录客户、机器数据、用户、事务、应用、服务器、网络和移动设备的所有活动和行为。
- en: The Splunk platform enhances its business impact by integrated real-time insights
    from application development to testing to production monitoring. It provides
    cohesive views across all stages of the delivery life cycle as opposed to discrete
    release components.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: Splunk平台通过集成从应用开发到测试再到生产监控的实时洞察，增强了其业务影响力。它提供了跨所有交付生命周期阶段的统一视图，而非离散的发布组件。
- en: Real-time visibility into business-relevant data for business and DevOps leaders
    on both development and operations, such as application performance, usage, revenue
    systems, cart fulfillment, and registration data provides insights to better plan
    inventory and report and improve the customer experience.
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 为业务和DevOps领导者提供实时可见的与业务相关的数据，包括应用性能、使用情况、收入系统、购物车履行和注册数据，帮助更好地规划库存、报告并改善客户体验。
- en: 'Development life cycle integration and visibility across diverse, multiple
    supported phases and applications is supported:'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 支持开发生命周期集成和跨多种支持的阶段及应用的可视化：
- en: 'Operations lifecycle integration and visibility across diverse, multiple supported
    phases and application is supported. Applications are delivered faster using analytics:'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 支持操作生命周期的集成和跨多种支持的阶段及应用的可视化。使用分析可以更快地交付应用：
- en: End-to-end visibility across every DevOps delivery tool chain component
  id: totrans-350
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 跨每个DevOps交付工具链组件实现端到端的可见性
- en: Correlated insights that iterate faster across the application delivery lifecycle
  id: totrans-351
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在应用交付生命周期中，相关的洞察可以更快迭代
- en: Measuring and benchmarking release contributions and improving DevOps team efficiency
  id: totrans-352
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测量和基准化发布贡献，提升DevOps团队效率
- en: Splunk helps organizations by enabling a feedback loop to business leaders,
    evaluating the real impact of code changes on their customers. Continuous interaction
    helps to build more intelligence about machine behavior and deep asset models.
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: Splunk通过为业务领导者提供反馈循环，帮助组织评估代码更改对客户的实际影响。持续的互动有助于建立关于机器行为和深入资产模型的更多智能。
- en: 'The benefits reflect the business impact of application delivery:'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 这些好处反映了应用交付对业务的影响：
- en: Gain new business insights by correlating business metrics with code changes
  id: totrans-355
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过将业务指标与代码更改相关联，获得新的业务洞察
- en: Enhance user experience through delivery of better-performing code
  id: totrans-356
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过交付表现更好的代码提升用户体验
- en: Delivering more secure and compliant code improves reputation
  id: totrans-357
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供更安全、更合规的代码有助于提升声誉
- en: Nagios monitoring tool for infrastructure
  id: totrans-358
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Nagios基础设施监控工具
- en: 'There are multiple variants of the Nagios open source tool for monitoring mission-critical
    infrastructure components specific to each segment on any operating system:'
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 有多个Nagios开源工具的变体，用于监控特定操作系统上每个细分领域的关键基础设施组件：
- en: Network monitoring software
  id: totrans-360
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络监控软件
- en: Network traffic monitoring
  id: totrans-361
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络流量监控
- en: Server (Linux, Windows) monitoring
  id: totrans-362
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器（Linux、Windows）监控
- en: Application monitoring tools
  id: totrans-363
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用监控工具
- en: Web application monitoring
  id: totrans-364
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Web应用监控
- en: Monitoring core engine and a basic web interface
  id: totrans-365
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 监控核心引擎和基础Web界面
- en: Nagios core plugins package with add-ons
  id: totrans-366
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nagios核心插件包及附加组件
- en: Nagios log server security threats with audit system
  id: totrans-367
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nagios日志服务器安全威胁与审计系统
- en: Nagios facilitates monitoring of the network for problems such as overloaded
    data links, network connections, monitoring routers, switches, problems caused
    by overloaded of crashed servers, and so on.
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: Nagios有助于监控网络中的问题，如过载的数据链路、网络连接、路由器、交换机、由于服务器过载或崩溃造成的问题等。
- en: Nagios can deliver the metric results in a variety of visual representations
    and reports to monitor availability, uptime, and response time of every node on
    the network with both agent-based and agent-less monitoring.
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: Nagios可以通过多种可视化方式和报告提供度量结果，以监控网络中每个节点的可用性、运行时间和响应时间，并支持基于代理和无代理的监控。
- en: Effective application monitoring with Nagios enables organizations to quickly
    detect applications, services, or process problems, and take corrective action
    to prevent downtime for your application users.
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Nagios进行有效的应用监控能够使组织快速发现应用程序、服务或进程的问题，并采取纠正措施，以防止应用用户的停机。
- en: Nagios tools for monitoring of applications and application state extends to
    Windows applications, Linux applications, Unix applications, and web applications.
    It has an active community collaboration network.
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: Nagios应用程序和应用状态监控工具扩展到Windows应用程序、Linux应用程序、Unix应用程序和Web应用程序。它拥有一个活跃的社区协作网络。
- en: The router monitoring capabilities offer benefits such as immediate notification
    on unresponsive machines, early warning by detecting network outages and protocol
    failures, increased servers, services, and application availability.
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 路由器监控功能提供了诸如在机器无响应时立即通知、通过检测网络中断和协议故障提前预警、提高服务器、服务和应用程序的可用性等好处。
- en: Windows monitoring with Nagios enables increased servers, services, and application
    availability, quick detection of network outages, failed services, processes,
    batch jobs and protocol failures, and so on. The extensive metrics are gathered
    for system metrics, event logs, applications (IIS, Exchange, , and so on), services
    (Active Directory, DHCP, service states, process states, performance counters,
    and so on).
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Nagios进行Windows监控可以提高服务器、服务和应用程序的可用性，快速检测网络中断、服务失败、进程故障、批处理任务和协议故障等问题。系统度量、事件日志、应用程序（如IIS、Exchange等）、服务（如Active
    Directory、DHCP、服务状态、进程状态、性能计数器等）等广泛的指标将被收集。
- en: Nagios – enterprise server and network monitoring software
  id: totrans-374
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Nagios——企业级服务器和网络监控软件
- en: 'Built-in advanced features are:'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 内置的高级功能包括：
- en: Integrated overview of sources, checks, network flow data, and so on, provided
    with comprehensive dashboard
  id: totrans-376
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供全面仪表板，集成概览源、检查、网络流量数据等
- en: Alert of suspicious network activity by security and reliability network analyzer.
  id: totrans-377
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过安全性和可靠性网络分析仪的警报，检测可疑的网络活动。
- en: Insights and drill down options on network traffic, bandwidth, overall network
    health, and so on, with advanced visualizations
  id: totrans-378
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供网络流量、带宽、整体网络健康状况等的深度洞察与分析选项，并具有先进的可视化功能。
- en: Monitor network usage of specific applications, custom application monitoring,
    custom queries, views, and reports are available
  id: totrans-379
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 监控特定应用的网络使用情况，提供自定义应用监控、自定义查询、视图和报告。
- en: Historical network flow data with subsets of network flow information through
    specialized views
  id: totrans-380
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过专门视图展示的历史网络流量数据与网络流量信息的子集。
- en: Abnormal activity alerts with automated alert system example bandwidth usage
    exceeds specified thresholds
  id: totrans-381
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 异常活动警报与自动警报系统示例，如带宽使用超过指定阈值。
- en: Integrated metrics of network analyzer server loads with hard disk space availability
  id: totrans-382
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集成的网络分析仪服务器负载与硬盘空间可用性度量
- en: Integrated dashboards for network analysis, monitoring, and bandwidth
  id: totrans-383
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 集成的网络分析、监控和带宽仪表盘。
- en: The Nagios dashboard with multiple monitoring options such as source groups,
    Server CPU, disk usage, and so on, can be extended and customized with many more
    choices based on business requirements.
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: Nagios 仪表盘提供多种监控选项，如源组、服务器 CPU、磁盘使用情况等，可以根据业务需求扩展和自定义更多选择。
- en: Summary
  id: totrans-385
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In the next chapter, we will discus on advanced topics of visualization, containers
    offered by multiple vendors, orchestration options, Internet of Things, microservices,
    and so on.
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将讨论可视化的高级话题、多个供应商提供的容器、编排选项、物联网、微服务等。
