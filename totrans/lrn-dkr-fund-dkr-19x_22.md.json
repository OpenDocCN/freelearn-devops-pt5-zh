["```\n$ ssh -i pets.pem ubuntu@<IP address>\n```", "```\n$ git clone https://github.com/PacktPublishing/Learn-Docker---Fundamentals-of-Docker-19.x-Second-Edition.git ~/fod\n$ cd ~/fod/ch18/aws\n```", "```\n$ ./install-docker.sh\n```", "```\n$ export UCP_IP=<IP address>\n$ export UCP_FQDN=<FQDN>\n$ export UCP_VERSION=3.0.0-beta2\n```", "```\n$ docker run --rm docker/ucp:${UCP_VERSION} images --list \\\n | xargs -L 1 docker pull\n```", "```\n$ source env.sh\n```", "```\nCluster \"ucp_34.232.53.86:6443_admin\" set.\nUser \"ucp_34.232.53.86:6443_admin\" set.\nContext \"ucp_34.232.53.86:6443_admin\" created.\n```", "```\n$ docker stack rm pets\n```", "```\n$ docker image pull mcr.microsoft.com/azure-cli:latest\n```", "```\nFROM mcr.microsoft.com/azure-cli:latest\nRUN apk update && apk add docker\n```", "```\nversion: \"2.4\"\nservices:\n    az:\n        image: fundamentalsofdocker/azure-cli\n        build: .\n        command: tail -F anything\n        working_dir: /app\n        volumes:\n            - /var/run/docker.sock:/var/run/docker.sock\n            - .:/app\n```", "```\n$ docker-compose up --build -d\n```", "```\n$ docker-compose exec az /bin/bash\n\nbash-5.0#\n```", "```\nbash-5.0# az --version\n```", "```\nazure-cli 2.0.78\n...\nYour CLI is up-to-date.\n```", "```\nbash-5.0# az login\n```", "```\nTo sign in, use a web browser to open the page https://microsoft.com/devicelogin and enter the code <code> to authenticate.\n```", "```\n[\n  {\n    \"cloudName\": \"AzureCloud\",\n    \"id\": \"<id>\",\n    \"isDefault\": true,\n    \"name\": \"<account name>\",\n    \"state\": \"Enabled\",\n    \"tenantId\": \"<tenant-it>\",\n    \"user\": {\n      \"name\": \"xxx@hotmail.com\",\n      \"type\": \"user\"\n    }\n  }\n]\n```", "```\nbash-5.0# az account list-locations \n[\n  {\n    \"displayName\": \"East Asia\",\n    \"id\": \"/subscriptions/186760ad-9152-4499-b317-c9bff441fb9d/locations/eastasia\",\n    \"latitude\": \"22.267\",\n    \"longitude\": \"114.188\",\n    \"name\": \"eastasia\",\n    \"subscriptionId\": null\n  },\n  ...\n]\n```", "```\nbash-5.0# az group create --name animals-rg --location westeurope\n\n{\n  \"id\": \"/subscriptions/186760ad-9152-4499-b317-c9bff441fb9d/resourceGroups/animals-rg\",\n  \"location\": \"westeurope\",\n  \"managedBy\": null,\n  \"name\": \"animals-rg\",\n  \"properties\": {    \n    \"provisioningState\": \"Succeeded\"\n  },\n  \"tags\": null,\n  \"type\": \"Microsoft.Resources/resourceGroups\"\n}\n```", "```\nbash-5.0# az acr create --resource-group animals-rg --name <acr-name> --sku Basic\n```", "```\n{\n \"adminUserEnabled\": false,\n \"creationDate\": \"2019-12-22T10:31:14.848776+00:00\",\n \"id\": \"/subscriptions/186760ad...\",\n \"location\": \"westeurope\",\n \"loginServer\": \"fodanimalsacr.azurecr.io\",\n \"name\": \"fodanimalsacr\",\n ...\n \"provisioningState\": \"Succeeded\",\n```", "```\nbash-5.0# az acr login --name <acr-name> \nLogin Succeeded\nWARNING! Your password will be stored unencrypted in /root/.docker/config.json.\nConfigure a credential helper to remove this warning. See\nhttps://docs.docker.com/engine/reference/commandline/login/#credentials-store\n```", "```\n$ az acr list --resource-group animals-rg \\\n --query \"[].{acrLoginServer:loginServer}\" \\\n --output table\n\nAcrLoginServer\n------------------------\nfodanimalsacr.azurecr.io\n```", "```\nbash-5.0# docker image tag fundamentalsofdocker/ch11-db:2.0 fodanimalsacr.azurecr.io/ch11-db:2.0\nbash-5.0# docker image tag fundamentalsofdocker/ch11-web:2.0 fodanimalsacr.azurecr.io/ch11-web:2.0\n```", "```\nbash-5.0# docker image push fodanimalsacr.azurecr.io/ch11-db:2.0\nbash-5.0# docker image push fodanimalsacr.azurecr.io/ch11-web:2.0\n```", "```\nbash-5.0# az acr repository list --name <acr-name> --output table \nResult\n--------\nch11-db\nch11-web\n\n```", "```\nbash-5.0# az aks create \\\n --resource-group animals-rg \\\n --name animals-cluster \\\n --node-count 2 \\\n --generate-ssh-keys \\\n --attach-acr <acr-name>\n```", "```\nbash-5.0# az aks install-cli\n```", "```\nbash-5.0# az aks get-credentials --resource-group animals-rg --name animals-cluster \nMerged \"animals-cluster\" as current context in /root/.kube/config\n```", "```\nbash-5.0# kubectl get nodes NAME                                STATUS   ROLES   AGE     VERSION\naks-nodepool1-12528297-vmss000000   Ready    agent   4m38s   v1.14.8\naks-nodepool1-12528297-vmss000001   Ready    agent   4m32s   v1.14.8\n```", "```\nbash-5.0# kubectl apply -f animals.yaml \n```", "```\ndeployment.apps/web created\nservice/web created\ndeployment.apps/db created\nservice/db created\n```", "```\nbash-5.0# kubectl get service web --watch\n```", "```\nNAME TYPE        CLUSTER-IP  EXTERNAL-IP  PORT(S)         AGE\nweb LoadBalancer 10.0.124.0  <pending>    3000:32618/TCP  5s\n```", "```\nNAME TYPE        CLUSTER-IP  EXTERNAL-IP    PORT(S)         AGE\nweb LoadBalancer 10.0.124.0  51.105.229.192 3000:32618/TCP  63s\n```", "```\nbash-5.0# az group delete --name animal-rg --yes --no-wait \n```", "```\n$ git clone https://github.com/PacktPublishing/Learn-Docker---  Fundamentals-of-Docker-19.x-Second-Edition.git ~/fod\n$ cd ~/fod/ch18/gce\n```", "```\n$ less animals.yaml\n```", "```\n$ gcloud container clusters get-credentials animals-cluster --zone europe-west1-b \nFetching cluster endpoint and auth data.\nkubeconfig entry generated for animals-cluster.\n```", "```\n$ kubectl create -f animals.yaml \ndeployment.apps/web created\nservice/web created\ndeployment.apps/db created\nservice/db created\n```", "```\n$ kubectl get svc/web --watch NAME   TYPE           CLUSTER-IP   EXTERNAL-IP     PORT(S)          AGE\nweb    LoadBalancer   10.0.5.222   <pending>       3000:32139/TCP   32s\nweb    LoadBalancer   10.0.5.222   146.148.23.70   3000:32139/TCP   39s\n```"]