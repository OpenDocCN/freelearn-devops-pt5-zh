- en: Jira Software for Kanban
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the last two chapters, we have looked at how to use Jira Software for the
    Scrum agile methodology. Jira Software also supports another agile methodology
    called Kanban, which many agile teams have chosen to use instead of Scrum. In
    this chapter, we will look at how to use Jira Software for Kanban.
  prefs: []
  type: TYPE_NORMAL
- en: 'By the end of this chapter, you will have learned how to:'
  prefs: []
  type: TYPE_NORMAL
- en: Visualize workflow with Kanban
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Work on issues the Kanban way
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Customize your Kanban board
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Create reports and charts for improvements
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kanban
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Kanban is another agile methodology that is supported by Jira Software. Unlike
    Scrum (which was introduced in [Chapter 2](part0033.html#VF2I0-afcd22ce7063477f98fa024bc0dcef11),
    *Jira Software for Scrum*), which revolves around the notion of running your project
    in planned iterations called sprints, Kanban does not run in iterations, or rather,
    the use of iteration is optional with Kanban.
  prefs: []
  type: TYPE_NORMAL
- en: 'In a nutshell, Kanban has the following three concepts:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Visualizing workflow**: This breaks down your tasks (issues) and puts them
    on the board. You need to organize your board so that each column represents a
    status in your overall workflow, ordered from left (start) to right (finish).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Limiting the work in progress (WIP)**: This sets minimum and maximum limits
    for how many tasks can be in any given workflow status.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Measuring the lead time**: This calculates the average time required to complete
    one task, keeping it as low and predictable as possible.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: While Scrum requires the team to plan iterative sprints with managed scopes,
    and focuses on team velocity, Kanban is more flexible, as its focus is more around
    **cycle time**. Cycle time is the measurement of the amount of time it takes for
    an issue, or unit of work, to transition through the team's workflow from end
    to end. The goal is to reduce the cycle time, identify any problems and bottlenecks
    in the workflow, and address them to get the process to flow smoothly again. As
    we will see, Jira provides a number of tools to help with this.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a new Kanban board
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Jira Software provides a simple-to-follow wizard to help you create new Kanban
    boards. All you need to do is choose if you want to create a board from scratch,
    from an existing project, or filter, and follow the steps.
  prefs: []
  type: TYPE_NORMAL
- en: 'To create a new Kanban board, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Click on the Agile menu from the top navigation bar and select the Manage Boards
    option.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the Create board button. This will bring up the Create an Agile board
    dialog.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Select the Create a Kanban board option:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00037.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Select how you want to create your board and click on the Next button. There
    are three options to choose from to create your board, as shown in the screenshot
    below. These options are explained as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Board created with new Software project: This is the same as creating a project
    using the Scrum agile project template. A new project will be created, along with
    a new Kanban board dedicated to the project.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Board from an existing project: This option allows you to create a new board
    from your existing projects. The board will be dedicated to only one project.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Board from an existing Saved Filter: This option allows you to create a board
    that can span across multiple projects with the use of a filter. So, to use this
    option, you will first have to create a filter that includes the projects and
    issues you need.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: If you have many issues in your project, then you can also use filters to limit
    the number of issues that are to be included.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00038.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fill in the required information for the board. Depending on the option you
    have selected, you will either need to provide the project details or select a
    filter to use. The following screenshot shows an example of creating a board with
    a filter. Click on the Create board button to finish:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00039.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Understanding the Kanban board
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For those who are familiar with the Scrum board in Jira Software, the Kanban
    board will look very similar to the work mode of the Scrum board, with only a
    few differences:'
  prefs: []
  type: TYPE_NORMAL
- en: There is no backlog view. The backlog is the first column on the boardâ€”new issues
    will be added straight into the Backlog column.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There are no active sprints. Since Kanban does not have iterations, you are
    always in the working view.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Some of the columns may have a minimum and maximum number, which appear next
    to the column name.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Some of the columns may be highlighted in red or yellow, as shown in the following
    screenshot, where the In Progress column is highlighted in red:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00040.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: So, let's take a closer look at the Kanban board and see why we have these differences.
    First of all, as explained in the earlier section, Kanban does not use discrete
    time periods, such as iterations, to plan work in advance. Instead, work is being
    done constantly, going from the backlog to the finish line to be released. Therefore,
    the Kanban board does not have separate views for the backlog (or a Plan mode,
    in older versions of Jira Software) and the current active sprints (or Work mode);
    everything is combined into this single Kanban board view, which shows you everything
    in your backlog and the current progress as your team works through the issues.
  prefs: []
  type: TYPE_NORMAL
- en: The first column on the board will be your backlog, and it is called Backlog
    by default if you are not using a customized board and/or workflow. Any new issues
    created will be automatically placed into that column. However, if you have a
    big project, you may find this hard to maintain as the number of issues grows.
    In this case, Jira provides an option to have a backlog view like a Scrum board
    by using what is known as **Kanplan**. We will cover Kanplan in [Chapter 4](part0074.html#26I9K0-afcd22ce7063477f98fa024bc0dcef11),
    *Using Jira Software Your Way*.
  prefs: []
  type: TYPE_NORMAL
- en: Customizing your Kanban board
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'After you have created your Kanban board, you will need to customize it based
    on your workflow process and your team''s capacity. Some of the key customizations
    include:'
  prefs: []
  type: TYPE_NORMAL
- en: Modeling your board columns to mimic your workflow
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting minimum and maximum constraints for your workflow status so as to control
    the work in progress
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Controlling which issues will be included and displayed on the board
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Categorizing issues on the Kanban board in swimlanes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating custom-filtered views with quick filters
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Visualizing workflow with Kanban
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: One of the core concepts of Kanban is to visualize the team's workflow to better
    understand what the team is currently working on, what the workload is like, and
    where in the workflow a given task is. So the first step is to set up your board
    columns to visually represent what your workflow looks like.
  prefs: []
  type: TYPE_NORMAL
- en: 'In Jira, workflow statuses are represented as columns on the Kanban board.
    To customize your Kanban board''s columns, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to the Kanban board you want to customize.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the Board drop-down menu and select the Configure option.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select Columns from the left-hand navigation menu.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the Add column button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter a name for the new column and select a category for it. Generally speaking,
    if the column represents the start of the workflow, then it should be in the To
    Do category. If it represents the end, then it should be in the Done category.
    Otherwise, use the In Progress category.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on the Add button to create the new column:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00041.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Once you have created the new column, it will be added as the second to last
    column on the list. You can rearrange its position by dragging the column left
    or right on the list so that it is in the correct position in your workflow.
  prefs: []
  type: TYPE_NORMAL
- en: When adding a column this way, a corresponding new status with the same name
    will also be created for you, if one does not already exist. So you do not have
    to create both the column and status separately.
  prefs: []
  type: TYPE_NORMAL
- en: Generally speaking, your board should reflect how work progresses through your
    workflow, so you should have a column for each major step that members of your
    team will be working on. For example, if you have the steps In Development, Development
    Completed, and In Testing in your workflow, you should have two columns, one for
    In Development and one for In Testing. The reason why you should not have a column
    for Development Completed is because nobody will be working on the issues that
    are in the step.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up column constraints
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As stated earlier, one of the key differences between Scrum and Kanban is that
    Scrum limits the amount of work per iteration and Kanban limits the amount of
    work per workflow status. This is done by setting **column constraints**. Column
    constraints tell Jira the maximum and/or the minimum number of issues that should
    be in a column at any given time.
  prefs: []
  type: TYPE_NORMAL
- en: 'To set up column constraints, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to the Kanban board you want to customize.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the Board drop-down menu and select the Configure option.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select Columns from the left-hand navigation menu.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choose how you want the column constraint to be calculated from the Column Constraint
    field. If you select the None option, column constraints will not be applied to
    this board.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Set the minimum and maximum constraint value for the status in its corresponding
    columns. For example, as shown in the following screenshot, for the Selected for
    Development column, the team should have a minimum of five issues, and no more
    than ten issues in the status:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00042.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Once you have set the minimum and maximum constraints for workflow statuses,
    the Kanban board will let you know if those constraints are violated. For example,
    as shown in the following screenshot, we only have one issue in the Selected for
    Development status, which has a minimum constraint of five issues, and so the
    column is highlighted in yellow.
  prefs: []
  type: TYPE_NORMAL
- en: 'We also have six issues in the In Progress status, which has a maximum constraint
    of five issues, so the column is highlighted in red:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00043.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: When you start seeing these constraint violations, it means the team should
    start reassessing the current workload. Remember, the goal with Kanban is to help
    you identify and improve efficiency, not get in the way of your work.
  prefs: []
  type: TYPE_NORMAL
- en: Column constraints help you to identify bottlenecks and inefficiencies in your
    workflow, not to restrict your work process.
  prefs: []
  type: TYPE_NORMAL
- en: Controlling which issues to show on the board
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For the Kanban board, there are two queries used to determine which issues
    will be displayed:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Saved Filter: The saved filter includes issues that will be displayed on the
    Kanban board. The Filter Query field shows the JQL query of the saved filter.
    Depending on how the board is created, the saved filter will be either automatically
    created or selected from an existing filter list.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Kanban board sub-filter: The sub-filter determines which issues from the saved
    filter will be considered unreleased. As we will see in a later section in this
    chapter, *Releasing a version in Kanban*, once an issue is released as part of
    a new version, it is removed from the board.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'As shown in the following screenshot, Sample Kanban Board is using the Filter
    for Sample Kanban Project saved filter with the JQL query of `project="SampleKanbanProject"ORDERBYRankASC`.
    This means that all issues created in Sample Kanban Project will be shown on the
    board. It is also using the JQL query of `fixVersioninunreleasedVersions()ORfixVersionisEMPTY`,
    which means issues that have an unreleased version as their fix versions, or do
    not have a value for the field, will be considered unreleased and will be displayed
    on the board:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00044.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'You can change both the saved filter and sub-filter used for your board. If
    you want to simply use a different saved filter for another filter you have, perform
    the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Hover over and click on the saved filter's name. You will see it change to a
    select list.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the new saved filter from the list. If you do not see the filter you
    want, you can type in the filter's name and search for it. Note that you can only
    see and select filters that you have access to.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You can also change the JQL query of the saved filter currently in use:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on the Edit Filter Query link under Saved Filter. This will bring you
    to Issue Navigator, the interface where you create and edit filters in Jira, as
    shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00045.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Update your search filter criteria via the UI controls if you are in the Basic
    mode, or the JQL query directly if you are in the Advanced mode.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the Save button at the top to update your filter.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: As shown in the preceding example, we changed our filter's query to `project="SampleKanbanProject"andissuetypein(Bug,Story,Task)ORDERBYRankASC`,
    which limits the issues to types of bugs, stories, and tasks only.
  prefs: []
  type: TYPE_NORMAL
- en: 'To update the board''s sub-filter to customize how unreleased issues are determined,
    follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Hover over and click on the Kanban board sub-filter's content. You will see
    it change to an editable text box.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Enter the new JQL query and click on the Update button, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00046.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: As shown in the preceding example, we have changed the sub-filter's query to
    `fixVersioninunreleasedVersions()ORfixVersionisEMPTYorresolutionisEMPTY`Â to also
    include a check for issues that do not have a value for the Resolution field.
  prefs: []
  type: TYPE_NORMAL
- en: Organizing your Kanban board with swimlanes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Swimlanes** are a useful way to group and organize your issues on your Kanban
    board. For example, you can use swimlanes to represent priorities and divide issues
    based on owners or types.'
  prefs: []
  type: TYPE_NORMAL
- en: 'By default, when you first create a new Kanban board, you will have two swimlanes,
    but you can also create your own custom ones. For example, as shown in the following
    screenshot, we have three swimlanes: the Expedite and the Everything Else swimlanes
    are created along with your board, and the Bugs swimlane in the middle is a custom
    swimlane we have added:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00047.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'To customize swimlanes for your Kanban board, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to the Kanban board that you want to customize swimlanes for.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the Board drop-down menu and select the Configure option.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select Swimlanes from the left-hand navigation menu.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choose the criteria you want to base your swimlane on in the Base Swimlane on
    field.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a new swimlane by entering the name and description for the swimlane
    and enter the JQL query if you are basing your swimlanes on queries.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Reorder your swimlanes by dragging them up and down the list:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00048.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: As shown in the preceding screenshot, we have three swimlanes based on queries.
    The Expedite and Everything Else swimlanes were there by default when we created
    the board. We have a new Bugs swimlane that is using the JQL query of `issuetype=Bug`Â so
    that all issues of the Bug type will be categorized together.
  prefs: []
  type: TYPE_NORMAL
- en: Note that the order of the swimlanes is important. The order will determine
    both the placement of each swimlane and the swimlane that an issue will belong
    to. In this case, the Expedite swimlane is on the top, and this will be reflected
    in the final Kanban board. If we have an issue that is of the Bug type and also
    a value of Highest for the priority field, it will be categorized into the Expedite
    swimlane rather than the Bugs swimlane because of the order.
  prefs: []
  type: TYPE_NORMAL
- en: 'The JQL option is the most flexible way of defining swimlanes, but you can
    also use some of the built-in options, such as Assignee, for simpler purposes.
    The next screenshot shows a Kanban board with four swimlanes, each showing the
    issues for a user, so you can easily get an idea of how many issues are assigned
    to each user:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00049.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Creating custom views with quick filters
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: By default, the Kanban board will display all the issues that are returned from
    the selected filter. However, there might be times where you need to do additional
    filtering on top to narrow down the list of issues further. This is where quick
    filters come in.
  prefs: []
  type: TYPE_NORMAL
- en: 'Quick filters let you define additional filtering based on JQL. This is like
    creating a custom view for the board to include only the issues that you are interested
    in seeing for the time being. To create new quick filters, perform the following
    steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to the Kanban board you want to add quick filters to.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the Board drop-down menu and select the Configure option.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select Quick Filters from the left-hand navigation menu.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter a name and description for the new quick filter.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the JQL query for the filter. Jira Software will help you construct and
    validate the query.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on the Add button to create the new quick filter:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00050.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: As shown in the preceding screenshot, we have three quick filters already created,
    and we are creating a new one named Exclude Duplicated with the JQL query of `resolutionnotin(Duplicate)`Â to
    remove all issues with the value of Duplicate in the resolution field from the
    board.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have created the new quick filters, they will be displayed above the
    issue cards, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00051.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Releasing a version in Kanban
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With Kanban, tasks are not assigned to a predefined or planned release schedule,
    which is different to Scrum, where releases usually happen at the end of a sprint.
    When using Kanban, releases are made at the team's discretion as more and more
    tasks are being completed. The idea here is to continuously release new features
    and improvements as and when it makes sense for the team.
  prefs: []
  type: TYPE_NORMAL
- en: For example, some teams may choose to release on a regular basis, such as every
    Friday. Other teams may choose to release only when they have completed something
    useful.
  prefs: []
  type: TYPE_NORMAL
- en: 'To release a version from your Kanban board, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Click on the Release... link at the top right-hand corner of your board.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the version number from the Release dialog.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the release date.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter a short description for the version.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on the Release button to release the version, as shown in the following
    screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00052.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: You must have the Administer Projects permission for all projects included in
    the board in order to release the version. We will cover permissions in [Chapter
    5](part0091.html#2MP360-afcd22ce7063477f98fa024bc0dcef11), *Customizing Jira Software*.
  prefs: []
  type: TYPE_NORMAL
- en: Once you have released a version, all the issues in the last column will have
    the version number added to their Fix Versions field, and will be taken off the
    Kanban board.
  prefs: []
  type: TYPE_NORMAL
- en: One thing to note about versions when working in Kanban is that you should not
    create the version you want to release ahead of time.
  prefs: []
  type: TYPE_NORMAL
- en: It is important to note that with Kanban, the release plan is to be continuously
    optimized. There is no point in releasing something simply because of a rule that
    states a release needs to be made on a Friday, when there are not many completed
    tasks. The team needs to look at their current lead time and then make the decision
    as to whether or not it makes sense to make a release.
  prefs: []
  type: TYPE_NORMAL
- en: Improving your team's performance
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'One common question that often pops up when teams are starting with Kanban
    is, *what is the correct limit I should set for each of my workflow statuses?*Â The
    answer is simple: try and experiment.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The first step is to look at your board and see if any constraints are being
    violated. If we take a look at the following example of a Kanban board, we can
    see that too many issues are in the In Progress column, and at the same time,
    we don''t have enough issues in the QA column. What this tells us is that we have
    a bottleneck in our development phase of the workflow. This results in work being
    piled up in development while the QA engineers are waiting around and not being
    productive:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00053.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: So in order to address this, as a team you will need to take a close look at
    the bottleneckâ€”in this case, the In Progress columnâ€”and figure out why this is
    happening. For example, perhaps you do not have enough developers to handle the
    workload and people are multitasking in order to try to complete as much work
    as possible. This will often cause unnecessary context switching, which in turn
    causes inefficiency, or perhaps the tasks are too complicated and need to be broken
    down.
  prefs: []
  type: TYPE_NORMAL
- en: 'Defining the column constraint can be an art, and once you have set the constraints,
    you will need to periodically review them and refine them as the project and team
    changes. When setting column constraints, keep the following points in mind about
    the limits you choose:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Limit set too high**: You will have idle tasks sitting around, and this will
    lead to bad lead/cycle time.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Limit set too low**: You will have idle people waiting for work, and this
    will lead to bad productivity.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Remember, with Kanban, you and your team should continuously improve your process;
    the board helps you to highlight any potential bottlenecks, so you and your team
    can improve your processes.
  prefs: []
  type: TYPE_NORMAL
- en: Do not just fix the boardâ€”fix the cause of the bottleneck.
  prefs: []
  type: TYPE_NORMAL
- en: Improving the process with charts and reports
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Jira Software comes with a number of useful charts and reports to help you
    visualize your team''s performance and identify potential bottlenecks in your
    Kanban process. To generate a report, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Browse to the Kanban board you want to generate a report on.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the Reports tab from the left-hand panel of your board.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'As shown in the following screenshot, there are a number of reports that are
    available. The reports under the Agile section are specifically designed for using
    agile methodologies, such as Kanban. Of course, the other reports, such as Pie
    Chart Report, are also very useful, but since these are vanilla Jira reports,
    we will be focusing mainly on the agile reports, namely Cumulative Flow Diagram
    and Control Chart:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00054.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Since Kanban is a continuous process, you should run these reports regularly.
  prefs: []
  type: TYPE_NORMAL
- en: Cumulative flow diagram
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The first useful chart Jira Software provides is the cumulative flow diagram.
    This chart shows you the number of issues (*y* axis) in various statuses, displayed
    as colored bands, over a period of time (*x* axis). This way, you will be able
    to visually identify whether there are any bottlenecks in a particular status
    in your team's workflow, as you will see a widening in the colored band representing
    the status.
  prefs: []
  type: TYPE_NORMAL
- en: 'To generate the cumulative flow diagram for your Kanban board, perform the
    following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Click on the Reports tab from the left-hand panel of your board.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Select the Cumulative Flow Diagram option:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00055.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: In the preceding sample chart, we can see there is a sudden surge for the In
    Progress status (represented as the purple band) toward the end of the month,
    around November 29\. This indicates that there is a bottleneck, with issues getting
    stuck in the In Progress status, and it is worth investigating what is causing
    this.
  prefs: []
  type: TYPE_NORMAL
- en: 'With the cumulative flow diagram, you can hover over the diagram and see what
    issues are being moved into the various statuses so that you can get a clearer
    picture of what is happening. If your diagram gets a bit busy, you can refine
    it by selectively hiding statuses (columns), swimlanes, and issues (via quick
    filters) to display only the data you are interested in, as shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00056.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Control chart
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The second useful chart to help you measure your team''s performance is the
    control chart. The control chart shows you the average lead time of your team
    over a period of time, and plots the issues on the chart so you can see the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Any issues that are outside of the standard deviation, also known as outliers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The average time taken to complete tasks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The team's rolling average and how it compares to the average
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To generate the control chart for your Kanban board, perform the following
    steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Click on the Reports tab from the left-hand panel of your board.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the Control Chart option.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'As shown in the following screenshot, the control chart shows:'
  prefs: []
  type: TYPE_NORMAL
- en: Issues on the board represented by green dots. A hollow green dot represents
    a single issue and a solid green dot (bigger) represents multiple issues. You
    can click on these dots to see the issue details.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The time period is shown as dates on the *x* axis.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The time it takes for issues to be completed on the *y* axis.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The average duration for issue completions, shown as the red line.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The average lead time for issues, shown as the blue line. A downward trending
    blue line indicates improvements in efficiency.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The standard deviation, shown as a light-blue band:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00057.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Generally, you would want to have the blue line trending downwards; this would
    indicate a decrease in the average lead time. This means that issues are not stuck
    in workflow statuses and are being completed quickly, and that your team is not
    overbooked.
  prefs: []
  type: TYPE_NORMAL
- en: You would also want to have a low standard deviation. This is an indication
    of how each issue is measured against the rolling average (blue line). The narrower
    the blue band, the closer each issue is being delivered to the average time. This
    means that it's more likely the team will be able to deliver work at the same
    rate.
  prefs: []
  type: TYPE_NORMAL
- en: Customizing the control chart
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The control chart has several customization options that allow you to fine
    tune the data being displayed on the chart. These options are displayed below
    the chart itself, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00058.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: When you first start working with the control chart, you should want to identify
    and remove the outliers from the chart as they can often skew your data and give
    you incorrect readings.
  prefs: []
  type: TYPE_NORMAL
- en: 'Outliers are the green dots far above the light-blue band; these are often
    issues that are created or transitioned incorrectly because of human error. You
    can easily filter out these issues by applying a label to each of the issues and
    creating a new quick filter. To do this, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Review each outlying issue and apply a label (outlier) to it if it is confirmed
    to be an outlier.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a new quick filter for the board with the following JQL: `labelsnotin(outlier)`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the new quick filter from the Quick Filters field on the control chart.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can use this technique to filter out other issues that might skew your chart,
    such as duplicated issues.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we looked at using Jira Software for Kanban. We have looked
    at the Kanban board and how to configure it to model your existing workflow, as
    well as setting up column constraints to limit the work in progress, which is
    the key concept with Kanban. We also looked at some of the charts that are available
    to help you identify potential bottlenecks in your process so that you and your
    team can work together to address those issues and improve your process.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have covered using Jira for both Scrum and Kanban, we will look
    at some of the unique additions Jira brings to these two agile methodologies,
    namely Scrumban and Kanplan, in the next chapter.
  prefs: []
  type: TYPE_NORMAL
