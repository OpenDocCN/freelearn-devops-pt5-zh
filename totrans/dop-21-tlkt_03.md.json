["```\nfor i in 1 2 3; do\n  docker-machine create -d virtualbox node-$i\ndone\n\neval $(docker-machine env node-1)\n\ndocker swarm init \\\n  --advertise-addr $(docker-machine ip node-1)\n\nTOKEN=$(docker swarm join-token -q worker)\n\nfor i in 2 3; do\neval $(docker-machine env node-$i)\n\n  docker swarm join \\\n    --token $TOKEN \\\n    --advertise-addr $(docker-machine ip node-$i) \\\n    $(docker-machine ip node-1):2377\ndone\n\neval $(docker-machine env node-1)\n\ndocker node ls\n\n```", "```\nHOSTNAME  STATUS  AVAILABILITY  MANAGER STATUS\nnode-2    Ready   Active\nnode-1    Ready   Active        Leader\nnode-3    Ready   Active\n\n```", "```\ndocker service create --name go-demo-db \\\n  mongo:3.2.10\n\n```", "```\ndocker service inspect --pretty go-demo-db\n\n```", "```\nID:            rcedo70r2f1njpm0eyb3nwf8w\nName:          go-demo-db\nService Mode:  Replicated\n Replicas:     1\nPlacement:\nUpdateConfig:\n Parallelism:  1\n On failure:   pause\n Max failure ratio: 0\nContainerSpec:\n Image:      mongo:3.2.10@sha256:532a19da83ee0e4e2a2ec6bc4212fc4af\\\n26357c040675d5c2629a4e4c4563cef\nResources:\nEndpoint Mode: vip\n\n```", "```\ndocker service rm go-demo-db\n\n```", "```\ndocker network create --driver overlay go-demo\n\ndocker service create --name go-demo-db \\\n  --network go-demo \\\n  mongo:3.2.10\n\n```", "```\ndocker service inspect --pretty go-demo-db\n\n```", "```\nID:            ktrxcgp3gtszsjvi7xg0hmd73\nName:          go-demo-db\nService Mode:  Replicated\n Replicas:     1\nPlacement:\nUpdateConfig:\n Parallelism:  1\n On failure:   pause\n Max failure ratio: 0\nContainerSpec:\n Image:           mongo:3.2.10@sha256:532a19da83ee0e4e2a2ec6bc4212fc4af26357c040675d\n5c2629a4e4c4563cef\nResources:\nNetworks:      go-demo\nEndpoint Mode: vip\n\n```", "```\ndocker service create --name util \\\n    --network go-demo --mode global \\\n    alpine sleep 1000000000\n\n```", "```\ndocker service ps util\n\n```", "```\nNAME    IMAGE         NODE   DESIRED STATE CURRENT STATE        \nutil... alpine:latest node-1 Running       Running 6 minutes ago\nutil... alpine:latest node-3 Running       Running 6 minutes ago\nutil... alpine:latest node-2 Running       Running 6 minutes ago\n\n```", "```\nID=$(docker ps -q --filter label=com.docker.swarm.service.name=util)\n\n```", "```\n--filter label=com.docker.swarm.service.name=util\n\n```", "```\ndocker exec -it $ID apk add --update drill\n\n```", "```\ndocker exec -it $ID drill go-demo-db\n\n```", "```\n;; ->>HEADER<<- opcode: QUERY, rcode: NOERROR, id: 5751\n;; flags: qr rd ra ; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0\n;; QUESTION SECTION:\n;; go-demo-db.  IN      A\n\n;; ANSWER SECTION:\ngo-demo-db.     600     IN      A       10.0.0.2\n\n;; AUTHORITY SECTION:\n\n;; ADDITIONAL SECTION:\n\n;; Query time: 0 msec\n;; SERVER: 127.0.0.11\n;; WHEN: Thu Sep  1 12:53:42 2016\n;; MSG SIZE  rcvd: 54\n\n```", "```\ndocker network create --driver overlay proxy\n\n```", "```\ndocker network ls -f \"driver=overlay\"\n\n```", "```\nNETWORK ID   NAME    DRIVER  SCOPE\nb17kzasd3gzu go-demo overlay swarm\n0d7ssryojcyg ingress overlay swarm\n9e4o7abyts0v proxy   overlay swarm\n\n```", "```\ndocker service create --name go-demo \\\n  -e DB=go-demo-db \\\n  --network go-demo \\\n  --network proxy \\\n  vfarcic/go-demo:1.0\n\n```", "```\ndocker service create --name proxy \\\n    -p 80:80 \\\n    -p 443:443 \\ \n    -p 8080:8080 \\ \n    --network proxy \\ \n    -e MODE=swarm \\\n    vfarcic/docker-flow-proxy\n\n```", "```\ndocker service ps proxy\n\n```", "```\ncurl \"$(docker-machine ip node-1):8080/v1/docker-flow-\\\nproxy/reconfigure?serviceName=go-demo&servicePath=/demo&port=8080\"\n\n```", "```\n{\n  \"Mode\": \"swarm\",\n  \"Status\": \"OK\",\n  \"Message\": \"\",\n  \"ServiceName\": \"go-demo\",\n  \"AclName\": \"\",\n  \"ConsulTemplateFePath\": \"\",\n  \"ConsulTemplateBePath\": \"\",\n  \"Distribute\": false,\n  \"HttpsOnly\": false,\n  \"HttpsPort\": 0,\n  \"OutboundHostname\": \"\",\n  \"PathType\": \"\",\n  \"ReqMode\": \"http\",\n  \"ReqRepReplace\": \"\",\n  \"ReqRepSearch\": \"\",\n  \"ReqPathReplace\": \"\",\n  \"ReqPathSearch\": \"\",\n  \"ServiceCert\": \"\",\n  \"ServiceDomain\": null,\n  \"SkipCheck\": false,\n  \"TemplateBePath\": \"\",\n  \"TemplateFePath\": \"\",\n  \"TimeoutServer\": \"\",\n  \"TimeoutTunnel\": \"\",\n  \"Users\": null,\n  \"ServiceColor\": \"\",\n  \"ServicePort\": \"\",\n  \"AclCondition\": \"\",\n  \"FullServiceName\": \"\",\n  \"Host\": \"\",\n  \"LookupRetry\": 0,\n  \"LookupRetryInterval\": 0,\n  \"ServiceDest\": [\n    {\n      \"Port\": \"8080\",\n      \"ServicePath\": [\n          \"/demo\"\n      ],\n      \"SrcPort\": 0,\n      \"SrcPortAcl\": \"\",\n      \"SrcPortAclName\": \"\"\n    }\n  ]\n}\n\n```", "```\ncurl -i \"$(docker-machine ip node-1)/demo/hello\"\n\n```", "```\nHTTP/1.1 200 OK\nDate: Thu, 01 Sep 2016 14:23:33 GMT\nContent-Length: 14\nContent-Type: text/plain; charset=utf-8\n\nhello, world!\n\n```", "```\ncurl -i \"$(docker-machine ip node-3)/demo/hello\"\n\n```", "```\nNODE=$(docker service ps proxy | tail -n +2 | awk '{print $4}')\n\n```", "```\neval $(docker-machine env $NODE)\n\n```", "```\nID=$(docker ps -q \\\n    --filter label=com.docker.swarm.service.name=proxy)\n\n```", "```\ndocker exec -it \\\n$ID cat /cfg/haproxy.cfg\n\n```", "```\nfrontend services\n    bind *:80\n    bind *:443\n    mode http\n\n    acl url_go-demo8080 path_beg /demo\n    use_backend go-demo-be8080 if url_go-demo8080\n\nbackend go-demo-be8080\n    mode http\n    server go-demo go-demo:8080\n\n```", "```\neval $(docker-machine env node-1)\n\ndocker service scale go-demo=5\n\n```", "```\nbackend go-demo-be\n  server instance_1 <INSTANCE_1_IP>:<INSTANCE_1_PORT>\n  server instance_2 <INSTANCE_2_IP>:<INSTANCE_2_PORT>\n  server instance_3 <INSTANCE_3_IP>:<INSTANCE_3_PORT>\n  server instance_4 <INSTANCE_4_IP>:<INSTANCE_4_PORT>\n  server instance_5 <INSTANCE_5_IP>:<INSTANCE_5_PORT>\n\n```", "```\nID=$(docker ps -q --filter label=com.docker.swarm.service.name=util)\n\ndocker exec -it $ID apk add --update drill\n\ndocker exec -it $ID drill go-demo\n\n```", "```\n;; ->>HEADER<<- opcode: QUERY, rcode: NOERROR, id: 50359\n;; flags: qr rd ra ; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0\n;; QUESTION SECTION:\n;; go-demo.     IN      A\n\n;; ANSWER SECTION:\ngo-demo.        600     IN      A       10.0.0.8\n\n;; AUTHORITY SECTION:\n\n;; ADDITIONAL SECTION:\n\n;; Query time: 0 msec\n;; SERVER: 127.0.0.11\n;; WHEN: Thu Sep  1 17:46:09 2016\n;; MSG SIZE  rcvd: 48\n\n```", "```\ndocker-machine rm -f node-1 node-2 node-3\n\n```"]