["```\ndocker run --name some-mysql -e MYSQL_ROOT_PASSWORD=mysecretpassword -d mysql\ndocker run --name some-wordpress --link some-mysql:mysql -d -p 80 wordpress\n\n```", "```\nFROM php:5.6-apache\n\nRUN a2enmod rewrite\n\n# install the PHP extensions we need\nRUN apt-get update && apt-get install -y libpng12-dev libjpeg-dev && rm -rf /var/lib/apt/lists/* \\\n && docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr \\\n && docker-php-ext-install gd\nRUN docker-php-ext-install mysqli\n\nVOLUME /var/www/html\n\nENV WORDPRESS_VERSION 4.1.1\nENV WORDPRESS_UPSTREAM_VERSION 4.1.1\nENV WORDPRESS_SHA1 15d38fe6c73121a20e63ccd8070153b89b2de6a9\n\n# upstream tarballs include ./wordpress/ so this gives us /usr/src/wordpress\nRUN curl -o wordpress.tar.gz -SL https://wordpress.org/wordpress-${WORDPRESS_UPSTREAM_VERSION}.tar.gz \\\n && echo \"$WORDPRESS_SHA1 *wordpress.tar.gz\" | sha1sum -c - \\\n && tar -xzf wordpress.tar.gz -C /usr/src/ \\\n && rm wordpress.tar.gz\n\nCOPY docker-entrypoint.sh /entrypoint.sh\n\n# grr, ENTRYPOINT resets CMD now\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"apache2-foreground\"]\n\n```", "```\nRUN a2enmod rewrite expires headers\n\n```", "```\ndocker build –t mod-wp .\n\n```", "```\nRUN touch /usr/local/etc/php/conf.d/upload-limit.ini \\\n && echo \"upload_max_filesize = 32M\" >> /usr/local/etc/php/conf.d/upload-limit.ini \\\n && echo \"post_max_size = 32M\" >> /usr/local/etc/php/conf.d/upload-limit.ini\n#Paste above this line.\nRUN a2enmod rewrite expires headers\n\n```", "```\ndocker run --name some-mysql -e MYSQL_ROOT_PASSWORD=mysecretpassword -d mysql\ndocker run --name some-wordpress --link some-mysql:mysql -d -p 80 mod-wp:latest\n\n```", "```\nRUN apt-get update && apt-get install -y unzip rsync && rm -r /var/lib/apt/lists/*\n```", "```\ndl_and_move_plugin() {\n  name=\"$1\"\n  curl -O $(curl -i -s \"https://wordpress.org/plugins/$name/\" | egrep -o \"https://downloads.wordpress.org/plugin/[^']+\")\n  unzip -o \"$name\".*.zip -d $(pwd)/wp-content/plugins\n}\n```", "```\ndl_and_move_plugin \"wp-super-cache\"\ndl_and_move_plugin \"wp-mail-smtp\"\n\n```", "```\ndocker build –t mod-wp:latest\n\n```", "```\ndocker run --name some-mysql -e MYSQL_ROOT_PASSWORD=mysecretpassword -d mysql\ndocker run --name some-wordpress --link some-mysql:mysql -d -p 80 mod-wp:latest\n\n```", "```\nFROM wordpress:latest\nRUN apt-get update && apt-get install -y unzip && rm -r /var/lib/apt/lists/*\nRUN touch /usr/local/etc/php/conf.d/upload-limit.ini \\\n && echo \"upload_max_filesize = 32M\" >> /usr/local/etc/php/conf.d/upload-limit.ini \\\n && echo \"post_max_size = 32M\" >> /usr/local/etc/php/conf.d/upload-limit.ini\nRUN a2enmod expires headers\nVOLUME /var/www/html\nCOPY docker-entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"apache2\", \"-DFOREGROUND\"]\n\n```", "```\ngit clone git@github.com:yourusername/my-docker-images.git\n\n```", "```\ncd my-docker-images\ngit checkout -b wordpress\ngit add .\ngit commit –m \"Adding new files.\"\ngit push origin wordpress\n\n```", "```\ndocker pull oskarhane/wordpress\ndocker images\ndocker run --name mysql -e MYSQL_ROOT_PASSWORD=mysecretpassword -d mysql\ndocker run --name my-wordpress --link mysql:mysql -d -p 80 oskarhane/wordpress\ndocker ps\n```"]