["```\n      FROM ubuntu:16.04 \n      VOLUME /MountPointDemo \n\n```", "```\n      $ sudo docker build -t mount-point-demo .\n\n```", "```\n $ sudo docker inspect mount-point-demo\n [\n {\n \"Id\": \"sha256:<64 bit hex id>\",\n \"RepoTags\": [\n \"mount-point-demo:latest\"\n ],\n ... TRUNCATED OUTPUT ... \n \"Volumes\": {\n \"/MountPointDemo\": {}\n },\n ... TRUNCATED OUTPUT ...\n\n```", "```\n      $ sudo docker run --rm -it mount-point-demo\n\n```", "```\n root@8d22f73b5b46:/# ls -ld /MountPointDemo\n drwxr-xr-x 2 root root 4096 Nov 18 19:22 \n /MountPointDemo\n\n```", "```\n root@8d22f73b5b46:/# mount | grep MountPointDemo\n /dev/xvda2 on /MountPointDemo type ext3 \n (rw,noatime,nobarrier,errors=remount-ro,data=ordered) \n\n```", "```\n $ sudo docker inspect -f \n '{{json .Mounts}}' 8d22f73b5b46 \n [\n {\n \"Propagation\": \"\",\n \"RW\": true,\n \"Mode\": \"\",\n \"Driver\": \"local\",\n \"Destination\": \"/MountPointDemo\",\n \"Source\":\n\"/var/lib/docker/volumes/720e2a2478e70a7cb49ab7385b8be627d4b6ec52e6bb33063e4144355d59592a/_data\",\n\"Name\": \"720e2a2478e70a7cb49ab7385b8be627d4b6ec52e6bb33063e4144355d59592a\"\n }\n ]\n\n```", "```\n$ sudo docker run -v /MountPointDemo -it ubuntu:16.04  \n\n```", "```\n$ sudo docker rm -v 8d22f73b5b46  \n\n```", "```\n$ sudo docker rm -fv 8d22f73b5b46  \n\n```", "```\n$ sudo docker volume create\n50957995c7304e7d398429585d36213bb87781c53550b72a6a27c755c7a99639\n\n```", "```\n$ sudo docker volume create --name example\nexample  \n\n```", "```\n$ sudo docker volume ls\nDRIVER VOLUME NAME\nlocal 50957995c7304e7d398429585d36213bb87781c53550b72a6a27c755c7a99639\nlocal example  \n\n```", "```\n$ sudo docker volume inspect example\n[\n {\n \"Name\": \"example\",\n \"Driver\": \"local\",\n \"Mountpoint\": \n \"/var/lib/docker/volumes/example/_data\",\n \"Labels\": {},\n \"Scope\": \"local\"\n }\n]\n\n```", "```\n$ sudo docker volume rm example\nexample\n\n```", "```\n      $ sudo docker run -v /tmp/hostdir:/MountPoint \\\n -it ubuntu:16.04\n\n```", "```\n root@4a018d99c133:/# ls -ld /MountPoint\n drwxr-xr-x 2 root root 4096 Nov 23 18:28 \n /MountPoint\n\n```", "```\n root@4a018d99c133:/# mount | grep MountPoint\n /dev/xvda2 on /MountPoint type ext3 \n (rw,noatime,nobarrier,errors=\n remount-ro,data=ordered)\n\n```", "```\n root@4a018d99c133:/# cd /MountPoint/\n root@4a018d99c133:/MountPoint# touch {a,b,c}\n root@4a018d99c133:/MountPoint# ls -l\n total 0\n -rw-r--r-- 1 root root 0 Nov 23 18:39 a\n -rw-r--r-- 1 root root 0 Nov 23 18:39 b\n -rw-r--r-- 1 root root 0 Nov 23 18:39 c\n\n```", "```\n $ sudo ls -l /tmp/hostdir/\n total 0\n -rw-r--r-- 1 root root 0 Nov 23 12:39 a\n -rw-r--r-- 1 root root 0 Nov 23 12:39 b\n -rw-r--r-- 1 root root 0 Nov 23 12:39 c\n\n```", "```\n $ sudo docker inspect \\\n --format='{{json .Mounts}}' 4a018d99c133\n [{\"Source\":\"/tmp/hostdir\",\n \"Destination\":\"/MountPoint\",\"Mode\":\"\",\n \"RW\":true,\"Propagation\":\"rprivate\"}]\n\n```", "```\n      $ touch /tmp/hostfile.txt\n\n```", "```\n      $ sudo docker run -v /tmp/hostfile.txt:/mntfile.txt \\\n -it ubuntu:16.04\n\n```", "```\n root@d23a15527eeb:/# ls -l /mntfile.txt\n -rw-rw-r-- 1 1000 1000 0 Nov 23 19:33 /mntfile.txt\n\n```", "```\n root@d23a15527eeb:/# mount | grep mntfile\n /dev/xvda2 on /mntfile.txt type ext3 \n (rw,noatime,nobarrier,errors=remount-ro,data=ordered)\n\n```", "```\n      root@d23a15527eeb:/# echo \"Writing from Container\" \n > mntfile.txt\n\n```", "```\n $ cat /tmp/hostfile.txt\n Writing from Container \n\n```", "```\n $ sudo docker inspect \\\n --format='{{json .Mounts}}' d23a15527eeb\n [{\"Source\":\"/tmp/hostfile.txt\", \n \"Destination\":\"/mntfile.txt\",\n \"Mode\":\"\",\"RW\":true,\"Propagation\":\"rprivate\"}]\n\n```", "```\n      $ docker volume create --name namedvol\n\n```", "```\n      $ sudo docker run -v namedvol:/MountPoint \\\n -it ubuntu:16.04\n\n```", "```\n      $ sudo docker run -d -p 80:80 \\\n -v /var/log/myhttpd:/var/log/apache2 apache2\n9c2f0c0b126f21887efaa35a1432ba7092b69e0c6d523ffd50684e27eeab37ac\n\n```", "```\n      $ cd /var/log/myhttpd\n\n```", "```\n $ ls -1\n access.log\n error.log\n other_vhosts_access.log\n\n```", "```\n $ tail -f *.log\n ==> access.log <==\n\n ==> error.log <==\n AH00558: apache2: Could not reliably determine the \n server's fully qualified domain name, using 172.17.0.17\\. \n Set the 'ServerName' directive globally to suppress this \n message\n [Thu Nov 20 17:45:35.619648 2014] [mpm_event:notice] \n [pid 16:tid 140572055459712] AH00489: Apache/2.4.7 \n (Ubuntu) configured -- resuming normal operations\n [Thu Nov 20 17:45:35.619877 2014] [core:notice] \n [pid 16:tid 140572055459712] AH00094: Command line: \n '/usr/sbin/apache2 -D FOREGROUND'\n ==> other_vhosts_access.log <==\n\n```", "```\n ==> access.log <==\n 111.111.172.18 - - [20/Nov/2014:17:53:38 +0000] \"GET / \n HTTP/1.1\" 200 3594 \"-\" \"Mozilla/5.0 (Windows NT 6.1; \n WOW64) \n AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.65 \n Safari/537.36\"\n 111.111.172.18 - - [20/Nov/2014:17:53:39 +0000] \"GET \n /icons/ubuntu-logo.png HTTP/1.1\" 200 3688 \n \"http://111.71.123.110/\" \"Mozilla/5.0 (Windows NT 6.1; \n WOW64) \n AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.65 \n Safari/537.36\"\n 111.111.172.18 - - [20/Nov/2014:17:54:21 +0000] \"GET \n /favicon.ico HTTP/1.1\" 404 504 \"-\" \"Mozilla/5.0 (Windows \n NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) \n Chrome/39.0.2171.65 Safari/537.36\"\n\n```", "```\n$ sudo docker run --name datavol \\\n -v /DataMount \\\n busybox:latest /bin/true\n\n```", "```\n      $ sudo docker run -it \\\n --volumes-from datavol \\\n ubuntu:latest /bin/bash\n\n```", "```\n root@e09979cacec8:/# mount | grep DataMount\n /dev/xvda2 on /DataMount type ext3 \n (rw,noatime,nobarrier,errors=remount-ro,data=ordered)\n\n```", "```\n      $ sudo docker inspect --format='{{json .Mounts}}' \n e09979cacec8\n [{\"Name\":\n \"7907245e5962ac07b31c6661a4dd9b283722d3e7d0b0fb40a90\n 43b2f28365021\",\"Source\":\n \"/var/lib/docker/volumes \n /7907245e5962ac07b31c6661a4dd9b283722d3e7d0b0fb40a9043b\n 2f28365021/_data\",\"Destination\":\"\n /DataMount\",\"Driver\":\"local\",\"Mode\":\"\",\n \"RW\":true,\"Propagation\":\"\"}]\n\n```", "```\n      root@e09979cacec8:/# echo \\\n \"Data Sharing between Container\" > \\\n /DataMount/testfile \n\n```", "```\n      $ sudo docker run --rm \\\n --volumes-from datavol \\\n busybox:latest cat /DataMount/testfile\n\n```", "```\n      Data Sharing between Container\n\n```", "```\n$ sudo docker run --name vol1 --volumes-from datavol \\\n busybox:latest /bin/true\n$ sudo docker run --name vol2 --volumes-from vol1 \\\n busybox:latest /bin/true\n\n```", "```\n      ####################################################### \n      # Dockerfile to build a LOG Volume for Apache2 Service \n      ####################################################### \n      # Base image is BusyBox \n      FROM busybox:latest \n      # Author: Dr. Peter \n      MAINTAINER Dr. Peter <peterindia@gmail.com> \n      # Create a data volume at /var/log/apache2, which is \n      # same as the log directory PATH set for the apache image \n      VOLUME /var/log/apache2 \n      # Execute command true \n      CMD [\"/bin/true\"] \n\n```", "```\n $ sudo docker build -t apache2log .\n Sending build context to Docker daemon 2.56 kB\n Sending build context to Docker daemon\n Step 0 : FROM busybox:latest\n ... TRUNCATED OUTPUT ...\n\n```", "```\n      $ sudo docker run --name log_vol apache2log\n\n```", "```\n $ sudo docker ps -a\n CONTAINER ID IMAGE COMMAND \n CREATED STATUS PORTS \n NAMES\n 40332e5fa0ae apache2log:latest \"/bin/true\" \n 2 minutes ago Exited (0) 2 minutes ago \n log_vol\n\n```", "```\n      $ sudo docker run -d -p 80:80 \\\n --volumes-from log_vol \\\n apache2\n 7dfbf87e341c320a12c1baae14bff2840e64afcd082dda3094e7cb0a0023cf42  \n\n```", "```\n $ sudo docker run --rm \\\n --volumes-from log_vol \\\n busybox:latest ls -l /var/log/apache2\n total 4\n -rw-r--r-- 1 root root 0 Dec 5 15:27 \n access.log\n -rw-r--r-- 1 root root 461 Dec 5 15:27 \n error.log\n -rw-r--r-- 1 root root 0 Dec 5 15:27 \n other_vhosts_access.log\n\n```", "```\n $ sudo docker run --rm \\\n --volumes-from log_vol \\\n ubuntu:16.04 \\\n tail /var/log/apache2/error.log\n AH00558: apache2: Could not reliably determine the \n server's fully qualified domain name, using 172.17.0.24\\. \n Set the 'ServerName' directive globally to suppress this \n message\n [Fri Dec 05 17:28:12.358034 2014] [mpm_event:notice] \n [pid 18:tid 140689145714560] AH00489: Apache/2.4.7 \n (Ubuntu) configured -- resuming normal operations\n [Fri Dec 05 17:28:12.358306 2014] [core:notice] \n [pid 18:tid 140689145714560] AH00094: Command line: \n '/usr/sbin/apache2 -D FOREGROUND'\n\n```", "```\n      # Use Ubuntu as the base image \n      FROM ubuntu:16.04 \n\n```", "```\n      VOLUME /MountPointDemo \n\n```", "```\n      RUN date > /MountPointDemo/date.txt \n\n```", "```\n      RUN cat /MountPointDemo/date.txt \n\n```", "```\n $ sudo docker build -t testvol .\n Sending build context to Docker daemon 2.56 kB\n Sending build context to Docker daemon\n Step 0 : FROM ubuntu:16.04\n ---> 9bd07e480c5b\n Step 1 : VOLUME /MountPointDemo\n ---> Using cache\n ---> e8b1799d4969\n Step 2 : RUN date > /MountPointDemo/date.txt\n ---> Using cache\n ---> 8267e251a984\n Step 3 : RUN cat /MountPointDemo/date.txt\n ---> Running in a3e40444de2e\n cat: /MountPointDemo/date.txt: No such file or directory\n 2014/12/07 11:32:36 The command [/bin/sh -c cat \n /MountPointDemo/date.txt] returned a non-zero code: 1\n\n```"]