- en: Key Concepts of Cloud Computing
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 云计算的关键概念
- en: Cloud has been a buzzword for quite some time and is a big trend in IT. More
    and more companies are starting their cloud journeys but starting these journeys
    can be hard. Different skills and a different mindset are needed when compared
    to on-premises IT, and cloud administrators are in demand. In this book, we'll
    start our cloud journey together and help you to get a grasp on cloud administration
    and to understand Microsoft Azure services and architecture. Become an Azure expert
    and help your company have a safe and pleasant journey to Azure.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 云计算已经成为一个流行词，并且在 IT 领域是一个大趋势。越来越多的公司开始了他们的云计算之旅，但开始这些旅程并不容易。与传统的本地 IT 环境相比，云计算需要不同的技能和思维方式，而云管理员的需求也在不断增长。在本书中，我们将共同开启云计算之旅，帮助你掌握云管理并理解
    Microsoft Azure 的服务与架构。成为 Azure 专家，帮助你的公司顺利且安全地过渡到 Azure。
- en: 'The topics we''re going to cover include the following:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将要讨论的主题包括以下内容：
- en: Cloud computing concepts
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 云计算概念
- en: Cloud services models
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 云服务模型
- en: Azure subscription model
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure 订阅模型
- en: Cloud computing concepts
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 云计算概念
- en: 'As we are going to use Microsoft Azure, it''s important that we understand
    the key concepts of cloud computing and especially the concept of the public cloud,
    as Azure is exactly that: a public cloud.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们将使用 Microsoft Azure，因此理解云计算的关键概念，尤其是公共云的概念非常重要，因为 Azure 正是一个公共云。
- en: In the past, we have seen many trends in the IT industry; some of them were
    short-term and some of them stayed for quite some time. Many consider cloud computing
    to be a trend that will not be here for a long time, but they don't really understand
    the concept of the cloud and where it all begins.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去，我们看到过许多 IT 行业的趋势；其中一些是短期的，而另一些则持续了很长时间。许多人认为云计算是一个短期趋势，未来不会存在太久，但他们并没有真正理解云计算的概念以及这一切是如何开始的。
- en: 'Cloud computing didn''t just starting with public cloud offerings, but it began in
    the 1990s. Obviously, the cloud didn''t have a form like it does today but started
    more as something that companies implemented internally, offering their employees
    the option to create virtual machines on demand. At this stage, the cloud included
    a virtualization platform that allowed employees to create development/test environments
    composed of virtual machines based on preprepared images when needed. Two components
    are part of the foundation of cloud computing: virtualization and on-demand resources.
    None of this would be possible without server virtualization, an option that allows
    us to create many virtual machines on a single physical server. Cloud takes virtualization
    to another level beyond just simple server virtualization, but we''ll get to that
    a bit later.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 云计算并不是从公共云服务开始的，而是始于 1990 年代。显然，云计算的形式与今天并不相同，而是更多地作为企业内部实施的一种方式，为员工提供按需创建虚拟机的选项。在这一阶段，云计算包括一个虚拟化平台，允许员工基于预先准备好的镜像按需创建开发/测试环境。云计算的基础包括两个组成部分：虚拟化和按需资源。没有服务器虚拟化，这一切都无法实现，服务器虚拟化允许我们在单一物理服务器上创建多个虚拟机。云计算将虚拟化提升到另一个层次，超越了单纯的服务器虚拟化，但我们稍后会详细讨论。
- en: The ability to get resources on demand, when we need them, is the foundation
    of what cloud computing is about. As mentioned before, it all started with virtualization
    platforms and companies creating platforms that would enable their employees to
    create virtual machines on demand. Today, we call this the private cloud.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 按需获取资源的能力，正是云计算的基础。如前所述，云计算始于虚拟化平台，企业通过创建平台使员工能够按需创建虚拟机。今天，我们称之为私有云。
- en: Types of cloud computing
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 云计算的类型
- en: 'There are different types of cloud computing and different opinions on how
    they should be categorized. Personally, I find four types most logical:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 云计算有不同的类型，而且对如何分类也有不同的看法。就我个人而言，我认为以下四种类型是最合逻辑的：
- en: '**Private**: Everything hosted internally, in our own data center.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**私有**：一切都托管在内部，即我们自己的数据中心。'
- en: '**Hosted**: Something between a private and public cloud; the service provider
    creates a separate environment in their data center and offers us an isolated
    cloud for our use only.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**托管**：介于私有云和公共云之间；服务提供商在他们的数据中心创建一个独立的环境，仅为我们提供一个专用的云。'
- en: '**Public**: The service provider offers a service available to everyone—publicly
    available. There is still tenant isolation but we''ll talk about this later.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**公共**：服务提供商提供的服务对所有人开放——公共可用。虽然仍然有租户隔离，但我们稍后会讨论这个问题。'
- en: '**Hybrid**: A combination of private and public cloud. Some services are used
    in the public cloud but some stay in our local data center with direct connection
    between two or more environments. From my experience, this is the most common
    form of cloud computing. Again, we''ll explain more about this later.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**混合云**：私有云与公共云的结合。部分服务使用公共云，但一些服务保留在本地数据中心，并且两个或多个环境之间有直接连接。根据我的经验，这是最常见的云计算形式。我们稍后会详细解释更多内容。'
- en: In the private cloud, all resources are located on-premises, in our local data
    center, and no internet access is needed to access resources. The internet and
    resources are accessed separately as shown in the following diagram. Building
    your own private cloud previously required large-scale investment, both materially
    and in terms of knowledge. First, you needed space and needed to consider other
    elements like cooling and power. Then, you needed to invest in hardware like firewalls,
    routers, network switches, servers, and storage.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在私有云中，所有资源都位于本地数据中心，无需互联网访问即可访问资源。互联网和资源是分开访问的，如下图所示。构建自己的私有云以前需要大量的投资，无论是物质上还是在知识上。首先，你需要空间，并且需要考虑其他因素，如冷却和电力。然后，你需要投资硬件，如防火墙、路由器、网络交换机、服务器和存储设备。
- en: 'You needed licenses for a virtualization layer, operating system licenses for
    virtual machines, and then licenses for different kinds of software. In the end,
    all material investment was in vain if you didn''t have the right people to set
    everything up and maintain it in the years to come. Once everything was in place
    and you had your private cloud running, it required new investment every few years
    as you needed new versions of software (virtualization, operating systems, and
    other software) and hardware needed to be replaced as well:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要为虚拟化层、虚拟机的操作系统许可证以及各种软件购买许可证。最终，如果没有合适的人来设置和维护系统，所有的物质投资都将付之东流。一旦一切就绪，私有云投入运行后，每隔几年就需要进行新的投资，因为你需要新版本的软件（虚拟化、操作系统及其他软件），硬件也需要替换：
- en: '![](img/afb579d2-d83b-4278-a92d-8354605554db.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](img/afb579d2-d83b-4278-a92d-8354605554db.png)'
- en: The hosted cloud came as the first step in the transition from the private cloud
    to the public. As creating and maintaining your own private cloud demanded large-scale
    investment, some companies took advantage and started offering services where
    you could rent part of their data center and use it as your own private cloud.
    They specialized in this kind of offer; it was cheaper for them to buy hardware
    and software as vendors offered discounts on mass purchases. So, creating an environment
    in the hosted cloud was cheaper then creating an identical environment in the
    private cloud.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 托管云是从私有云到公共云过渡的第一步。由于创建和维护自己的私有云需要大规模投资，一些公司开始提供租用部分数据中心的服务，将其作为自己的私有云使用。他们专注于此类服务；由于供应商提供大宗采购折扣，他们更容易购买硬件和软件。因此，在托管云中创建环境比在私有云中创建相同的环境要便宜。
- en: There is also the question of upfront investment; using the private cloud requires
    that all hardware and most software licenses be paid for upfront, so many companies
    have decided to use the hosted cloud as they don't have to make an upfront investment
    but monthly or yearly subscriptions instead. Also, it's easier for data centers
    to provide experts to maintain systems as a single expert can take care of multiple
    customer environments. For the private cloud, you need a network engineer, a storage
    specialist, a virtualization specialist, and so on, and this is for a single data
    center.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个问题是前期投资；使用私有云要求所有硬件和大部分软件许可证需提前支付，因此许多公司决定使用托管云，因为他们不需要进行前期投资，而是每月或每年订阅。此外，数据中心更容易提供专家来维护系统，因为一个专家可以同时照看多个客户的环境。而对于私有云，你需要网络工程师、存储专家、虚拟化专家等，这些仅仅是单一数据中心所需的人员。
- en: 'In the case of a hosted cloud, all personnel are still required but a single
    specialist can set up and maintain environments for multiple customers and the
    price of maintenance is lower than for a private cloud. Note that to access the
    hosted cloud, usually some sort of **Virtual Private Network** (**VPN**), either
    site-to-site or point-to-site, is required. We access resources located outside
    our own network and located in another hosted network as shown in the following
    diagram:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在托管云的情况下，仍然需要所有工作人员，但一名专家可以为多个客户设置和维护环境，且维护成本低于私有云。请注意，访问托管云通常需要某种形式的**虚拟专用网络**（**VPN**），无论是站点到站点还是点到站点。我们通过访问位于自己网络外部并位于其他托管网络中的资源，如下图所示：
- en: '![](img/376e63df-cbae-43f9-81a4-1bca96b6d341.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](img/376e63df-cbae-43f9-81a4-1bca96b6d341.jpg)'
- en: In the next step of cloud evolution, the public cloud emerged. Large service
    providers offered large amounts of resources for on-demand use. Similar to the
    hosted cloud, resources you used were still outside your local infrastructure
    and hosted by service providers who specialized in this kind of offer.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在云计算发展的下一阶段，公共云应运而生。大型服务提供商提供大量的资源供按需使用。与托管云类似，你使用的资源仍然位于本地基础设施之外，并由专门提供此类服务的服务提供商托管。
- en: 'There are two key differences. The first difference is that in a hosted data
    center the amount of resources available I usually predetermined and to get more
    resources you need to wait for new resources to be configured, if this becomes
    available at all. In the public cloud, providers have a large amount of resources
    available for on-demand requests and you can get them whenever you need them.
    You can create any kind and any amount of resources when needed. All you need
    is to create a subscription and access to the internet to start deploying. This
    also means you have highly scalable environments and you are not limited by the
    initial size of the resources created. For example, if you create a virtual machine
    with four CPUs and 16 GB of RAM and find out over time that the virtual machine
    can''t handle the workload you have, you don''t need to create a new virtual machine;
    you can use a scale-up option to change size. Scaling up is explained later in
    more detail. This works other way around: If you find out that the size of the
    virtual machine initially created is too large for your workload, you don''t need
    to keep that size and pay for something you don''t need. Simply scaling down will
    do the trick. In this case, we access resources over the internet as shown in
    the following diagram:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 有两个关键区别。第一个区别是，在托管数据中心中，资源的数量通常是预先确定的，若需要更多资源，你必须等待新资源的配置（如果资源有可用的话）。而在公共云中，服务提供商有大量的资源可供按需请求，你可以随时获取所需资源。你可以根据需要创建任何种类和数量的资源。所需的仅是创建一个订阅并连接互联网以开始部署。这也意味着你拥有高度可扩展的环境，不受初始创建的资源大小限制。例如，如果你创建了一个有四个
    CPU 和 16 GB RAM 的虚拟机，并且随着时间的推移发现该虚拟机无法处理你所需的工作负载，你不需要创建新的虚拟机；你可以使用扩展选项来更改大小。扩展的详细信息将在后面解释。反过来，如果你发现最初创建的虚拟机的大小对于你的工作负载来说过大，你不需要继续保持该大小并为不需要的部分支付费用。只需缩小即可解决问题。在这种情况下，我们通过互联网访问资源，如下图所示：
- en: '![](img/b23de14d-d2a8-4154-889d-44dd73f9cbce.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b23de14d-d2a8-4154-889d-44dd73f9cbce.png)'
- en: The other difference between a hosted cloud and a private cloud is pricing.
    In a hosted cloud, you would get an agreed amount of resources and pay a monthly
    or yearly subscription no matter in what capacity these resources are used, whether 10%
    or 100%. In the public cloud, pricing is based on usage and the model of payment
    is such that you pay for only things that are used. So, in the public cloud, if
    you create a virtual machine, you will be paying for that virtual machine for
    the time you actually use it. If you stop or delete this virtual machine, you
    will not be paying for it. The payment model is different for different cloud
    providers and can vary by per-day, per-hour, or per-minute usage. As we'll talk
    about Microsoft Azure, it's important to mention that Azure is using a per-minute
    billing system. So, for example, if you create a virtual machine in Microsoft
    Azure and delete it after 12 days, 11 hours and 13 minutes, the amount you pay
    will be calculated for that exact amount of time. In a per-hour billing system,
    you would pay for 12 days and 12 hours. In a per-day billing system, you would
    pay for 13 days.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 托管云与私有云的另一个区别在于定价。在托管云中，您将获得一定量的资源，并且无论这些资源以何种容量使用，您都要支付每月或每年的订阅费用，无论是10%还是100%。在公共云中，定价是基于使用量，支付模式是您仅支付实际使用的内容。因此，在公共云中，如果您创建了虚拟机，您将仅为实际使用的时间支付该虚拟机的费用。如果停止或删除此虚拟机，您将不再支付费用。不同云服务提供商的支付模式不同，可以按每天、每小时或每分钟使用量变化而异。由于我们将讨论微软
    Azure，重要的是要提到 Azure 使用的是按分钟计费系统。因此，例如，如果您在 Microsoft Azure 中创建了一个虚拟机，并在12天11小时13分钟后将其删除，您将按照精确的使用时间计算支付金额。在按小时计费系统中，您将支付12天12小时的费用。在按天计费系统中，您将支付13天的费用。
- en: Another difference is multitenancy. Even the public cloud is available to everyone;
    creating your own subscription creates your own tenant. By using special fabric,
    this tenant separates your resources from other tenants, and resources created
    in that tenant are available only to people with access to that specific tenant.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个不同之处是多租户。即使公共云对所有人都可用；创建自己的订阅会生成自己的租户。通过使用特定的基础结构，这个租户会将您的资源与其他租户分离开来，而在该租户中创建的资源仅对具有访问该特定租户权限的人员可用。
- en: 'To sum up, the key concepts of the public cloud are:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，公共云的关键概念包括：
- en: Access over the internet
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过互联网访问
- en: Multitenancy
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多租户
- en: Resource pooling
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 资源池化
- en: On-demand consumption
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按需消费
- en: Highly scalable
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高度可扩展
- en: The term cloud or public cloud wasn't forged with modern IT but the term started
    in the 1960s with the concept of resources being time shared. The concept did
    evolve in the 1990s with the private cloud. However, the cloud did evolve and
    shift further to a modern form in the 2000s.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 术语云或公共云并非始于现代 IT，而是始于上世纪六十年代的资源时间共享概念。该概念在上世纪九十年代随着私有云而演变。然而，云技术在二十一世纪进一步演变和转型成为现代形式。
- en: 'It all started with Amazon Web Services, a subsidiary of Amazon, when they
    released their **Elastic Cloud Compute** (**EC2**) in 2006\. Google followed with
    Google App Engine in 2008\. Microsoft announced their version of the cloud in
    October 2008 and it was publicly available in February 2010\. Other service providers
    followed and many companies such as IBM or Oracle have their own public cloud
    offering. Looking at market shares and the pace at which they evolve, we can put
    only two cloud providers at the top of this list: Amazon Web Services and Microsoft.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 一切都始于亚马逊网络服务（Amazon Web Services），这是亚马逊的子公司，当他们在2006年发布了他们的**弹性云计算**（**EC2**）。Google
    在2008年发布了 Google App Engine。微软在2008年10月宣布了他们的云版本，并在2010年2月公开可用。其他服务提供商纷纷效仿，如 IBM
    或 Oracle 都有自己的公共云服务。就市场份额和发展速度而言，我们可以将云服务提供商中的前两名列为亚马逊网络服务和微软。
- en: A brief history of Azure (from ASM to ARM)
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Azure 的简要历史（从 ASM 到 ARM）
- en: We already said that Microsoft announced their version of the public cloud in
    2008 and public release was in 2010\. At this time, the official name for Microsoft's
    public cloud platform was Windows Azure. The name was changed in April 2014 to
    Microsoft Azure. The reason for the change was never publicly announced but there
    were many guesses. One of the theories was that Microsoft needed to change its
    name due to embracing open source software. As Microsoft added a Linux virtual
    machine to their offering, the name convention became too confusing. A virtual
    machine running Linux on a Microsoft public cloud would initially be Windows Azure
    Linux virtual machine, and having Windows and Linux in same name was confusing
    indeed. Changing it to Microsoft Azure Linux virtual machine made more sense.
    Now, this is only one of the theories that you can find and not an official reason
    for the name change.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们之前提到过，微软在2008年宣布了他们的公共云版本，公共发布是在2010年。那时，微软公共云平台的正式名称是Windows Azure。2014年4月，该名称更改为Microsoft
    Azure。更名的原因从未公开宣布，但有很多猜测。一个理论是，微软需要更改名称以适应开源软件的拥抱。随着微软将Linux虚拟机添加到其产品中，名称的命名规则变得过于混乱。最初，运行Linux的虚拟机在微软公共云上会被称为Windows
    Azure Linux虚拟机，而Windows和Linux放在同一个名称中确实让人困惑。将其更名为Microsoft Azure Linux虚拟机则更为合理。现在，这只是你可以找到的理论之一，并非官方更名原因。
- en: 'Not only the name changed over the years. The first version of Azure, Windows
    Azure, had completely different specifications and a different type of portal.
    The first Azure portal was accessed at the address `https://manage.windowsazure.net`
    and was based on Silverlight. This portal was later referred to as a **classic**
    portal and the model of management for resources created in the **classic** portal
    was referred to as **Azure Standard Management** (**ASM**). The classic portal
    layout is shown in the following screenshot:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 不仅仅是名称在这些年中发生了变化。Azure的第一个版本，Windows Azure，拥有完全不同的规格和类型的门户。第一个Azure门户可以通过地址`https://manage.windowsazure.net`访问，并且基于Silverlight技术。这个门户后来被称为**经典**门户，而在**经典**门户中创建的资源管理模型被称为**Azure标准管理**（**ASM**）。经典门户的布局如下图所示：
- en: '![](img/79d29476-232a-47f7-a29d-438c97c71b7d.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](img/79d29476-232a-47f7-a29d-438c97c71b7d.png)'
- en: At this time, Microsoft realized there were issues with their cloud model and
    started working on completely new fabric. In 2014, a new Azure portal was announced.
    Along with a new portal, we got a new model of management called **Azure Resource
    Manager** (**ARM**). ARM brought new features lik**e role-based access control**
    (**RBAC**) and resource groups.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个时候，微软意识到他们的云模型存在问题，并开始着手开发全新的架构。2014年，微软宣布了全新的Azure门户。伴随着新的门户，我们还迎来了全新的管理模型，称为**Azure资源管理器**（**ARM**）。ARM带来了像**基于角色的访问控制**（**RBAC**）和资源组等新特性。
- en: These features changed how we managed resources in the cloud. In ASM, the only
    way to allow someone to administrate Azure resources was to add this person as
    a co-administrator to the Azure subscription. This person would have total access
    and control over the subscription in question. With RABC, we got the option to
    give different permission levels to users such as reader or contributor, without
    giving them full access to the subscription.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这些特性改变了我们在云中管理资源的方式。在ASM中，允许某人管理Azure资源的唯一方式是将其添加为Azure订阅的共同管理员。这个人将拥有对该订阅的完全访问和控制权。通过RBAC，我们有了为用户提供不同权限级别的选项，例如阅读者或贡献者，而不需要给予他们对订阅的完全访问权限。
- en: Resource groups went even further. Resource groups in Azure represent logical
    containers where you can place resources depending on the convention of your choosing.
    For example, you can place all resources that are used by a single application
    in a single resource group. This would allow you to give user access to a single
    resource group with the option to manage or access only that specific resource
    group. When that user logs in to the tenant, he will be able to see only the resource
    group that was assigned to him even if you have other resource groups under the
    same subscription or tenant. You could go further with RABC and assign only users
    to a specific resource but that is too granular and hard to manage. Assignment
    based on resource groups is considered best practice and the best way to manage
    Azure resources.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 资源组更进一步。Azure中的资源组代表逻辑容器，你可以根据选择的约定将资源放入其中。例如，你可以将单个应用程序使用的所有资源放入一个资源组中。这将允许你为用户分配访问某个资源组的权限，并且该用户只能管理或访问该特定资源组。当该用户登录到租户时，他将只能看到分配给他的资源组，即使你在同一订阅或租户下有其他资源组。你还可以使用RABC进一步细化权限，指定用户只能访问特定资源，但这过于细化且难以管理。基于资源组的分配被认为是最佳实践，也是管理Azure资源的最佳方式。
- en: 'The new Azure portal was considered a preview version until December 2015\.
    At that time, it became an official portal and could be accessed at the address
    [https://portal.azure.com](https://portal.azure.com). This portal became available
    in April 2014, when it was announced, but it was a preview version. The new portal
    layout is shown in the following screenshot:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 新的Azure门户在2015年12月之前被视为预览版本。当时，它成为了正式门户，并可以通过[https://portal.azure.com](https://portal.azure.com)访问。该门户在2014年4月宣布时就已上线，但当时只是预览版本。新的门户布局如下截图所示：
- en: '![](img/6de32362-832a-49f7-bdd9-a611d1f735b0.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6de32362-832a-49f7-bdd9-a611d1f735b0.png)'
- en: The classic portal was announced to be retired and this eventually happened
    in January 2018\. Along with RBAC and resource groups, ARM brought us another
    amazing feature—ARM templates. ARM templates are JSON files that hold information
    about Azure resources and can be used to deploy new resources or edit existing
    resources.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 经典门户宣布将被淘汰，并最终在2018年1月完成退役。与RBAC和资源组一起，ARM为我们带来了另一个惊人的功能——ARM模板。ARM模板是包含Azure资源信息的JSON文件，可用于部署新资源或编辑现有资源。
- en: With the ARM model and ARM templates, Microsoft stepped up and really changed
    cloud business. In the cloud and in DevOps, the **Infrastructure as code** (**IaC**)
    concept is very important and that was exactly what ARM templates were. You are
    able to create an ARM template and reuse it multiple times to create similar environments.
    By doing so, you automated your infrastructure deployment steps and removed possible
    mistakes in the deployment and configuration process.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 通过ARM模型和ARM模板，微软提升了云计算业务，并且真正改变了云业务。在云计算和DevOps领域，**基础设施即代码**（**IaC**）概念非常重要，这正是ARM模板的作用。你可以创建一个ARM模板，并多次重复使用它来创建类似的环境。通过这种方式，你自动化了基础设施部署步骤，并消除了部署和配置过程中的潜在错误。
- en: Cloud services models
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 云服务模型
- en: 'Speaking of IaC, we have lot of terms something as something in cloud world. The
    main types of services in Microsoft Azure (and cloud in general) are:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 说到IaC，我们在云计算领域有很多术语。微软Azure（以及一般云计算）的主要服务类型包括：
- en: '**Infrastructure as a Service** (**IaaS**)'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基础设施即服务**（**IaaS**）'
- en: '**Platform as a Service** (**PaaS**)'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**平台即服务**（**PaaS**）'
- en: '**Software as a Service** (**SaaS**)'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**软件即服务**（**SaaS**）'
- en: 'Each type represents a different kind of service level and our control over
    that resource. To explain each one and how they relate, it''s best to compare
    them to services in our local data center. A service layer for all models is shown
    in the following diagram and we''ll use this to explain the relationship between
    cloud models:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 每种类型代表不同的服务级别以及我们对该资源的控制。为了说明每种类型及其关系，最好将它们与本地数据中心的服务进行对比。所有模型的服务层在下图中展示，我们将利用此图来解释云模型之间的关系：
- en: '![](img/7d0e68e6-8446-4eb1-8151-070429b768b6.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7d0e68e6-8446-4eb1-8151-070429b768b6.png)'
- en: In a private data center, we are responsible to set up and maintain everything.
    We need to set up a networking stack, prepare and configure storage, buy and prepare
    hardware, install software, and configure the virtualization host. Then we need
    to configure images and servers, and deploy and manage databases. Security is
    also our concern in all aspects—physical security, network security, host and
    OS security, and finally application security for all application software running
    on our servers.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在私人数据中心中，我们需要负责搭建和维护所有内容。我们需要设置网络堆栈，准备和配置存储，购买和准备硬件，安装软件，配置虚拟化主机。然后，我们需要配置镜像和服务器，部署并管理数据库。安全性在所有方面都是我们的责任——物理安全、网络安全、主机和操作系统安全，最后是所有运行在我们服务器上的应用程序软件的应用安全。
- en: With IaaS, it gets easier. We don't have to prepare anything anymore; all we
    need to do is sign up for a subscription and create a virtual machine when needed
    and start using it. The part where we must buy, prepare, configure, and maintain
    is no longer our concern and the cloud service provider takes care of that, in
    our case Microsoft with Azure. Preparing images and deployments is also no longer
    our responsibility. Security is getting easier and physical, network, and host
    security are handled by Microsoft. We still have a responsibility in the security
    corner in order to keep our operating system up to date, patched, and secure.
    Application security is also our responsibility and we need to keep applying the
    best security practices in order to stay safe and secure. Many people forget that
    when migrating to the cloud we need to step up security. As the cloud service
    provider takes care of a big part of security, many get comfortable and relaxed
    and they neglect the part of security they need to take care of. When moving to
    the cloud, we need to remember that our resources and applications are publicly
    exposed and will experience significantly more "attacks" compared to when using on-premises
    infrastructure. Attacking resources on-premises usually means getting behind a
    firewall, then breaching the server and getting some data out. Now, many services
    are accessible over the internet and you need to take care of security better
    than ever before. The best examples of IaaS, when talking about Microsoft Azure,
    are Azure virtual machines. Both Windows Server and Linux virtual machines are
    available in Microsoft Azure. An interesting fact is that, according to information
    Microsoft released in October 2017, more than 40% of virtual machines in Azure
    are running Linux.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 使用IaaS，事情变得更简单了。我们不再需要准备任何东西；我们只需要注册订阅，在需要时创建一个虚拟机并开始使用。我们不再需要关心购买、准备、配置和维护这些工作，这些都由云服务提供商负责，在我们的例子中是微软的Azure。准备镜像和部署也不再是我们的责任。安全性变得更加简单，微软负责处理物理、安全、网络和主机的安全。我们仍然在安全方面有一定责任，需要保持操作系统的最新版本、修补和确保安全。应用程序安全也是我们的责任，我们需要不断应用最佳的安全实践，以保持安全和稳定。许多人忘记了，迁移到云时，我们需要加强安全性。由于云服务提供商负责了大部分安全工作，很多人因此变得舒适和放松，忽视了自己需要负责的安全部分。当迁移到云时，我们需要记住，资源和应用程序会公开暴露，相比使用本地基础设施时，它们将面临更多的“攻击”。在本地基础设施上攻击资源通常意味着突破防火墙、入侵服务器并获取数据。而现在，许多服务可以通过互联网访问，因此你需要比以往任何时候都更加重视安全性。当谈到IaaS时，微软Azure的最佳示例就是Azure虚拟机。微软Azure中既有Windows
    Server虚拟机，也有Linux虚拟机。一个有趣的事实是，根据微软2017年10月发布的信息，Azure中超过40%的虚拟机运行的是Linux。
- en: PaaS is getting even easier to use than IaaS. Everything that we said the cloud
    service provider is taking care of applies, plus some more. In this type of service,
    Microsoft is taking care of the operating system, additional software needed,
    and an additional layer of security. We still need to maintain everything we place
    there (depending on the PaaS service) and the part of security that remains our
    problem. Again, people forget that security part very quickly as even more responsibility
    is on Microsoft. However, IaaS is often used with VPN connections (either point-to-site
    or site-to-site) and endpoints are not publicly exposed in this case. This is
    not the case with PaaS, which is more often accessed over the internet. Because
    of this, we need to take security very seriously unless we want to lose our data
    or access to our services. The best examples of PaaS in Azure are Azure app service
    or Azure SQL databases.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: PaaS比IaaS更容易使用。我们所说的云服务提供商负责的内容都适用，而且更多。在这种服务中，微软负责操作系统、所需的附加软件和额外的安全层。我们仍然需要维护我们放置在其中的所有内容（取决于PaaS服务），而剩下的安全问题仍然是我们的问题。再次强调，人们往往很快忘记这一点，认为更多的责任转嫁到了微软。然而，IaaS通常与VPN连接一起使用（无论是点对点还是站点到站点），此时端点不会公开暴露。而PaaS则通常通过互联网进行访问。因此，我们需要非常重视安全性，除非我们希望丢失数据或无法访问我们的服务。Azure中PaaS的最佳例子是Azure应用服务或Azure
    SQL数据库。
- en: Finally, we have SaaS. In SaaS, the cloud service provider is taking care of
    almost everything, from end to end. In this case, we have a complete solution
    prepared and all we have to do is create a subscription and assign users different
    kinds of access. Usually, SaaS has to have modules, an administrator, and a user.
    The administrator module is used to manage users and access levels; the user module
    is used to actually use the software feature we subscribed to. Security is also
    our responsibility, only on the user level, and we need to make sure users are
    aware that they need to keep their credentials safe and their password strong
    enough to prevent accounts being brute-forced into. The best example of SaaS in
    Microsoft Cloud is Office 365.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们来看SaaS。在SaaS中，云服务提供商几乎全程负责，处理所有事情。在这种情况下，我们拥有一个完整的解决方案，只需要创建一个订阅并为用户分配不同的访问权限。通常，SaaS需要模块、管理员和用户。管理员模块用于管理用户和访问级别；用户模块则用于实际使用我们订阅的软件功能。安全性也是我们的责任，只有在用户级别上，我们需要确保用户意识到他们需要保护好自己的凭证，并设置足够强大的密码以防止账户被暴力破解。Microsoft
    Cloud中SaaS的最佳例子就是Office 365。
- en: 'This diagram explaining Pizza as a Service is very often used to describe how
    cloud services relate to real-life situations and to better understand what cloud
    computing offers:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 这个解释“披萨即服务”的图表通常用来描述云服务如何与现实生活情境相关，并帮助更好地理解云计算所提供的内容：
- en: '![](img/2015e750-bb02-4390-be43-faedb63878ba.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2015e750-bb02-4390-be43-faedb63878ba.png)'
- en: In this case, we can compare pizza to all four types we have in the previous
    diagram that explains IaaS, PaaS, and SaaS as well as on-premises computing.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们可以将披萨与前面图表中解释的IaaS、PaaS、SaaS和本地计算的四种类型进行比较。
- en: 'When compared to on-premises computing, pizza would be the homemade option.
    We need to buy all ingredients, mix everything, bake it, buy sodas, and serve.
    Comparing pizza to IaaS, we would buy frozen pizzas and bake them, set up the
    table, and serve. Pizza, compared to PaaS, would be home delivery—we just order
    our pizza and need to buy sodas and serve. Lastly, the SaaS version of pizza would
    be dining in a restaurant: we go out and order and everything is done for us.
    We get our pizza, get our sodas, and everything is served.'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 与本地计算相比，披萨就像是自制的选择。我们需要购买所有的配料，混合所有的材料，烘烤它，买饮料，并进行服务。将披萨与IaaS相比，我们会买冷冻披萨并烘烤，准备好桌子并进行服务。相比PaaS，披萨就像是外卖——我们只需要点披萨，买饮料并提供服务。最后，SaaS版本的披萨就像是在餐馆里用餐：我们出去点餐，一切都为我们准备好了。我们得到披萨，得到饮料，一切都有人服务。
- en: Pros and cons of cloud service models
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 云服务模型的优缺点
- en: We already discussed some of the features and benefits that each cloud service
    model brings to us. IaaS needs more enrolment and more maintenance than PaaS.
    SaaS needs even less of a human touch than PaaS and almost no maintenance except
    for user administration.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经讨论了每种云服务模型为我们带来的一些特点和优势。IaaS比PaaS需要更多的注册和维护。SaaS比PaaS更少需要人工干预，几乎不需要维护，除了用户管理。
- en: But there is an other side of that as well. SaaS asks for minimum maintenance
    and administration, but gives you a minimum amount of customization too. If you
    need something changed in SaaS, you'll probably need to contact your cloud service
    provider who can make the changes.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 但这也有另一面。SaaS要求最小的维护和管理，但也提供最少的定制。如果你需要在SaaS中做出更改，你可能需要联系你的云服务提供商，由他们进行更改。
- en: In PaaS, you have more freedom in terms of administration, maintenance, and
    customization. However, these changes are usually a preconfigured set of options
    you can choose from, but there are still more options than in SaaS.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在PaaS中，你在管理、维护和定制方面拥有更多自由。然而，这些变化通常是一个预配置的选项集，你可以从中选择，但比SaaS有更多的选择。
- en: IaaS requires the most administration and maintenance but gives you the best
    customization options as well. As you are controlling everything from the operating
    system upwards (you can select different preconfigured images or even bring in
    your own OS image), you have the best control as well. You can select what features
    you are going to configure, what server roles you are going to have on that server,
    and even install any type of software on that virtual machine.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: IaaS需要最多的管理和维护，但也为你提供了最好的定制选项。因为你控制着从操作系统开始的一切（你可以选择不同的预配置镜像，甚至带入自己的操作系统镜像），所以你也有最好的控制权。你可以选择你要配置的功能，服务器上要配置的角色，甚至在虚拟机上安装任何类型的软件。
- en: The bottom line is you need to decide what kind of feature is best suited for
    you in a given situation. In some cases, the simplest solution would be SaaS,
    as that product offers everything you need. If you need the latest settings and
    features, you'll probably use the PaaS model. If you have some legacy dependencies,
    IaaS would be the way to go. This way, you would be able to configure and install
    everything related to that dependency.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 关键是你需要决定在特定情况下哪种功能最适合你。在某些情况下，最简单的解决方案可能是SaaS，因为该产品提供了你所需要的一切。如果你需要最新的设置和功能，你可能会使用PaaS模型。如果你有一些遗留依赖，IaaS将是最合适的选择。通过这种方式，你将能够配置和安装与该依赖相关的所有内容。
- en: Other benefits of the cloud
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 云的其他好处
- en: 'The first benefit of cloud computing is obvious from all things previously
    written: it''s easier to maintain and manage.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 云计算的第一个好处显而易见，正如之前所说的：它更容易维护和管理。
- en: With the cloud there are many areas of expertise you don't need to provide yourself;
    the cloud service provider manages these thing for you. But this can be kind of
    a trap—cloud resources are not self-managed and you still need IT professionals
    who will manage and maintain your resources and keep them in good health. These
    are different kinds of IT professionals than in a local data center, but we still
    need people who understand core IT. If you are using IaaS, you still need a Windows
    Server Administrator (or Linux Server Administrator, depending on your preferences).
    If you are using databases, you are still going to need a database administrator.
    IT professionals need to adjust their skills and roles to cloud computing and
    leave on-premises behind them, but we still need them very much.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 使用云计算时，有许多专业领域你不需要自己提供；云服务提供商会为你管理这些事情。但这也可能是一种陷阱——云资源不是自我管理的，你仍然需要IT专业人员来管理和维护你的资源，确保它们的健康。这些IT专业人员与本地数据中心的有所不同，但我们仍然需要懂得核心IT的人。如果你使用的是IaaS，你仍然需要Windows服务器管理员（或Linux服务器管理员，取决于你的偏好）。如果你使用的是数据库，你仍然需要数据库管理员。IT专业人员需要调整他们的技能和角色以适应云计算，并告别本地部署，但我们依然非常需要他们。
- en: The financial benefit is also one of the obvious pros. In an on-premises environment
    you needed to buy and pay for all resources upfront, before you started using
    them. There are many different hardware components that we need to prepare for
    a local data center such as a firewall, network switches, storage, servers, a
    power supply that cannot be interrupted, and so on. We need to prepare infrastructure
    that can handle this kind of hardware, such as a proper server room. Cooling that
    will keep our hardware at the optimum temperature or provide enough electrical
    power that we can keep this running without overloading our electrical grid. And
    when we have everything in place, we need to have proper licenses for the virtualization
    host, operating system licenses for each virtual machine you want to run, and
    licenses for any additional software you plan to use such as SQL Server, endpoint
    protection, or any other software needed. In a local data center, you need to
    buy and prepare everything in advance. This can be a significant financial hit
    for any organization.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 财务上的好处也是明显的优点之一。在本地环境中，你需要预先购买并支付所有资源费用，然后才能开始使用它们。为了建设本地数据中心，我们需要准备许多不同的硬件组件，比如防火墙、网络交换机、存储设备、服务器、不间断电源等。我们还需要为这种硬件准备基础设施，比如一个合适的服务器房间。冷却系统必须保持硬件在最佳温度，或者提供足够的电力，使我们能够运行而不至于超载电网。而当所有这些都准备好之后，我们还需要为虚拟化主机购买合适的许可，为每台虚拟机购买操作系统许可，以及为任何计划使用的额外软件（如
    SQL Server、端点保护或其他所需软件）购买许可证。在本地数据中心，你需要提前购买并准备一切。这对任何组织来说可能是一次巨大的财务冲击。
- en: And after this initial cost, we have to pay upkeep. We are paying for electricity,
    for a cooling system, the required spare parts, and someone to maintain all of
    this.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 而且，在初期成本之后，我们还需要支付维护费用。我们需要支付电费、冷却系统费用、所需的备用零件费用，以及雇佣人员来维护这一切。
- en: After a few years, our hardware and software becomes obsolete and we need to
    repeat everything again. It can be hard to keep up and stay relevant in these
    conditions.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 几年之后，我们的硬件和软件就会变得过时，需要重新开始一切。在这种情况下，保持跟上并保持相关性可能会很困难。
- en: In the cloud, we don't have to pay upfront for anything; we are using services
    in a pay-as-you-go model where you pay for resources you are using on a per-minute
    basis. We don't have to invest heavily in anything—you create resources when you
    need them, for the amount of time you need them for, and delete them once you're
    done.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在云端，我们无需为任何东西预先支付费用；我们使用的是按需付费的服务模型，根据实际使用的资源按分钟计费。我们不需要对任何东西进行大量投资——你可以在需要时创建资源，只使用所需的时间，使用完毕后可以删除它们。
- en: 'If we need a new server, we can have that in a matter of minutes in the cloud.
    There is no need to contact different resellers, no filling in orders and waiting
    for deliveries. In Azure, you just spin up a virtual machine (or any other resource)
    whenever you need it. Once you don''t need it anymore, you can delete it and from
    that moment on you don''t need to pay for it anymore. This is also one of the
    differences between the cloud and on-premises: you are not stuck with what you
    buy. In a local data center, you need to buy resources in order to use them. Once
    you don''t need them, they don''t magically disappear from your server room. And
    even if it did somehow disappear, you still invested money.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们需要一台新服务器，在云端几分钟内就能完成。无需联系不同的经销商，不需要填写订单和等待交付。在 Azure 中，你只需在需要时启动虚拟机（或其他任何资源）。一旦不再需要，删除它，它就不再收费了。这也是云和本地部署之间的一个区别：你不会被你购买的资源束缚。在本地数据中心，你需要先购买资源才能使用。一旦不再需要它们，它们并不会从你的服务器室中神奇地消失。即使它们真的消失了，你仍然花了钱。
- en: 'Assessment in terms of how many resources we need for a specific service can
    also be a big issue. Let''s say we are creating a new web application that we
    are going to offer to end users. The application is completed and we need to host
    it somewhere in order for users to start signing up and using that application.
    The application is probably going to need servers, a web server and a database
    server. We need to buy new hardware and licenses for these servers. The problem
    here is that we need to buy hardware that is going to be able to handle our workload.
    The workload needs to be estimated for an initial number of users and growth over
    time but this can be very hard to estimate. If we guess the initial workload,
    it''s very easy to make mistakes with growth numbers. If we overestimate, we are
    stuck with something we don''t actually need but have paid for. If we underestimate,
    we need to upgrade very quickly. Upgrading can bring us to two problems: time
    and money.'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 关于我们为特定服务所需资源的评估也可能是一个大问题。假设我们正在创建一个新的网站应用程序，准备向最终用户提供。应用程序已经完成，我们需要在某个地方托管它，以便用户开始注册并使用该应用程序。这个应用程序可能需要服务器、Web
    服务器和数据库服务器。我们需要为这些服务器购买新硬件和许可证。这里的问题是，我们需要购买能够处理工作负载的硬件。工作负载需要根据初始用户数量以及随时间的增长来估算，但这非常难以预估。如果我们猜测初始的工作负载，很容易在增长数据上犯错。如果我们高估了工作负载，我们会被一些我们实际上不需要但已经付费的东西困住。如果我们低估了工作负载，我们就需要非常快速地进行升级。升级可能带来两个问题：时间和金钱。
- en: It can take some time to order upgrades and resolve issues with workload. And
    in this time, while we're waiting on upgrade components, users experiencing bad
    performance caused by high workload may leave. Losing users due to the bad performance
    of our application is something we definitely want to avoid but may be out of
    our hands because it takes time to get permission (especially in large companies)
    to order upgrade components, to have them delivered, and to upgrade our servers.
    Upgrading servers will also cause some downtime because we need to shut down servers
    in order to add new components. Again, we have something that we want to avoid.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 升级和解决工作负载问题可能需要一些时间。在此期间，用户可能会因为高负载导致的糟糕性能而流失。由于应用程序的性能不佳而失去用户是我们绝对希望避免的，但有时这可能是不可控的，因为获取权限（特别是在大公司中）来订购升级组件、接收它们并升级我们的服务器需要时间。升级服务器还会导致一定的停机时间，因为我们需要关闭服务器以便添加新组件。同样，这也是我们想要避免的。
- en: The second thing about upgrades is that they cost money. It can take a significant
    amount of money in order to increase server workload. In some cases, if we need
    to upgrade memory, we are not able to do that unless we upgrade the CPU. Sometimes,
    upgrading a CPU requires the upgrading of the motherboard first in order to continue.
    But that is if servers can be upgraded, because sometimes we are limited with
    what we get and are not able to upgrade at all. In such cases, we need to buy
    brand-new hardware and we have an old server that we don't need but already paid
    for.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 关于升级的第二个问题是它们需要花费金钱。增加服务器工作负载可能需要相当大的费用。在某些情况下，如果我们需要升级内存，除非我们同时升级 CPU，否则无法做到。有时，升级
    CPU 需要先升级主板才能继续。但这也取决于服务器是否可以升级，因为有时我们受限于现有设备，根本无法进行升级。在这种情况下，我们需要购买全新的硬件，而我们已经支付的旧服务器却成了不需要的负担。
- en: The cloud keeps these issues much more simple and easier to resolve. We will
    create either two servers (in case we decide to use IaaS) or two other services
    (in case we decide on PaaS; we have multiple options there). Managing workloads
    and the amount of resources is simple, fast, and easy.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 云计算使这些问题变得更加简单，且更容易解决。如果我们决定使用 IaaS，我们将创建两个服务器；如果我们决定使用 PaaS（我们在这里有多个选择），则会创建两个其他服务。管理工作负载和资源数量简单、快速且容易。
- en: If time shows that we overestimated ourselves, we can simply scale down resources
    and the issue is resolved. We are not stuck with something we don't need and we
    are not paying for it. We simply scale down the server/resources and from that
    moment forward, we are paying for a **smaller** server that we actually do need.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 如果时间证明我们高估了自己的需求，我们可以简单地缩减资源，问题就得到解决。我们不会被不需要的东西困住，也不需要为其付费。我们只需缩减服务器/资源，从那时起，我们只需为一个**更小**的服务器付费，而这个服务器我们实际上是需要的。
- en: In case we underestimated ourselves, we can scale up and increase the amount
    of resources just as easily and quickly. We don't have to wait for parts and don't
    need to lose time until upgrade components are finally delivered. We just increase
    the amount of resources and the issue is resolved.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们低估了需求，我们也可以像扩容一样轻松快速地增加资源量。我们不需要等待零件，也不必等到升级组件最终交付。我们只需增加资源量，问题就解决了。
- en: Another benefit of the cloud is also tied to resource amounts. In some cases,
    we have **spikes** in our applications. Spikes are sudden increases in workload
    and can be predictable or unpredictable. For example, if we are hosting a web
    shop application, we can predict spikes in workload if we have offer discounts
    on popular items or increased workloads during holidays. If we have some kind
    of news portal, we can experience unpredicted spikes in workload caused by some
    breaking news or something similar.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 云计算的另一个好处与资源数量相关。在某些情况下，我们的应用程序会出现**流量峰值**。流量峰值是工作负载的突然增加，可能是可预测的也可能是不可预测的。例如，如果我们在运营一个在线商店应用程序，当我们对热销商品提供折扣或者节假日期间的工作负载增加时，可以预测到流量峰值。如果我们运营的是新闻门户网站，那么由于突发新闻等原因，可能会出现不可预测的流量峰值。
- en: 'In both cases—unpredicted or predicted spikes—we need to account for them when
    setting up resources we are going to use. Even if our resources are sitting idle
    and underused most of the time, we need to buy hardware that is going to handle
    these kinds of workloads. So, if we are having 10,000 users on a normal day and
    1,000,000 during spikes, we need to buy resources that can handle a workload for
    1,000,000\. Otherwise, during spikes, users are going to experience high workload
    and an unresponsive application. As a result, we will lose users once again. But,
    buying a server that will be underused 90% of the time is something we would like
    to avoid as it is expensive. We have a choice: either pay or lose customers.'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 无论是不可预测的还是可预测的流量峰值，我们在设置将要使用的资源时都需要考虑到它们。即使我们的资源大部分时间处于闲置和未被充分利用的状态，我们仍然需要购买能够处理这些工作负载的硬件。所以，如果我们在正常情况下有10,000个用户，而在流量峰值时有1,000,000个用户，我们就需要购买能够处理1,000,000用户工作负载的资源。否则，在流量峰值期间，用户将面临高负载和无法响应的应用程序，最终我们将再次失去用户。然而，购买一台90%的时间都不被充分利用的服务器是我们希望避免的，因为这很昂贵。我们只有两种选择：要么支付费用，要么失去客户。
- en: The cloud lets us handle this issue very quickly as well. We can scale up and
    down very easily, simply, and quickly. Two approaches can be taken, depending
    on if we have unpredicted or predicted spikes.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 云计算还可以帮助我们快速处理这个问题。我们可以非常轻松、简单且快速地进行扩展和缩减。根据是否是不可预测或可预测的流量峰值，可以采取两种不同的方式。
- en: In case of predictable spikes, we can increase and decrease the amount of resources
    on demand. By doing so, we are no longer paying for a large amount of resources
    outside of the period we actually need them. In a normal period, we are paying
    only for a normal workload and in the case of increases we are paying for a high
    workload but only for the period we have a higher workload before we scale down
    back to normal.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在可预测的流量峰值情况下，我们可以根据需求增加或减少资源量。通过这样做，我们就不再为我们实际不需要的资源支付费用。在正常期间，我们只为正常工作负载付费，而在流量增加的情况下，我们为高负载付费，但仅限于高负载期间，之后我们将资源缩回到正常状态时，就不会继续支付额外费用。
- en: In the case of unpredictable spikes, we can set performance counters and alerts
    that will trigger a scale-up (or scale-down) as needed. For example, we can set
    up a trigger that will monitor the CPU. Once the CPU hits 90%, we can schedule
    automatic scaling out and increase the amount of resources assigned to that service.
    This way, users don't experience any issues caused by high workload and increased
    usage of our application. We need to be careful of automatic scaling out as this
    will create an increase in pricing and unless we scale back down, we will pay
    the increased price. Scaling down can be done manually but it can be done automatically
    as well. We can create another trigger that will perform scaling down in case
    the CPU drops below 50%. This way, we can always use only the resources that we
    actually need and use.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在不可预测的流量峰值情况下，我们可以设置性能计数器和警报，按需触发扩容（或缩容）。例如，我们可以设置一个监控CPU的触发器。一旦CPU使用率达到90%，我们可以安排自动扩展，并增加分配给该服务的资源量。通过这种方式，用户不会因为高负载和应用程序使用量增加而遇到任何问题。我们需要注意自动扩展，因为这会导致价格上涨，除非我们缩回资源，否则我们将支付更高的费用。缩容可以手动进行，但也可以自动完成。我们可以创建另一个触发器，当CPU降到50%以下时执行缩容。这样，我们就能始终只使用实际需要和使用的资源。
- en: Understanding the Azure subscription model
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解 Azure 订阅模型
- en: Most of the cloud service providers have similar subscription models but have
    some unique features. We are going to concentrate on Microsoft Azure as this is
    the cloud service we are going to cover in this book. From now on, all features
    we are going to discuss are going to be Azure-specific.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数云服务提供商都有类似的订阅模型，但也有一些独特的功能。我们将重点介绍 Microsoft Azure，因为这是本书中将要讨论的云服务。从现在起，我们将讨论的所有功能都是针对
    Azure 的。
- en: For Microsoft Azure subscription, the highest level of administration is that
    of a tenant. Azure is a public cloud with data centers all over the world that
    are available to everyone. There are a few exceptions such as the US government's
    data center that is available only to US government institutions, the Chinese
    government's data center for Chinese official institutions, or the German data
    center only available to companies registered in Germany.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Microsoft Azure 订阅，最高级别的管理是租户。Azure 是一个公共云，拥有遍布全球的数据中心，向所有人开放。也有一些例外，比如仅供美国政府机构使用的美国政府数据中心、仅供中国官方机构使用的中国政府数据中心，或仅供注册在德国的公司使用的德国数据中心。
- en: As a public cloud provider, Microsoft has to keep data separate for each user.
    Azure fabric is used to separate resources in the data center and tie them to
    a specific customer. So, even if you are sharing physical resources such as network,
    servers, and storage, your services can be accessed and managed only by you.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 作为公共云提供商，Microsoft 必须为每个用户保持数据隔离。Azure 架构用于在数据中心中隔离资源，并将其绑定到特定客户。因此，即使你共享物理资源，如网络、服务器和存储，你的服务只能由你自己访问和管理。
- en: As the highest level of Azure, a tenant is created by default when you create
    your first Azure subscription. Many people don't realize that they already have
    an Azure tenant if they use Office 365\. Office 365 requires Azure Active Directory
    and creates your first Azure tenant. I have seen many people making the mistake
    of creating a new Azure tenant even when they had Office 365 in use. The issue
    is that the tenant is tied to Azure Active Directory and creating a new tenant
    creates a new copy of Azure Active Directory. This makes Azure Active Directory
    hard to manage as you have two copies and differences appearing over time.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 作为 Azure 的最高级别，租户在你创建第一个 Azure 订阅时默认创建。很多人没有意识到，如果他们使用 Office 365，那么他们已经有了一个
    Azure 租户。Office 365 需要 Azure Active Directory，并且会创建你的第一个 Azure 租户。我见过很多人犯这样的错误：即使他们已经在使用
    Office 365，仍然创建了一个新的 Azure 租户。问题在于，租户是与 Azure Active Directory 绑定的，创建一个新租户相当于创建一个新的
    Azure Active Directory 副本。这使得 Azure Active Directory 难以管理，因为你会有两个副本，并且随着时间的推移会出现差异。
- en: Creating your first Azure subscription creates a new Azure tenant and a new
    Azure Active Directory. There are multiple options for managing Azure Active Directory
    but we'll discuss that in [Chapter 8](2c841c36-1cff-4ec9-afea-04060cbb3d6f.xhtml),
    *Azure Active Directory – Identity in the Cloud*. Creating an additional Azure
    Active Directory creates a new Azure tenant as well.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 创建你的第一个 Azure 订阅时，会创建一个新的 Azure 租户和一个新的 Azure Active Directory。管理 Azure Active
    Directory 有多种选择，但我们将在[第 8 章](2c841c36-1cff-4ec9-afea-04060cbb3d6f.xhtml)中讨论，*Azure
    Active Directory – 云中的身份管理*。创建额外的 Azure Active Directory 也会创建一个新的 Azure 租户。
- en: The next level under tenant is Azure subscription. You can have multiple Azure
    subscriptions under a single tenant. Creating a new tenant will result in an empty
    tenant with only an Azure Active Directory without subscriptions. As Azure Active
    Directory has multiple tiers, you will not be able to change Azure Active Directory
    from Basic (that is free) to another tier without a valid subscription. A subscription
    is needed in order to collect usage information, generate a billing report, and
    finally issue an invoice for service usage.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在租户下的下一级是 Azure 订阅。你可以在单个租户下拥有多个 Azure 订阅。创建一个新的租户将导致一个空租户，仅包含 Azure Active
    Directory 而没有订阅。由于 Azure Active Directory 有多个层级，你无法在没有有效订阅的情况下将 Azure Active Directory
    从基础版（即免费版）升级到其他层级。为了收集使用信息、生成账单报告，并最终开具服务使用发票，必须有一个订阅。
- en: An Azure subscription can be used to separate Azure environments by financial
    and administration logic. This can be done in many ways and you can design it
    to fit your needs. One example would be to have a single tenant at the company
    level and an Azure subscription for each department. This way you can assign a
    different administrator to each subscription/department and keep track of how
    much each department is spending. Another example for subscription separation
    would be to have different stage environments. I've seen many companies dividing
    their subscriptions into development, testing, and production environments and
    having different Azure subscriptions for each of these environments. This approach
    gives you the ability to administer and manage each environment separately but
    provides insight into how much you are spending on each environment as well.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: Azure 订阅可以用来通过财务和管理逻辑将 Azure 环境进行隔离。你可以通过多种方式来实现这一点，设计方案可以根据你的需求来定制。一个例子是，企业层面使用一个租户，并为每个部门设置一个
    Azure 订阅。这样，你可以为每个订阅/部门指定不同的管理员，并跟踪每个部门的开支。另一个订阅隔离的例子是使用不同的阶段环境。我见过许多公司将他们的订阅分为开发、测试和生产环境，并为每个环境设置不同的
    Azure 订阅。这种方式使你能够分别管理每个环境，但同时也能洞察你在每个环境中的花费。
- en: The third part of separating resources would be using resource groups. Resource
    groups were introduced with the ARM model and bring many benefits. As with subscriptions,
    you can use resource groups to separate resources in terms of logical or billing
    level. An example would be to have a different resource group for each department
    or development/test/production environment. You can then assign different administrators
    to each resource group and track billing for each resource group. Note that for
    billing, you will still receive a single invoice at the end of the month and need
    to manage and track spending manually. Billing separation is much easier on a
    subscription level. If you need to separate invoices per department/environment,
    you should go with subscription separation.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 隔离资源的第三部分是使用资源组。资源组是在 ARM 模型中引入的，并带来了许多好处。和订阅一样，你可以使用资源组从逻辑或计费层面来隔离资源。一个例子是为每个部门或开发/测试/生产环境设置不同的资源组。然后，你可以为每个资源组分配不同的管理员，并跟踪每个资源组的计费。请注意，计费时你仍然会在月底收到一张合并账单，并需要手动管理和跟踪开支。订阅层面的计费隔离要容易得多。如果你需要按部门/环境隔离账单，应该选择订阅隔离。
- en: Every resource in Azure can be tracked using hierarchy. Resource belongs to
    a resource group, resource group belongs to subscription, and subscription belongs
    to tenant. Logging in to the Azure portal will connect you to the default tenant.
    You can manage which tenant is going to be the default one as a single account
    can be in multiple tenants. For example, my corporate account is by default in
    my corporate tenant but I'm a guest user in multiple client tenants. By default,
    I connect to my company tenant but can select client tenants from a drop-down
    list. I can change my default tenant as well and select in which tenant I want
    to be logged in by default when I sign in to my Microsoft Azure account.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: Azure 中的每个资源都可以通过层级结构进行追踪。资源属于资源组，资源组属于订阅，订阅属于租户。登录到 Azure 门户将连接到默认租户。你可以管理哪个租户是默认租户，因为一个账户可以在多个租户中存在。例如，我的公司账户默认在我的公司租户中，但我还是多个客户租户中的访客用户。默认情况下，我连接到公司租户，但可以从下拉列表中选择客户租户。我还可以更改默认租户，并选择在登录到我的
    Microsoft Azure 账户时，默认登录哪个租户。
- en: To look at this from a Microsoft Azure perspective, when you log in to Microsoft
    Azure with your account, Azure fabric determines to which tenant you have access,
    signs you in to your default tenant, and you have access to subscriptions that
    are in that tenant. From there you can manage all subscriptions, resource groups,
    and resources that belong to that tenant. By switching tenants, you have access
    to different subscriptions, resource groups, and resources that belong in that
    tenant. All this is handled by Azure fabric in order to separate client environments.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 从微软 Azure 的角度来看，当你使用账户登录 Microsoft Azure 时，Azure fabric 会确定你可以访问哪个租户，并将你登录到默认租户，你可以访问该租户中的所有订阅。从那里，你可以管理属于该租户的所有订阅、资源组和资源。通过切换租户，你可以访问属于不同租户的订阅、资源组和资源。所有这些操作都由
    Azure fabric 处理，以便将客户端环境进行隔离。
- en: This approach is much better since the ARM model was introduced as things were
    much different in ASM. In ASM, after login you would have access to all subscriptions
    that were under that single account. Azure Active Directory wasn't tied to a specific
    tenant and you could have multiple Azure Active Directories in a single tenant.
    It was difficult to keep track of resources as there were no resource groups and
    the only thing separating them was the subscription level.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法要好得多，因为 ARM 模型引入后，事情变得与 ASM 时代大不相同。在 ASM 中，登录后你会访问所有属于该单一帐户的订阅。Azure Active
    Directory 并未与特定的租户绑定，一个租户中可以有多个 Azure Active Directory。在没有资源组的情况下，很难跟踪资源，唯一的区分方式是订阅级别。
- en: A similar hierarchy can be applied to resources administration too. You can
    assign a user to have certain access to your resources as well. The access level
    can have different kinds of permissions such as owner, contributor, reader, and
    so on. You can build custom permissions to achieve your own rules and policies.
    User roles can be assigned on the level of tenant, subscription, resource group,
    or single resource. Managing user access at the resource level can be hard and
    time-consuming and I wouldn't recommend this approach.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 类似的层级结构也可以应用到资源管理上。你也可以为用户分配一定的资源访问权限。访问级别可以具有不同的权限，例如所有者、贡献者、读取者等。你可以构建自定义权限来实现自己的规则和政策。用户角色可以在租户、订阅、资源组或单个资源级别上分配。管理资源级别的用户访问可能很困难且费时，我不建议采用这种方法。
- en: On the other hand, access to the tenant level is something you will often want
    to avoid because in most cases you don't want users to have same access to all
    resources. A few administrators can be exceptions, but this approach is something
    you want to avoid in general. The best and most common option is to assign users
    access at the subscription or resource group level. Subscription-level access
    can be used if you have different departments or environments for each subscription
    and you can assign an administrator for that department or environment as a subscription
    administrator. Access to the resource group level can be applied if you have a
    single application or environment in the resource group and assign an application/environment
    administrator for corresponding resource groups. These aren't the only options
    or models you can use but you can adjust and create whatever option best fits
    your needs. For example, I have seen where organizations have placed similar resources
    in a single resource group and assigned an administrator based on their on-premises
    role. All network resources would be in a single resource group and network engineers
    assigned to a network resource group. All databases would be placed in another
    resource group and a database administrator assigned as administrator for that
    resource group and so on.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，租户级别的访问通常是你要避免的，因为在大多数情况下，你不希望用户对所有资源具有相同的访问权限。少数管理员可以作为例外，但这种方法一般来说是你要避免的。最佳且最常见的选项是为用户分配订阅或资源组级别的访问权限。如果你为每个订阅设置不同的部门或环境，则可以使用订阅级别的访问权限，并可以为该部门或环境指定管理员作为订阅管理员。如果你在资源组中有一个单一的应用程序或环境，可以将访问权限应用到资源组级别，并为相应的资源组指定应用程序/环境管理员。这些并不是你可以使用的唯一选项或模型，但你可以根据需要调整并创建最适合你的选项。例如，我见过一些组织将相似的资源放在一个资源组中，并根据他们在本地的角色分配管理员。所有的网络资源都会放在一个资源组中，网络工程师则被分配到网络资源组中。所有数据库都会放在另一个资源组中，并为该资源组指定数据库管理员，依此类推。
- en: Azure subscription types
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Azure 订阅类型
- en: To create your first Azure subscription, you need a few things. The first thing
    is to provide an email address that needs to be either a Microsoft Live account
    or an Office 365 account. You need to provide a phone number. Finally, you need
    to provide credit or debit card information along with a billing address. Credit
    card information is needed even for free subscriptions because Microsoft uses
    it to verify your identity.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建你的第一个 Azure 订阅，你需要做几件事。第一件事是提供一个电子邮件地址，必须是 Microsoft Live 账户或 Office 365
    账户。你还需要提供一个电话号码。最后，你需要提供信用卡或借记卡信息以及账单地址。即使是免费订阅，也需要信用卡信息，因为 Microsoft 会用它来验证你的身份。
- en: 'When talking about Azure subscriptions, we can divide them into three different
    types:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 当谈到 Azure 订阅时，我们可以将其分为三种不同的类型：
- en: Sponsored subscriptions
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 赞助订阅
- en: Pay as you go
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按需付费
- en: Enterprise subscriptions
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 企业订阅
- en: 'There are a few different sponsored subscriptions in Azure: trial, Azure pass,
    MSDN subscription, Azure sponsorship, and so on. What all of them have in common
    is that they have a certain amount of resources available to you free of charge.
    Another thing they have in common is that not all services are available in all
    regions. For example, you may be able to create an A2 standard virtual machine
    only when selecting the North Europe region, but you will not be able to create
    this virtual machine in any other region.'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: Azure 中有几种不同的赞助订阅：试用版、Azure Pass、MSDN 订阅、Azure 赞助等。它们的共同点是都有一定数量的免费资源可以供你使用。另一个共同点是，并非所有服务都可以在所有区域使用。例如，只有在选择北欧地区时，你才可以创建
    A2 标准虚拟机，而在其他任何地区都无法创建这种虚拟机。
- en: 'The Azure trial offers you $200 of service for 30 days. Subscription will expire
    whatever comes first: either you spend $200 or it expires at the end of the month.
    You need to provide credit/debit card information for this type of subscription.
    You can convert subscription from a trial to a pay-as-you-go model at any time
    using that card or by providing details of a new one. Credit card information
    must be provided—it''s used only for identity verification, and you will not be
    charged any amount of money unless you specify that you want to remove the spending
    limit and start billing after the trial is over. What Microsoft is trying to achieve
    is to prevent you using Azure for anything illegal. Without credit card information,
    anyone could set up a trial subscription and use it to host illegal things for
    30 days. At the end of a trial, a person would need to set up a new trial and
    continue to use Azure services for illegal content. In this case, Microsoft wouldn''t
    be able to provide information on who was conducting illegal activities using
    Azure and they would be held accountable by the respective authorities.'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: Azure 试用版为你提供 200 美元的服务，期限为 30 天。订阅会在以下两种情况中到期：要么你用完了 200 美元，要么在月底到期。你需要提供信用卡/借记卡信息来进行这种类型的订阅。你可以随时通过该卡或提供新卡信息将试用订阅转换为按需付费模式。必须提供信用卡信息——这仅用于身份验证，除非你明确表示希望取消消费限制并在试用期结束后开始计费，否则你不会被收取任何费用。微软希望通过这种方式防止用户利用
    Azure 从事非法活动。如果没有信用卡信息，任何人都可以创建一个试用订阅，并用它来托管非法内容，期限为 30 天。在试用期结束时，这个人可能会重新创建一个试用订阅，继续使用
    Azure 服务来托管非法内容。在这种情况下，微软将无法提供谁在使用 Azure 从事非法活动的信息，相关当局将追究他们的责任。
- en: Azure pass is offered as another type of trial subscription and offers a limited
    amount of credit for 30 days. This type of subscription is tied to Microsoft's
    official courseware and the amount of credit is determined by the course, each
    type having a different amount of credit. This type of subscription doesn't require
    a credit card as you need to register for a course and information from that registration
    can be used to verify your identity if needed. As with a trial, you are limited
    in the type of resources you can create, the amount of resources available, and
    the region resources can be created in.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: Azure Pass 是另一种试用订阅类型，提供一定额度的信用，期限为 30 天。这种订阅与微软的官方课程相关联，信用额度取决于课程的类型，每种课程的信用额度不同。这种订阅不需要信用卡，你只需要注册课程，并且可以使用课程注册信息在必要时进行身份验证。与试用订阅类似，创建的资源类型、可用资源数量以及资源可创建的区域都会受到限制。
- en: MSDN Azure subscription is tied to a user's MSDN subscription and has a different
    credit amount based on the MSDN subscription level (a different amount per MSDN
    level, such as professional and enterprise). The amount of credit given is on
    a per-month basis and you get a certain amount at the beginning of each billing
    period (the billing period depends on the date of activation, the date of activation
    will be the beginning of your billing period, and the end of the billing period
    will be in 30 days).
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: MSDN Azure 订阅与用户的 MSDN 订阅相关联，根据信息技术和开发人员 MSDN 订阅的不同级别（例如专业版和企业版），每个级别的额度也会有所不同。所提供的信用额度是按月计算的，并且你在每个计费周期的开始时会获得一定额度（计费周期取决于激活日期，激活日期将成为计费周期的开始日期，而计费周期的结束日期为
    30 天后）。
- en: The Azure subscription will be active as long as the MSDN subscription is active
    as well. Credit card information isn't needed as another way of identifying verification
    can be used (MSDN payment information). If you reach your spending limit in a
    single month, your resources will be deactivated and stopped until the end of
    the billing period.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: To use these services again, you need to wait for the beginning of a new billing
    period or provide credit card information that will be used to charge any use
    over the sponsored amount. Removing the limit can be specified to apply to single
    months or for subscriptions. Single-month removal will remove the spending limit
    only for that month while subscription removal will the remove spending limit
    permanently and start billing every time the spending limit is reached. In the
    case of a single-month limit removal, the limit will be removed only for a specified
    month and if the issue happens again in the following month, it will disable your
    service. If the limit is removed from the subscription, once you reach the spending
    limit, it will automatically start to charge your usage.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: Note that in every case, first the sponsored amount will be spent and only then
    will the credit card be activated. An Azure subscription for MSDN is limited for
    development and testing; it should never be used for commercial or production
    purposes. You also have a limit on the amount of resources and regions available.
    MSDN subscription also applies different pricing for resources. You are not charged
    for software licensing as this is a dev/test environment and prices of resources
    are much cheaper as a result.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: Azure sponsorship is very similar to an MSDN subscription. It should not be
    used for commercial or production purposes. Azure sponsorship also has spending
    limits but in this case, it is not per-month but per-year. The billing period
    is one out of two differences between Azure sponsorship and Azure MSDN subscription,
    where sponsorship is billed per-year and MSDN per-month. The limit can be removed;
    there is a limit for resources and regions. The second difference is in that normal
    prices apply and you will be charged for software licenses.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: 'Pay as you go is the most simple and most common type of Azure subscription.
    You sign up for an Azure subscription, provide credit card information, and this
    credit card is used for billing at the end of each month. The name tells you almost
    everything in this case: there are no limitations and you are billed for only
    what you use. If you don''t have a single resource in your subscription, Microsoft
    will not charge you for only having a subscription. If you have resources in your
    subscription, you will be charged only for those resources. If you add some resources,
    you will be charged additionally. If you delete some of them, you will be charged
    only for those still active. There is no minimum or maximum limit on your subscription;
    you can spend nothing or millions per month.'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
- en: Enterprise subscription requires a contract that determines a minimum amount
    you will spend on Azure resources. You receive a certain discount for resource
    prices as you commit that you will be spending a certain amount of money at a
    yearly level. You are charged on a monthly basis, based on the amount in the contract.
    Any amount that is over the minimum amount determined in the contract is billed
    separately at end of the year. With an enterprise subscription, there is also
    an option to bring your own licenses to Azure, enabling you to reuse existing
    licenses you have for on-premises resources.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 企业订阅需要签订一份合同，合同中确定了你在Azure资源上的最低支出金额。你承诺每年花费一定金额，便可以享受资源价格的折扣。费用按月结算，基于合同中的金额。任何超过合同规定的最低金额部分，将在年底单独计费。使用企业订阅时，还可以选择将自己的许可证带入Azure，从而允许你重用已有的本地资源许可证。
- en: Additionally, there is a reserved instances discount. It can be applied to both
    pay-as-you-go and enterprise subscriptions. You determine the number and type
    of virtual machines that you are going to use in the next period. The period can
    be 1 or 2 years. One year gives you a discount on these virtual machines and 2
    years gives you an additional discount (for a longer time, and a bigger discount
    as you are obliged to use the service for longer). You can edit the reserved instances
    agreement at any time by adding or removing virtual machines. An increase in number
    can provide an additional discount and a decrease will result in penalties.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还有预留实例折扣。这可以应用于按需计费和企业订阅。你需要确定在接下来一段时间内将使用的虚拟机数量和类型。时间段可以是1年或2年。一年期为你提供折扣，而两年期则给予额外折扣（因为你承诺更长时间使用服务，折扣也更大）。你可以随时编辑预留实例协议，增加或删除虚拟机。增加数量可以提供额外折扣，而减少数量则会导致处罚。
- en: Deciding between IaaS or PaaS
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在IaaS和PaaS之间做决定
- en: Once a subscription is in place, you can start creating resources in order to
    use them and deploy your application. Choosing what to use and when can be overwhelming
    in terms of the broad choice Microsoft Azure has to offer. There are different
    approaches and different architectures we need to consider before even starting.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦订阅完成，你就可以开始创建资源，以便使用它们并部署你的应用程序。在微软Azure提供的广泛选择面前，选择使用什么以及何时使用可能会让人感到不知所措。在开始之前，我们需要考虑不同的方法和架构。
- en: We have already talked about IaaS, PaaS, and SaaS. An example of Microsoft SaaS
    is Office 365 and, as a cloud software, it is available under a subscription model.
    Office 365 even runs in Azure data centers (it was the initial purpose of these
    data centers along with identity management—we now call this Azure Active Directory),
    but we will not discuss this product further as it isn't directly connected to
    Azure subscriptions. Our goal will be to distinguish Microsoft Azure's offerings
    when it comes to IaaS and PaaS.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经讨论过IaaS、PaaS和SaaS。微软SaaS的一个例子是Office 365，作为一种云软件，它采用订阅模式提供。Office 365甚至运行在Azure数据中心（这也是这些数据中心的最初目的之一，除了身份管理——我们现在称之为Azure
    Active Directory），但我们不会进一步讨论这个产品，因为它与Azure订阅没有直接关系。我们的目标是区分微软Azure在IaaS和PaaS方面的产品。
- en: IaaS is the first step in migration to the cloud. It's natural for traditional
    IT professionals to accept this as a first step in the cloud journey. Creating
    an Azure virtual machine is simple and from a VM level there isn't much difference
    between a local VM and a cloud VM. You don't have access to hardware or host components,
    which makes maintenance easier and cheaper. But administering and managing VM
    in Azure isn't much different form on-premises versions, no matter what host we
    used locally—Hyper-V, VMWare or something else (Microsoft Azure uses a modified
    version of Hyper-V hosts that are different than the version used on-premises).
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: IaaS是迁移到云的第一步。传统IT专业人员通常会接受这作为云之旅的第一步。创建Azure虚拟机非常简单，从虚拟机层面看，本地虚拟机与云虚拟机之间没有太大区别。你无法访问硬件或主机组件，这使得维护更简单、更便宜。但是，在Azure中管理虚拟机和管理本地版本差别不大，无论我们本地使用什么主机——Hyper-V、VMWare或其他（微软Azure使用的是修改版的Hyper-V主机，与本地使用的版本有所不同）。
- en: You select an image for the operating system, select the size of the VM, and
    some other parameters. From there forward, you connect to your VM and install
    features and software as you see fit. You can control access, frameworks, and
    data for all software installed on your VM; you'll need to pay for it as part
    of a subscription or provide a valid license of you own. If your create a VM with
    Windows Server 2016 and SQL Server 2016, you will be charged extra for both licenses.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 你选择操作系统的镜像，选择虚拟机的大小，以及其他一些参数。从这里开始，你可以连接到虚拟机并根据需要安装特性和软件。你可以控制所有安装在虚拟机上的软件的访问、框架和数据；你需要为其支付订阅费用，或者提供你自己的有效许可证。如果你创建一个带有
    Windows Server 2016 和 SQL Server 2016 的虚拟机，你将额外支付这两项许可证费用。
- en: Creating a PaaS resource is even simpler than IaaS. It's easier to administer
    and manage as well. But, on the other hand, control is no longer completely in
    your hands. You can edit some key features that are predefined to have different
    values or to be turned on and off. But, some things are default and you are no
    longer able to edit them. All licenses are included in the price of resources
    by default.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 PaaS 资源比 IaaS 更简单。它也更容易管理和维护。但另一方面，控制权不再完全掌握在自己手中。你可以编辑一些预定义的关键特性，使它们具有不同的值或开关状态。但有些内容是默认的，你将无法编辑它们。所有的许可证都已默认包含在资源的价格中。
- en: Let's consider a simple scenario where you have a web application running on
    IIS in the frontend and a database on SQL Server in the backend.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你有一个运行在 IIS 前端的 Web 应用程序和一个在 SQL Server 后端的数据库，让我们考虑一个简单的场景。
- en: For IaaS, you'll need to create two virtual machines, a web server, and a database
    server. In order to host your application, you'll need to set up IIS on a web
    server that will be running Windows Server 2016\. A database server can be a VM
    with SQL Server 2016 running on Windows Server 2016\. By now, added to our computing
    prices, we have two licenses for Windows Server and one license for SQL Server
    (price also varies in the version of SQL Server if we choose web, standard, or
    enterprise edition). Once we have installed and configured IIS, we need to create
    firewall and network security group rules that will allow us to access our application
    over the internet. We need to set up communication between the web server and
    database server and create similar rules in order to allow communication between
    our application and database. We already have our hands full enabling a simple
    scenario with IaaS.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 IaaS，你需要创建两个虚拟机，一个 Web 服务器和一个数据库服务器。为了托管你的应用程序，你需要在将运行 Windows Server 2016
    的 Web 服务器上设置 IIS。数据库服务器可以是一个运行 Windows Server 2016 上的 SQL Server 2016 的虚拟机。到目前为止，加上我们的计算价格，我们已经有了两个
    Windows Server 许可证和一个 SQL Server 许可证（如果选择 Web、Standard 或 Enterprise 版本，SQL Server
    的价格也会有所不同）。一旦我们安装并配置好 IIS，我们需要创建防火墙和网络安全组规则，这将允许我们通过互联网访问我们的应用程序。我们还需要设置 Web 服务器和数据库服务器之间的通信，并创建类似的规则，以便我们的应用程序与数据库之间能够相互通信。到这里，我们已经很忙了，在
    IaaS 中启用一个简单的场景。
- en: For IaaS, we will set up the app service plan in order to host our web application
    and Azure SQL database for the backend. All licenses are already configured and
    we don't have to do anything else in terms of configuration. The process is much
    simpler and easier.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 IaaS，我们将设置应用服务计划，以托管我们的 Web 应用程序和后端的 Azure SQL 数据库。所有许可证已经配置好，我们不需要做其他的配置工作。这个过程更加简单易行。
- en: Note that pricing is cheaper for PaaS in most cases.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，PaaS 在大多数情况下的定价更便宜。
- en: But on the other hand, PaaS doesn't always allow us to have everything we need
    to run our applications. If we need to use an older version of some framework,
    PaaS will not work. PaaS already has a preconfigured set of frameworks that you
    can use but you can't install anything additionally. In the case that you have
    some features for the database that are not supported in Azure SQL or compatibility
    issues, you need to use SQL Server in VM.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 但另一方面，PaaS 并不总是能满足我们运行应用程序所需的一切。如果我们需要使用某个框架的旧版本，PaaS 将无法工作。PaaS 已经预配置了一些框架，你可以使用它们，但无法额外安装任何内容。如果你的数据库有一些在
    Azure SQL 中不受支持的特性，或者存在兼容性问题，你需要在虚拟机中使用 SQL Server。
- en: Overall, PaaS is usually cheaper and needs less attention than IaaS, but IaaS
    gives better control and better legacy support.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 总体而言，PaaS 通常比 IaaS 更便宜且需要更少的关注，但 IaaS 提供了更好的控制和更好的传统支持。
- en: Service offerings are growing by the day and every few weeks we have new services
    and new features in Microsoft Azure. A couple of services that we mentioned are
    only examples for a simple scenario. IaaS does give us control as to what is going
    to be on our VM and offers better combinations compared to a single resource,
    but the PaaS list doesn't stop there. For Azure PaaS, we can create an app service,
    content delivery network, Azure SQL database, traffic manager, service bus, Azure
    functions, Azure CosmosDB, Azure storage, and Redis cache just to name a few.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
- en: Azure data platform has over 50 different services that are PaaS. The same goes
    for other platforms such as web, media, compute, and so on. Choosing the right
    service can be beneficial both when we look at the solution from a financial perspective
    and a performance perspective. We need to consider if some service has some limitation
    that will make us use another service just to cover that limit. And there could
    be another service that will cover both aspects and there will be no need to use
    an additional service. Limitations can cause performance issues if we don't look
    at all aspects and try to anticipate all possible scenarios. Luckily, with Azure,
    we are not stuck with a single solution, even if we see that we have made a mistake
    and the service we chose doesn't really cover our needs—we can always scale out
    or switch to another service completely.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the pricing of Azure resources
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are few things you need to consider regarding pricing in Microsoft Azure.
    There are resources that have fixed pricing and resources that have consumption
    pricing. Also, fixed-price resources sometimes have service level limits included
    in the basic price. Once you reach that limit, you will be charged extra based
    on consumption. This potentially turns fixed-priced resources into consumption-priced
    ones. There are also exceptions that have different uses applied.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
- en: Resources that have fixed pricing will be added to your bill as soon as you
    create them. Fixed-pricing resources are billed on a monthly basis, have a fixed
    price, and are added to your bill as soon as you create them. Examples of these
    services would be OMS or Azure Active Directory on higher tiers. A reserved public
    IP address is also one of the fixed-cost resources. After you delete this type
    of resource, it will be added to your bill for the current billing period.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
- en: Azure storage is based on consumption and you pay for the amount of data you
    have in your storage account. But the amount of data varies every month and there
    could be less data at the beginning or end of the month, but more data in the
    middle of the month. In this case, average consumption is calculated and you are
    billed on the average consumption of Azure Storage.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
- en: An example of a service that has performance-level restrictions would be bandwidth.
    Inbound data transfer is free of charge and you don't pay anything as long as
    data is going towards an Azure data center. Outbound data is free for the first
    5 GB per month and you are charged extra for everything over those 5 GB. Another
    example of a service limit would be Azure container registry, where you have 100
    minutes of CPU included but pay extra when exceeding that limit. Azure function
    is also an example of this type of resource where you get the first 1,000,000
    executions for free and you are charged for additional executions.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
- en: Resources based on computing are calculated on a per-minute basis. If you have
    a virtual machine or app service running, billing will stop as soon as you delete
    these resources. This also applies to resources being stopped in some cases. Azure
    SQL database can't be stopped but pricing will be calculated on a per-minute basis.
    If you delete Azure SQL database, you stop paying for it the same minute it's
    deleted. For virtual machines and app services, you can stop these resources and
    you will not pay for compute hours any longer. Note that there are a few pricing
    details related to a virtual machine. Virtual machine price information, that
    you can find in Azure portal when creating virtual machine or shown in Azure calculator,
    is only for compute hours. A virtual machine also uses Azure storage that you
    pay for, separately from computing, and you will pay for storage no matter if
    the virtual machine is running or stopped. Some network components can create
    additional charges for virtual machines. For example, you can reserve a public
    IP address that is charged separately.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
- en: It is very important to keep track of your resources in Azure and to know what
    you are using, if resources are utilized, and what the limits are for current
    resources. If you are not using something correctly or not using it at all, you
    are still paying for it. This is different from a traditional IT environment where
    you have resources prepaid and it doesn't really matter if a single virtual machine
    is being used or not as long as you don't reach the resource limit at the host
    level. In Azure, you are paying for everything you created (or have running in
    some cases) so you need to keep track of active resources and what you actually
    need. Otherwise, the cloud can become a very expensive solution and bills will
    start to pile up. Financial benefits can be great but if you are not careful,
    it can go the other way as well. I've seen many companies using a development
    and test environment without control and many resources where no one knows who
    created them and why, let alone if there is someone actually using them. This
    is not as often a problem with production environments, but can happen in some
    cases.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
- en: 'Be smart and Azure will help you, but if you don''t keep track of usage and
    billing, it can go the other way. It''s your choice: you can get either promoted
    or fired!'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
- en: ARM revolution
  id: totrans-141
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In April 2014, Microsoft announced a new approach to Azure with a new portal
    and ARM model. We already discussed how ARM and RBAC changed the administration
    of Azure resources and made life in the cloud much easier.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
- en: But another option ARM brought to the table was ARM templates. ARM templates
    are files in JSON format that contain information on all resources in a single
    resource group. We can use ARM templates to deploy new resources, update resources,
    or remove resources from a resource group. Every resource group in Azure portal
    has an automation blade that allows us to save an ARM template for that resource
    group, redeploy resources, or download a template locally. This allows us to replicate
    resources from a resource group quickly and simply.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
- en: This is why placing resources for a single application is common practice in
    Azure. If we have a complicated environment that takes some time to deploy, it
    can be very useful. For example, let's say that we have a SharePoint farm with
    Windows Server running a domain controller role, two servers for SharePoint farm,
    and two additional servers running SQL Server. This requires us to create a virtual
    network, create five servers, and add them to the virtual network. Doing this
    manually in the Azure portal requires some time to create. But with ARM templates
    we can do this in a matter of seconds.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
- en: Deploying infrastructure with ARM templates is only one option for infrastructure
    as a code. We can achieve similar things with PowerShell and Azure CLI as well.
    Using infrastructure as a code allows us to deploy infrastructure needed to run
    our application in a fast and reliable way. It's a more consistent option as well
    because we are excluding manual tasks from deployment, creating an automated process,
    and eliminating human error in deployment.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
- en: Another great thing about ARM templates is that they can be added to our application
    project and stored in a repository, and we can keep track of versions of our environment.
    Different versions of an application may require changes in environment and with
    ARM templates and code repositories we can keep track of these changes and make
    sure that the correct environment is deployed for the version of the application
    we are deploying.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
- en: To sum everything up, ARM templates are a fast, reliable, and consistent way
    to deploy Azure resources that allow us to keep track of environment versioning
    and automate deployment processes. This is especially interesting and useful if
    we are trying to implement DevOps in our software delivery. In combination with
    configuration as a code (we'll talk about this in later chapters), we can build
    or replicate any environment with all resources required and apply the configuration
    needed for everything to run correctly.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
- en: 'A sample of an empty ARM template is shown here:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: An ARM template contains information on parameters, variables, resources, and
    outputs. Using this information we define what resources need to be deployed,
    using which parameters, and which of these parameters can be variables that can
    be changed. Finally, we define the output as a replay, but this part is optional.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we explained cloud computing types and the evolution of cloud
    computing over time with a focus on the public cloud and Microsoft Azure. The
    next step was to explain the public cloud service model and how IaaS, PaaS, and
    SaaS work and the basic concepts of these public cloud types. You should also
    understand how Azure subscription works, how prices of resource are calculated,
    and basic administration concepts in relation to Azure subscriptions and the ARM
    model. We provided more information on ARM in general, and how it's connected
    to RBAC and ARM templates.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
- en: Understanding Azure subscriptions and ARM templates along with IaaS and PaaS
    in Azure is very important, as we'll use this knowledge in chapters to come.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
- en: The next step will be IaaS, as the first step toward cloud computing. The foundation
    for IaaS (and all other Azure services) is the Azure networking stack, and we'll
    start with this.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  id: totrans-155
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Which type of cloud requires an internet connection and allows anyone to sign
    up for service?
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Private cloud
  id: totrans-157
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Hosted cloud
  id: totrans-158
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Public cloud
  id: totrans-159
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Which cloud service model allows us most control over resources?
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: IaaS
  id: totrans-161
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: PaaS
  id: totrans-162
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: SaaS
  id: totrans-163
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Which cloud service model requires the least management and administration?
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: IaaS
  id: totrans-165
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: PaaS
  id: totrans-166
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: SaaS
  id: totrans-167
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Which cloud service model always gives us the latest features and updates?
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: IaaS
  id: totrans-169
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: PaaS
  id: totrans-170
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: SaaS
  id: totrans-171
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: What is responsible for separating the client environment from other clients
    in Azure?
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure fabric
  id: totrans-173
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure tenant
  id: totrans-174
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure subscription
  id: totrans-175
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: What is the first access layer in Microsoft Azure?
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure fabric
  id: totrans-177
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure tenant
  id: totrans-178
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure subscription
  id: totrans-179
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: What is the lowest granularity at which you can assign access to Azure resources?
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure resource
  id: totrans-181
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure resource group
  id: totrans-182
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure subscription
  id: totrans-183
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: What is the recommended access level that should be assigned for Azure resources?
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure resource
  id: totrans-185
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure resource group
  id: totrans-186
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure subscription
  id: totrans-187
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: How is pricing calculated for Microsoft Azure?
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Per year
  id: totrans-189
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Per month
  id: totrans-190
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Per minute
  id: totrans-191
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: ARM templates are part of what?
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Infrastructure as a code
  id: totrans-193
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: IaaS
  id: totrans-194
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Configuration as a code
  id: totrans-195
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
