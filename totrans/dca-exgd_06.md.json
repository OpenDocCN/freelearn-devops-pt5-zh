["```\n$ sudo -sH pip install -q docker-compose\n```", "```\n$ curl -sL \"https://github.com/docker/compose/releases/download/1.24.1/docker-compose-$(uname -s)-$(uname -m)\" -o /tmp/docker-compose\n\n$ sudo chmod +x /tmp/docker-compose\n\n$ sudo mv /tmp/docker-compose /usr/local/bin/docker-compose\n```", "```\n$ sudo curl -L --fail https://github.com/docker/compose/releases/download/1.24.1/run.sh -o /usr/local/bin/docker-compose\n\n$ sudo chmod +x /usr/local/bin/docker-compose\n```", "```\nInvoke-WebRequest \"https://github.com/docker/compose/releases/download/1.24.1/docker-compose-Windows-x86_64.exe\" -UseBasicParsing -OutFile $Env:ProgramFiles\\Docker\\docker-compose.exe\n```", "```\nversion: \"3.7\"\nservices:\n  lb:\n    build: simplestlb\n    image: myregistry/simplest-lab:simplestlb\n    environment:\n      - APPLICATION_ALIAS=simplestapp\n      - APPLICATION_PORT=3000\n    networks:\n      simplestlab:\n          aliases:\n          - simplestlb\n    ports:\n      - \"8080:80\"\n  db:\n    build: simplestdb\n    image: myregistry/simplest-lab:simplestdb\n    environment:\n        - \"POSTGRES_PASSWORD=changeme\"\n    networks:\n       simplestlab:\n        aliases:\n          - simplestdb\n    volumes:\n      - pgdata:/var/lib/postgresql/data\n  app:\n    build: simplestapp\n    image: myregistry/simplest-lab:simplestapp\n    environment:\n      - dbhost=simplestdb\n      - dbname=demo\n      - dbuser=demo\n      - dbpasswd=d3m0\n    networks:\n       simplestlab:\n        aliases:\n          - simplestapp\n    depends_on:\n      - lb\n      - db\nvolumes:\n  pgdata:\nnetworks:\n  simplestlab:\n    ipam:\n      driver: default\n      config:\n        - subnet: 172.16.0.0/16\n```", "```\nnetworks:\n  mynet:\n    driver: bridge\n    ipam:\n      driver: default\n      config:\n       - subnet: 172.28.0.0/16\n```", "```\n  myservice:\n build:\n context: .\n dockerfile: ./src/myapp/Dockerfile\n networks:\n - mynet\n```", "```\n...\n...\n  myservice:\n    image: myregistry/myimage:tag\n    volumes:\n     - data:/appdata/\n...\n...\nvolumes:\n  config-data:\n    driver: local\n```", "```\n - type: tmpfs\n     target: /app\n     tmpfs:\n       size: 1000\n```", "```\n$ git clone https://github.com/PacktPublishing/Docker-Certified-Associate-DCA-Exam-Guide.git\nCloning into 'dca-book-code'...\nremote: Enumerating objects: 26, done.\nremote: Counting objects: 100% (26/26), done.\nremote: Compressing objects: 100% (22/22), done.\nremote: Total 26 (delta 0), reused 26 (delta 0), pack-reused 0\nUnpacking objects: 100% (26/26), done.\n```", "```\n$ cd chapter5/simplest-lab/\n\n$ ls -lRt\n.:\ntotal 4\n-rw-rw-r-- 1 zero zero 982 nov 24 11:06 docker-compose.yaml\ndrwxrwxr-x 2 zero zero 146 nov 24 11:06 simplestapp\ndrwxrwxr-x 3 zero zero 112 nov 24 11:06 simplestdb\ndrwxrwxr-x 2 zero zero 80 nov 24 11:06 simplestlb\n./simplestapp:\ntotal 32\n-rw-rw-r-- 1 zero zero 91 nov 24 11:06 dbconfig.json\n-rw-rw-r-- 1 zero zero 466 nov 24 11:06 Dockerfile\n-rw-rw-r-- 1 zero zero 354 nov 24 11:06 package.json\n-rw-rw-r-- 1 zero zero 191 nov 24 11:06 README.md\n-rw-rw-r-- 1 zero zero 1244 nov 24 11:06 reset.html\n-rw-rw-r-- 1 zero zero 3837 nov 24 11:06 simplestapp.html\n-rw-rw-r-- 1 zero zero 6556 nov 24 11:06 simplestapp.js\n./simplestdb:\ntotal 12\ndrwxrwxr-x 2 zero zero 26 nov 24 11:06 docker-entrypoint-initdb.d \n-rwxrwxr-x 1 zero zero 2587 nov 24 11:06 docker-entrypoint.sh \n-rw-rw-r-- 1 zero zero 152 nov 24 11:06 Dockerfile \n-rw-rw-r-- 1 zero zero 2568 nov 24 11:06 Dockerfile.scratch\n./simplestdb/docker-entrypoint-initdb.d:\ntotal 4\n-rw-rw-r-- 1 zero zero 484 nov 24 11:06 init-demo.sh\n./simplestlb:\ntotal 16\n-rw-rw-r-- 1 zero zero 467 nov 24 11:06 Dockerfile\n-rwxrwxr-x 1 zero zero 213 nov 24 11:06 entrypoint.sh\n-rw-rw-r-- 1 zero zero 837 nov 24 11:06 nginx.conf\n-rw-rw-r-- 1 zero zero 24 nov 24 11:06 README.md\n```", "```\n$ docker-compose config --services\ndb\nlb\napp \n$ docker-compose config --volumes\npgdata\n```", "```\n$ docker-compose build \nBuilding db\nStep 1/2 : FROM postgres:alpine\nalpine: Pulling from library/postgres\n....\nSuccessfully built 336fb84e7fbf\nSuccessfully tagged myregistry/simplest-lab:simplestdb\nBuilding lb\nStep 1/10 : FROM alpine:latest\nlatest: Pulling from library/alpine\n....\nSuccessfully built 4a5308d90123\nSuccessfully tagged myregistry/simplest-lab:simplestlb\nBuilding app\nStep 1/15 : FROM alpine\n ---> 965ea09ff2eb\nStep 2/15 : RUN apk --update --no-progress --no-cache add nodejs npm\n....\nSuccessfully built ffa49ee4228e\nSuccessfully tagged myregistry/simplest-lab:simplestapp\n```", "```\n$ docker images --filter=reference='myregistry/*:*'\nREPOSITORY TAG IMAGE ID CREATED SIZE\nmyregistry/simplest-lab simplestapp ffa49ee4228e About an hour ago 56.5MB\nmyregistry/simplest-lab simplestlb 4a5308d90123 About an hour ago 7MB\nmyregistry/simplest-lab simplestdb 336fb84e7fbf About an hour ago 72.8MB\n```", "```\n$ docker-compose up --detach\nCreating network \"simplest-lab_simplestlab\" with the default driver\nCreating simplest-lab_db_1 ... done\nCreating simplest-lab_lb_1 ... done\nCreating simplest-lab_app_1 ... done\n```", "```\n$ docker-compose ps\n Name Command State Ports \n----------------------------------------------------------------------------------\nsimplest-lab_app_1 node simplestapp.js 3000 Up 3000/tcp \nsimplest-lab_db_1 docker-entrypoint.sh postgres Up 5432/tcp \nsimplest-lab_lb_1 /entrypoint.sh /bin/sh -c ... Up 0.0.0.0:8080->80/tcp\n```", "```\n$ docker-compose logs db\nAttaching to simplest-lab_db_1\ndb_1 | \ndb_1 | PostgreSQL Database directory appears to contain a database; Skipping initialization\ndb_1 | \ndb_1 | 2019-11-24 11:57:14.011 UTC [1] LOG: starting PostgreSQL 12.1 on x86_64-pc-linux-musl, compiled by gcc (Alpine 8.3.0) 8.3.0, 64-bit\ndb_1 | 2019-11-24 11:57:14.011 UTC [1] LOG: listening on IPv4 address \"0.0.0.0\", port 5432\ndb_1 | 2019-11-24 11:57:14.011 UTC [1] LOG: listening on IPv6 address \"::\", port 5432\ndb_1 | 2019-11-24 11:57:14.025 UTC [1] LOG: listening on Unix socket \"/var/run/postgresql/.s.PGSQL.5432\"\n```", "```\n$ docker-compose exec app sh\n/APP $ ls -lart\ntotal 344\n-rwxr-xr-x 1 root root 314658 May 24 2017 Chart.js\n-rw-rw-r-- 1 root root 6556 Nov 24 10:06 simplestapp.js\n-rw-rw-r-- 1 root root 1244 Nov 24 10:06 reset.html\n-rw-rw-r-- 1 root root 354 Nov 24 10:06 package.json\n-rw-rw-r-- 1 root root 91 Nov 24 10:06 dbconfig.json\n-rw-rw-r-- 1 root root 3826 Nov 24 14:38 simplestapp.html\n-rw-r--r-- 1 root root 7654 Nov 24 14:38 package-lock.json\ndrwxr-xr-x 31 root root 4096 Nov 24 14:38 node_modules\ndrwxr-xr-x 1 root root 22 Nov 24 14:38 .\ndrwxr-xr-x 1 root root 6 Nov 24 14:38 ..\n```", "```\n$ docker-compose top\nsimplest-lab_app_1\nUID PID PPID C STIME TTY TIME CMD \n--------------------------------------------------------------------------\nzero 9594 9564 0 15:38 ? 00:00:05 node simplestapp.js 3000\n\nsimplest-lab_db_1\nUID PID PPID C STIME TTY TIME CMD \n-------------------------------------------------------------------------------------------\n70 9374 9304 0 15:38 ? 00:00:00 postgres \n70 9558 9374 0 15:38 ? 00:00:00 postgres: checkpointer \n70 9559 9374 0 15:38 ? 00:00:00 postgres: background writer \n70 9560 9374 0 15:38 ? 00:00:00 postgres: walwriter \n70 9561 9374 0 15:38 ? 00:00:00 postgres: autovacuum launcher \n70 9562 9374 0 15:38 ? 00:00:00 postgres: stats collector \n70 9563 9374 0 15:38 ? 00:00:00 postgres: logical replication launcher \n70 9702 9374 0 15:38 ? 00:00:00 postgres: demo demo 172.16.0.4(37134) idle\n\nsimplest-lab_lb_1\n UID PID PPID C STIME TTY TIME CMD \n--------------------------------------------------------------------------------------------------------------------\nroot 9360 9295 0 15:38 ? 00:00:00 nginx: master process nginx -g pid /run/nginx.pid; daemon off;\nsystemd+ 9467 9360 0 15:38 ? 00:00:01 nginx: worker process \nsystemd+ 9468 9360 0 15:38 ? 00:00:00 nginx: worker process\n```", "```\n$ docker network ls\nNETWORK ID NAME DRIVER SCOPE\n0950a6281629 bridge bridge local\n82faac964567 host host local\n2fb14f721dc3 none null local\na913507af228 simplest-lab_simplestlab bridge local\n```", "```\n$ docker volume ls\nDRIVER VOLUME NAME\nlocal 3f93b55b105f64dd03a9088405484909d2f8cad83dacc5fb5a53ea27af1f33e6\nlocal mydbdata\nlocal simplest-lab_pgdata\nvieux/sshfs:latest sshvolume\n```", "```\n$ docker-compose restart lb\nRestarting simplest-lab_lb_1 ... done\n```", "```\n$ docker-compose scale app=5\nWARNING: The scale command is deprecated. Use the up command with the --scale flag instead.\nStarting simplest-lab_app_1 ... done\nCreating simplest-lab_app_2 ... done\nCreating simplest-lab_app_3 ... done\nCreating simplest-lab_app_4 ... done\nCreating simplest-lab_app_5 ... done\n```", "```\n$ docker-compose ps\n Name Command State Ports \n----------------------------------------------------------------------------------\nsimplest-lab_app_1 node simplestapp.js 3000 Up 3000/tcp \nsimplest-lab_app_2 node simplestapp.js 3000 Up 3000/tcp \nsimplest-lab_app_3 node simplestapp.js 3000 Up 3000/tcp \nsimplest-lab_app_4 node simplestapp.js 3000 Up 3000/tcp \nsimplest-lab_app_5 node simplestapp.js 3000 Up 3000/tcp \nsimplest-lab_db_1 docker-entrypoint.sh postgres Up 5432/tcp \nsimplest-lab_lb_1 /entrypoint.sh /bin/sh -c ... Up 0.0.0.0:8080->80/tcp\n```", "```\n$ docker-compose up -d --scale app=3\nsimplest-lab_db_1 is up-to-date\nsimplest-lab_lb_1 is up-to-date\nStopping and removing simplest-lab_app_4 ... done\nStopping and removing simplest-lab_app_5 ... done\nStarting simplest-lab_app_1 ... done\nStarting simplest-lab_app_2 ... done\nStarting simplest-lab_app_3 ... done\n```", "```\n$ docker-compose ps app\n Name Command State Ports \n----------------------------------------------------------------\nsimplest-lab_app_1 node simplestapp.js 3000 Up 3000/tcp\nsimplest-lab_app_2 node simplestapp.js 3000 Up 3000/tcp\nsimplest-lab_app_3 node simplestapp.js 3000 Up 3000/tcp\n```", "```\n$ docker-compose down \nStopping simplest-lab_app_3 ... done\nStopping simplest-lab_app_2 ... done\nStopping simplest-lab_app_1 ... done\nStopping simplest-lab_lb_1 ... done\nStopping simplest-lab_db_1 ... done\nRemoving simplest-lab_app_3 ... done\nRemoving simplest-lab_app_2 ... done\nRemoving simplest-lab_app_1 ... done\nRemoving simplest-lab_lb_1 ... done\nRemoving simplest-lab_db_1 ... done\nRemoving network simplest-lab_simplestlab\n```", "```\n$ docker volume ls\nDRIVER VOLUME NAME\nlocal 3f93b55b105f64dd03a9088405484909d2f8cad83dacc5fb5a53ea27af1f33e6\nlocal mydbdata\nlocal simplest-lab_pgdata\nvieux/sshfs:latest sshvolume\n\n$ docker network ls\nNETWORK ID NAME DRIVER SCOPE\n0950a6281629 bridge bridge local\n82faac964567 host host local\n2fb14f721dc3 none null local\n```", "```\nversion: \"3.7\"\n\nservices:\n  lb:\n build:\n context: ./simplestlb\n args:\n alpineversion: \"latest\"\n dockerfile: Dockerfile.custom\n labels:\n org.codegazers.dscription: \"Test image\"\n image: ${dockerhubid}/simplest-lab:simplestlb\n    environment:\n      - APPLICATION_ALIAS=simplestapp\n      - APPLICATION_PORT=3000\n    networks:\n      simplestlab:\n          aliases:\n          - simplestlb\n    ports:\n      - \"${LB_PORT}:80\"\n\n...\n...\n```", "```\n$ docker-compose --file docker-compose.dev.yaml config\nWARNING: The dockerhubid variable is not set. Defaulting to a blank string.\nWARNING: The LB_PORT variable is not set. Defaulting to a blank string.\nERROR: The Compose file './docker-compose.dev.yaml' is invalid because:\nservices.lb.ports contains an invalid type, it should be a number, or an object\n```", "```\n$ LB_PORT=8081 docker-compose --file docker-compose.dev.yaml config\nWARNING: The dockerhubid variable is not set. Defaulting to a blank string.\nnetworks:\n  simplestlab:\n    ipam:\n      config:\n      - subnet: 172.16.0.0/16\n      driver: default\nservices:\n  app:\n    build:\n      context: <..>/Docker-Certified-Associate-DCA-Exam-Guide/simplest-lab/simplestapp\n    depends_on:\n    - db\n    - lb\n    environment:\n      dbhost: simplestdb\n      dbname: demo\n      dbpasswd: d3m0\n      dbuser: demo\n    image: myregistry/simplest-lab:simplestapp\n    networks:\n      simplestlab:\n        aliases:\n        - simplestapp\n  db:\n    build:\n      context: <..>/Docker-Certified-Associate-DCA-Exam-Guide/simplest-lab/simplestdb\n    environment:\n      POSTGRES_PASSWORD: changeme\n    image: myregistry/simplest-lab:simplestdb\n    networks:\n      simplestlab:\n        aliases:\n        - simplestdb\n    volumes:\n    - pgdata:/var/lib/postgresql/data:rw\n  lb:\n    build:\n      args:\n        alpineversion: latest\n      context: <..>/Docker-Certified-Associate-DCA-Exam-Guide/simplest-lab/simplestlb\n      dockerfile: Dockerfile.custom\n      labels:\n        org.codegazers.description: Test image\n    environment:\n      APPLICATION_ALIAS: simplestapp\n      APPLICATION_PORT: '3000'\n    image: /simplest-lab:simplestlb\n    networks:\n      simplestlab:\n        aliases:\n        - simplestlb\n    ports:\n    - published: 8081\n      target: 80\nversion: '3.7'\nvolumes:\n  pgdata: {}\n```", "```\n$ LB_PORT=8081 dockerhubid=frjaraur docker-compose --project-name test --file docker-compose.dev.yaml build --build-arg alpineversion=\"3.6\" \nBuilding db\nStep 1/2 : FROM postgres:alpine\n...\n...\n[Warning] One or more build-args [alpineversion] were not consumed\nSuccessfully built 336fb84e7fbf\nSuccessfully tagged myregistry/simplest-lab:simplestdb\nBuilding lb\nStep 1/12 : ARG alpineversion=latest\n...\n...\nStep 12/12 : LABEL org.codegazers.dscription=Test image\n ---> Using cache\n ---> ea4739af8eb5\nSuccessfully built ea4739af8eb5\nSuccessfully tagged frjaraur/simplest-lab:simplestlb\nBuilding app\nStep 1/15 : FROM alpine\n...\n...\n[Warning] One or more build-args [alpineversion] were not consumed\nSuccessfully built ff419f0998ae\nSuccessfully tagged myregistry/simplest-lab:simplestapp\n```", "```\n\"Labels\": {\n \"org.codegazers.dscription\": \"Test image\"\n }\n```", "```\nDocker-Certified-Associate-DCA-Exam-Guide/environments/standalone$ vagrant up\nBringing machine 'standalone' up with 'virtualbox' provider...\n...\nDocker-Certified-Associate-DCA-Exam-Guide/environments/standalone$ vagrant status\nCurrent machine states:\nstandalone running (virtualbox)\n...\nDocker-Certified-Associate-DCA-Exam-Guide/environments/standalone$\n```", "```\nDocker-Certified-Associate-DCA-Exam-Guide/environments/standalone$ vagrant ssh standalone\n[vagrant@standalone ~]$ \n```", "```\n[vagrant@standalone ~]$ /vagrant/install_requirements.sh \n```", "```\n[vagrant@standalone ~]$ git clone https://github.com/PacktPublishing/Docker-Certified-Associate-DCA-Exam-Guide.git [vagrant@standalone ~]$ cd Docker-Certified-Associate-DCA-Exam-Guide/chapter5\n[vagrant@standalone chapter5]$ ls -1\napp\ndocker-compose.loadbalancer.yaml\ndocker-compose.multicolor.yaml\ndocker-compose.random.yaml\ndocker-compose.red.yaml\nlb\nReadme.md\n```", "```\nversion: \"3.7\"\nservices:\n    red:\n        build: app\n        environment:\n            COLOR: \"red\"\n        labels:\n            role: backend\n        ports:\n        - 3000\n        networks:\n        - lab\nnetworks:\n    lab:\n```", "```\n[vagrant@standalone chapter5]$ docker-compose -p lab1 -f docker-compose.random.yaml build\nBuilding random\nStep 1/9 : FROM node:alpine\nalpine: Pulling from library/node\n89d9c30c1d48: Already exists\n5320ee7fe9ff: Pull complete\n...\n...\nStep 9/9 : EXPOSE 3000\n ---> Running in 51379c5e7630\nRemoving intermediate container 51379c5e7630\n ---> c0dce423a972\n\nSuccessfully built c0dce423a972\nSuccessfully tagged lab1_random:latest\n```", "```\n[vagrant@standalone chapter5]$ docker-compose -p lab1 -f docker-compose.random.yaml up -d\nCreating network \"lab1_lab\" with the default driver\nCreating lab1_random_1 ... done\n```", "```\n[vagrant@standalone chapter5]$ docker-compose -p lab1 -f docker-compose.random.yaml ps\n Name Command State Ports \n-------------------------------------------------------------------------\nlab1_random_1 docker-entrypoint.sh node ... Up 0.0.0.0:32780->3000/tcp\n```", "```\n[vagrant@standalone chapter5]$ curl 0.0.0.0:32780/text\nAPP_VERSION: 1.0\nCOLOR: blue\nCONTAINER_NAME: 17bc24f60799\nCONTAINER_IP: 172.27.0.2\nCLIENT_IP: ::ffff:172.27.0.1\nCONTAINER_ARCH: linux\n```", "```\n[vagrant@standalone chapter5]$ docker-compose -p lab1 -f docker-compose.random.yaml down\nStopping lab1_random_1 ... done\nRemoving lab1_random_1 ... done\nRemoving network lab1_lab\n```", "```\nversion: \"3.7\"\n\nservices:\n  red:\n    build: app\n    environment:\n      COLOR: \"red\" \n    labels:\n      role: backend\n    ports:\n    - 3000\n    networks:\n    - lab\n\nnetworks:\n  lab:\n```", "```\n[vagrant@standalone ~]$ docker-compose -p lab2 -f docker-compose.red.yaml up -d \nCreating network \"lab2_lab\" with the default driver\nBuilding red\nStep 1/9 : FROM node:alpine\n ---> fac3d6a8e034\nStep 2/9 : ENV APPDIR /APP\n ---> Using cache\n ---> 61bbe191216e\nStep 3/9 : WORKDIR ${APPDIR}\n ---> Using cache\n...\n...\n ---> Using cache\n ---> df0f6838dfca\nStep 9/9 : EXPOSE 3000\n ---> Using cache\n ---> 24ae28db3e15\n\nSuccessfully built 24ae28db3e15\nSuccessfully tagged lab2_red:latest\nWARNING: Image for service red was built because it did not already exist. To rebuild this image you must use `docker-compose build` or `docker-compose up --build`.\nCreating lab2_red_1 ... done\n```", "```\n[vagrant@standalone ~]$ docker-compose -p lab2 -f docker-compose.red.yaml ps\n Name Command State Ports \n-----------------------------------------------------------------------------\nlab2_red_1 docker-entrypoint.sh node ... Up 0.0.0.0:32781->3000/tcp\n```", "```\n[vagrant@standalone ~]$ curl 0.0.0.0:32781/text\nAPP_VERSION: 1.0\nCOLOR: red\nCONTAINER_NAME: fc05e400d02a\nCONTAINER_IP: 172.29.0.2\nCLIENT_IP: ::ffff:172.29.0.1\nCONTAINER_ARCH: linux\n```", "```\n[vagrant@standalone ~]$ docker-compose -p lab2 -f docker-compose.red.yaml scale red=5\nWARNING: The scale command is deprecated. Use the up command with the --scale flag instead.\nStarting lab2_red_1 ... done\nCreating lab2_red_2 ... done\nCreating lab2_red_3 ... done\nCreating lab2_red_4 ... done\nCreating lab2_red_5 ... done\n```", "```\n[vagrant@standalone ~]$ docker-compose -p lab2 -f docker-compose.red.yaml ps\n Name Command State Ports \n-----------------------------------------------------------------------------\nlab2_red_1 docker-entrypoint.sh node ... Up 0.0.0.0:32781->3000/tcp\nlab2_red_2 docker-entrypoint.sh node ... Up 0.0.0.0:32784->3000/tcp\nlab2_red_3 docker-entrypoint.sh node ... Up 0.0.0.0:32785->3000/tcp\nlab2_red_4 docker-entrypoint.sh node ... Up 0.0.0.0:32783->3000/tcp\nlab2_red_5 docker-entrypoint.sh node ... Up 0.0.0.0:32782->3000/tcp\n```", "```\n[vagrant@standalone ~]$ curl 0.0.0.0:32781/text\nAPP_VERSION: 1.0\nCOLOR: red\nCONTAINER_NAME: fc05e400d02a\nCONTAINER_IP: 172.29.0.2\nCLIENT_IP: ::ffff:172.29.0.1\nCONTAINER_ARCH: linux\n\n[vagrant@standalone ~]$ curl 0.0.0.0:32782/text\nAPP_VERSION: 1.0\nCOLOR: red\nCONTAINER_NAME: f5de33465357\nCONTAINER_IP: 172.29.0.3\nCLIENT_IP: ::ffff:172.29.0.1\nCONTAINER_ARCH: linux\n\n[vagrant@standalone ~]$ curl 0.0.0.0:32783/text\nAPP_VERSION: 1.0\nCOLOR: red\nCONTAINER_NAME: 5be016aadadb\nCONTAINER_IP: 172.29.0.4\nCLIENT_IP: ::ffff:172.29.0.1\nCONTAINER_ARCH: linux\n\n[vagrant@standalone ~]$ curl 0.0.0.0:32784/text\nAPP_VERSION: 1.0\nCOLOR: red\nCONTAINER_NAME: 413c9d605bd5\nCONTAINER_IP: 172.29.0.5\nCLIENT_IP: ::ffff:172.29.0.1\nCONTAINER_ARCH: linux\n\n[vagrant@standalone ~]$ curl 0.0.0.0:32785/text\nAPP_VERSION: 1.0\nCOLOR: red\nCONTAINER_NAME: fe879a59c3aa\nCONTAINER_IP: 172.29.0.6\nCLIENT_IP: ::ffff:172.29.0.1\nCONTAINER_ARCH: linux\n```", "```\n[vagrant@standalone ~]$ docker-compose -p lab2 -f docker-compose.red.yaml down\nStopping lab2_red_2 ... done\nStopping lab2_red_3 ... done\nStopping lab2_red_4 ... done\nStopping lab2_red_5 ... done\nStopping lab2_red_1 ... done\nRemoving lab2_red_2 ... done\nRemoving lab2_red_3 ... done\nRemoving lab2_red_4 ... done\nRemoving lab2_red_5 ... done\nRemoving lab2_red_1 ... done\nRemoving network lab2_lab\n```", "```\nversion: \"3.7\"\n\nservices:\n  red:\n    build: app\n    environment:\n      COLOR: \"red\" \n    labels:\n      role: backend\n    ports:\n    - 3000\n    networks:\n    - lab\n  green:\n    build: app\n    environment:\n      COLOR: \"green\" \n    labels:\n      role: backend\n    ports:\n    - 3000\n    networks:\n    - lab\n  white:\n    build: app\n    environment:\n      COLOR: \"white\" \n    labels:\n      role: backend\n    ports:\n    - 3000\n    networks:\n    - lab\n\nnetworks:\n  lab:\n```", "```\n[vagrant@standalone ~]$ docker-compose -p lab3 -f docker-compose.multicolor.yaml up -d \nCreating network \"lab3_lab\" with the default driver\nBuilding white\nStep 1/9 : FROM node:alpine\n ---> fac3d6a8e034\n...\nSuccessfully built 24ae28db3e15\nSuccessfully tagged lab3_white:latest\n...\nBuilding green\n...\nSuccessfully tagged lab3_green:latest\n...\nBuilding red\n...\nSuccessfully tagged lab3_red:latest\nWARNING: Image for service red was built because it did not already exist. To rebuild this image you must use `docker-compose build` or `docker-compose up --build`.\nCreating lab3_green_1 ... done\nCreating lab3_white_1 ... done\nCreating lab3_red_1 ... done\n```", "```\n[vagrant@standalone ~]$ docker-compose -p lab3 -f docker-compose.multicolor.yaml ps\n Name Command State Ports \n-------------------------------------------------------------------------------\nlab3_green_1 docker-entrypoint.sh node ... Up 0.0.0.0:32789->3000/tcp\nlab3_red_1 docker-entrypoint.sh node ... Up 0.0.0.0:32791->3000/tcp\nlab3_white_1 docker-entrypoint.sh node ... Up 0.0.0.0:32790->3000/tcp\n\n$ curl 0.0.0.0:32789/text \nAPP_VERSION: 1.0\nCOLOR: green\nCONTAINER_NAME: a25a4cc36232\nCONTAINER_IP: 172.31.0.2\nCLIENT_IP: ::ffff:172.31.0.1\nCONTAINER_ARCH: linux\n\n$ curl 0.0.0.0:32791/text \nAPP_VERSION: 1.0\nCOLOR: red\nCONTAINER_NAME: 5e12b0de196c\nCONTAINER_IP: 172.31.0.4\nCLIENT_IP: ::ffff:172.31.0.1\nCONTAINER_ARCH: linux\n\n$ curl 0.0.0.0:32790/text \nAPP_VERSION: 1.0\nCOLOR: white\nCONTAINER_NAME: b67b09c8c836\nCONTAINER_IP: 172.31.0.3\nCLIENT_IP: ::ffff:172.31.0.1\nCONTAINER_ARCH: linux\n```", "```\nversion: \"3.7\"\n\nservices:\n  loadbalancer:\n    build: lb\n    environment:\n      APPLICATION_PORT: 3000\n    ports:\n    - 8080:80\n    networks:\n    - lab\n  red:\n    build: app\n    environment:\n      COLOR: \"red\"\n    labels:\n      role: backend\n    networks:\n    - lab\n  green:\n    build: app\n    environment:\n      COLOR: \"green\"\n    labels:\n      role: backend\n    networks:\n    - lab\n  white:\n    build: app\n    environment:\n      COLOR: \"white\"\n    labels:\n      role: backend\n    networks:\n    - lab\n\nnetworks:\n  lab:\n```", "```\n[vagrant@standalone ~]$ docker-compose -p lab5 -f docker-compose.loadbalancer.yaml up -d\nCreating network \"lab5_lab\" with the default driver\nBuilding white\n...\nSuccessfully tagged lab5_white:latest\nWARNING: Image for service white was built because it did not already exist. To rebuild this image you must use `docker-compose build` or `docker-compose up --build`.\nBuilding green\n...\nSuccessfully tagged lab5_green:latest\nWARNING: Image for service green was built because it did not already exist. To rebuild this image you must use `docker-compose build` or `docker-compose up --build`.\nBuilding red\n...\nSuccessfully tagged lab5_red:latest\nWARNING: Image for service red was built because it did not already exist. To rebuild this image you must use `docker-compose build` or `docker-compose up --build`.\nBuilding loadbalancer\n...Successfully tagged lab5_loadbalancer:latest\nWARNING: Image for service loadbalancer was built because it did not already exist. To rebuild this image you must use `docker-compose build` or `docker-compose up --build`.\nCreating lab5_loadbalancer_1 ... done\nCreating lab5_white_1 ... done\nCreating lab5_red_1 ... done\nCreating lab5_green_1 ... done\n```", "```\n[vagrant@standalone ~]$ cat lb/nginx.conf \n...\n...\n server {\n listen 80;\n set $port \"__APPLICATION_PORT__\";\n...\n...\n location / {\n proxy_pass http://$host:$port;\n }\n...\n...\n```", "```\n[vagrant@standalone ~]$ curl -H \"Host: white\" 0.0.0.0:8080/text\nAPP_VERSION: 1.0\nCOLOR: white\nCONTAINER_NAME: 86871cba5a71\nCONTAINER_IP: 192.168.208.5\nCLIENT_IP: ::ffff:192.168.208.4\nCONTAINER_ARCH: linux\n\n[vagrant@standalone ~]$ curl -H \"Host: green\" 0.0.0.0:8080/text\nAPP_VERSION: 1.0\nCOLOR: green\nCONTAINER_NAME: f7d90dc89255\nCONTAINER_IP: 192.168.208.2\nCLIENT_IP: ::ffff:192.168.208.4\nCONTAINER_ARCH: linux\n\n[vagrant@standalone ~]$ curl -H \"Host: red\" 0.0.0.0:8080/text\nAPP_VERSION: 1.0\nCOLOR: red\nCONTAINER_NAME: 25bb1b66bab8\nCONTAINER_IP: 192.168.208.3\nCLIENT_IP: ::ffff:192.168.208.4\nCONTAINER_ARCH: linux\n```", "```\n[vagrant@standalone ~]$ docker-compose -p lab5 -f docker-compose.loadbalancer.yaml ps\n Name Command State Ports \n-----------------------------------------------------------------------------------\nlab5_green_1 docker-entrypoint.sh node ... Up 3000/tcp \nlab5_loadbalancer_1 /entrypoint.sh /bin/sh -c ... Up 0.0.0.0:8080->80/tcp\nlab5_red_1 docker-entrypoint.sh node ... Up 3000/tcp \nlab5_white_1 docker-entrypoint.sh node ... Up 3000/tcp \n```", "```\n[vagrant@standalone ~]$ docker-compose -p lab5 -f docker-compose.loadbalancer.yaml up -d --scale green=4 \nStarting lab5_green_1 ... \nlab5_white_1 is up-to-date\nlab5_red_1 is up-to-date\nStarting lab5_green_1 ... done\nCreating lab5_green_2 ... done\nCreating lab5_green_3 ... done\nCreating lab5_green_4 ... done\n```", "```\n[vagrant@standalone ~]$ curl -H \"Host: green\" 0.0.0.0:8080/text \nAPP_VERSION: 1.0\nCOLOR: green\nCONTAINER_NAME: ba90c57914f9\nCONTAINER_IP: 192.168.208.7\nCLIENT_IP: ::ffff:192.168.208.4\nCONTAINER_ARCH: linux\n\n[vagrant@standalone ~]$ curl -H \"Host: green\" 0.0.0.0:8080/text\nAPP_VERSION: 1.0\nCOLOR: green\nCONTAINER_NAME: c1a9ebcf82ac\nCONTAINER_IP: 192.168.208.6\nCLIENT_IP: ::ffff:192.168.208.4\nCONTAINER_ARCH: linux\n\n[vagrant@standalone ~]$ curl -H \"Host: green\" 0.0.0.0:8080/text\nAPP_VERSION: 1.0\nCOLOR: green\nCONTAINER_NAME: d5436822ca8f\nCONTAINER_IP: 192.168.208.8\nCLIENT_IP: ::ffff:192.168.208.4\nCONTAINER_ARCH: linux\n\n[vagrant@standalone ~]$ curl -H \"Host: green\" 0.0.0.0:8080/text\nAPP_VERSION: 1.0\nCOLOR: green\nCONTAINER_NAME: f7d90dc89255\nCONTAINER_IP: 192.168.208.2\nCLIENT_IP: ::ffff:192.168.208.4\nCONTAINER_ARCH: linux\n```", "```\n[vagrant@standalone ~]$ docker-compose -p lab5 \\\n-f docker-compose.loadbalancer.yaml exec loadbalancer apk add -q --update bind-tools\n\n[vagrant@standalone ~]$ docker-compose -p lab5 -f docker-compose.loadbalancer.yaml \\\nexec loadbalancer host red\nred has address 192.168.208.3\n\n[vagrant@standalone ~]$ docker-compose -p lab5 \\\n-f docker-compose.loadbalancer.yaml exec loadbalancer host green\ngreen has address 192.168.208.8\ngreen has address 192.168.208.2\ngreen has address 192.168.208.7\ngreen has address 192.168.208.6\n```"]