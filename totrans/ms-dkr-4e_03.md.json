["```\n$ docker image pull masteringdockerfouthedition/dockerfile-example:latest\n$ docker image ls\n```", "```\n$ docker container run -d -p8080:80 --name example masteringdockerthirdedition/dockerfiles-example\n```", "```\nCloning into '.'...\nWarning: Permanently added the RSA host key for IP address '140.82.114.3' to the list of known hosts.\nReset branch 'master'\nYour branch is up-to-date with 'origin/master'.\nKernelVersion: 4.4.0-1060-aws\nComponents: [{u'Version': u'18.03.1-ee-3', u'Name': u'Engine', u'Details': {u'KernelVersion': u'4.4.0-1060-aws', u'Os': u'linux', u'BuildTime': u'2018-08-30T18:42:30.000000000+00:00', u'ApiVersion': u'1.37', u'MinAPIVersion': u'1.12', u'GitCommit': u'b9a5c95', u'Arch': u'amd64', u'Experimental': u'false', u'GoVersion': u'go1.10.2'}}]\nArch: amd64\nBuildTime: 2018-08-30T18:42:30.000000000+00:00\nApiVersion: 1.37\nPlatform: {u'Name': u''}\nVersion: 18.03.1-ee-3\nMinAPIVersion: 1.12\nGitCommit: b9a5c95\nOs: linux\nGoVersion: go1.10.2\n```", "```\nStarting build of index.docker.io/masteringdockerfouthedition/multi-stage:latest...\nStep 1/8 : FROM golang:latest as builder\n---> 374d57ff6662\nStep 2/8 : WORKDIR /go-http-hello-world/\nRemoving intermediate container 63fc21e72f2b\n---> 25ed949838cf\nStep 3/8 : RUN go get -d -v golang.org/x/net/html\n---> Running in 57072354b296\nget \"golang.org/x/net/html\": found meta tag get.metaImport{Prefix:\"golang.org/x/net\", VCS:\"git\", RepoRoot:\"https://go.googlesource.com/net\"} at //golang.org/x/net/html?go-get=1\nget \"golang.org/x/net/html\": verifying non-authoritative meta tag\ngolang.org/x/net (download)\nRemoving intermediate container 57072354b296\n---> 6731fc3ade79\nStep 4/8 : ADD https://raw.githubusercontent.com/geetarista/go-http-hello-world/master/hello_world/hello_world.go ./hello_world.go\n---> 2129f7e7cbab\nStep 5/8 : RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o app .\n---> Running in 9d5646bf1b92\nRemoving intermediate container 9d5646bf1b92\n---> 997b92d1a701\n```", "```\nStep 6/8 : FROM scratch\n--->\nStep 7/8 : COPY --from=builder /go-http-hello-world/app .\n---> 70eb0af7f82c\nStep 8/8 : CMD [\"./app\"]\n---> Running in 41cc8b47f714\nRemoving intermediate container 41cc8b47f714\n---> 71fc328a30c4\nSuccessfully built 71fc328a30c4\nSuccessfully tagged masteringdockerfouthedition/multi-stage:latest\nPushing index.docker.io/masteringdockerfouthedition/multi-stage:latest...\nDone!\nBuild finished\nYou can pull and launch a container using the image with the following commands:\n$ docker image pull masteringdockerfouthedition/multi-stage\n$ docker image ls\n$ docker container run -d -p 8000:80 --name go-hello-world masteringdockerfouthedition/multi-stage\n$ curl http://localhost:8000/\n```", "```\n$ docker container stop example go-hello-world \n$ docker container rm example go-hello-world\n```", "```\n$ docker login\n```", "```\n$ docker build --tag masteringdockerfouthedition/scratch-example:latest .\n```", "```\n$ docker image push masteringdockerfouthedition/scratch-example:latest\n```", "```\n$ docker image pull registry:2\n$ docker container run -d -p 5000:5000 --name registry registry:2\n```", "```\n$ docker image pull alpine\n```", "```\n$ docker image tag alpine localhost:5000/localalpine\n```", "```\n$ docker image push localhost:5000/localalpine\n```", "```\n$ docker image ls\n```", "```\n$ docker image rm alpine localhost:5000/localalpine\n```", "```\n$ docker image pull localhost:5000/localalpine\n$ docker image ls\n```", "```\n$ docker container stop registry\n$ docker container rm -v registry\n```", "```\n$ cat ~/.githubpackage | docker login docker.pkg.github.com -u russmckendrick --password-stdin\n```", "```\n$ docker image build --tag docker.pkg.github.com/russmckendrick/mastering-docker-fourth-edition/dockerfile-example:latest .\n```", "```\n$ docker image push docker.pkg.github.com/russmckendrick/\nmastering-docker-fourth-edition/dockerfile-example:latest\n```", "```\n$ docker image pull docker.pkg.github.com/russmckendrick/\nmastering-docker-fourth-edition/dockerfile-example:latest\n```", "```\nname: Create Multi Stage Docker Image CI\non: [push]\njobs:\n  build_docker_image:\n    runs-on: ubuntu-18.04\n    steps:\n    - uses: actions/checkout@v1\n    - name: Build and tag image\n      run: docker build -t \"docker.pkg.github.com/$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]')/multi-stage:$GITHUB_RUN_NUMBER\" -f ./chapter02/multi-stage/Dockerfile ./chapter02/multi-stage/\n    - name: Docker login\n      run: docker login docker.pkg.github.com -u $GITHUB_ACTOR -p $GITHUB_TOKEN\n      env:\n        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}\n    - name: Publish to GPR\n      run: docker push \"docker.pkg.github.com/$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]')/multi-stage:$GITHUB_RUN_NUMBER\"\n```", "```\n$ cat ~/.azureacrpassword | docker login masteringdocker.azurecr.io -u masteringdocker --password-stdin\n```", "```\n$ docker image build --tag masteringdocker.azurecr.io/dockerfile-example:latest .\n$ docker image push masteringdocker.azurecr.io/dockerfile-example:latest\n```"]