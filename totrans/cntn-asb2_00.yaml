- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Over the last few years, the world of IT has seen radical shifts in the ways
    in which software applications are developed and deployed. The rise of automation,
    cloud computing, and virtualization has fundamentally shifted how system administrators,
    software developers, and organizations as a whole view and manage infrastructure.
    Just a few years ago, it would seem unthinkable to many in the IT industry to
    allow mission-critical applications to be run outside the walls of the corporate
    data center. However, now there are more organizations than ever migrating infrastructure
    to cloud services such as AWS, Azure, and Google Compute in an effort to save
    time and cut back on overhead costs related to running physical infrastructure.
    By abstracting away the hardware, companies can focus on what really matters—the
    software applications that serve their users.
  prefs: []
  type: TYPE_NORMAL
- en: The next great tidal wave within the IT field formally started in 2013 with
    the initial release of the Docker container engine. Docker allowed users to easily
    package software into small, reusable execution environments known as containers,
    leveraging features in the Linux kernel for use with LXC (Linux Containers). Using
    Docker, developers can create microservice applications that can be built quickly,
    are guaranteed to run in any environment, and leverage reusable service artifacts
    (container images) that can be version controlled. As more and more users adopted
    containerized workflows, gaps in execution began to appear. While Docker was great
    at building and running containers, it struggled to be a true end-to-end solution
    across the entire container life cycle.
  prefs: []
  type: TYPE_NORMAL
- en: The Ansible Container project was developed to bring the power of the Ansible
    configuration management and automation platform to the world of containers. Ansible
    Container bridges the container life cycle management gap by allowing container
    build and deploy pipelines to speak the Ansible language. Using Ansible Container,
    you can leverage the powerful Ansible configuration management language to not
    only build containers, but deploy full-scale applications on remote servers and
    cloud platforms.
  prefs: []
  type: TYPE_NORMAL
- en: This book will serve as a guide to working with the Ansible Container project.
    It is my goal that by the end of this book, you will have a firm understanding
    of how Ansible Container works, and how to leverage its many capabilities to build
    robust containerized software stacks from development all the way to production.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](61a61ca8-60d4-48a0-8987-6f719d6a2c36.xhtml), *Building Containers
    with Docker*, introduces the reader to what Docker is, how it works, and the basics
    of using Dockerfiles and Docker Compose. This chapter lays down the foundational
    concepts needed to start learning how to use Ansible Container.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](089af66a-24d7-4d4d-bcfd-56bfe873ea91.xhtml), *Working with Ansible
    Container*, explores the Ansible Container workflow. This chapter gives the reader
    familiarity with the core Ansible Container concepts such as build, run, and destroy.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](4b15cefb-8d9c-48b7-8927-126501886315.xhtml), *Your First Ansible
    Container Project*, gives the user experience in building a simple Ansible Container
    project by leveraging a community role available on Ansible Galaxy. By the end
    of this chapter, the reader will be familiar with building projects and pushing
    container artifacts to container image repositories such as Docker Hub.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](747fd1c6-46e4-424a-be59-5bbf20deb5ed.xhtml), *What''s in a Role?*,
    gives the user an overview of how to write custom container-enabled roles for
    use with Ansible Container. The overarching goal of this chapter is to write a
    role that builds a fully functional MariaDB container image from scratch. By the
    end of this chapter, the user should have basic familiarity with writing Ansible
    playbooks using proper style and syntax.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](ccc07e61-25e7-4984-953b-586b28b12aab.xhtml), *Containers at Scale
    with Kubernetes*, gives the reader an overview of the Kubernetes platform and
    core functionality. In this chapter, the reader will have the opportunity to create
    a multi-node Kubernetes cluster in the Google Cloud and run containers inside
    it.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](d3c6ddae-003d-4f20-a3a5-efd018ac61ee.xhtml), *Managing Containers
    with OpenShift*, introduces the reader to Redhat''s OpenShift platform. This chapter
    gives the reader the steps required to deploy a local OpenShift cluster using
    Minishift and run containerized workloads on it. This chapter also looks at the
    key differences between Kubernetes and OpenShift, even though the architectures
    are fundamentally similar.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](ef89f30f-00a9-4f4c-93b9-009474fc3022.xhtml), *Deploying Your First
    Project* takes an in-depth look at the final command in the Ansible Container
    workflow—deploy. Using deploy, the reader will gain first-hand experience of deploying
    previously built projects to Kubernetes and OpenShift using the Ansible Container
    as an end-to-end workflow tool.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](f734178a-8a55-4fc5-9961-13e8182fdda7.xhtml), *Building and Deploying
    a Multi-Container Project*, looks at how Ansible Container can be used to build
    a project that leverages more than one application container. Critical to a full
    understanding of this topic is an introduction to container networking and configuring
    containers to access network resources. This chapter will give the reader an opportunity
    to build and deploy a multi-container project using Django, Gulp, NGINX, and PostgreSQL
    containers.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](5137aec5-ebc9-44cc-938b-8959117fff8c.xhtml), *Going Further with
    Ansible Container*, gives the reader an idea of the next steps to take after mastering
    the entire Ansible Container workflow. Topics explored in this section include
    integrating Ansible Container with CICD tools, and sharing projects on Ansible
    Galaxy.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This book assumes a beginner-to-medium level of experience of working with
    the Linux operating system, deploying applications, and managing servers. This
    book walks you through the steps required to bring up a fully-functional lab environment
    on your local laptop to quickly get up and running using a Virtualbox and Vagrant
    environment. Prior to starting, it would be helpful to have Virtualbox, Vagrant,
    and the Git command-line client installed and running on your personal computer.
    To run this environment with full specifications, the following system requirements
    must be met or exceeded:'
  prefs: []
  type: TYPE_NORMAL
- en: 'CPU: 2 cores (Intel Core i5 or equivalent)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Memory: 8 GB RAM'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Disk space: 80 GB'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'In this book, you will need the following software list:'
  prefs: []
  type: TYPE_NORMAL
- en: VirtualBox 5.1 or higher
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vagrant 1.9.1 or higher
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A text editor that edits YAML files (GitHub Atom or VIM preferred)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Internet connectivity is required to install the necessary packages.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is designed to assist those currently working as system administrators,
    DevOps engineers, or technical architects, (or similar roles) to quickly get up
    and running with the Ansible Container workflow. It is helpful as well if the
    reader already has a basic understanding of Docker, Ansible, or other related
    automation platforms prior to reading the book, although not required. It is my
    hope that a user can get a firm understanding of these basics while reading the
    book. The end goal is to help readers gain a solid foundation on how Ansible Container
    can accelerate building, running, testing, and deploying application containers
    from development to production environments.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning. Code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles are shown as follows: "We can include other contexts through the use of
    the `include` directive."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "Clicking the Next button moves you to the next screen."'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Reader feedback
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome. Let us know what you think about
    this book-what you liked or disliked. Reader feedback is important for us as it
    helps us develop titles that you will really get the most out of. To send us general
    feedback, simply e-mail `feedback@packtpub.com`, and mention the book's title
    in the subject of your message. If there is a topic that you have expertise in
    and you are interested in either writing or contributing to a book, see our author
    guide at [www.packtpub.com/authors](http://www.packtpub.com/authors).
  prefs: []
  type: TYPE_NORMAL
- en: Customer Support
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that you are the proud owner of a Packt book, we have a number of things
    to help you to get the most from your purchase.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the color images for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We also provide you with a PDF file that has color images of the screenshots/diagrams
    used in this book. The color images will help you better understand the changes
    in the output. You can download this file from [https://www.packtpub.com/sites/default/files/downloads/ContainerizationwithAnsible2_ColorImages.pdf](https://www.packtpub.com/sites/default/files/downloads/ContainerizationwithAnsible2_ColorImages.pdf).
  prefs: []
  type: TYPE_NORMAL
- en: Errata
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our books-maybe a mistake in the text
    or the code-we would be grateful if you could report this to us. By doing so,
    you can save other readers from frustration and help us improve subsequent versions
    of this book. If you find any errata, please report them by visiting [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details of your errata. Once your errata is verified, your submission will
    be accepted and the errata will be uploaded to our website or added to any list
    of existing errata under the Errata section of that title. To view the previously
    submitted errata, go to [https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)
    and enter the name of the book in the search field. The required information will
    appear under the Errata section.
  prefs: []
  type: TYPE_NORMAL
- en: Piracy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Piracy of copyrighted material on the Internet is an ongoing problem across
    all media. At Packt, we take the protection of our copyright and licenses very
    seriously. If you come across any illegal copies of our works in any form on the
    Internet, please provide us with the location address or website name immediately
    so that we can pursue a remedy. Please contact us at `copyright@packtpub.com`
    with a link to the suspected pirated material. We appreciate your help in protecting
    our authors and our ability to bring you valuable content.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you have a problem with any aspect of this book, you can contact us at `questions@packtpub.com`,
    and we will do our best to address the problem.
  prefs: []
  type: TYPE_NORMAL
