- en: Self-Adaptation Applied To Infrastructure
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Our goal is within reach. We adopted schedulers (Docker Swarm in this case)
    that provide self-healing applied to services. We saw how *Docker For AWS* accomplishes
    a similar goal but on the infrastructure level. We used Prometheus, Alertmanager,
    and Jenkins to build a system that automatically adapts services to ever-changing
    conditions. The metrics we’re storing in Prometheus are a combination of those
    gathered through exporters and those we added to our services through instrumentation.
    The only thing we’re missing is self-adaptation applied to infrastructure. If
    we manage to build it, we’ll close the circle and witness a self-sufficient system
    capable of running without (almost) any human intervention.
  prefs: []
  type: TYPE_NORMAL
- en: The logic behind self-adaptation applied to infrastructure is not much different
    from the one we used with services. We need metrics, alerts, and scripts that
    will adapt cluster capacity whenever conditions change.
  prefs: []
  type: TYPE_NORMAL
- en: We already have all the tools we need. Prometheus will continue gathering metrics
    and firing alerts. Alertmanager is still an excellent choice to receive those
    alerts and resend them to different system components. We’ll keep using Jenkins
    as a tool that allows us to quickly write scripts that can interact with the system.
    Since we’re using AWS to host our cluster, Jenkins will have to interact with
    its API.
  prefs: []
  type: TYPE_NORMAL
- en: We are so close to the final objective that I feel we should skip the theory
    and jump straight into practical hands-on parts of the chapter. So, without further
    ado, we’ll create our cluster one more time.
  prefs: []
  type: TYPE_NORMAL
- en: Creating A Cluster
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In the previous chapter, we already explored how to create a cluster without
    UI. The commands that follow should be familiar and, hopefully, should not require
    much explanation.
  prefs: []
  type: TYPE_NORMAL
- en: Please replace `[...]` with your keys before executing the commands that follow.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
