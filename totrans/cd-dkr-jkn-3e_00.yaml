- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Continuous Delivery with Docker and Jenkins – Third Edition* explains the
    advantages of combining Jenkins and Docker to improve the continuous integration
    and delivery process of app development. It starts with setting up a Docker server
    and configuring Jenkins on it. It then outlines the steps to build applications
    on Docker files and integrate them with Jenkins using continuous delivery processes
    such as continuous integration, automated acceptance testing, and configuration
    management.'
  prefs: []
  type: TYPE_NORMAL
- en: Moving on, you will learn how to ensure quick application deployment with Docker
    containers, along with scaling Jenkins and using Kubernetes. After that, you will
    get to know how to deploy applications using Docker images and test them with
    Jenkins. Toward the end, the book will touch base with missing parts of the CD
    pipeline, which are the environments and infrastructure, application versioning,
    and non-functional testing.
  prefs: []
  type: TYPE_NORMAL
- en: By the end of the book, you will know how to enhance the DevOps workflow by
    integrating the functionalities of Docker and Jenkins.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The book targets DevOps engineers, system administrators, Docker professionals,
    or any stakeholders who would like to explore the power of working with Docker
    and Jenkins together.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[*Chapter 1*](B18223_01_ePub.xhtml#_idTextAnchor015), *Introducing Continuous
    Delivery*, demonstrates the pitfalls of the traditional delivery process and describes
    success stories, including Amazon and Yahoo.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 2*](B18223_02_ePub.xhtml#_idTextAnchor034), *Introducing Docker*,
    provides a brief introduction to Docker and the concept of containerization and
    looks at the benefits in terms of running applications and services using this
    platform. In addition, we will also describe, step by step, how to set up Docker
    Community Edition on a local machine or a server running Linux and check to see
    whether Docker is running properly.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 3*](B18223_03_ePub.xhtml#_idTextAnchor073), *Configuring Jenkins*,
    introduces the Jenkins tool, their architecture, and procedures to install master/agent
    instances on a Docker server, without Docker and using Kubernetes. Then, we''ll
    see how to scale agents. Finally, you will get a working Jenkins instance ready
    to build applications integrated with your source code repository service.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 4*](B18223_04_ePub.xhtml#_idTextAnchor106), *Continuous Integration
    Pipeline*, describes how the classic continuous integration pipeline entails three
    steps: checkout, building, and unit tests. In this chapter, you will learn how
    to build it using Jenkins and what other steps should be considered (such as code
    coverage and static code analysis).'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 5*](B18223_05_ePub.xhtml#_idTextAnchor133), *Automated Acceptance
    Testing*, explains how, before releasing an application, you need to make sure
    that the whole system works as expected by running automated acceptance tests.
    Ordinarily, applications connect with databases, cache, messaging, and other tools
    that require other servers to run these services. This is why the whole environment
    has to be set up and kept ready before the test suite is started. In this chapter,
    you will learn Docker Registry concepts and how to build a system made of different
    components running as Docker containers.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 6*](B18223_06_ePub.xhtml#_idTextAnchor152), *Clustering with Kubernetes*,
    explains how to scale to multiple teams and projects using Docker tools. In this
    chapter, you will be introduced to Kubernetes and learn how to use it in the continuous
    delivery process.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 7*](B18223_07_ePub.xhtml#_idTextAnchor185), *Configuration Management
    with Ansible*, describes how, once you have scaled your servers, to deploy your
    application in production. In this chapter, you will learn how to release an application
    on a Docker production server using configuration management tools such as Chef
    and Ansible. Additionally, you will learn about the infrastructure as code approach
    and the Terraform tool.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 8*](B18223_08_ePub.xhtml#_idTextAnchor218), *Continuous Delivery
    Pipeline*, focuses on the missing parts of the final pipeline, which are the environments
    and infrastructure, application versioning, and non-functional testing. Once this
    chapter has been concluded, the complete continuous delivery pipeline will be
    ready.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 9*](B18223_09_ePub.xhtml#_idTextAnchor242), *Advanced Continuous
    Delivery*, explains how, after building a complete pipeline, you can address more
    difficult real-life scenarios. Beginning with parallelizing the pipeline tasks,
    we will then show how to roll back to the previous version, how to run performance
    tests, what to do with database changes, and how to proceed with legacy systems
    and manual tests.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Best Practices*](B18223_10_ePub.xhtml#_idTextAnchor266), this includes best
    practices to be followed throughout the book.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Docker requires a 64-bit Linux operating system. All examples in this book have
    been developed using Ubuntu 20.04, but any other Linux system with kernel version
    3.10 or above is sufficient.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/B18223_Preface.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Download the color images
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here: [https://static.packt-cdn.com/downloads/9781803237480_ColorImages.pdf](https://static.packt-cdn.com/downloads/9781803237480_ColorImages.pdf).'
  prefs: []
  type: TYPE_NORMAL
- en: Code in Action
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Code in Action videos for this book can be viewed at [https://bit.ly/3NSEPNA](https://bit.ly/3NSEPNA)
    .
  prefs: []
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from GitHub at [https://github.com/PacktPublishing/Continuous-Delivery-With-Docker-and-Jenkins-3rd-Edition](https://github.com/PacktPublishing/Continuous-Delivery-With-Docker-and-Jenkins-3rd-Edition).
    In case there's an update to the code, it will be updated on the existing GitHub
    repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`Code in text`: Indicates code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles. Here is an example: "We can create a new pipeline called `calculator` and,
    as pipeline script, put the code in a stage called `Checkout`."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "Select **Gradle Project** instead of **Maven Project** (you can
    choose Maven if you prefer it to Gradle)."'
  prefs: []
  type: TYPE_NORMAL
- en: Tips or Important Notes
  prefs: []
  type: TYPE_NORMAL
- en: Appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '`customercare@packtpub.com`.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details.'
  prefs: []
  type: TYPE_NORMAL
- en: '`copyright@packt.com` with a link to the material.'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com).'
  prefs: []
  type: TYPE_NORMAL
- en: Share Your Thoughts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Once you've read *Continuous Delivery with Docker and Jenkins*, we'd love to
    hear your thoughts! Please [click here to go straight to the Amazon review page](https://packt.link/r/1803237481)
    for this book and share your feedback.
  prefs: []
  type: TYPE_NORMAL
- en: Your review is important to us and the tech community and will help us make
    sure we're delivering excellent quality content.
  prefs: []
  type: TYPE_NORMAL
