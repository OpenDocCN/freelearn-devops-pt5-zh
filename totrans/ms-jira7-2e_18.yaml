- en: Chapter 18. Troubleshooting JIRA
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: One of the most important responsibilities of JIRA administrators is to provide
    support to users who rely on JIRA for their daily work. As JIRA administrators,
    it's important to make sure that service is not impacted. In this chapter, we
    will cover common problems that may arise in your instance. Most importantly,
    we will cover how to troubleshoot these issues.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Atlassian support
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Common configuration issues
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Increasing memory
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Integrity Checker**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Atlassian support
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When you purchase JIRA, you are entitled to get official support from Atlassian,
    and they are quite responsive when you raise a support request. You can raise
    a support ticket with Atlassian when you are not able to find the solution yourself.
  prefs: []
  type: TYPE_NORMAL
- en: Atlassian Answers
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We all learn from our experiences and it takes time to become an expert in
    a specific tool or technology. Atlassian has a great online community of fellow
    JIRA administrators and users. Here, they share knowledge with each other and
    also seek help. I recommend that, before raising a support ticket with Atlassian,
    you should always try to find the possible solution on the *Atlassian Answers*
    online portal, at [https://answers.atlassian.com/](https://answers.atlassian.com/):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Atlassian Answers](img/image_18_001.jpg)'
  prefs: []
  type: TYPE_IMG
- en: In this portal, you can see the questions that other users have posted. You
    can go through these questions and also respond to them, if you want to contribute
    and help others. Each question is usually marked with tags (such as **jira**,
    **jira-administration**, and **confluence**). You can click on any of these tags
    and find all the questions related to a specific tag. *Atlassian Answers* is a
    wonderful online portal to seek help from.
  prefs: []
  type: TYPE_NORMAL
- en: Reporting a problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Raising a support request with Atlassian is quite easy. Atlassian has a support
    portal where you can raise your tickets. Depending on the urgency of your problem,
    you will get your response from Atlassian. In my experience, the support provided
    by Atlassian is quite good and they respond in a timely manner. If you have further
    queries on your ticket, you can post a follow-up comment and close the ticket
    only when you are satisfied with the solution provided.
  prefs: []
  type: TYPE_NORMAL
- en: 'Perform these steps to raise a support request ticket:'
  prefs: []
  type: TYPE_NORMAL
- en: Enter [https://support.atlassian.com/customer/servicedesk-portal](https://support.atlassian.com/customer/servicedesk-portal)
    in your browser and click on **JIRA** from the list of tools. Then click on **JIRA
    Core**, **JIRA Software**, or **JIRA Service Desk**:![Reporting a problem](img/image_18_002.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the next screen, click on **Submit a problem report to us**:![Reporting a
    problem](img/image_18_003.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the next screen, you will be presented with a form. This form contains various
    fields, where you can explain the issue. Fill in the **Affects Version/s** field
    to help Atlassian support to understand on which version of the application you
    are facing the issue, and press the **Create** button to create the issue:![Reporting
    a problem](img/image_18_004.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After the issue is created, you can also upload screenshots, if any, or attach
    log files:![Reporting a problem](img/image_18_005.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Log scanner
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you ever run into an issue of any kind, you should first check the log file
    located at `home/log/atlassian-jira.log`, in your `JIRA HOME` directory.
  prefs: []
  type: TYPE_NORMAL
- en: All internal error messages are logged in this file and it provides very useful
    information about the possible source of the problem. You will get good clues
    about where to start your troubleshooting. You can search for the respective error
    message from your log file on *Atlassian Answers*.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you find looking into the log files daunting in the beginning, you can also
    use the log scanner option that comes with JIRA. Perform these steps to run log
    scanner:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to **Administration** | **System** | **Support Tools** (under **TROUBLESHOOTING
    AND SUPPORT**):![Log scanner](img/image_18_006.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Log Analyzer** tab link to run the scanner. You will get the
    option to either run the scanner on the standard log file or any other log file
    whose location you can enter. We will select the standard log file. Click on the
    **Scan** button to continue:![Log scanner](img/image_18_007.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The scanner will run and look into the log file for error and warning messages;
    the good thing about the log scanner is that it will also provide various links
    to *Atlassian Answers* and JIRA issues based on similar error messages other users
    might have faced. As a JIRA administrator, you should run this scanner regularly,
    read these recommendations, and take appropriate action:![Log scanner](img/image_18_008.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Apart from manually running **Log Analyzer**, you can also schedule this scan
    to happen periodically and mail you the output. Click on the **Periodic Scan**
    button in the top-right corner to schedule this scan:![Log scanner](img/image_18_009.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the **Enable** checkbox, set **Start Time** and  **Frequency**, enter
    your e-mail in the **Recipients** text field, and click on the **Save Changes**
    button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Support ZIP
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When you raise the support request ticket with Atlassian support, it's always
    a good idea to attach the log files. You can manually copy the whole `log` folder
    in your JIRA's home directory and send Atlassian the compressed version of this
    folder; however, JIRA makes the job easier for you. You can generate the support
    ZIP file. This not only contains the log files of your instance, but also contains
    **Application Properties**, **JIRA Configuration Files**, and a few other important
    files that give Atlassian a very good idea about your instance, which will enable
    them to give you better answers for your issues.
  prefs: []
  type: TYPE_NORMAL
- en: 'Under **Support Tools**, click on the third tab, called **CreateSupport Zip**.
    Here, you will have the option to select the files to include in the support ZIP
    file. Then, click on the **Create** button to generate the support ZIP file:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Support ZIP](img/image_18_010.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The support ZIP will be suffixed with a timestamp and its zipped version will
    be placed in your `export` folder, under JIRA's home directory. You can copy this
    file and attach it to your support ticket.
  prefs: []
  type: TYPE_NORMAL
- en: Common configuration issues
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In [Chapter 17](ch17.html "Chapter 17. JIRA Best Practices"), *JIRA Best Practices*,
    we discussed various best practices you can employ in your organization to implement
    customizations in JIRA. We also described the process (from gathering the requirements
    to testing new configurations) used to perform customizations. If testing is not
    done properly, then it's quite possible to have issues later on and users will
    complain. Let's go through some common configuration-related issues and their
    possible causes.
  prefs: []
  type: TYPE_NORMAL
- en: User is not able to log in
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let's say that you receive a request to create a new user account in JIRA. You
    create the account manually and assign appropriate groups to the user to provide
    access to the relevant projects, but you receive the complaint that the user is
    not able to log in to JIRA at all.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: First, check in your JIRA instance's global permissions, whose groups are part
    of the JIRA user's permission. In the default JIRA configuration, the **jira-users**
    group is part of this permission. Just check whether this user is part of the
    **jira-users** group or not.
  prefs: []
  type: TYPE_NORMAL
- en: Users don't see the project
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you are using different permission schemes in your projects to hide specific
    projects from everyone, it's possible that users will not be able to see the projects
    they want to work on.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In [Chapter 4](ch04.html "Chapter 4. Customizing JIRA for Test Management"),
    *Customizing JIRA for Test Management*, we discussed how to limit the visibility
    of a project to a certain group. The **Browse Projects** permission in the project's
    permission scheme decides who will see the project and who will not. Just check
    which group or project role is assigned this permission and add the user to this
    group or project role.
  prefs: []
  type: TYPE_NORMAL
- en: Permission helper
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'JIRA comes with a handy tool, called **Permission helper**, which can quickly
    tell whether a user has a specific permission or not:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to **Administration** | **System** | **Permission helper** (under **ADMIN
    HELPER**).![Permission helper](img/image_18_011.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the **User**, select the **Issue** and the **Permission** you want to
    check for, and click the **Submit** button:![Permission helper](img/image_18_012.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: As shown in the preceding screenshot, you will then get the details of permissions
    that user has on a specific Issue.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This is a great tool to quickly check the permissions of any user.
  prefs: []
  type: TYPE_NORMAL
- en: User complaints about e-mails not being received
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: JIRA has the capability to send e-mail notifications to relevant users on various
    events, such as issue creation, resolutions, and workflow transitions.
  prefs: []
  type: TYPE_NORMAL
- en: 'If the user is not able to receive e-mails, seek more clarification based on
    the following questions:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **E-mail not received** | **Solution** |'
  prefs: []
  type: TYPE_TB
- en: '| E-mail not working for some events or not working at all | If e-mails are
    not working at all, then check the outgoing mail configuration. It can be an issue
    with the **Simple Mail Transfer Protocol** (**SMTP**) mail server. |'
  prefs: []
  type: TYPE_TB
- en: '| E-mails are not received for changes in a particular issue | Check whether
    the user is the reporter, assignee, watcher, component lead, or project lead.
    Then, check whether the project notification scheme is configured to send e-mails
    on issue events. |'
  prefs: []
  type: TYPE_TB
- en: '| E-mails are not received on state transition | If a custom workflow is used,
    then check whether the post function on any custom event is triggered or not.
    Then, in the project notification scheme, check whether any user, group, or role
    is configured to receive e-mails on this custom event. |'
  prefs: []
  type: TYPE_TB
- en: Workflow buttons are missing
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Customized workflows have the ability to add conditions on various transitions
    and a common usage is to limit who can perform these transitions. For instance,
    in the default workflow, once the issue is created, only the assignee of the issue
    can move it to the **In Progress** state. In a customized workflow, you have to
    be very careful about these conditions, because users might not be able to move
    the issues in the workflow if these conditions are not met.
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If users complain about not being able to perform workflow transitions, check
    the condition for that transition. Either modify or remove the condition, if it's
    not required, or add the user to the relevant group or permission to be able to
    make the transition.
  prefs: []
  type: TYPE_NORMAL
- en: The options in the select list suddenly changed
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In [Chapter 17](ch17.html "Chapter 17. JIRA Best Practices"), *JIRA Best Practices*,
    we discussed using the same custom field of the type select list in multiple projects
    by using context to create different sets of options that appear in the field.
    The request to add different sets of options for an individual project is quite
    common, and can easily be done using the context. However, if two or more projects
    are using the same context, then it's equally easy to make a mistake by not selecting
    the project name.
  prefs: []
  type: TYPE_NORMAL
- en: While configuring, choose applicable context; the project names are available
    in the list, and to select multiple projects, you need to press the *Ctrl* key.
  prefs: []
  type: TYPE_NORMAL
- en: The custom field disappears from the project
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Working with context can be tricky in the beginning. Another common problem
    JIRA administrators face is that users complain about a custom field, which suddenly
    went missing from the project, even though this custom field is present on the
    screen.
  prefs: []
  type: TYPE_NORMAL
- en: While creating the context, as discussed in [Chapter 17](ch17.html "Chapter 17. JIRA
    Best Practices"), *JIRA Best Practices*, there is an option, **Choose applicable
    issue types**. By default, **Any issue type** is selected, but if you mistakenly
    select a specific issue type (such as **Bug**), then this issue type will be present
    in the project and the content will be limited to this issue type only. Unless
    there is a specific request to limit the custom field for a particular issue type,
    it's better to select **Any issue type**.
  prefs: []
  type: TYPE_NORMAL
- en: Increasing memory
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As your JIRA instance grows, both in terms of the number of users and data,
    you will need to keep track of how much memory is consumed by your instance. In
    [Chapter 1](ch01.html "Chapter 1. Planning Your JIRA Installation"), *Planning
    Your JIRA Installation*, we discussed hardware recommendations, where we mentioned
    the minimum amount of RAM and CPU required based on the usage; there are times
    when JIRA will consume more memory than usual (such as taking XML backup, which
    consumes a lot of memory), so make sure that not many people are using the instance
    before performing these activities. However, when your instance grows, it will
    consume a lot of memory and you might get degraded performance. It's quite possible
    that, due to a lack of sufficient memory, your JIRA instance might stop working.
  prefs: []
  type: TYPE_NORMAL
- en: 'Perform these steps to check the consumption of memory:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to **Administration** | **System** | **System info** (under **TROUBLESHOOTING
    AND SUPPORT**).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Scroll down until you see **Java VM Memory Statistics**:![Increasing memory](img/image_18_013.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In this section, you can see how much memory your instance has and how much
    is currently free. To free up some memory, you can also click on the **Force garbage
    collection** link.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you notice degraded performance or `Java Heap Out of Memory` errors in your
    log file, then you can increase the available memory for JIRA. Follow these instructions
    to modify it:'
  prefs: []
  type: TYPE_NORMAL
- en: Open `setenv.bat` in your `bin` directory, under JIRA's installation directory.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Increase the **Java virtual machine** (**JVM**) maximum memory from 768 MB
    to 1024 MB or more, depending on the number of issues in your instance:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Atlassian that the JVM maximum memory of 1 GB is enough to handle 5000 issues.
    You can increase it appropriately for your case, making sure that you have enough
    physical RAM on your server.
  prefs: []
  type: TYPE_NORMAL
- en: Integrity Checker
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Whenever there is an issue with the instance, any experienced JIRA administrator
    will always have an idea of where to look first to fix these problems; however,
    there is a built-in tool called Integrity Checker that can be used to identify
    any possible problems. Perform these steps to use Integrity Checker tool:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to **Administration** | **System** | **Integrity Checker** (under **TROUBLESHOOTING
    AND SUPPORT**).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Check the **Select All** checkbox:![Integrity Checker](img/image_18_014.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Check** button to continue:![Integrity Checker](img/image_18_015.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the next screen, the system will display the list of problems with the configurations
    found in the instance. You can check the **Fix All** checkbox and click on the
    **Fix** button to resolve these issues. Alternatively, if you know the actual
    reason behind these problems, you can resolve them manually and run **Integrity
    Checker** again.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we discussed the various problems that may arise in your JIRA
    instance. Most importantly, we discussed how to handle these issues. If the configurations
    are not tested properly, users will complain about usage-related issues, which
    can be fixed by making appropriate changes to the configurations. In this chapter,
    we discussed such configuration-related issues and their solutions.
  prefs: []
  type: TYPE_NORMAL
- en: This is the last chapter of this book. I hope you enjoyed reading these chapters
    and I am sure you must have learned about a lot of interesting things that JIRA
    has to offer. In recent years, JIRA, along with other Atlassian tools, has become
    a popular choice in organizations. These days, JIRA is treated not just as a tool
    to manage issues, but is considered a competency. If you are a project manager,
    scrum master, or are managing any project, learning JIRA will certainly help you
    get the best out of this amazing tool.
  prefs: []
  type: TYPE_NORMAL
