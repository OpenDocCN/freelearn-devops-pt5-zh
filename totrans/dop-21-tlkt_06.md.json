["```\ncd cloud-provisioning\n\ngit pull\n\nscripts/dm-swarm.sh\n\n```", "```\neval $(docker-machine env swarm-1)\n\ndocker node ls\n\n```", "```\nHOSTNAME  STATUS  AVAILABILITY  MANAGER STATUS\nswarm-2   Ready   Active        Reachable\nswarm-1   Ready   Active        Leader\nswarm-3   Ready   Active        Reachable\n\n```", "```\nmkdir -p docker/jenkins\n\ndocker service create --name jenkins \\\n    -p 8082:8080 \\\n    -p 50000:50000 \\ \n    -e JENKINS_OPTS=\"--prefix=/jenkins\" \\\n    --mount \"type=bind,source=$PWD/docker/jenkins,target=/var/ \\\n    jenkins_home\"--reserve-memory 300m \\\n    jenkins:2.7.4-alpine\n\ndocker service ps jenkins\n\n```", "```\nNAME      IMAGE                NODE    DESIRED STATE CURRENT STATE          \njenkins.1 jenkins:2.7.4-alpine swarm-1 Running       Running 52 seconds ago\n\n```", "```\nopen \"http://$(docker-machine ip swarm-1):8082/jenkins\"\n\n```", "```\ncat docker/jenkins/secrets/initialAdminPassword\n\n```", "```\nNODE=$(docker service ps \\\n    -f desired-state=running jenkins \\\n    | tail -n +2 | awk '{print $4}')\n\neval $(docker-machine env $NODE)\n\ndocker rm -f $(docker ps -qa \\\n    -f label=com.docker.swarm.service.name=jenkins)\n\n```", "```\ndocker service ps jenkins\n\n```", "```\nopen \"http://$(docker-machine ip swarm-1):8082/jenkins\"\n\n```", "```\nopen \"http://$(docker-machine ip swarm-1):8082/jenkins/pluginManager/available\"\n\n```", "```\nscripts/dm-test-swarm-2.sh\n\neval $(docker-machine env swarm-test-1)\n\ndocker node ls\n\n```", "```\nHOSTNAME      STATUS  AVAILABILITY  MANAGER STATUS\nswarm-test-2  Ready   Active        Reachable\nswarm-test-1  Ready   Active        Leader\nswarm-test-3  Ready   Active        Reachable\n\n```", "```\neval $(docker-machine env swarm-test-1)\n\ndocker node inspect swarm-test-1 --pretty\n\n```", "```\nID:             3rznbsuvvkw4wf7f4qa32cla3\nLabels:\n - env = jenkins-agent\nHostname:           swarm-test-1\nJoined at:          2017-01-22 08:30:26.757026595 +0000 utc\nStatus:\n State:         Ready\n Availability:      Active\nManager Status:\n Address:           192.168.99.103:2377\n Raft Status:       Reachable\n Leader:            Yes\nPlatform:\n Operating System:      linux\n Architecture:      x86_64\nResources:\n CPUs:          1\n Memory:            492.5 MiB\nPlugins:\n  Network:          bridge, host, null, overlay\n  Volume:           local\nEngine Version:     1.13.0\nEngine Labels:\n - provider = virtualbox\n\n```", "```\nFROM docker:1.12.1\n\nMAINTAINER Viktor Farcic <viktor@farcic.com>\n\nENV SWARM_CLIENT_VERSION 2.2\nENV DOCKER_COMPOSE_VERSION 1.8.0\nENV COMMAND_OPTIONS \"\"\n\nRUN adduser -G root -D jenkins\nRUN apk --update add openjdk8-jre python py-pip git\n\nRUN wget -q https://repo.jenkins-ci.org/releases/org/jenkins-ci/plugins/swarm-client/ \\\n${SWARM_CLIENT_VERSION}/swarm-client-${SWARM_CLIENT_VERSION}-jar-with- \\\ndependencies.jar -P /home/jenkins/\nRUN pip install docker-compose\n\nCOPY run.sh /run.sh\nRUN chmod +x /run.sh\n\nCMD [\"/run.sh\"]\n\n```", "```\ndocker-machine ssh swarm-test-1\n\nsudo mkdir /workspace && sudo chmod 777 /workspace && exit\n\n```", "```\nexport USER=admin\n\nexport PASSWORD=admin\n\ndocker service create --name jenkins-agent \\\n    -e COMMAND_OPTIONS=\"-master \\\n    http://$(docker-machine ip swarm-1):8082/jenkins \\\n    -username $USER -password $PASSWORD \\\n    -labels 'docker' -executors 5\" \\\n    --mode global \\\n    --constraint 'node.labels.env == jenkins-agent' \\\n    --mount \\\n    \"type=bind,source=/var/run/docker.sock,target=/var/run/docker.sock\" \\\n    --mount \\\n    \"type=bind,source=$HOME/.docker/machine/machines,target=/machines\" \\\n    --mount \"type=bind,source=/workspace,target=/workspace\" \\\n    vfarcic/jenkins-swarm-agent\n\n```", "```\ndocker service ps jenkins-agent\n\n```", "```\nopen \"http://$(docker-machine ip swarm-1):8082/jenkins/computer/\"\n\n```", "```\ndocker-machine create -d virtualbox swarm-test-4\n\ndocker-machine ssh swarm-test-4\n\nsudo mkdir /workspace && sudo chmod 777 /workspace && exit\n\nTOKEN=$(docker swarm join-token -q worker)\n\neval $(docker-machine env swarm-test-4)\n\ndocker swarm join \\\n    --token $TOKEN \\\n    --advertise-addr $(docker-machine ip swarm-test-4) \\\n    $(docker-machine ip swarm-test-1):2377\n\n```", "```\neval $(docker-machine env swarm-test-1)\n\ndocker node ls\n\n```", "```\nHOSTNAME      STATUS  AVAILABILITY  MANAGER STATUS\nswarm-test-3  Ready   Active        Reachable\nswarm-test-2  Ready   Active        Reachable\nswarm-test-1  Ready   Active        Leader\nswarm-test-4  Ready   Active\n\n```", "```\ndocker service ps jenkins-agent\n\n```", "```\nNAME             IMAGE                              NODE         \njenkins-agent... vfarcic/jenkins-swarm-agent:latest swarm-test-1  \n---------------------------------------- DESIRED STATE CURRENT STATE ERROR PORTS\nRunning       Running\n\n```", "```\ndocker node update \\\n    --label-add env=jenkins-agent \\\n    swarm-test-4\n\ndocker service ps jenkins-agent\n\n```", "```\nopen \"http://$(docker-machine ip swarm-1):8082/jenkins/computer\"\n\n```", "```\nscripts/dm-swarm-services-2.sh\n\neval $(docker-machine env swarm-1)\n\ndocker service ls\n\n```", "```\nNAME       MODE       REPLICAS IMAGE\ngo-demo    replicated 3/3      vfarcic/go-demo:1.0\njenkins    replicated 1/1      jenkins:2.7.4-alpine\ngo-demo-db replicated 1/1      mongo:3.2.10\nregistry   replicated 1/1      registry:2.5.0\nproxy      replicated 3/3      vfarcic/docker-flow-proxy:latest\n\n```", "```\nscripts/dm-test-swarm-services-2.sh\n\neval $(docker-machine env swarm-test-1)\n\ndocker service ls\n\n```", "```\nNAME          MODE       REPLICAS IMAGE\njenkins-agent global     2/2      vfarcic/jenkins-swarm-agent:latest\nregistry      replicated 1/1      registry:2.5.0\ngo-demo       replicated 2/2      vfarcic/go-demo:1.0\nproxy         replicated 2/2      vfarcic/docker-flow-proxy:latest\ngo-demo-db    replicated 1/1      mongo:3.2.10\n\n```", "```\nopen \"http://$(docker-machine ip swarm-1):8082/jenkins/configure\"\n\n```", "```\ndocker-machine ip swarm-1\n\n```", "```\n192.168.99.107\n\n```", "```\nnode(\"docker\") {\n}\n\n```", "```\nStarted by user admin\n[Pipeline] node\nRunning on be61529c010a-d9bf7835 in /workspace/go-demo\n[Pipeline] {\n[Pipeline] }\n[Pipeline] // node\n[Pipeline] End of Pipeline\nFinished: SUCCESS\n\n```", "```\nstage(\"Pull\") {\n}\n\nstage(\"Unit\") {\n}\n\nstage(\"Staging\") {\n}\n\nstage(\"Publish\") {\n}\n\nstage(\"Prod-like\") {\n}\n\nstage(\"Production\") {\n}\n\n```", "```\nstage(\"Pull\") { \\\n  git \"https://github.com/vfarcic/go-demo.git\" \\\n}\n\n```", "```\nwithEnv([\n  \"COMPOSE_FILE=docker-compose-test-local.yml\"\n]) {\n\n  stage(\"Unit\") {\n    sh \"docker-compose run --rm unit\"\n    sh \"docker-compose build app\"\n  }\n\n}\n\n```", "```\nstage(\"Staging\") {\ntry {\n    sh \"docker-compose up -d staging-dep\"\n    sh \"docker-compose run --rm staging\"\n} catch(e) {\n    error \"Staging failed\"\n  } finally {\n    sh \"docker-compose down\"\n  }\n}\n\n```", "```\nstage(\"Publish\") {\n  sh \"docker tag go-demo \\\n    localhost:5000/go-demo:2.${env.BUILD_NUMBER}\"\n  sh \"docker push \\\n    localhost:5000/go-demo:2.${env.BUILD_NUMBER}\"\n}\n\n```", "```\nstage(\"Prod-like\") {\n  withEnv([\n     \"DOCKER_TLS_VERIFY=1\",\n     \"DOCKER_HOST=tcp://${env.PROD_LIKE_IP}:2376\",\n     \"DOCKER_CERT_PATH=/machines/${env.PROD_LIKE_NAME}\"\n]) {\n    sh \"docker service update \\\n      --image localhost:5000/go-demo:2.${env.BUILD_NUMBER} \\\n      go-demo\"\n}\nwithEnv([\"HOST_IP=localhost\"]) { \n     for (i = 0; i <10; i++) {\n      sh \"docker-compose run --rm production\"\n    }\n  }\n}\n\n```", "```\nstage(\"Production\") {\n  withEnv([\n    \"DOCKER_TLS_VERIFY=1\",\n    \"DOCKER_HOST=tcp://${env.PROD_IP}:2376\",\n    \"DOCKER_CERT_PATH=/machines/${env.PROD_NAME}\"\n]) {\n   sh \"docker service update \\\n    --image localhost:5000/go-demo:2.${env.BUILD_NUMBER} \\\n    go-demo\"\n }\n withEnv([\"HOST_IP=${env.PROD_IP}\"]) {\n   for (i = 0; i <10; i++) { \n     sh \"docker-compose run --rm production\"\n   }\n }\n}\n\n```", "```\neval $(docker-machine env swarm-1)\n\ndocker service ps go-demo\n\n```", "```\ndocker-machine rm -f \\\n    swarm-1 swarm-2 swarm-3 \\\n    swarm-test-1 swarm-test-2 \\ \n    swarm-test-3 swarm-test-4 \n\n```"]