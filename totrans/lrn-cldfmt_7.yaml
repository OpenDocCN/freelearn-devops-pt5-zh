- en: Assessment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Chapter 1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Infrastructure as Code** (**IaC**) is one of IT infrastructure types that
    manages and provision automatically through code, rather than using a manual process.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Benefits of IaC are to minimize risks on building and deploying infrastructure
    and to manage infrastructure automatically.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The main objective of AWS CloudFormation is to optimize your IaC design with
    AWS resources and to provide a complete solution to build modern infrastructure
    based on Amazon AWS technology stacks.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: AWS CloudFormation is designed to simplify IaC development. Starting from designing
    IaC using file (JSON or YAML) or designer to generate CloudFormation template
    file. This template file uploads to AWS CloudFormation server. Then, CloudFormation
    will generate all resources that we already defined on the template file. AWS
    will deploy them on certain container. This process runs automatically.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We can build CloudFormation template from writing scripts on file and using
    CloudFormation designer. We can develop CloudFormation template files in JSON
    and YAML.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In some cases, we want to deploy a certain resource in an infrastructure environment.
    This resource consists of various different resource that also are used for other
    resources. This scenario can be done by implementing nested stacks on CloudFormation.
    Resource modularity is a key to manage your infrastructure easily.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The idea of implementing CloudFormation StackSets is to deploy various a single
    of resource unit in different region. If we want to deploy the same resources
    on different region, we can CloudFormation StackSets. You also can configure certain
    settings on different region.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: CloudFormation stack is an instance of CloudFormation that consists of a collection
    of AWS resources to build infrastructure based on Amazon AWS technology stack.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The main benefit to use web management console to build CloudFormation is easier
    to use since we perform it graphically. We don't need to remember all commands
    from AWS CLI
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Building CloudFormation through AWS CLI can take benefits for simplicity. Since
    AWS CLI works on Terminal, you don't need more bandwidth usages if we compare
    to use management console.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A CloudFormation template is a script file that probably is written in JSON
    or YAML format to build an infrastructure based on Amazon AWS technology.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'To develop a CloudFormation template, you should have knowledge to write JSON
    or YAML format. A CloudFormation template has a skeleton JSON format as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'You also can write it in YAML:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: To implement CloudFormation template, you can write CloudFormation in JSON or
    YAML manually on file. You also can build the template via CloudFormation designer
    tool from AWS. Then, you should learn about AWS resource types. You can read it
    on [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-product-property-reference.html](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-product-property-reference.html).
    Last, you can do more practices. You can use template samples from AWS on [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-sample-templates.html](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-sample-templates.html).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A CloudFormation StackSet is a collection of Stacks that are deployed cross
    accounts and regions. You can perform provisions various regions with some regions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Based on AWS documentation, we can create a maximum of 20 stack sets in our
    administrator account, and a maximum of 500 stack instances per stack set. Reference
    at [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-limitations.html](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-limitations.html)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Chapter 5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In general, we can deploy AWS Lambda function using Management Console and
    AWS CLI with the following steps:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create CloudFormation Template based on this template, [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html)
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
- en: Deploy the template using Web Management Console or AWS CLI
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Configure IAM to users that will invoke Lambda functions
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: To develop CloudFormation template for Lambda function, you should follow the
    template instructions on [https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-function.html)
    .
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The following is the template for JSON:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'The following is the template for YAML:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Firstly, we configure permissions on CloudFormation. You should deploy stacks: `AWSCloudFormationStackSetAdministrationRole.yml`
    and `AWSCloudFormationStackSetExecutionRole.yml` files.  Read [Chapter 4](part0070.html#22O7C0-ff9c6455e1444393ad97060c22881bf4), *AWS
    CloudFormation StackSets* for further steps. Then, you can deploy StackSet as
    usual when you deploy a StackSet.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
