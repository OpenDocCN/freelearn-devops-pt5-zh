["```\ngit clone https://github.com/vfarcic/cloud-provisioning.git\n\ncd cloud-provisioning\n\nscripts/dm-swarm.sh\n\neval $(docker-machine env swarm-1)\n\ndocker node ls\n\n```", "```\nHOSTNAME STATUS AVAILABILITY MANAGER STATUS\nswarm-2 Ready Active Reachable\nswarm-3 Ready Active Reachable\nswarm-1 Ready Active Leader\n\n```", "```\ncurl -o docker-compose-proxy.yml \\\n    https://raw.githubusercontent.com/\\ \nvfarcic/docker-flow-proxy/master/docker-compose.yml\n\ncat docker-compose-proxy.yml\n\n```", "```\nconsul-server:\n  container_name: consul\n  image: consul\n  network_mode: host\n  environment:\n    - 'CONSUL_LOCAL_CONFIG={\"skip_leave_on_interrupt\": true}'\n  command: agent -server -bind=$DOCKER_IP -bootstrap-expect=1 -client=$DOCKER_IP\n\n```", "```\nexport DOCKER_IP=$(docker-machine ip swarm-1)\n\ndocker-compose -f docker-compose-proxy.yml \\\n    up -d consul-server\n\n```", "```\ncurl -X PUT -d 'this is a test' \\\n    \"http://$(docker-machine ip swarm-1):8500/v1/kv/msg1\"\n\n```", "```\ncurl \"http://$(docker-machine ip swarm-1):8500/v1/kv/msg1\"\n\n```", "```\n[\n {\n   \"LockIndex\": 0,\n   \"Key\": \"msg1\",\n   \"Flags\": 0,\n   \"Value\": \"dGhpcyBpcyBhIHRlc3Q=\",\n   \"CreateIndex\": 17,\n   \"ModifyIndex\": 17\n }\n]\n\n```", "```\ncurl \"http://$(docker-machine ip swarm-1):8500/v1/kv/msg1?raw\"\n\n```", "```\nthis is a test\n\n```", "```\ncat docker-compose-proxy.yml\n\n```", "```\nconsul-agent:\n  container_name: consul\n  image: consul\n  network_mode: host\n  environment:\n    - 'CONSUL_LOCAL_CONFIG={\"leave_on_terminate\": true}'\n  command: agent -bind=$DOCKER_IP -retry-join=$CONSUL_SERVER_IP \\\n-client=$DOCKER_IP\n\n```", "```\nexport CONSUL_SERVER_IP=$(docker-machine ip swarm-1)\n\nfor i in 2 3; do\n    eval $(docker-machine env swarm-$i)\n\n    export DOCKER_IP=$(docker-machine ip swarm-$i)\n\n    docker-compose -f docker-compose-proxy.yml \\\n        up -d consul-agent\ndone\n\n```", "```\ncurl \"http://$(docker-machine ip swarm-2):8500/v1/kv/msg1\"\n\n```", "```\ncurl -X PUT -d 'this is another test' \\\n \"http://$(docker-machine ip swarm-2):8500/v1/kv/messages/msg2\"\n\ncurl -X PUT -d 'this is a test with flags' \\\n \"http://$(docker-machine ip swarm-3):8500/v1/kv/messages/msg3?\\ flags=1234\"\n\ncurl \"http://$(docker-machine ip swarm-1):8500/v1/kv/?recurse\"\n\n```", "```\ncurl -X DELETE \"http://$(docker-machine ip swarm-2):\\\n8500/v1/kv/?recurse\"\n\ncurl \"http://$(docker-machine ip swarm-3):8500/v1/kv/?recurse\"\n\n```", "```\neval $(docker-machine env swarm-1)\n\ndocker network create --driver overlay proxy\n\ndocker service create --name proxy \\\n    -p 80:80 \\\n    -p 443:443 \\\n    -p 8080:8080 \\\n    --network proxy \\\n    -e MODE=swarm \\\n    --replicas 3 \\\n    -e CONSUL_ADDRESS=\"$(docker-machine ip swarm-1):8500 \\\n,$(docker-machine ip \\\nswarm-2):8500,$(docker-machine ip swarm-3):8500\" \\\n    vfarcic/docker-flow-proxy\n\n```", "```\ndocker service ps proxy\n\n```", "```\ndocker network create --driver overlay go-demo\n\ndocker service create --name go-demo-db \\\n    --network go-demo \\\n    mongo:3.2.10\n\ndocker service create --name go-demo \\\n    -e DB=go-demo-db \\\n    --network go-demo \\\n    --network proxy \\\n    vfarcic/go-demo:1.0\n\n```", "```\ncurl \"$(docker-machine ip swarm-1):8080/v1/\\\nproxy/reconfigure?serviceName=go-demo&servicePath=/demo&port=8080\"\n\n```", "```\ncurl \"$(docker-machine ip swarm-1):8080/v1/\\\ndocker-flow-proxy/reconfigure \\\nserviceName=go-demo&servicePath=/demo&port=8080&distribute=true\"\n\n```", "```\ncurl -i \"$(docker-machine ip swarm-1)/demo/hello\"\n\n```", "```\nHTTP/1.1 200 OK\nDate: Fri, 09 Sep 2016 16:04:05 GMT\nContent-Length: 14\nContent-Type: text/plain; charset=utf-8\n\nhello, world!\n\n```", "```\nNODE=$(docker service ps proxy | grep \"proxy.3\" | awk '{print $4}')\n\n```", "```\neval $(docker-machine env $NODE)\n\nID=$(docker ps | grep \"proxy.3\" | awk '{print $1}')\n\n```", "```\ndocker exec -it $ID cat /cfg/haproxy.cfg\n\n```", "```\nfrontend services\n    bind *:80\n    bind *:443\n    mode http\n\n    acl url_go-demo8080 path_beg /demo\n    use_backend go-demo-be8080 if url_go-demo8080\n\nbackend go-demo-be8080\n    mode http\n    server go-demo go-demo:8080\n\n```", "```\ndocker service create --name util \\\n    --network proxy --mode global \\\n    alpine sleep 1000000000\n\ndocker service ps util\n\n```", "```\nID=$(docker ps -q --filter label=com.docker.swarm.service.name=util)\n\ndocker exec -it $ID apk add --update drill\n\n```", "```\ndocker exec -it $ID drill proxy\n\n```", "```\n;; ->>HEADER<<- opcode: QUERY, rcode: NOERROR, id: 31878\n;; flags: qr rd ra ; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0\n;; QUESTION SECTION:\n;; proxy.              IN             A\n\n;; ANSWER SECTION:\nproxy.        600             IN             A           10.0.0.2\n\n;; AUTHORITY SECTION:\n\n;; ADDITIONAL SECTION:\n\n;; Query time: 0 msec\n;; SERVER: 127.0.0.11\n;; WHEN: Fri Sep 9 16:43:23 2016\n;; MSG SIZE rcvd: 44\n\n```", "```\ndocker exec -it $ID drill tasks.proxy\n\n```", "```\n;; ->>HEADER<<- opcode: QUERY, rcode: NOERROR, id: 54408\n;; flags: qr rd ra ; QUERY: 1, ANSWER: 3, AUTHORITY: 0, ADDITIONAL: 0\n;; QUESTION SECTION:\n;; tasks.proxy. IN A\n\n;; ANSWER SECTION:\ntasks.proxy. 600 IN A 10.0.0.4\ntasks.proxy. 600 IN A 10.0.0.3\ntasks.proxy. 600 IN A 10.0.0.5\n\n;; AUTHORITY SECTION:\n\n;; ADDITIONAL SECTION:\n\n;; Query time: 0 msec\n;; SERVER: 127.0.0.11\n;; WHEN: Fri Sep 9 16:48:46 2016\n;; MSG SIZE rcvd: 110\n\n```", "```\ncurl \"http://$(docker-machine ip swarm-1):8500/v1/kv/\\\ndocker-flow?recurse\"\n\n```", "```\n[\n...\n  {\n   \"LockIndex\": 0,\n   \"Key\": \"docker-flow/go-demo/path\",\n   \"Flags\": 0,\n   \"Value\": \"L2RlbW8=\",\n   \"CreateIndex\": 233,\n   \"ModifyIndex\": 245\n  },\n...\n  {\n   \"LockIndex\": 0,\n   \"Key\": \"docker-flow/go-demo/port\",\n   \"Flags\": 0,\n   \"Value\": \"ODA4MA==\",\n   \"CreateIndex\": 231,\n   \"ModifyIndex\": 243\n  },\n...\n]\n\n```", "```\ndocker service scale proxy=6\n\n```", "```\nNODE=$(docker service ps proxy | grep \"proxy.6\" | awk '{print $4}')\n\neval $(docker-machine env $NODE)\n\nID=$(docker ps | grep \"proxy.6\" | awk '{print $1}')\n\ndocker exec -it $ID cat /cfg/haproxy.cfg\n\n```", "```\nfrontend services\n    bind *:80\n    bind *:443\n    mode http\n\nbackend go-demo-be8080\n   mode http\n   server go-demo :8080\n\n```", "```\ndocker rm -f $(docker ps \\\n    | grep proxy.6 \\\n    | awk '{print $1}')\n\n```", "```\nNODE=$(docker service ps \\\n    -f desired-state=running proxy \\\n    | grep \"proxy.6\" \\\n    | awk '{print $4}')\n\neval $(docker-machine env $NODE)\n\nID=$(docker ps | grep \"proxy.6\" | awk '{print $1}')\n\ndocker exec -it $ID cat /cfg/haproxy.cfg\n\n```", "```\ndocker-machine rm -f swarm-1 swarm-2 swarm-3\n\n```"]