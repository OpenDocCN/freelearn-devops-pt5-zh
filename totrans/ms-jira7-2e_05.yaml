- en: Chapter 5. Understanding Zephyr and its Features
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We have learnt how to customize JIRA for test management, where we understood
    how to configure various schemes that are available in JIRA to modify a project
    that matches the actual process followed in your company, but there are some add-ons
    that can bring new features without the need to customize JIRA. One such popular
    add-on is **Zephyr** that brings in fully-fledged test management in JIRA. In
    this section, we will learn how to configure and use Zephyr.
  prefs: []
  type: TYPE_NORMAL
- en: 'The topics covered are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Installing the Zephyr plugin
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zephyr terminology
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Starting to use Zephyr
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing the Zephyr plugin
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Zephyr is a paid add-on that is very popular in the industry. If you want to
    quickly get the features of test management without customizing JIRA yourself,
    you can use Zephyr. It offers lots of useful test management features that are
    as per industry standards.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this section, we will learn how to configure and use Zephyr. Follow the
    steps below to install it on your instance:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to **Administration** | **Add-ons** | **Find new add-ons** under **ATLASSIAN
    MARKETPLACE,** type `Zephyr` in the search box and press the *Enter* key:![Installing
    the Zephyr plugin](img/image_05_001.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Zephyr for JIRA - Test Management** will appear. Click on the **Free trial**
    button to install this add-on on your instance. In the pop-up window that appears
    next, click on the **Accept** button.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Finally, you will be asked to enter your Atlassian account to generate a trial
    license for Zephyr:![Installing the Zephyr plugin](img/image_05_002.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once installed, you will get a new menu item, **Tests**, in your instance.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We have just installed Zephyr; now we will learn how to configure this add-on.
  prefs: []
  type: TYPE_NORMAL
- en: Zephyr terminology
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Zephyr add-on works very closely with your existing JIRA project but there
    are some terms that we need to understand before we start using this add-on:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Test**: This is the test case and a detailed description of what needs to
    be tested'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Execution**: Each test that is run along with its result'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Test cycle**: This is a grouping of tests which may be for a particular project''s
    version'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Ad hoc cycle**: All the tests that are executed without a defined cycle are
    run in an ad hoc cycle'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Starting to use Zephyr
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Zephyr add-on may seem overwhelming at the beginning to new users but in
    this section, let us learn how to quickly configure this add-on and use it for
    performing tests.
  prefs: []
  type: TYPE_NORMAL
- en: 'The steps mentioned below will get you started with the Zephyr add-on in the
    shortest amount of time:'
  prefs: []
  type: TYPE_NORMAL
- en: The **Test Issue Type** is by default added to all new projects of **Software**
    and **Business** project types, but you can always add it to your project by modifying
    the **Issue Type Scheme**. Let us create a new project to use Zephyr.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Go to **Projects** | **Create project**, select **Scrum software development**
    and press the **Next** button:![Starting to use Zephyr](img/image_05_003.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the next screen, press the **Select** button to continue:![Starting to use
    Zephyr](img/image_05_004.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the project **Name** as `Testing Zephyr`; the project **Key** `TZ` will
    be auto suggested. Press the **Submit** button and the project will be created:![Starting
    to use Zephyr](img/image_05_005.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Go to **Project Administration** and check under **Issue types**; you will notice
    that the **Issue Type Test** has been added automatically in your project. You
    are now ready to start using Zephyr for testing.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Go to **Project Administration** | **Versions** and add a few versions, such
    as `Version 1.0`, `Version 1.1`, `Version 1.2`, or any name of your choice.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Go back to your project's navigation sidebar and click on the new item **Tests**:![Starting
    to use Zephyr](img/image_05_006.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: There are three tabs here—**Test Summary**, **Test Cycles**, and **Traceability**.
    Click on the **Test Cycles** tab. You will find an **Ad hoc** cycle already defined
    for our project. Let us add a new test cycle. Under **Cycle Summary**, click on
    the **Create New Cycle** button:![Starting to use Zephyr](img/image_05_007.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the **Create New Cycle** popup, select `Version 1.0` as the **Version** and
    **Name** as `Functionality`. Optionally, enter **Description**, **Build**, and
    **Environment**, and select dates in the **From** and **To** fields. Press the
    **Save** button to continue. Similarly, for `Version 1.0`, add a new **Test Cycle**
    and name it `Regression`. Once added, select `Version 1.0` under **Select Versions:**
    and you will notice the newly added test cycles:![Starting to use Zephyr](img/image_05_008.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Just like `Version 1.0`, also add `Functional` and `Regression` test cycles
    for `Version 1.1`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Create** button in the navigation menu. In the **Create Issue**
    popup, select your project and **Test** as the **Issue Type**, enter a **Summary**,
    and scroll down until you see the section for **Zephyr Teststep**:![Starting to
    use Zephyr](img/image_05_009.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the three sections, enter **Test Step**, **Test Data**, and **Expected Result**,
    and press the **Add** button. You can add multiple test steps in a similar way.
    Let us add one more and finally click on the **Create** button to create the test.
    The issue will now be created and under the **Test Details** section, you will
    notice the two test steps that we added are visible. You will notice that the
    default workflow buttons are not displayed for issue of type **Test**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now we have to execute the test. Under the **Test Details** section, there is
    another section for **Test Executions**. Initially, this section will be empty.
    You can either click on the **Execute** button on top of the issue or click on
    the link **here** under this section to create an execution:![Starting to use
    Zephyr](img/image_05_010.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the **Execute Test** popup, select **Add to Existing Test Cycle and Execute**,
    then select a specific **Version** and the **Test Cycle** drop-down list will
    then display the test cycles that we earlier associated with that version. In
    the **Assignee** section, select **Me** if you want to assign this execution to
    yourself or select the name of the **Person** from the drop-down list. Then click
    on the **Execute** button. Create more **Test Executions** for another **Version**
    and **Test Cycle**:![Starting to use Zephyr](img/image_05_011.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Initially, the status of each test execution is **UNEXECUTED**. To start the
    execution, click on the **E** button:![Starting to use Zephyr](img/image_05_012.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We are now executing an individual **Test Execution** where various test steps
    added for this **Test** can be found. Each **Test Step** needs to be individually
    tested for **Test Data** and the output is compared with the **Expected Result**;
    based on the output, the test step **Status** can be changed from **UNEXECUTED**
    to **PASS**, **FAIL**, **WIP**, or **BLOCKED**. Just click on **UNEXECUTED** and
    a drop-down list will appear. If any bug is found then it can be associated with
    this **Test Step**. Click on **Enter Defects** and it will give you an option
    to either associate an existing JIRA issue or let you create new issue:![Starting
    to use Zephyr](img/image_05_013.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Apart from the individual **Status** of the **Test Step**, the overall execution
    **Status** of the test can also be changed in a similar way:![Starting to use
    Zephyr](img/image_05_014.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: As you start executing the **Test Executions** and change their **Status**,
    the **Test Executions** section will display a consolidated summary of all the
    test cycles. Go back to the project navigation sidebar, click on the **Tests**
    | **Test Cycles** tab, and select a particular version and you will get a **Cycle
    Summary** displaying the **Test Cycles** that we created, along with all the tests
    associated with them and the overall progress in percentage of that test cycle:![Starting
    to use Zephyr](img/image_05_015.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we learned how to use the Zephyr add-on to quickly add the
    test management feature without customizing JIRA yourself. Zephyr is a popular
    add-on used by several organizations.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will take a look at some sample use cases that can be
    implemented in JIRA. Now that you already know how to customize JIRA, the next
    chapter will help you with some base configurations that you can start with to
    implement similar scenarios in your instance.
  prefs: []
  type: TYPE_NORMAL
