- en: Cloud Computing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Cloud technologies are integral to the building of big data, data sciences,
    and Internet of Things-based systems to accommodate huge data volumes, as they
    bring agility and scalability. DevOps is more prominent for cloud, to reproduce
    environments as replicas with configurations to be executed as code on par with
    software projects. In this chapter, we will discuss cloud computing terminology,
    architecture models, building blocks for service offerings such as platforms,
    infrastructures, and so on. We will also discuss the popular market vendors, and
    so on.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Cloud computing concepts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Architecture models:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Public
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Private
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Hybrid
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Community
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Service offerings:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: PaaS
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: IaaS
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: SaaS
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: IDaaS
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: NaaS
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Market vendors:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Amazon
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Azure
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: SalesForce
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Cloud computing security
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cloud backup solution
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cloud computing technologies
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Cloud technologies encompass a wide umbrella of multiple service offerings
    and underlying technologies, as depicted in the following diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/15608fd1-d90a-44bb-b48c-d9c9e2e02c20.png)'
  prefs: []
  type: TYPE_IMG
- en: The increasing popularity of cloud computing has resulted in its wide adoption
    across industries such as banking, insurance, hi-tech, pharmacy, manufacturing,
    and so on. Big data systems ingest huge volumes of data from multiple source systems
    with variety of formats. Therefore, its quite economical to stage or store data
    on cloud compared to on-premise systems.
  prefs: []
  type: TYPE_NORMAL
- en: 'Even with Internet of Things, sensor data from machines runs into terabytes
    and petabytes quickly, therefore only cloud systems are economical to hold such
    data volumes. With strategic and systematic adoption of business processes, applications,
    platforms, and infrastructures, businesses can accrue the following multiple benefits:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Dynamic load patterns and elastic scalability**: A well-known application
    of the cloud is where the workload is varying and unpredictable. In such scenarios,
    clients scale your IT capacity by off loading high-demand compute requirements
    to the cloud without provisioning for peak-load capacity, thus saving money for
    the organization.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/5e76d8ec-0d20-4800-9511-3258599dff2d.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Quick setup**: The capacity sizing and procurement time for the resources
    is drastically reduced multifold, so with cloud setup, application deployments
    are relatively easier and faster; allowing for the offloading of basic IT requirements
    to the cloud service providers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Pay as you go**: Pay for what you need and use. The big advantage is in saving
    the effort and cost for many of the products used to support the network and systems,
    such as spam/antivirus, encryption, data archiving, email services, and off-site
    storage.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Higher value**: The administrative activities for the IT support systems
    move to the cloud service provider so internal IT resources can focus on higher-value
    business activities, and capital expenditure can be directed for more pressing
    business investments.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The adoptions for cloud are across the following layers:'
  prefs: []
  type: TYPE_NORMAL
- en: Business process
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Application
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Platform
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Infrastructure
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'We will discuss these in detail in the coming sections. They are also represented
    in the following diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f16c4cbe-f591-4465-8e1d-a163a310a305.png)'
  prefs: []
  type: TYPE_IMG
- en: Cloud technology concepts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Virtualization is one important technology often referred to alongside cloud
    technologies. It is the prime technology framework associated with cloud computing
    to create various dedicated execution environments sharing the same physical infrastructures,
    such as an operating system, server, storage device, or network. Virtualization
    software manipulates hardware, while cloud computing refers to the service, and
    delivers the value of shared computing resources software or data as a composite
    service.
  prefs: []
  type: TYPE_NORMAL
- en: Virtualization is creating a virtual machine over bare metal, or an existing
    operating system with hypervisor.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are a few models, such as Oracle VM, Sun xVM Server, LynSecure, and VirtualLogicVLX,
    that have hypervisor running on a bare system without an operating system:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/cd446ce0-631e-4c26-bf60-711e06279aa3.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Another category involves having hypervisor software on top of an existing
    operating system. A few examples are VMWare Fusion, Virtual Server 2005 R2, Containers,
    Microsoft Hyper V, Windows Virtual PC, and VMWare workstation 6.0:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/55fce0cd-6980-4022-8f75-7bcfbf9b8574.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Virtual Machine MonitorÂ **(**VMM**) or virtual manager, is technology to
    create virtual versions of a device or resource to run multiple applications on
    multiple divergent operating systems on the same server simultaneously. DevOps
    ensures the configuration is consistent between environments like development,
    QA, pre-prod and production. The usage of virtual machines on cloud and their
    replication consistently with DevOps is effective mode to quickly turn around.
    A hypervisor or VMM installed on top of the operating system makes servers, workstations,
    storage, and other systems independent of the physical hardware layer. A **virtual
    machine** (**VM**) is an emulation of a computer system based on architectures,
    and provides the specialized functionality. A host machine is a computer on which
    a hypervisor runs one or more virtual machines, and each virtual machine is called
    a **guest machine**.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Virtualization offers many benefits, including the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Maximizing resources**: Traditionally built systems are mostly underutilized.
    Virtualization can reduce the number of physical systems to acquire by efficiently
    using the capacity. Virtualization helps to maximize the use of the hardware investment
    to get more value out of the servers.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Multiple systems**: These can help you run multiple types of applications
    and even run different operating systems for those applications on the same physical
    hardware, such as Linux and Windows, on the same server and deploy the respective
    applications.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Virtualization can be full virtualization or para-virtualization.
  prefs: []
  type: TYPE_NORMAL
- en: '**Full virtualization** is where the server with all the software is emulated
    to another system. It''s more applicable in scenarios such as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Sharing a computer system among multiple users
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Isolating users from each other and the control programs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Emulating a server system to clients or host systems
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Para-virtualization** allows for multiple OS to run on a single hardware
    device, and it''s more apt in scenarios such as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Convenient migration to new systems, as guest systems can be easily moved
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Capacity management to add additional resources is easily managed
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disaster recovery for guest instances to be managed
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Virtualization offers benefits such as systems consolidation, and fully-managed
    virtualized and cost-efficient systems.
  prefs: []
  type: TYPE_NORMAL
- en: 'Cloud solutions beyond virtualization, however, offer the following capabilities,
    which we will discuss in detail:'
  prefs: []
  type: TYPE_NORMAL
- en: Self-service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Elasticity
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Automation management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pooled resources and scalability
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pay as you go service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stateful, stateless servers, and REST protocols are frequently referred with
    cloud computing technologies.
  prefs: []
  type: TYPE_NORMAL
- en: Stateful servers maintain a user's state information in the form of sessions.
    Once a user logs into the website, a unique identifier is created and tracked
    by the web service for that session. The session information will be retained
    for all other requests by the user till the browser is closed; this session information
    helps to offer a personalized service to the user. The details of the sessions
    also help to monitor concurrent web traffic and incorporate security features,
    such as preventing a malicious user trying to flood the web server with multiple
    simultaneous requests through an established connection.
  prefs: []
  type: TYPE_NORMAL
- en: Stateless servers, as the name indicates, do not maintain any state information
    for the user, so each request is completely independently handled as a new request
    unrelated to the previous request.
  prefs: []
  type: TYPE_NORMAL
- en: Web API's design follows stateless architecture, and uses theÂ **REpresentational
    State Transfer** (**REST**) protocol. The user identity in this stateless design
    is through a unique user ID allocated to the user, which needs to be passed with
    every request.
  prefs: []
  type: TYPE_NORMAL
- en: 'REST is an architectural approach focusing on resources (or data) as a prime
    objective, and not on the function (functionality) that should be provided by
    the API. It provides better scalability, interoperability, and is aptly used in
    the following scenarios:'
  prefs: []
  type: TYPE_NORMAL
- en: Client server
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Stateless servers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cacheable web systems
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Layered system
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Code on demand
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Uniform interface
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: REST is a set of constraints that ensure a scalable, fault-tolerant, and easily
    extensible system adopted by the **World Wide Web** (**WWW**). A RESTful API can
    use other transfer protocols, such as SNMP, SMTP, and others. **HyperText Transfer
    Protocol** (**HTTP**)Â is a protocol used to link pages of hypertext in the WWW.
    This is also a popular way to transfer files apart from other transfer protocols
    available, such as FTP, gopher, and so on. RESTful APIs use HTTP as a transport
    layer in most scenarios, since the infrastructure, servers, and client libraries
    for HTTP are widely adopted. A RESTful API adheres to all the REST constraints,
    and an HTTP API makes use of HTTP as its transfer protocol, including SOAP APIs
    relaying on HTTP.
  prefs: []
  type: TYPE_NORMAL
- en: Working with REST APIs is like the navigation between websites. HTTP and HTTPs
    are two-key protocols used in implementations of REST APIs. A **Uniform Resource
    Identifier** (**URI**) is used as an address by the REST API to access a particular
    website. The URI is comprised of two parts--aÂ **Uniform Resource Locator** (**URL**)
    and aÂ **Uniform Resource Name** (**URN**). The URL represents the location of
    a specific resource on a computer network, and defines a mechanism for retrieving
    it. A URN is the name of a web resource.
  prefs: []
  type: TYPE_NORMAL
- en: For example, `https://en.wikipedia.org`Â is our URL, and `/wiki/Cloud_computing_architecture`Â is
    our URN.
  prefs: []
  type: TYPE_NORMAL
- en: The combinationÂ [https://en.wikipedia.org/wiki/Cloud_computing_architecture](https://en.wikipedia.org/wiki/Cloud_computing_architecture)Â is
    a URI unique resource address or identifier.
  prefs: []
  type: TYPE_NORMAL
- en: There are four basic operations when working with any REST API to interact with
    a server through the HTTP protocol. They are GET, POST, PUT, and DELETE.
  prefs: []
  type: TYPE_NORMAL
- en: GET will retrieve the element addressed
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: PUT will create or replace the addressed element
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: POST is used to create another element
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DELETE will delete the addressed element
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These are also used to get the status of a call response; for example, the HTTP
    status code of 404 is for a page or address *Not Found*.
  prefs: []
  type: TYPE_NORMAL
- en: The two types of data formats to present the output results when working with
    REST APIs are **JavaScript Object Notation** (**JSON**) and **eXtensible Markup
    Language** (**XML**). The advantage of JSON is that it's easier to parse, and
    hence more preferred to XML in most cases. While XML has some more advanced features
    in terms of result validation and navigation, it's more complex. Using `.json`
    at the end of the URI, JSON formatted output is delivered.
  prefs: []
  type: TYPE_NORMAL
- en: Authentication and security
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: REST APIs through HTTP protocol ensure authentication, a security mechanism,
    and data protection, they encrypt traffic between the client and server. Some
    APIs rely on GET requests to view data without authentication; however, for any
    data modifications, authentication is strictly enforced. Username and password
    for HTTP authentication is basic model called with Base64 hash, which not a scalable
    and secure model, token-based authentication mechanism known as **Authtype 1/2**
    is now more prominent for API calls.
  prefs: []
  type: TYPE_NORMAL
- en: Multi-tier cloud architecture model
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Cloud architecture also follows the pattern of layered representation of presentation,
    business logic, and data to support the application multi-tier models. A typical
    architecture model with underlying components is shown in the following picture:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/53b23487-9846-44fa-8c3f-a49e2a853b37.png)'
  prefs: []
  type: TYPE_IMG
- en: This layered architecture model is supported by popular cloud vendors offering
    multiple value-added features and functionality at each service layer as listed.
  prefs: []
  type: TYPE_NORMAL
- en: Presentation tier
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The presentation tier is the frontend user-facing and interacting tier. It
    displays on the website/webpage the information related to available services
    by communicating with other tiers. It sends the results to the browser for the
    service and query requests by coordinating with other tiers in the network such
    as business and data layers:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Elastic infrastructure**: To meet the real-time demand, hypervisors are enabled
    to create virtual machines or containers towards cloud infrastructure elasticity
    with the resources. They are enabled with self-service BI for features such as
    monitoring information about resource utilization, traceable billing, and provisioning
    of resources.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/4cfa51d8-9ac4-4d22-ada5-21a0388a9490.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Scale vertically or scale-up**: Moving the application to a bigger virtual
    machine, or by resizing the VM (claiming back the virtual machine''s capacity)
    to accommodate a scalable environment for the application is termed as vertical,
    or scale-up. This is associated with multiple dependencies.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Elastic platform scalability**: This is often associated with the application
    layer for its capability to handle a growing amount of work. It could be possible
    to add or append the system, network, or process in order to cater to the business
    growth.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/e7231154-ec23-4fa7-a072-0adb3ab85d62.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Scale-out or scale horizontally**: This is achieved by provisioning more
    instances of the application tiers on additional machines (through additional
    resources), and then dividing the load between them. Though horizontal scaling
    allows the re-division of resources between applications by provisioning, the
    application architecture should be able to scale by additional nodes, and by distributing
    the load.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Node-based availability**: Most legacy applications have been developed to
    run on a single machine. This is where each node plays a unique role for hosted
    applications, and its availability is measured. These applications require recoding
    to adapt for both the scalability and elasticity that the cloud provides:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/83adb844-d4c6-4cd6-98f5-c546d6f06e51.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Environment-based availability**: Applications built with multi-threaded
    architecture benefit from cluster-based environments with built-in elasticity
    and scalability. This is crucial with uneven usage, or spikes during certain periods.
    The applications should be designed to detect variations in the real-time demand
    for resources, such as bandwidth, storage, and compute power and automatically
    adopt:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/0f0d226b-271e-4d2b-bed3-796dab01db22.png)'
  prefs: []
  type: TYPE_IMG
- en: Business logic tier
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The business logic tier is also called the **application tier**. As the name
    indicates, business logic performs all the processing required by the application
    to send the requisite details for the presentation tier by communicating with
    the underlying data tiers.
  prefs: []
  type: TYPE_NORMAL
- en: '**Virtual networking**: This is a technology to access remote systems on the
    networks. It is also called **remote desktop sharing**, and enables visual display
    and control of one system through other protocols, such as **Remote Frame Buffer**
    (**RFB**), **Remote Desktop Protocol** (**RDP**), and **Apple Remote Desktop**
    (**ARD**).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/1f941f38-84ec-45b5-9e4f-a21837b1597e.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Message-oriented middleware**: **Message-oriented middleware** (**MOM**)
    enables the sending and receiving of messages between application modules distributed
    over heterogeneous platforms. MOM reduces the complexity of developing applications
    that span multiple operating systems and network protocols through software or
    hardware infrastructure support. The following are some of the variants of MOM:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Exactly-once delivery**: For many, critical systems require exactly-once
    delivery of messages. By using filter conditions duplicate messages are avoided.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/f3bf506e-6947-4dcd-b9e6-e930bb17099c.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Atleast-once delivery**: To ensure that the messages are delivered at least
    once without loss, for each message, an associated acknowledgement is added.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/1fbdb54c-0508-496d-a4b2-c215c50ce400.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Transaction-based delivery**: This ensures that the message is fully delivered,
    and received as a transaction with ACID compliance.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/3599d6af-35c5-41d7-833c-b84a5e053017.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Timeout-based delivery**: In this process, the message is not deleted from
    the system until the client system acknowledges receiving and reading the message.
    So, messages are stored in the system till that time, hidden from client systems
    as backup.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/ea4d2b3e-f65a-4b6e-95d6-74a2444096c1.png)'
  prefs: []
  type: TYPE_IMG
- en: Data tier
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The data tier is the repository of the data; it supports the presentation/business/application
    tier for processing the browser request. The request from the browser is translated
    into the application logic by sharing the underlying data, ensuring the confidentiality
    and consistency per the business demands.
  prefs: []
  type: TYPE_NORMAL
- en: '**Strict consistency**: Multiple replicas of data are maintained at different
    locations to serve data redundancy in the event of failures, to ensure consistency
    of replicas, and also improve response time. Data replicas can be either read
    or write operations; their equation *N* (number of replicas) *< R* (replicas access
    to read) *+W* (replicas accessed to write), *N <R+W*, ensures data consistency.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/83d4937e-e354-48b2-8a18-8e6d99056dc6.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Eventual consistency**: Eventual consistency is employed by data stored at
    different locations; data is not consistent all the time so that performance and
    availability of the data are ensured with network partitioning. All replicas are
    updated with data alterations by asynchronously propagating over the network.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/aa83f196-7811-486e-978a-4c544e341b57.png)'
  prefs: []
  type: TYPE_IMG
- en: Relational databases
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Many of the traditional relational databases, where data is structured according
    to schema and enforced with data manipulation, such as Microsoft SQL Server, Oracle
    Database, MySQL, IBM DB2, and Amazon Relational Database Service, are supported.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/3dad4b43-ede6-4092-a710-396c0f359d47.png)'
  prefs: []
  type: TYPE_IMG
- en: NoSQL database
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Cloud platforms offer and support many of the new age NoSQL databases versions,
    such as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Document databases are offered, such as Couchbase Server, CouchDB, DocumentDB,
    MarkLogic, and MongoDB
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Graph databases are available, including AllegroGraph, IBM Graph, Neo4j, and
    Titan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Column stores are offered, such as Google Bigtable, Cassandra, and HBase
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data storage
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Cloud platforms support many types of storage, including the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Key-value storage**: We have seen that in the Map Reduce framework, the values
    are stored as a key-value pair, there is no schema, and the value of the data
    is in the form of numbers, strings, counters, JSON, XML, HTML, binaries, images,
    short videos, and so on. In a key-value storage, or key-value database, values
    are identified and accessed via a key. This form of data storage is appropriate
    for storing, retrieving, and managing associative arrays. This method of designing
    a data structure is referred to as a dictionary, or hash. Some popular databases
    are Aerospike, Apache Cassandra, Berkeley DB, Couchbase Server, Redis, Riak, and
    so on.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/127dc14c-3c72-4b2a-b981-12e6395b85ff.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Blob storage**: Blob is a binary large object. It is used for storing large
    amounts of unstructured binary data, such as text or binary data that can be accessed
    through web protocols, such as HTTP or HTTPS.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/9f49b7c5-b00c-47b6-bf4b-5e6887561972.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Block storage**: Block blobs are composed of storage blocks with different
    sizes, and are identified by block ID. Block storage is ideally suited for streaming
    data, where a large video is split into smaller segments and uploaded in parallel
    to decrease the upload time, and assembled. This is applicable for file-sharing
    applications to file blocks uploaded to the storage service in parallel and then
    assembled into a block blob:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/9964deee-176b-4acd-8983-aaf4e211ce93.png)'
  prefs: []
  type: TYPE_IMG
- en: Cloud architectures
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The most common implementation models are presented next.
  prefs: []
  type: TYPE_NORMAL
- en: Public cloud
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In a public cloud, the applications and services are hosted on a public cloud
    platform. The systems and services are easily accessible to the general public;
    for example, Amazon, Microsoft Azure, Google, Salesforce, and so on:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d84bfae5-c361-4fa0-a3a2-da0079f045ae.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Benefits of the public cloud include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Economical scale**: The public cloud is cost-effective by sharing the same
    resources with a large number of consumers'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Reliability**: The public cloud maintains replicas at different locations;
    they serve for redundancy in case of failover, providing a high level of reliability'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Elastic scalability**: The public cloud can be flexibly scaled up or down,
    depending on demand from a pool of resources'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Flexibility**: Many options to choose among vendors, and also to integrate
    the public cloud with the private cloud and so on, are available'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Pay per use**: This feature enables that resources are accessible whenever
    a consumer needs them'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Private cloud
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In a private cloud, the applications, operating systems, cloud infrastructure,
    and storage are all inside the private cloud. They are operated solely for the
    purpose of an organization. The private cloud can be managed internally by the
    organization nor by a third party:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6e7cea0d-eaf9-4e76-aaff-2bd23d223847.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The big security feature is that a firewall separates the private cloud from
    the external world, enhancing the security multifold from data theft:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c9428a2a-6126-4e72-8f2c-b1b03614700f.png)'
  prefs: []
  type: TYPE_IMG
- en: The benefits of a private cloud are that privacy and security of organizational
    information is maintained within the organization, and there is more control within
    the organization. Although the cost is higher to adopt for the organization, it
    also offers higher efficiency though enhanced security.
  prefs: []
  type: TYPE_NORMAL
- en: The challenges are that a private cloud's scalability is limited and depends
    on the organization's resource availability. Procurement could lead to inflated
    or inflexible pricing. The private cloud may be confined to a local geography,
    and may not extendable to other regions.
  prefs: []
  type: TYPE_NORMAL
- en: Hybrid cloud
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'A hybrid cloud offers the best of both private and public clouds, including:'
  prefs: []
  type: TYPE_NORMAL
- en: Security features customized and incorporated as per the organization's needs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scalability features, architecture flexibility, and also the optimization of
    the cost efficiencies balancing between public and private models
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The challenges are network integrations and associated complexities, and security
    compliance while integrating the public and private clouds:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e79d820c-2091-4ae8-8ed9-b557585a800d.png)'
  prefs: []
  type: TYPE_IMG
- en: Community cloud model
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The community cloud facilitates a group of institutions, sharing systems, and
    services, to be accessible by all the partner groups; for example, in education,
    research can be set up across institutes, and the infrastructure and services
    could be managed by a third party. It could also be effective between various
    supplier groups of a large organization for effective collaboration.
  prefs: []
  type: TYPE_NORMAL
- en: Benefits include cost-effectiveness, and the advantages of quick community collaboration.
  prefs: []
  type: TYPE_NORMAL
- en: Security features are optimal as per the community needs, and are better than
    the public cloud.
  prefs: []
  type: TYPE_NORMAL
- en: 'Challenges could include data governance, security, and cost. Since all the
    data is hosted together, security should be stringent so as to avoid unauthorized
    access:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/017a9c3b-0f1e-4649-8d06-9dbb763e89ea.png)'
  prefs: []
  type: TYPE_IMG
- en: Cloud offerings
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Cloud offerings are broadly categorized as the **Private Cloud**, **Infrastructure
    as a Service**, **Platform as a Service**, and **Software as a Service**. Each
    service variation depends on the layers managed between the provider and customer:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/45ca900d-79aa-4add-a7ab-629cc51f9660.png)'
  prefs: []
  type: TYPE_IMG
- en: Software as a Service (SaaS)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As represented in the preceding diagram, in SaaS all the components and layers
    of offerings are owned by the provider.
  prefs: []
  type: TYPE_NORMAL
- en: SaaS is a model where applications are hosted on a cloud as a service that clients
    access through a web interface, such as browsers, over the internet. Unlike in
    the traditional system of installing on individual machines, clients don't need
    to install any specific applications on their machines nor maintain or support
    the applications on SaaS. The cloud provider is responsible for upgrading it or
    hosting any integrations, and so on. The provider does all the patching, upgrades,
    and ensures that the infrastructure is running, by charging fees appropriately.
  prefs: []
  type: TYPE_NORMAL
- en: 'SaaS applications are designed and built to support multiple concurrent users
    with web browser tools. These applications are popular for standard commercial
    usage in most cases, and in some scenarios offer custom-built applications, such
    as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Video conferencing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Content management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: HR payroll applications
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Team collaboration and sharing the screens, applications, and so on:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/53a78046-673f-4d3b-a861-13296d1d7ed8.png)'
  prefs: []
  type: TYPE_IMG
- en: Software as a service has a few options, as discussed next.
  prefs: []
  type: TYPE_NORMAL
- en: Single tenant
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Every customer as a tenant has a separate instance of the software, and the
    entire supporting infrastructure serves that single customer. Each tenant has
    their own independent database and instance of the software. There is no sharing,
    so every tenant is isolated from each other. The advantages are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Enhanced security
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reliability of services
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Easy to backup and restore
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Easy to migrate from SaaS to self-hosted
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Flexibility
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Upgrade control
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Multi-tenancy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Multi-tenancy means multiple organizations accessing the same server or resources;
    each organization (or company) is treated like a tenant. The architecture has
    a centralized compute, storage, and networking, serving to multiple customers
    by sharing the infrastructure and software. Each customer shares the supporting
    infrastructure and a single database. To each tenant, the system looks like it
    has been customized for them. The data is partitioned between the customers and
    encrypted to serve them separately; all the customers share the same copy of the
    application code, making it a multi-tenant cloud application. Fewer IT resources
    are needed to patch, maintain, and upgrade the application (reduced TCO).
  prefs: []
  type: TYPE_NORMAL
- en: 'Multi-tenancy is achieved by two methods: multi-tenancy through instance replication,
    and through data segregation effective multi-tenancy. Instance replication becomes
    an overhead as the number of tenants grows and accordingly the VM''s explode,
    causing performance and maintenance overheads.'
  prefs: []
  type: TYPE_NORMAL
- en: Multi-instance
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Multi-instance instances are deployed on a per-user demand to scale horizontally
    and infinitely the multi-instance cloud. A separate application logic and database
    processes are deployed for every client, together with a dedicated set of unique
    instances as per the organization's needs. The multi-instance system offers data
    isolation, as customers are not sharing databases and infrastructure.
  prefs: []
  type: TYPE_NORMAL
- en: The multi-instance environment offers many benefits, including greater flexibility,
    and higher data security, preventing unwarranted intrusion. Its architecture makes
    it easy to deploy and scale to meet higher performance and SLA's adherence or
    24Ã7 seamless service experiences. It facilitates for better manageability of
    product updates, upgrades, configuration management, and customization. The customer's
    services can continue to be available, while migrating to an on-premise server,
    or to another cloud for routine maintenance and unexpected issues. To create and
    manage multiple application instances, it's an effective model.
  prefs: []
  type: TYPE_NORMAL
- en: The challenges are that to maintain and upgrade the multiple-instance environments,
    such as databases and web application instances, it is expensive compared to the
    multi-tenancy model as propagation of functionality, or features from one instance
    to multiple instances is not supported.
  prefs: []
  type: TYPE_NORMAL
- en: Benefits of SaaS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The benefits of SaaS are the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Quick setup time to enable the business to adapt to the SaaS platform
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lower procurement cost for IT system's infrastructure, hardware, licenses, software,
    and so on
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lower maintenance costs in terms of upgrade of software, and so on
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Secure Sockets Layer** (**SSL**) is well established for secured access,
    and there is no need for VPNs'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SaaS applications are quite reliable and stable
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Some challenges with SaaS include low-security features, and it is less customizable.
  prefs: []
  type: TYPE_NORMAL
- en: Platform as a Service (PaaS)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In PaaS, the users are offered an infrastructure, along with a platform for
    their customized requirements, to develop into applications, and the ability to
    deploy and maintain them as well:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/03502093-5dd7-4f69-9b43-5ec82d068ce3.png)'
  prefs: []
  type: TYPE_IMG
- en: 'There are different types of Platform as a Service:'
  prefs: []
  type: TYPE_NORMAL
- en: PaaS Development as a Service--standalone development environment.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: PaaS with Data as a Service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: PaaS with Database as Service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: PaaS associated with SaaS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: PaaS along with the operating environment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Open source platform PaaS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Development as a Service (DaaS)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Development as a Service is a web-based, community-shared development tool
    equivalent to locally installed development tools in the traditional (non-cloud
    computing) delivery model. In the standalone development model, the runtime environment,
    along with integrated development tools, is offered for application development.
    Many choices of open source development and deployment tools are available to
    develop applications, and are included with the package:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/59a24f1e-eea3-438c-91d8-9a52f6002092.png)'
  prefs: []
  type: TYPE_IMG
- en: Data as a Service with Paas
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Data as a service is often considered as a specialized subset of a Software
    as a service offering.Â It's a web-based design construct whereby data from cloud-based
    application is accessed through some defined API layer, underlying data layer
    of cloud based web application could be RDBMS, filesystem, or Amazon S3.
  prefs: []
  type: TYPE_NORMAL
- en: Database as a Service with Paas
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Database as a Service is like a Platform as a Service offering, with databases
    such as traditional RDBMS or non-relational databases as choices.
  prefs: []
  type: TYPE_NORMAL
- en: PaaS tied to SaaS environment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Many of the successful product vendors have created a business model for their
    partners and **independent software vendors** (**ISVs**) to co-develop applications
    to leverage from extended talents, cost benefits, and speed to market. To support
    this, the ecosystem or environment is created as PaaS, enabling the partners and
    ISVs to develop as per the stipulated requirements.
  prefs: []
  type: TYPE_NORMAL
- en: 'A few examples of PaaS that are anchored to an SaaS environment to collaborate
    are:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Force.com by salesforce.com**: Customers and ISVs can develop on the [salesforce.com](https://www.salesforce.com/in/?ir=1)
    ecosystem and can sell by their own modes or by the [salesforce.com](https://www.salesforce.com/in/?ir=1)
    application marketplace, AppExchange.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Workday PaaS**: With workday solutions, customers can integrate applications
    and leverage services for building, configuring, testing, and deploying integrated
    solutions. Example financial management, human resource SaaS solutions, and so
    on.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Google App environment**: This is PaaS for ISVs to develop applications for
    Google Apps. The Google Apps engine is a scalable model, and allocates resources
    as per the elastic demand. The Google Apps marketplace is a store house of all
    the Google Apps, and offers a search facility as well. An open source cloud platform
    for the Google App engine is AppScale, which can be deployed on both public clouds
    and private clouds.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Intuit developer network**: This is PaaS for QuickBooks accounting software
    for both on-premises and cloud options. ISVs can develop customized software and
    integrate and market their applications through the Intuit marketplace.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: PAAS tied to an operating environment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Many platform (IaaS) vendors have moved away from just nuts and bolts providers
    of operating systems, networking, and so on; they are providing other value-added
    offerings such as tools for application development and performance metrics. They
    offer platforms along with an operating environment to enable better value-added
    offerings so that developers can build or deploy applications with this support.
  prefs: []
  type: TYPE_NORMAL
- en: 'Examples of PaaS tied to an operating environment include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Windows Azure**: Maturing from just an infrastructure (IaaS), Azure is offering
    many tools from Windows, SQL abstractions, development tools, management, and
    services, to make it a fully-fledged PaaS.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**AWS Elastic Beanstalk**: This is a PaaS that Amazon packages with **Amazon
    Web Services** (**AWS**) for deploying applications. Elastic Beanstalk has in-built
    automation, which benefits organizations to automate, auto-scale as per the demands
    change, and control for the underlying IaaS resources.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**AT & T Platform as a Service**: AT & T offers synaptic **Compute as a Service**
    (**CaaS**) to easily build and deploy applications from scratch. Pre-built application
    templates are facilitated on this platform.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**IBM SmartCloud**: This is a hybrid offering with the ability to shift workloads
    with increases in demand to public clouds. The applications supported are Java,
    web, and enterprise applications on their private cloud.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Open-platform PaaS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Open-platform PaaS are not tied to any single cloud implementation; developers
    can develop their own custom tools or open source tools as per the platform. Migration
    between clouds is convenient by an open platform PaaS. These platforms are well
    suited for a hybrid cloud environment, supporting deployment on both public and
    private clouds.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are some examples of open-platform PaaS:'
  prefs: []
  type: TYPE_NORMAL
- en: '**OpenShift**: From Red Hat, this is fully integrated with advanced offerings
    also with the JBoss application server and middle layer. Applications supported
    are Java, Python, Perl, PHP, Ruby, and so on.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Cloud Foundry**: This offers VMware public clouds, vSphere, and vCloud, for
    building, deploying, and operating applications based on the cloud, supporting
    a wider range of languages, such as .NET, Java, Scala, and Ruby.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Engine Yard**: This is a fully managed PaaS used in conjunction with a number
    of private clouds and public clouds such as Azure, and AWS. Applications can be
    built for languages such as Ruby on Rails, and PHP.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**CloudBees**: This is a platform that offers a full life cycle application
    for public and hybrid clouds. It''s primarily a Java-based platform to support,
    build, test, run, manage, and develop, independent of the underlying platform.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**OrangeScape**: This offers support for a private or public cloud, and offers
    portability as well. The main feature is process-oriented application development
    with OrangeScape Studio for non-programmers. It has pre-built business templates
    ready for use.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Apprenda**: This is specific to .NET applications development predominantly
    for Azure PaaS. Organizations can redeploy the applications to other on-premises,
    or public clouds.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**DotCloud**: This is a multi-stack solution with the flexibility of multiple
    languages, databases, caching, and messaging components. The languages supported
    on the platform are Java, Perl, Ruby, and PHP.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**CumuLogic**: This is a platform for cloud services that supports automation,
    autoscaling, monitoring, resource management, and user management for Java-based
    platforms for both public and private clouds.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An open source platform as service would include the entire suite of open source
    applications.Â Cloudera Enterprise distribution offers an entire bundle of components
    for the
  prefs: []
  type: TYPE_NORMAL
- en: 'big data Hadoop platform as Platform services comprising of 20 components (listed
    following) ranging from **Extract Transform Load** (**ETL**) applications toÂ **Machine
    language Libraries** (**MLLs**) as a full suite ofÂ Platform as a Service:'
  prefs: []
  type: TYPE_NORMAL
- en: Here, we are giving an example of the Cloudera Enterprise package for PaaS so
    it will be in accordance with its own specification.
  prefs: []
  type: TYPE_NORMAL
- en: '**Apache Sqoop**: Provides data movement between RDMS and HDFS; it is a highly
    scalable architecture.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Apache Spark**: This makes the processing of jobs faster and easier to write
    based on in-memory.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Apache Sentry**: Provides access control for Hadoop users, both role-based
    and granular level.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Apache Pig**: This is a batch analysis framework for the processing of large
    datasets with the high-level language.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Apache Parquet**: Provides columnar data and a compressed format for Hadoop
    quite efficiently.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Apache Oozie**: A workflow scheduler for efficiently scheduling all the Hadoop
    jobs efficiently.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Apache Mahout**: Machine learning libraries for various tasks such as classification
    clustering, collaborative filtering, and many more.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Apache Kafka**: Kafka messaging service for Hadoop based on publish-subscribe;
    its architecture is distributed, and resilient.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Apache Impala**: This is a SQL query programming language for HDFS, S3, or
    HBase, with high-concurrency and low-latency.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Apache Hive**: This is batch processing for ETL transformations of Hadoop
    data with the SQL framework.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Apache Hbase**: This is popular for columnar storage for Hadoop; it''s scalable
    with random read/write access.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Apache Flume**: This is a stream data processing framework to collect and
    aggregate event data in real time into HDFS or HBase .'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Apache Hadoop**: This is the most popular storage; it also offers data processing
    and resource management.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Apache DataFu**: Statistical evaluation-oriented user-defined functions for
    large-scale data analysis written in PIG.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Apache Avro**: This is the framework for data serialization with rich data
    structures in binary format and RPC.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Apache Crunch**: This is a framework with user defined functions written
    in Java for writing, testing, and running Map Reduce pipelines.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**HUE**: Hadoop User Experience for web-based graphics user interfaces; it
    is user friendly to work with Hadoop data.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Kite SDK**: Software development kit with the Application Program Interface.
    It has examples and documentation for creating applications on Hadoop'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Cloudera search**: This is the search engine for free-text, and is Google
    style for business users using Hadoop data.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Apache Zookeeper**: This is the resource coordination service. It is highly
    effective and reliable, and distributes the Hadoop environment **Infrastructure
    as a Service** (**IaaS**).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: IaaS provides access to infrastructure resources. Customers can benefit from
    the service on lease to use for their own use as per the timeline agreed upon.
    The fundamental resources are physical machines, virtual machines, virtual storage,
    and so on.
  prefs: []
  type: TYPE_NORMAL
- en: Apart from these primary resources, IaaS also extends resources to the end user
    through server virtualization; they include virtual machine disk storage, **virtual
    local area networks** (**VLANs**), load balancers, IP addresses, and software
    bundles.
  prefs: []
  type: TYPE_NORMAL
- en: Infrastructure as a Service is a flexible and efficient mode of renting hardware
    computer resources such as virtual machines, storages, bandwidth, IP addresses,
    monitoring services, firewalls, and so on. The consumer has to pay based on the
    length of time a consumer retains a resource.
  prefs: []
  type: TYPE_NORMAL
- en: The process is also quite simple and convenient, with administrative access
    to virtual machines. The consumer can also run any software, start web servers,
    install new applications, or even custom operating systems.
  prefs: []
  type: TYPE_NORMAL
- en: IaaS platforms also support portability and interoperability between cloud platforms.
    For example, network applications such as web servers and email servers that are
    running on consumer-owned server hardware, can be ported to run from VMs in the
    IaaS cloud.
  prefs: []
  type: TYPE_NORMAL
- en: 'The challenges with IaaS are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Similar to the challenges faced by PaaS and SaaS, network dependence and browser-based
    risks exist for IaaS.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'IaaS supports the consumer to run legacy software in the VM infrastructure;
    it could expose security vulnerabilities associated with such legacy software:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/bbbcf1a0-13b4-459c-8121-16010306adb5.png)'
  prefs: []
  type: TYPE_IMG
- en: 'IaaS for Linux platforms offers all the following popular models on cloud as
    virtual machines:'
  prefs: []
  type: TYPE_NORMAL
- en: CentOS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Debian
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kali
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Red Hat
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SUSE
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ubuntu
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The two popular cloud platforms offering IaaS are Amazon Web Service, and Microsoft
    Azure. These platforms, as discussed, offer much more than IaaS; they have offerings
    also as PaaS and SaaS.
  prefs: []
  type: TYPE_NORMAL
- en: Microsoft Azure Portal
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Microsoft Azure Portal is an enterprise cloud platform offering, with a collection
    of versatile products, such as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Virtual machines**: These provide virtualization with Linux, Windows Server,
    SQL Server Oracle, and so on'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**App service**: To build web, mobile, and API for the enterprise grade'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Cloud services**: Applications and services to be built and deployed on the
    Cloud'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**SQL database**: Relational database on the cloud'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Azure Cosmos DB**: Globally distributed database across multiple regions'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Azure Active Directory**: Identity and access management for the cloud'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Storage**: Types are file, disk, table, queue, and blob'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Backup**: Cloud-integrated backup as a service'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/b1e25173-eb32-444c-88e3-00c0b39fe00e.png)'
  prefs: []
  type: TYPE_IMG
- en: Amazon Web Services
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Amazon cloud-based services offer many diverse offerings, including the following
    high-level features, which are integrated and accessible from its portal:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Compute services:**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Amazon EC2**: Virtual servers in the cloud'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**AWS Elastic Beanstalk**: Web apps hosting'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**AWS EC2 Container Registry/Services**: Store/retrieve/run/manage Docker image'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**AWS Lambda**: Events-based code execution'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Auto scaling**: Automatic elasticity'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**AWS batch**: Scalable to run batch jobs'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Storage services:**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Amazon S3**: Scalable storage in the cloud'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Amazon Glacier**: Storage for archive in the cloud'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Amazon EBS**: Block storage for EC2'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**AWS Storage Gateway**: Hybrid storage integration'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Amazon Elastic File System**: Managed file storage for EC2'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Database features:**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**RDS**: Relational Database Service, MSSQL, Oracle, PostgreSQL, SQL Server'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**DynamoDB**: Managed NOSQL database'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Aurora**: High-performance relational database'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**ElasticCache**: In-memory caching system'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**RedShift**: Effective data warehousing.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Migration functionality:**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Application discovery service
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Server migration service
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Snowmobile for data transport
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Database migration service
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: AWS Migration Hub
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/b5068776-e538-4e23-9242-bdcaddb4ee9b.png)'
  prefs: []
  type: TYPE_IMG
- en: Salesforce offerings on cloud
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Salesforce has multiple service offerings on par with other cloud vendors.
  prefs: []
  type: TYPE_NORMAL
- en: 'Sales channel:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Sales cloud**: CRM solutions provided on the cloud.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**SalesforceIQ**: CRM solutions supported with email intelligence.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Salesforce quote-to-cash**: The cycle from accurate quotes, proposals, and
    contracts. Follows automated billing, subscriptions, and revenue recognition to
    the complete cycle.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Service cloud**: Cloud-based CRM, customer relationship management.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Marketing cloud**: Cloud-based marketing activities of email, mobile, social,
    advertising, the web, and so on.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Community cloud**: For collaboration, participation, and interaction between
    community groups for co-development.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Einstein analytics**: Analytics on the cloud, with drilldown options.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**App cloud**: Cloud-based platform for apps development.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**IoT cloud**: Cloud-based opportunity for the Internet of Things.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/55120419-f900-4d08-a3b5-458ea186bc99.png)'
  prefs: []
  type: TYPE_IMG
- en: Network as a Service (NaaS)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In line with other offerings such as IaaS and PaaS, NaaS is also made available
    as a value-added service and network as a utility based on the pay-per-use model.
    NaaS uses a virtualized network infrastructure to provide network services; it
    enables access to the network infrastructure directly and securely. Customers
    can deploy custom routing protocols; however, the NaaS provider is responsible
    for maintaining network resources to ensure workload is supported.
  prefs: []
  type: TYPE_NORMAL
- en: NaaS offers multiple benefits, including being part of portals such as AWS and
    Azure. Customer networks are independent and segregated logically, as is traffic.
    Network bandwidth capacity can be accommodated, and customers only pay for usage.
    There is redundancy and resilience built in for backup. NaaS is convenient for
    the addition of new service elements. It offers a high-sensitive data protection
    specialized solution.
  prefs: []
  type: TYPE_NORMAL
- en: Identity as a service (IDaaS)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Identity as a service** (**IDaaS**) is an important service and key feature
    that is the backbone for other service offerings such as IaaS, PaaS, and SaaS.
    IDaaS enables a set of identity and access management functionalities, to facilitate
    customers with the service through systems setup either on the client premises,
    or in the cloud.'
  prefs: []
  type: TYPE_NORMAL
- en: 'IDaaS functionality includes the following broad areas:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Identity governance and administration**: This is the ability to secure digital
    information assets of the organization and adapt to governance policies'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Identity access management**: This provides access to users for things such
    as authentication,Â **Single Sign-on** (**SSO**), and authorization as per role
    enforcement'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Intelligence metrics**: Logging events, audit and compliance, and reporting
    details on access such as what was accessed, by whom, and when?'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: IDaaS solutions are flexible to store the organization's identity directory
    either on-premises, or in the cloud. On-premise Active Directory, or LDAP, is
    required in organizations for higher control and safety, which are important.
    They are supported with failover and automatic load balancing for continued service.
    Cloud-based IDaaS is also quite popular, and includes Google Directory, and so
    on. LDAP or Active Directory, are integrated through firewalls as per business
    needs. Managing identities requires a fine balance of security and productivity,
    with the optimal plan meeting the criteria. Audit compliance is an important feature
    to enforce policies, track cloud activities, and detect anomalies, by controlling
    access privileges to prevent unauthorized data loss through applications or environments.
  prefs: []
  type: TYPE_NORMAL
- en: It is critical that IDaaS has the ability to enforce granular policies to provide
    secure access and control of cloud apps to prevent data loss or theft. The business
    needs to acquire and deploy sanctioned and unsanctioned cloud applications in
    order to address critical organization needs. A strict policy discipline for data
    access is therefore imperative and mandatory.
  prefs: []
  type: TYPE_NORMAL
- en: IDaaS offers management of identity (information) as a digital entity. This
    identity can be used during electronic transactions.
  prefs: []
  type: TYPE_NORMAL
- en: A unique identification attribute is assigned to uniquely identify a digital
    asset or an object as a digital entity. All objects may have the same attributes,
    but their identity cannot be the same, so a set of attributes associated with
    them are identified to make them uniquely recognizable. These identity services
    are in demand for deployment to validate services such as websites, transactions,
    transaction participants, clients, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: 'We have already seen the three broad areas of IDaaS. The following shows the
    finer segregation of the services:'
  prefs: []
  type: TYPE_NORMAL
- en: Federated services
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Single sign-on services
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Registration
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Authentication services
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Risk and event monitoring
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Identity and profile management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Directory services
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We will look at the identity solutions next.
  prefs: []
  type: TYPE_NORMAL
- en: Single Sign-On
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: SSO is the most popular technology adopted across industries and companies to
    alleviate the need to use multiple username and password combination credentials
    for different servers. Single Sign-On software enables the user to login only
    once with credentials, and provides the user access to all the systems.
  prefs: []
  type: TYPE_NORMAL
- en: 'The SSO landscape has a single authentication server and, as shown in the following
    diagram, manages access to multiple systems:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/0e98d7de-1f3f-4e55-a74a-97e27b472880.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The SSO modus operandi is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: With the credentials of username and password, log into the authentication server
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The user browser gets a ticket from the authentication server
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The ticket is sent to the intranet server by the user's browser
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The ticket is sent to the authentication server by the intranet server
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The user security credentials are sent by the authentication to the intranet
    server
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Maintenance is easy for the addition or deletion of access with just the authentication
    server, which in turn reflects the user''s access to all the supporting systems:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/5daff626-3492-4916-a0af-b31025eb232b.png)'
  prefs: []
  type: TYPE_IMG
- en: Federated Identity Management (FIDM)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'As the name indicates, the security credentials are federated across security
    domains supported with technologies and protocols. **Security Assertion Markup
    Language** (**SAML**) is a prime mover to package a user''s security credentials,
    as shown in the following diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/2f7915fc-ea26-4000-b66e-3378c62f4e16.png)'
  prefs: []
  type: TYPE_IMG
- en: OpenID
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: OpenID is a service that facilitates users to login to multiple websites with
    a single account. Companies supporting OpenID includes Google, Yahoo, Flickr,
    MySpace, WordPress, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: 'Some of the associated benefits include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Increased site conversation rates
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Greater access to cumulative user profiles
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lower maintenance issues for users to avoid multiple credentials
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ease of content integration into social networking sites
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cloud security
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Security is major focus and concerning area while referring to cloud computing.
    There are multiple means of handling it as per the type of cloud, be it public,
    private, communal, or hybrid. It begins with effective planning to analyze several
    attributes on the sensitivity to risk in the context of the various models--IaaS,
    PaaS, and SaaS. With each of these models, the responsibilities of the client
    versus the cloud provider for security at different levels of the service need
    to be thoroughly understood.
  prefs: []
  type: TYPE_NORMAL
- en: 'Some pointers to gather relevant inputs in this light are the following:'
  prefs: []
  type: TYPE_NORMAL
- en: How the application or resource is deployed on the cloud
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data encrypted form for storage in the cloud
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Proxy and brokerage services should be employed
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The need to restrict direct access to the shared data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The cloud provider's system and tools for data transfer into and out of the
    cloud
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Each cloud deployment model, depending on the service models and cloud types,
    brings in its own risks. The responsibilities between the cloud service provider
    and consumer are defined based on the offerings and business requirements:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/b58f93f2-456e-45e6-b2ef-f1b499526c5d.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Source: Cloud Security Alliance (CSA) (https://cloudsecurityalliance.org/csaguide.pdf)'
  prefs: []
  type: TYPE_NORMAL
- en: 'As represented in the preceding diagram, IaaS is the basic level of service
    offering, which is followed by PaaS, and then SaaS. The security features and
    concerns are inherited from one layer to another, compounded in the order of from
    IaaS (infrastructure) to PaaS, and to SaaS. Thus, in the integrated system, IaaS
    has the lowest level of integrated functionalities and security, while SaaS has
    the highest level of offerings. The responsibilities are shared between vendor
    and client as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Depending on the service boundary
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As agreed upon in the business terms
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Depending on the cloud model adopted (public, private, hybrid, and so on)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Cloud data security is of vital importance, irrespective of the model and service
    selected. Data security enforcement includes the following options:'
  prefs: []
  type: TYPE_NORMAL
- en: Access control
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Auditing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Authentication
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Authorization
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data stored in the cloud can be accessed from any location; therefore, an adequate
    data protection mechanism to isolate the data directly from client access needs
    to be incorporated. One of the effective approaches for isolating storage in the
    cloud is **Brokered Cloud Storage Access**.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this method, two services are created:'
  prefs: []
  type: TYPE_NORMAL
- en: A broker with full access to storage, but no access to the client
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A proxy with no access to storage, but with access to both the client and broker
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'When the client tries to access the data in the Brokered Cloud Storage system,
    it follows the following workflow:'
  prefs: []
  type: TYPE_NORMAL
- en: The client data request hits the proxy's external service interface.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The proxy forwards the request to broker.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The broker makes data request to the cloud storage system.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The cloud storage system returns the data to the broker.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The broker returns data to the proxy.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The proxy sends data to the client.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'These are depicted in the following diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6be65dc5-daa4-4442-a202-a4e7f6d0f30c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Source: Cloud Security Alliance (CSA) (https://cloudsecurityalliance.org/csaguide.pdf)'
  prefs: []
  type: TYPE_NORMAL
- en: Encryption safeguards the data from unauthorized access. It prevents data being
    compromised for the data in motion (in transition, or being transferred), and
    also data at rest (static, stored in the cloud). However, encryption cannot avoid
    data loss like disk failure, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: Data encryption
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Cloud services are centralized repositories of often sensitive information,
    so the security aspects should be strengthened more vigorously than a single user
    laptop or mobile. The cyber security industry has been innovating and investing
    in technologies and processes to protect cloud servers such as firewalls, threat
    detection and analysis, and encryption mechanisms. There are different modes of
    data encryption, as shown in the following topics.
  prefs: []
  type: TYPE_NORMAL
- en: Encryption in transit
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](img/6c9d65aa-7239-4046-9bb5-7a454dc48875.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Using technologies such as **Secure Sockets Layer** (**SSL**), or **Transport
    Layer Security** (**TLS**), the encryption in transit is used to secure a message
    being transmitted from a phone or computer to the server. This will be secure
    while the message is on internet, and the decrypted message is available to both
    the device and the server. This makes the server vulnerable to attack, as the
    data is in unencrypted format, and messages are available in decrypted format:'
  prefs: []
  type: TYPE_NORMAL
- en: Encryption-at-rest
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](img/5cf62812-f658-43b0-a45d-fa8512ea46da.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Encryption-at-rest** means that data is encrypted when not being used, like
    in the storage media on cloud servers. However, since the server has decrypted
    information, it''s vulnerable, and not completely safe.'
  prefs: []
  type: TYPE_NORMAL
- en: End-to-end encryption
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This will provide the complete solution by securing the data, not just the
    devices:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/3e3ccdb8-6541-4c48-9144-560da262c814.png)'
  prefs: []
  type: TYPE_IMG
- en: In the end-to-end encryption process, the messages are encrypted right from
    the device of the sender, till they reach the device of the recipient to be decrypted.
    So, with end-to-end encryption, the server never has access to the decrypted data,
    and will not compromise any user information. So here, the security is on the
    data itself, and not limited to the devices.
  prefs: []
  type: TYPE_NORMAL
- en: 'Additional data security measures are implanted by several features, such as
    the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Secure processor acting as a microcontroller
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Secure encrypted virtualization
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Secure memory encryption
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Secure off-chip storage for firmware and data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cryptographic functionality for secure key generation and key management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hardware validated boot (TPM)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DRAM-level encryption is achieved with the AES-128 engine directly attached
    to the MMU to safeguard against physical memory attacks.
  prefs: []
  type: TYPE_NORMAL
- en: The OS, or hypervisor, can select the pages to encrypt via page tables.
  prefs: []
  type: TYPE_NORMAL
- en: However, DMA engine- encrypted pages are accessed by external devices such as
    network storage, and graphics cards.
  prefs: []
  type: TYPE_NORMAL
- en: With its own encryption key, each VM, or container, works in isolation in protecting
    against cross-contamination. The keys are transparent to the VMs themselves, and
    managed by the protected hypervisor.
  prefs: []
  type: TYPE_NORMAL
- en: Data contamination is handled with reporting, and a machine check recovery mode.
  prefs: []
  type: TYPE_NORMAL
- en: Backup and recovery
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Best practices for cloud computing backup and recovery follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Four copies of the data are maintained for zero data loss and easy disaster
    recovery
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Two copies of the data would be kept in the primary data center with synchronous
    replication and for high availability
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The third copy of the data will be kept in another data center as a backup
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The fourth will be kept in a backup in a different data center and seismic
    zone using asynchronous replication:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/9b00e555-82be-4f1a-9b57-79e17cdc80fe.png)'
  prefs: []
  type: TYPE_IMG
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the next chapter, we will learn on big data applications core architecture
    principles, step by step building of systems with Spark platform. We will also
    study many data science algorithms to address business challenges.
  prefs: []
  type: TYPE_NORMAL
