- en: '6'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Creating a Space for a Software Project
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous chapter, we delved deep into the workings of Confluence by exploring
    various aspects of dynamic content creation. We learned about the critical role
    of labels, their purposes, and their applications. Additionally, we embarked on
    a journey through macros, starting from understanding their fundamental logic
    to a detailed examination of selected macros, ultimately uncovering different
    ways to maximize the potential of Confluence’s extensive macro library.
  prefs: []
  type: TYPE_NORMAL
- en: As the world has witnessed a significant shift toward remote work, the challenges
    associated with managing software projects for distributed teams have multiplied.
    Effective communication, collaboration, and project management tools have become
    the linchpin of remote operations. This is where Confluence shines bright as an
    indispensable ally for remote software development teams, enabling them to manage
    projects successfully and foster robust collaboration. It serves as a centralized
    content-sharing and collaboration platform, aggregating all project-related materials,
    such as designs, requirements, and user guides, into a single location that is
    easily accessible to all team members. With the necessity of having a centralized,
    up-to-date resource accessible to everyone, Confluence emerges as the perfect
    solution for remote teams’ specific needs.
  prefs: []
  type: TYPE_NORMAL
- en: Furthermore, Confluence comes packed with features that streamline project tracking
    and management. Its integration with Jira facilitates task tracking, workflow
    management, and project progress monitoring, allowing teams to generate reports,
    gain insight into the project’s development, and engage with team members on tasks.
    Since effective communication and collaboration are the bedrock of remote teams’
    productivity, Confluence aids in promoting these by facilitating information sharing,
    clarifying responsibilities across teams, and centralizing project documentation.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we will guide you on how to utilize Confluence effectively
    to create project spaces, leverage document management features, collaborate seamlessly,
    and track projects. The goal is to empower remote software development teams to
    manage their projects successfully. This information is pivotal as Confluence
    not only enhances team collaboration and streamlines project workflows but also
    ensures everyone has access to the most current project information.
  prefs: []
  type: TYPE_NORMAL
- en: By the end of this chapter, you will have a comprehensive understanding of how
    to create a Confluence space tailored for a software project, which is a crucial
    step in managing remote collaboration effectively. The knowledge acquired here
    will be instrumental in helping you and your team navigate the challenges of remote
    work, ultimately leading to more successful project outcomes.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Discovering different roles in a software development project
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating a single source of truth for a software development project
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Discovering the software project space template
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Customizing Confluence’s software development template for project-based needs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using Confluence as a hub with external tools
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using Confluence and Jira together for software project management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using the step-by-step guide to create a software project space on Confluence
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Discovering different roles in a software development project
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In a remote software development team, there are several roles, known as “personas”
    or “stakeholders,” each with their own unique needs and ways they can benefit
    from a Confluence space. Here are a few examples:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Software developers**: Being at the core of the team, software developers
    create and test the code that makes up your software product. They need easy access
    to technical specifications, design documents, coding standards, and project plans.
    They also need a way to communicate effectively with other team members. A Confluence
    space can serve as a central repository for all this information, making it easy
    for developers to find what they need. They can also use Confluence’s commenting
    features to ask questions, discuss problems, and share ideas.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Product managers**: These individuals are responsible for guiding product
    development, making decisions about what features to include, and prioritizing
    tasks. They need a holistic view of project progress, as well as the ability to
    drill down into details when necessary. Confluence can help with this need through
    pages dedicated to project plans, progress tracking, and task lists. Product managers
    can also use Confluence to communicate their decisions and gather feedback from
    the team.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Quality** **a****ssurance (QA) engineers**: QA engineers test the software
    for document bugs. They need access to test plans, bug reports, and sometimes
    design documents or technical specs. They can use Confluence pages dedicated to
    test plans and bug tracking. QA engineers can also use Confluence to report bugs,
    discuss them with the team, and track their resolution.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**DevOps engineers**: They focus on the systems and processes that support
    the development team, such as version control systems, **continuous integration/continuous
    deployment (CI/CD)** pipelines, and infrastructure. DevOps engineers need access
    to technical documentation and system specs. At this point, Confluence can serve
    as a central source of information, to document their processes and procedures,
    which is crucial for effective DevOps practices.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**UX/UI designers**: They are responsible for user experience and interface
    design, having the need to share their design and gather feedback. In this case,
    UX/UI designers can benefit from a Confluence space where they share their material,
    discuss it with the team, and track changes and updates.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating a single source of truth for a software development project
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Creating a single source of truth on Confluence for a software project involves
    organizing and centralizing all relevant information in a structured and accessible
    manner. Here’s a step-by-step guide on how to achieve this goal:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Define the structure**: Plan how you will organize your Confluence space
    to reflect the structure of your software project. Consider creating a hierarchy
    of pages and sub-pages that align with different aspects of the project, such
    as a project overview, requirements, design, development, testing, and documentation.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Project overview**: Create a page dedicated to providing an overview of the
    project, including the objectives, scope, stakeholders, and timeline. This page
    can serve as a North Star for team members and stakeholders to understand the
    project’s context.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Requirements**: Document the project requirements in detail. Use Confluence’s
    formatting options to structure and categorize the requirements. Also, consider
    using tables, bullet points, or checklists to better organize and track requirements,
    and make sure the material is easy to follow.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Design and architecture**: Create pages to capture the design and architecture
    of the software. Include diagrams, wireframes, UI mockups, and any other visual
    representations that help communicate the design decisions. Provide explanations
    and annotations to clarify the design choices made.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Development**: Use Confluence to track the development progress and make
    updates visible. Create pages or use templates to document user stories, development
    tasks, and backlog items. Use tables or task management macros to track task status,
    assignees, and due dates. Encourage team members to provide regular updates on
    their progress.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Testing**: Document the testing strategy, test plans, and test results within
    Confluence. Create pages to outline the testing approach, define test cases, and
    track test results. Include any relevant screenshots or logs to provide context
    for failed tests and bug reports.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Documentation**: Use Confluence as a central hub for all project-related
    documentation, which includes technical documentation, API references, user manuals,
    and release notes. Ensure that the documentation is up to date and easily accessible
    to team members and stakeholders.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Collaboration and communication**: Leverage Confluence’s collaborative features
    to encourage team members to share their insights, ask questions, and provide
    feedback. Utilize commenting, @mentions, and notifications to facilitate discussions
    and keep everyone informed.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Version control and history**: Use Confluence’s version control capabilities.
    Track changes in pages, review them, and revert to previous versions to maintain
    a progress record if needed. This feature also boosts transparency through the
    project’s evolution.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Promote adoption and governance**: Encourage team members to use Confluence
    consistently. Provide training and support to ensure everyone understands how
    to use Confluence effectively and master the best practices. Establish governance
    practices to ensure the accuracy, quality, and currency of the information in
    the Confluence space.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: By following these steps, you can create a reliable single source of truth on
    Confluence for your remote software project. These steps will assist your team
    in streamlining collaboration, improving transparency, and ensuring that team
    members are aligned and working with the most up-to-date project information.
  prefs: []
  type: TYPE_NORMAL
- en: Discovering the software project space template
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There is a ready-made space template on Confluence. In it, you can have Confluence
    ready for your project. In this section, we’ll review this template and discuss
    the content you can work on.
  prefs: []
  type: TYPE_NORMAL
- en: 'To start with, let’s create a new space:'
  prefs: []
  type: TYPE_NORMAL
- en: Click **Spaces** from the menu at the top.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click **Create** **a space**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can see this dialog in the following screenshot.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Figure_06_01_B16861.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.1 – Creating a space
  prefs: []
  type: TYPE_NORMAL
- en: As seen in the previous screenshot, you can list all the spaces in the Confluence
    environment from the **Spaces** menu.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, let’s choose a template to get started quickly with your new space. For
    this, follow this set of instructions:'
  prefs: []
  type: TYPE_NORMAL
- en: Choose the **Software project** template to populate your space with useful
    content for a software project.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click **Next**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This interface is shown in the following screenshot.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Figure_06_02_B16861.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.2 – Choosing the Software project template
  prefs: []
  type: TYPE_NORMAL
- en: As you can see in the previous screenshot, Confluence offers a number of space
    templates. You can preview the template you selected on the left from the right
    side of the interface.
  prefs: []
  type: TYPE_NORMAL
- en: 'At this stage, Confluence will ask you to add details to your new space. Follow
    these instructions to personalize your space:'
  prefs: []
  type: TYPE_NORMAL
- en: Choose a space icon.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Name your space.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select a Jira instance (if you use Jira).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select a Jira project (if you use Jira).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choose **Default permissions** for space permissions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Define a space key to uniquely identify this space.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click **Create space**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can see all the things we mentioned here in the following screenshot.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Figure_06_03_B16861.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.3 – Personalizing your space
  prefs: []
  type: TYPE_NORMAL
- en: As you can see in the previous screenshot, we provided all the information Confluence
    needed to create our new space.
  prefs: []
  type: TYPE_NORMAL
- en: 'Congratulations, now you have a space and four pages in it:'
  prefs: []
  type: TYPE_NORMAL
- en: Template – **Product requirements**
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Template – **Meeting notes**
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Template – **Decision documentation**
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Get the most out of your software project space
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now, you have an overview page that acts as the home page of your space. You
    can see this newly created space in the following screenshot.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Figure_06_04_B16861.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.4 – Overview page of the Software project space
  prefs: []
  type: TYPE_NORMAL
- en: We are now ready to discover each of the four pages.
  prefs: []
  type: TYPE_NORMAL
- en: Product requirements template
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The **Product requirements** template in Confluence is a crucial tool for remote
    teams working on software development. For a remote team, clearly defined product
    requirements are essential to ensure that everyone is aligned on the project’s
    goals, features, and constraints, despite being physically apart. It provides
    a single source of truth that everyone can refer to, minimizing misunderstandings
    and communication gaps. For a software development team, well-defined product
    requirements are the foundation upon which the entire project is built. It helps
    in setting clear expectations for what needs to be developed, the features and
    functionalities that are essential, and the constraints that need to be considered.
    The **Product requirements** template in Confluence provides a structured format
    to document all these details, making it easier for the team to understand and
    work toward the common goal. By centralizing all the project-related information
    in an easily accessible location, Confluence’s **Product requirements** template
    not only streamlines the development process but also fosters better collaboration
    and communication among remote teams.
  prefs: []
  type: TYPE_NORMAL
- en: As with almost all templates on Confluence, Atlassian has included a table with
    the basic information of the document as the first content in this template. You
    can see this table in the next screenshot.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Figure_06_05_B16861.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.5 – Product requirements template
  prefs: []
  type: TYPE_NORMAL
- en: As you can see in the previous screenshot, you can add your teammates to the
    **Document owner**, **Designer**, **Tech lead**, and **Technical writers** fields.
    You can customize this table as you wish.
  prefs: []
  type: TYPE_NORMAL
- en: The Objective section
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The **Objective** section in the **Product requirements** template is a pivotal
    element when documenting product requirements. Clearly defining the objectives
    is crucial for several reasons. First, it sets the direction for the entire project
    by outlining the goals that the product is intended to achieve. This helps in
    aligning the team and ensuring that everyone is working toward the same end goal.
    Second, it provides a basis for decision-making throughout the project. When faced
    with different options or when making trade-offs, the objectives serve as a guide
    to making decisions that are in the best interest of the product. It is important
    to note that objectives are different from requirements. Objectives are the overarching
    goals that the product aims to achieve, whereas requirements are the specific
    functionalities and features that the product must have to meet those objectives.
    For example, an objective could be “Improve user engagement on the platform,”
    while a requirement could be “Implement a recommendation algorithm to suggest
    personalized content to users.” By clearly defining the objectives and differentiating
    them from the requirements, the Product requirements template in Confluence helps
    in creating a well-structured and comprehensive document that serves as a roadmap
    for the entire development process. You can put the project objectives on your
    page. Here are some objective ideas:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Develop a robust and scalable enterprise chat program**: The primary objective
    is to create a chat program that meets the needs of businesses, providing secure
    and efficient communication channels for employees.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Ensure seamless integration with existing enterprise systems**: The chat
    program should seamlessly integrate with other enterprise systems commonly used
    by companies, such as email clients, project management tools, and document collaboration
    platforms. This integration will enhance productivity and streamline workflows
    for users.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Deliver a user-friendly and intuitive interface**: The chat program should
    have a user-friendly interface that is intuitive and easy to navigate. Users should
    be able to quickly adapt to the platform, minimizing the learning curve.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'After completing the **Objective** section, let’s review the next three sections
    of the template: **Success metrics**, **Assumptions**, and **Milestones**. You
    can see these three sections in the next screenshot.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Figure_06_06_B16861.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.6 – Success metrics, Assumptions, and Milestones
  prefs: []
  type: TYPE_NORMAL
- en: Now, let’s examine the three sections seen in the previous screenshot one by
    one and give realistic examples of each.
  prefs: []
  type: TYPE_NORMAL
- en: The Success metrics section
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The **Success metrics** section in the **Product** **requirements** template
    is another crucial component that should be clearly defined when documenting product
    requirements. Specifying success metrics is essential as it provides a clear definition
    of what success looks like for the project. It sets the criteria that will be
    used to evaluate the success of the product once it is developed and implemented.
    This not only helps in setting clear expectations for the team but also provides
    a basis for evaluating the product post-implementation.
  prefs: []
  type: TYPE_NORMAL
- en: Success metrics are different from both objectives and requirements. While objectives
    define the overarching goals of the product, and requirements specify the functionalities
    and features needed to achieve those objectives, success metrics define the criteria
    that will be used to evaluate whether the objectives have been successfully met.
    For example, if the objective is “Improve user engagement on the platform,” a
    requirement could be “Implement a recommendation algorithm to suggest personalized
    content to users,” and a success metric could be “Increase the average session
    duration of users by 20%.”
  prefs: []
  type: TYPE_NORMAL
- en: By clearly defining the success metrics, along with the objectives and requirements,
    the **Product requirements** template in Confluence helps in creating a comprehensive
    document that not only guides the development process but also sets the criteria
    for evaluating the success of the product post-implementation.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here, we provide three sample assumptions:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Performance and scalability**: The chat program should be capable of handling
    a large number of users and messages without significant performance degradation.
    It should be able to accommodate the needs of growing organizations and scale
    accordingly.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Integration success rate**: The success criteria for integration can be defined
    by the percentage of successful integrations with various enterprise systems.
    A high integration success rate indicates that the chat program effectively integrates
    with commonly used tools, facilitating seamless data exchange and collaboration.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**User satisfaction and adoption**: User feedback and satisfaction surveys
    can be used to measure the success of the user interface. High user satisfaction
    scores and positive feedback show that the interface is intuitive and meets the
    needs of users, leading to higher adoption rates within the organization.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Assumptions section
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The **Assumptions** section in the **Product requirements** template plays an
    often underappreciated but vital role in the planning and execution of a project.
    Assumptions are essentially the conditions or facts that the team assumes to be
    true for the project to move forward successfully. These could be anything from
    the availability of certain technologies to market conditions or user behavior.
  prefs: []
  type: TYPE_NORMAL
- en: Clearly listing out assumptions is crucial for several reasons. First, it helps
    identify areas of risk early in the project, allowing for proactive risk management
    strategies. For instance, if an assumption doesn’t hold true down the line, recognizing
    it early could save both time and resources. Also, it provides a basis for clarity
    and mutual understanding among team members and stakeholders. Everyone involved
    can refer back to these assumptions to align their efforts or to validate the
    viability of the objectives and requirements set forth.
  prefs: []
  type: TYPE_NORMAL
- en: By explicitly stating assumptions in the **Product requirements** template on
    Confluence, you can create a more robust roadmap for your project, one that accounts
    for potential risks and sets a common understanding for all parties involved.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here, we provide three sample assumptions:'
  prefs: []
  type: TYPE_NORMAL
- en: Assumption 1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The target companies have a need for an enterprise chat program.
  prefs: []
  type: TYPE_NORMAL
- en: Rationale1
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Before embarking on the development of the chat program, it is essential to
    assume that there is a market demand for such a solution. Conducting market research
    or gathering feedback from potential clients can help validate this assumption.
  prefs: []
  type: TYPE_NORMAL
- en: Assumption 2
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The development team has the necessary technical expertise to build the chat
    program.
  prefs: []
  type: TYPE_NORMAL
- en: Rationale 2
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Assuming that the development team possesses the required skills and knowledge
    to develop a robust and scalable chat program is crucial. This assumption considers
    the team’s proficiency in relevant programming languages, frameworks, and technologies.
  prefs: []
  type: TYPE_NORMAL
- en: Assumption 3
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The integration with existing enterprise systems is feasible.
  prefs: []
  type: TYPE_NORMAL
- en: Rationale 3
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Assuming that integrating the chat program with other enterprise systems commonly
    used by companies is technically feasible involves considering factors such as
    available APIs, documentation, and the compatibility of the systems to ensure
    smooth data exchange and collaboration.
  prefs: []
  type: TYPE_NORMAL
- en: The Milestones section
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A milestone in the context of project management refers to a significant point
    or event in the project timeline. These are notable moments that signify some
    form of progress or achievement in the project. For example, completing the design
    phase, finishing the first prototype, or passing a critical review can all be
    considered milestones. Milestones are different from objectives as they serve
    as markers along the road to achieving an objective. While an objective is a broad
    and overarching goal that the project aims to achieve, a milestone is a specific
    and measurable point that marks progress toward that objective.
  prefs: []
  type: TYPE_NORMAL
- en: Clearly defining milestones in the **Product requirements** template is essential
    for several reasons. First, it helps in tracking progress during the project execution.
    By setting specific milestones, the team can monitor whether the project is moving
    as planned or whether any adjustments are needed. Second, it helps in setting
    clear expectations and keeping the team motivated. Achieving a milestone provides
    a sense of accomplishment and helps maintain momentum throughout the project.
    Lastly, it assists in effective communication with stakeholders by providing clear
    indicators of progress.
  prefs: []
  type: TYPE_NORMAL
- en: In summary, by clearly specifying milestones in the **Product requirements**
    template on Confluence, you can facilitate better project tracking, team motivation,
    and stakeholder communication, all of which are crucial for the successful execution
    of a project.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can define your milestones in this section, where we provide three samples:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Milestone 1: Project Initiation'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '**Start** **Date**: June 1, 2023'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**End Date**: June 15, 2023'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Description**: This milestone marks the official start of the project and
    includes activities such as project planning, team formation, and setting up the
    development environment. Key deliverables may include a project charter, initial
    project plan, and team roles/responsibilities.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Milestone 2: Prototype Development'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '**Start** **Date**: June 16, 2023'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**End Date**: August 15, 2023'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Description**: This milestone focuses on developing a functional prototype
    of the enterprise chat program. The development team will work on implementing
    core features, designing the user interface, and conducting initial testing. By
    the end of this milestone, a working prototype should be available for evaluation
    and feedback.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Milestone 3: Beta Release and Testing'
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: '**Start** **Date**: August 16, 2023'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**End Date**: October 15, 2023'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Description**: This milestone involves refining the prototype based on user
    feedback and conducting comprehensive testing to ensure stability and usability.
    The development team will address any identified issues, optimize performance,
    and make the necessary adjustments based on user requirements. The beta version
    of the chat program will be released to a select group of users for further testing
    and feedback.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Requirements section
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Requirements are specific, detailed instructions or needs that must be fulfilled
    for a project or product to be considered complete. They are the essential functionalities,
    features, and constraints that define the final output. Requirements differ from
    objectives in that objectives are overarching goals or outcomes that the project
    aims to achieve, whereas requirements are the detailed specifications necessary
    to accomplish these objectives. For example, an objective might be to develop
    a mobile application that helps users manage their daily tasks, while a requirement
    would specify that the application should allow users to create, edit, and delete
    tasks.
  prefs: []
  type: TYPE_NORMAL
- en: It is crucial to clearly define requirements in the **Product requirements**
    document for several reasons. First, well-defined requirements set clear expectations
    for the team, helping to prevent misunderstandings or conflicts later in the project.
    Second, they serve as a basis for estimating the time and resources needed for
    the project, which is essential for planning and budgeting. Lastly, clear requirements
    are necessary for testing and validation purposes, as they serve as the criteria
    against which the final product will be evaluated. When writing requirements,
    it is important they are **specific, measurable, achievable, relevant, and time-bound
    (SMART)**. Also, involve all relevant stakeholders, including end users, to ensure
    that all perspectives are considered and that the final product will meet the
    needs of all parties involved.
  prefs: []
  type: TYPE_NORMAL
- en: In the next screenshot, you can see the three requirement examples we provided.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Figure_06_07_B16861.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.7 – Requirements section
  prefs: []
  type: TYPE_NORMAL
- en: As you can see in the previous screenshot, we identified several user stories
    for each requirement. We determined the importance level of the requirements,
    and finally, we wrote the notes about the requirements in detail. You can also
    write your own requirements in the format you want.
  prefs: []
  type: TYPE_NORMAL
- en: The User interaction and design section
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'In the **User interaction and design** section of your **Confluence** page,
    you can include various elements related to the user experience, interface design,
    and interaction patterns of your chat program. Here are some items you can consider
    adding to this section:'
  prefs: []
  type: TYPE_NORMAL
- en: '**User** **i****nterface (UI) design**: Provide an overview of the overall
    UI design of the chat program. This can include descriptions, screenshots, or
    mockups showcasing the visual elements, color schemes, typography, and layout
    of the UI. Let’s add that you can benefit from Smart Links, which will display
    schemes from Miro or mockups from Figma. This way, everything will be in one place
    and you won’t have to switch between tools.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**User flows**: Present user flow diagrams or visual representations of how
    users navigate through different screens and interact with various features of
    the chat program. Highlight key user actions, transitions between screens, and
    decision points in the user journey.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Interaction patterns**: Describe the interaction patterns and behaviors implemented
    in the chat program. This can include details on how users initiate chats, send
    messages, navigate between chat groups, view notifications, or perform other common
    actions within the application. Explain any unique interaction patterns or gestures
    that enhance the user experience.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Wireframes and prototypes**: Include wireframes or interactive prototypes
    that illustrate the initial design concepts and layout of the chat program. These
    visual representations can help stakeholders and team members better understand
    the planned user interface and gather feedback early in the development process.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Usability testing and feedback**: Document the results of usability testing
    sessions conducted with potential users or stakeholders. Include feedback received
    during the testing process, insights gained, and any design iterations or improvements
    made based on the feedback. This demonstrates the iterative design process and
    user-centered approach adopted in the development of the chat program.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Design guidelines and style guide**: Provide a style guide or design guidelines
    that outline the visual and interaction principles to be followed in the development
    of the chat program. Include guidelines on typography, color usage, iconography,
    spacing, and other design considerations to ensure consistency across the application.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Accessibility considerations**: Discuss the accessibility features and considerations
    incorporated into the design of the chat program. Highlight how the user interface
    adheres to accessibility standards, such as support for screen readers, keyboard
    navigation, color contrast, and other accessibility related best practices.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Micro-interactions**: Describe any micro-interactions or subtle animations
    within the chat program that enhance the user experience and provide feedback
    on user actions. Examples include visual indicators for message sending, typing
    indicators, message delivery confirmations, or notifications.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: By including these elements in the **User interaction and design** section,
    you can provide stakeholders, designers, and developers with valuable insights
    regarding the design principles, user experience considerations, and visual aesthetics
    of the chat program. Thus, you will have a cohesive and intuitive user interface
    that enhances user satisfaction and engagement.
  prefs: []
  type: TYPE_NORMAL
- en: The Open Questions section
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As you manage the project, you and your team will have a lot of questions in
    mind. It is very important to identify these questions and record them on Confluence.
    As questions get answered, you can add answers to this section of the page. Having
    questions and answers transparently visible to the entire project team is invaluable
    to members of your remote team. In the next screenshot, we’ve given you three
    sample questions about the project.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Figure_06_08_B16861.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.8 – Open Questions section
  prefs: []
  type: TYPE_NORMAL
- en: As seen in the previous screenshot, some questions may not get answered right
    away. It is important that questions that remain unanswered stay visible to the
    entire team. We also recommend that you record the date the questions were answered.
  prefs: []
  type: TYPE_NORMAL
- en: The Out of Scope section
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Out of Scope** refers to any elements, features, or functionalities that
    will not be addressed or included in the current phase of a project. Clearly defining
    what is out of scope is as crucial as specifying what is in scope because it sets
    clear boundaries for the project and helps manage stakeholders’ expectations.
    It also helps to avoid “scope creep,” which occurs when additional work is added
    to the project without proper analysis, documentation, and approval, leading to
    delays, increased costs, and other potential problems. When defining what is out
    of scope, it is important to be as detailed and explicit as possible and to involve
    all relevant stakeholders to ensure that all perspectives are considered and that
    there is a mutual understanding and agreement on what will and will not be included
    in the project.'
  prefs: []
  type: TYPE_NORMAL
- en: Identifying and documenting out-of-scope elements is particularly important
    for remote teams, as it helps to prevent misunderstandings and conflicts that
    can arise when team members are not co-located and may have different assumptions
    or interpretations about the project. Remote teams can identify out-of-scope elements
    by conducting virtual brainstorming sessions, using online collaboration tools,
    and continuously communicating and sharing feedback throughout the project. This
    helps to ensure everyone has a clear and shared understanding of the project boundaries,
    which is essential for coordinating work, managing expectations, and ultimately
    delivering a successful project.
  prefs: []
  type: TYPE_NORMAL
- en: In the following screenshot, you can see the sample contents that can be written
    to the **Out of** **Scope** section.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Figure_06_09_B16861.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.9 – Out of Scope section
  prefs: []
  type: TYPE_NORMAL
- en: The out-of-scope topics you see in the previous screenshot will be much more
    numerous in a real project. You can use any format you want to record these topics.
    The important thing is that it is an easy-to-understand, sustainable format.
  prefs: []
  type: TYPE_NORMAL
- en: The Meeting Notes template
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The **Meeting Notes** template in Confluence is an incredibly useful tool designed
    to optimize the way teams document and share information discussed during meetings.
    This template serves multiple purposes; it helps in organizing the meeting agenda
    beforehand, recording key discussions, decisions, and action items during the
    meeting, and sharing this information with team members after the meeting. Having
    a structured document that includes all the vital details discussed during a meeting
    is crucial for keeping all team members aligned, tracking progress, and ensuring
    accountability. It eliminates the chances of any misunderstanding or miscommunication
    and provides a clear and concise record of what was discussed, what decisions
    were made, and what the next steps that need to be taken are.
  prefs: []
  type: TYPE_NORMAL
- en: Moreover, the **Meeting Notes** template is highly customizable, allowing teams
    to tailor it to fit their specific needs and meeting formats. It usually includes
    sections for meeting attendees, agenda, discussions, decisions, and action items.
    After the meeting, the notes can be easily shared with the entire team, and because
    Confluence is a collaborative platform, team members can add comments, ask questions,
    and even update the document as required. This interactive and dynamic nature
    of the template ensures that everyone stays informed and engaged, even if they
    were unable to attend the meeting in person. Ultimately, the **Meeting Notes**
    template in Confluence is an essential tool for any team seeking to improve their
    communication, collaboration, and overall efficiency.
  prefs: []
  type: TYPE_NORMAL
- en: 'The **Meeting Notes** template in Confluence consists of six sections:'
  prefs: []
  type: TYPE_NORMAL
- en: Date
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Participants
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Goals
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Discussion topics
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Action items
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Discussions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can use these sections as they are or modify them according to your preference.
    Now, we will explain how you can fill out the meeting template for a remote team
    with concrete examples.
  prefs: []
  type: TYPE_NORMAL
- en: Date
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'In this section, you can provide the date and time of the meeting: 29.5.2023,
    19.00 - 21.00 UTC.'
  prefs: []
  type: TYPE_NORMAL
- en: Note that including the time zone would be good practice, especially for remote
    teams.
  prefs: []
  type: TYPE_NORMAL
- en: Participants
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You can include information on the participants of the meeting in this section,
    such as this:'
  prefs: []
  type: TYPE_NORMAL
- en: John Smith – [john.smith@example.com](mailto:john.smith@example.com)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Emma Johnson – [emma.johnson@example.com](mailto:emma.johnson@example.com)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Michael Davis – [michael.davis@example.com](mailto:michael.davis@example.com)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Goals
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Every meeting has one or several objectives. It is critical to reflect on these
    objectives and make them visible to everyone for an effective meeting. This way,
    the entire team will be aligned on the meeting objectives; these could be goals,
    for example:'
  prefs: []
  type: TYPE_NORMAL
- en: Review the progress of the chat program development and discuss any challenges
    or roadblocks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Brainstorm and make decisions regarding the user interface design and interaction
    patterns
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Assign tasks and responsibilities for the upcoming development sprint
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As you can see, this meeting has three objectives, and they are visible to the
    entire team.
  prefs: []
  type: TYPE_NORMAL
- en: Discussion topics
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: It is a good idea to identify the discussion topics in advance. This way, you
    can save valuable time. You can also write notes in the table regarding the meeting
    topics, and define a time frame for each presenter. In the next screenshot, you
    can find examples of discussion topics we have prepared for you.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Figure_06_10_B16861.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.10 – Discussion topics
  prefs: []
  type: TYPE_NORMAL
- en: As you can see in the previous screenshot, the duration in minutes, the name
    of the topic, the person responsible for the topic, and the notes on the topic
    are clearly defined for each discussion topic. You can add other information if
    you wish. We recommend that you update this table, which you created before the
    meeting, and fill it out to a large extent during and after the meeting.
  prefs: []
  type: TYPE_NORMAL
- en: Decisions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The **Decisions** section of the **Meeting Notes** template in Confluence is
    a critical component as it captures all the significant decisions made during
    a meeting. For remote teams, managing decisions made during a meeting is crucial
    as it ensures everyone is aligned and aware of the path forward. Documenting these
    decisions in the meeting notes is important as it creates a permanent record that
    can be referred to later, ensures accountability as it is clear who is responsible
    for what, and helps in keeping all team members, including those who could not
    attend the meeting, updated about the critical decisions made. When recording
    decisions, it is important to be clear and concise, specify who made the decision,
    and outline any next steps or actions that need to be taken as a result. Ideally,
    decisions should be recorded as they are made during the meeting by the designated
    note-taker – usually the person who organized the meeting or a designated scribe.
  prefs: []
  type: TYPE_NORMAL
- en: Recording decisions promptly during the meeting ensures that no critical information
    is lost or misunderstood, and it allows for any necessary clarification or additional
    discussion to occur in real time. It is the responsibility of the person designated
    to take the meeting notes to ensure that all decisions are accurately recorded
    and shared with the team as soon as possible after the meeting. This ensures that
    everyone has a clear and shared understanding of the decisions made and the next
    steps to be taken, which is crucial for the effective functioning of a remote
    team.
  prefs: []
  type: TYPE_NORMAL
- en: You can find examples of three decisions taken during the meeting in the next
    screenshot.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Figure_06_11_B16861.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.11 – Decision log
  prefs: []
  type: TYPE_NORMAL
- en: As seen, we use Confluence’s decision tool to record each decision. We have
    seen this tool earlier in the book. Decisions recorded using this tool have an
    icon that looks like a green arrow at the beginning.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s remember that there is another macro called Decision Report, a macro that
    will help you summarize decisions from different pages in Confluence.
  prefs: []
  type: TYPE_NORMAL
- en: Action items
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: During the meeting, your team may define certain tasks to be completed. To ensure
    that these tasks are not overlooked, you can add them as action items in the **Action**
    **i****tems** section of the meeting document.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Figure_06_12_B16861.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.12 – Action items
  prefs: []
  type: TYPE_NORMAL
- en: As you can see, three tasks were decided upon in the meeting. Two of these tasks
    have been completed, while one is still pending completion.
  prefs: []
  type: TYPE_NORMAL
- en: It’s also a good practice to use the status macro to present statuses next to
    actions. The status macro is shown in the following screenshot.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Figure_06_13_B16861.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.13 – Using status macro with action items
  prefs: []
  type: TYPE_NORMAL
- en: Decision document template
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'When making an important decision related to the project, using the **Decision
    Document** template in Confluence can be the practical option. Look at how this
    template may benefit your team:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Organization and structure**: The **Decision Document** template provides
    a structured format to capture and document key information related to the decision.
    It ensures that all relevant details are recorded in a consistent manner, making
    it easier to review and understand the decision-making process.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Clarity and transparency**: By documenting the decision in Confluence, team
    members and stakeholders can access and review the decision at any time. This
    promotes transparency and ensures that everyone is on the same page regarding
    the rationale behind the decision.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Accountability and ownership**: The template includes sections such as **Action
    Items** and **Outcome**, which help in assigning specific tasks and tracking the
    implementation of the decision. This fosters accountability and ensures that actions
    are taken to follow through on the decisions made.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Knowledge sharing and learning**: The **Decision Document** template becomes
    a valuable resource for future reference and learning. It captures the background
    information, options considered, and the decision-making process, allowing team
    members to understand the context and learn from past decisions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Collaboration and input**: The template encourages collaboration by involving
    multiple stakeholders in the decision-making process. Team members can contribute
    insights, pros and cons, and alternative options for a more comprehensive and
    well-informed decision.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Overall, using the **Decision** **Document** Template in Confluence may help
    your team in documenting, communicating, and tracking decisions, leading to better
    alignment, accountability, and transparency within the project team and stakeholders.
  prefs: []
  type: TYPE_NORMAL
- en: As you can see in the following screenshot, you can fill in the essential information
    related to the decision at the beginning of the decision template.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Figure_06_14_B16861.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.14 – Decision basic information
  prefs: []
  type: TYPE_NORMAL
- en: 'As seen in the previous screenshot, this template advises us to clearly transcribe
    many features related to big decisions. Examples of these characteristics are
    the status of the decision, the effect of the decision, and the people who are
    effective in making the decision. You can also add additional information to the
    fields you see in the figure. Here are two examples:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Decision impact**: Explanation of the potential impact of the decision, stakeholders,
    and overall success'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Decision criteria**: List of the specific criteria or factors that will be
    considered in making the decision, such as cost, scalability, security, user experience,
    and so on'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Relevant data
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This section provides the relevant data that supports the decision-making process.
    Consider including concrete information related to the chat application project
    that is relevant to the decision at hand. For example, include data on the current
    user base, usage patterns, or technical infrastructure.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are some examples:'
  prefs: []
  type: TYPE_NORMAL
- en: '**User feedback and requests**: Gather feedback from potential users or existing
    customers regarding their preferences and any specific requirements they may have
    for the chat application'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Market research**: Conduct a thorough analysis of the current market trends,
    competitors, and existing chat applications to understand the landscape and identify
    potential opportunities or gaps in the market'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Technical considerations**: Evaluate the technical requirements of the chat
    application, such as scalability, performance, security, and integration capabilities
    with other systems or platforms'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Background information
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This section provides the necessary background information for understanding
    the context of the decision.
  prefs: []
  type: TYPE_NORMAL
- en: Provide a paragraph that explains the background information specific to the
    chat application project. This could include details about the target audience,
    the purpose of the application, or any existing features or functionalities.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are some examples:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Project overview**: Provide a brief overview of the chat application project,
    including the objectives, target audience, and key features'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Stakeholders**: Identify the key stakeholders involved in the project, such
    as project sponsors, clients, end users, and development team members'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Project timeline**: Mention the timeline and milestones of the project, including
    any deadlines or time constraints that may influence the decision-making process'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Existing chat solutions**: Describe any existing chat solutions or tools
    that are currently being used within the organization or by competitors, highlighting
    their strengths, weaknesses, and limitations'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**User requirements**: Summarize the user requirements and expectations gathered
    through user research, interviews, surveys, or feedback sessions'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Options considered
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'This section compares and evaluates different options that were considered
    for the decision. Compare and evaluate three alternatives for the specific technical
    decision. For each alternative, include the following information:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Descriptions**: Provide a description of each alternative, such as different
    approaches, technologies, or frameworks'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Pros**: List two advantages or positive aspects of each alternative, considering
    factors such as performance, scalability, or ease of implementation'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Cons**: List two disadvantages or drawbacks of each alternative, considering
    factors such as complexity, compatibility, or potential risks'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now, let’s take a look at the examples seen in the following screenshot.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Figure_06_15_B16861.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.15 – Options considered section
  prefs: []
  type: TYPE_NORMAL
- en: When considering alternatives for the decision related to the chat application,
    you can evaluate the three options seen in the previous table.
  prefs: []
  type: TYPE_NORMAL
- en: These options can be evaluated when making the decision regarding the chat application.
    The final choice will depend on factors such as project requirements, budget,
    timeline, scalability needs, and the development team’s expertise and resources.
  prefs: []
  type: TYPE_NORMAL
- en: Action items
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: The **Action****i****tems** section of the meeting template is one of the most
    critical parts of the document. During a meeting, various topics are discussed,
    decisions are made, and often, specific tasks or actions need to be assigned to
    individuals or teams. This is where the **Action** **i****tems** section comes
    into play. It is a dedicated space for listing all the tasks or actions that are
    required to be taken following the meeting. Each action item typically includes
    a description of the task, the person responsible for completing it, and a deadline
    for its completion. By clearly defining and assigning these tasks during the meeting,
    it ensures that everyone is aware of their responsibilities, and there is accountability
    for completing them. It also helps in tracking the progress of these tasks after
    the meeting, as team members can update the status of their action items as they
    work on them. Ultimately, the **Action** **i****tems** section is essential for
    transforming the discussions and decisions made during the meeting into concrete
    actions and ensuring that the necessary steps are taken to move the project forward.
  prefs: []
  type: TYPE_NORMAL
- en: This section outlines the actionable steps or tasks resulting from the decisions.
    Consider including specific action items that need to be taken based on the chosen
    alternative. For example, it could involve conducting further research, performing
    compatibility testing, or implementing the selected solution.
  prefs: []
  type: TYPE_NORMAL
- en: In the next screenshot, you can see three action item examples.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Figure_06_16_B16861.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6.16 – Action items
  prefs: []
  type: TYPE_NORMAL
- en: In the preceding screenshot, three tasks to be carried out have been added to
    the document as action items. An empty square signifies that the task has not
    been completed yet, while a filled square indicates that the task has been completed.
  prefs: []
  type: TYPE_NORMAL
- en: Outcome
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: This section describes the outcome of the decision-making process and the chosen
    option. Summarize the outcome of the decision-making process, including the option
    that was chosen and the rationale behind it. Also, explain how the selected alternative
    aligns with the project goals and requirements.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is an example:'
  prefs: []
  type: TYPE_NORMAL
- en: '*After carefully considering the available options and evaluating their pros
    and cons, the decision has been made to select React and Node.js as the technology
    stack for the chat application. This choice aligns with the project’s goals of
    delivering a highly interactive and scalable chat platform that provides a seamless
    user experience. React’s component-based architecture and extensive ecosystem,
    coupled with Node.js’s event-driven and non-blocking nature, will enable efficient
    real-time communication and boost responsiveness even under high user loads. Also,
    this technology stack offers a rich set of libraries, frameworks, and community
    support, which will facilitate rapid development, ease of maintenance, and future
    scalability. The chosen option provides a solid foundation for building a robust
    and feature-rich chat application that meets the requirements of both our internal
    team communication and customer* *support needs.*'
  prefs: []
  type: TYPE_NORMAL
- en: Atlassian’s tips on managing your software project space
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In Confluence, you will find a page titled *Get the most out of your software
    project space*, containing valuable tips on using your software space. This is
    one of the default pages automatically created when you create your space. Let’s
    discover some of these best practices.
  prefs: []
  type: TYPE_NORMAL
- en: In the following screenshot, you can see Atlassian’s advice on how to keep information
    accessible by using shortcuts.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Figure_06_17_B16861.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6.17 – Atlassian tips: Use shortcuts to keep information accessible'
  prefs: []
  type: TYPE_NORMAL
- en: In the following screenshot, you can see Atlassian’s tips on using Confluence
    when working with sprints.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Figure_06_18_B16861.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6.18 – Atlassian tips: Manage your sprints'
  prefs: []
  type: TYPE_NORMAL
- en: In the following screenshot, you will see Atlassian’s tips on defining your
    requirements with Confluence.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Figure_06_19_B16861.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6.19 – Atlassian tips: Define your requirements'
  prefs: []
  type: TYPE_NORMAL
- en: Once you mastered the software project space template in Confluence, you can
    adapt it to your needs. Now, it’s time for customizing your Confluence template.
  prefs: []
  type: TYPE_NORMAL
- en: Customizing Confluence’s software development template for project-based needs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Confluence provides a ready-to-use software development template that offers
    useful content for software management projects. However, in most cases, it is
    necessary to tailor these pages to align them with the specific requirements of
    your project.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, we are ready to go through the process of customizing Confluence’s software
    development template, ensuring you have a well tailored and effective project
    management environment:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Assess your project requirements**: Start by understanding your project’s
    unique requirements. Identify the specific information, processes, and workflows
    that are essential for your software development project. Consider aspects such
    as project documentation, team collaboration, task management, reporting, and
    any other specific needs.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Review Confluence’s software development template**: Take a close look at
    Confluence’s software development template, which typically includes pages for
    project overview, requirements, design documentation, release planning, testing,
    and more. Assess each page’s relevance to your project and determine which ones
    can be utilized as is and which ones require customization.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Customize existing pages**: For the pages that need customization, edit and
    tailor the content to align with your project’s specific requirements. Add or
    remove sections, modify headings, and adjust the content to reflect your project’s
    terminology, processes, and standards. Consider incorporating specific guidelines,
    templates, or examples that are relevant to your project.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Create new pages**: If the template does not include pages that address your
    project’s unique needs, create new pages from scratch. Identify the areas where
    additional documentation or information is required, such as architecture diagrams,
    API references, user guides, or sprint planning. Create new pages to accommodate
    these specific needs and populate them with relevant content.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Implement project-specific workflows**: If your project follows specific
    workflows, such as Agile or DevOps, adapt the existing template or create new
    pages to reflect these workflows. Customize the project planning, task tracking,
    and reporting sections to align with your chosen methodology. Include details
    on user stories, sprints, backlog management, and other relevant information specific
    to your project’s workflow.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Collaborative spaces and permissions**: Consider creating dedicated spaces
    within Confluence for different teams, stakeholders, or project phases. Set appropriate
    permissions to control access to sensitive information and ensure that team members
    have the right level of access and visibility based on their roles and responsibilities.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Iterative improvement**: Keep in mind that customization is an iterative
    process. As your project progresses and evolves, regularly review and update the
    customized pages to reflect the latest project status, changes, and requirements.
    Encourage team members to contribute and provide feedback to continually improve
    the content and make it more relevant and useful.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You are now ready to effectively customize the Confluence software development
    template to match your specific needs. The result you’ll get will be a well-structured
    project management environment that includes the necessary information, processes,
    and collaboration features required for the success of your software development
    project.
  prefs: []
  type: TYPE_NORMAL
- en: Example content you can add to your space
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Here is some content you could add to your space.
  prefs: []
  type: TYPE_NORMAL
- en: Home page
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'This is the gateway to your team’s work, which should be engaging and intuitive.
    You can include these contents in your home page:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Welcome section**: A brief overview of the team’s purpose and goals, which
    could be especially helpful for new members'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Quick links**: A section with links to frequently accessed pages such as
    project boards, the team directory, coding guidelines, or even external resources
    such as the company’s intranet or a link to the team’s communication platform'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Calendar**: An embedded calendar that shows upcoming milestones, sprint timelines,
    team meetings, or even team members’ time off. This can help everyone stay aware
    of important dates.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Project documentation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'This is the heart of your team’s work. Organizing this content effectively
    can save a lot of valuable time. Here, you can include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Project pages**: Each project your team works on could have its own dedicated
    page, with sub-pages for different aspects of the project such as project plans,
    design documents, test results, and so on. Each page could include text, images,
    diagrams, or even embedded videos explaining complex concepts.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Version history**: Confluence automatically tracks changes made to each page,
    allowing you to see who made what changes and when. This can be very helpful in
    maintaining accountability and transparency.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Team collaboration and communication
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Here, you can include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Discussion pages**: These can be used for brainstorming, problem-solving,
    or decision-making. For example, you might have a discussion page dedicated to
    addressing bugs, where team members can post about any issues they encounter and
    discuss possible solutions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Notifications**: Confluence allows users to watch pages or entire spaces.
    When a user watches a page, they receive email notifications about comments, page
    edits, and other updates. Encourage your team members to use this feature to stay
    up to date with areas of the project they’re interested in or responsible for.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Labels**: Using labels effectively can make it much easier to find related
    content. For example, you might label all pages related to a specific project
    with the project’s name or use a “meeting notes” label for all meeting notes.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Structure and updates
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Page hierarchy**: Confluence allows you to structure pages in a hierarchical
    fashion, with parent pages and child pages. This can make it much easier to navigate
    the space. For example, you might have a parent page for a project, with child
    pages for the project plan, design documents, and other related content.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Regular updates**: Assign a person or a team with the responsibility of regularly
    updating the space. This can involve adding new information, updating existing
    pages, and archiving old content, ensuring that your Confluence space remains
    a reliable source of current information.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Also, please note that the key to a successful Confluence space is not just
    setting it up effectively, but also maintaining and updating it regularly. It
    should evolve with your team’s needs over time.
  prefs: []
  type: TYPE_NORMAL
- en: Using Confluence as a hub with external tools
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To configure Confluence as a hub for external systems, such as SaaS applications,
    you can utilize various integration capabilities and features available in Confluence.
    Here’s a general guide on how to configure Confluence as a hub for external systems:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Identify integration needs**: Determine which external systems or SaaS applications
    you want to integrate with Confluence. Consider the specific use cases and functionalities
    you want to achieve through these integrations. For example, you might want to
    embed content from external systems, display real-time data, or synchronize information
    between Confluence and other tools.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Explore** **the Atlassian** **Marketplace**: Browse the Atlassian Marketplace,
    which offers a wide range of apps and integrations for Confluence. Look for apps
    that provide integration capabilities with your target external systems. Evaluate
    the available options based on functionality, user ratings, reviews, and compatibility
    with your Confluence instance.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Install and configure integration apps**: Once you have selected the appropriate
    integration apps, install them in your Confluence instance by following the provided
    instructions. Configure the integration settings based on the requirements of
    the external systems you want to connect with. This typically involves providing
    authentication credentials, API keys, or configuring webhooks. It’s good practice
    to test apps first using a sandbox environment without affecting your live Confluence
    environment. Remember that the sandbox option is only available in the Premium
    plan.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Embed external content**: Many integration apps allow you to embed content
    from external systems directly within Confluence pages. For example, you can embed
    live dashboards, reports, or project boards from SaaS applications such as Jira,
    Trello, or Figma. This provides a centralized view of relevant information without
    needing to switch between different tools.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Display real-time data**: Some integration apps offer the ability to display
    real-time data from external systems in Confluence. This can include metrics,
    status updates, or notifications. Configure the integration app to fetch and display
    the relevant data within Confluence, providing team members with up-to-date information
    without leaving the Confluence environment.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Bi-directional data synchronization**: If you need to keep data synchronized
    between Confluence and external systems, look for integration apps that support
    bi-directional data synchronization. This can be useful when, for example, you
    want to sync Confluence pages with project documentation stored in a SaaS application
    or update Confluence content based on changes made in an external system.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Customize Confluence with macros and APIs**: Confluence offers a variety
    of macros and APIs that allow for further customization and integration possibilities.
    Leverage these features to develop custom solutions or build specific integrations
    tailored to your unique needs. You can use Confluence’s REST API, webhooks, or
    develop your own apps using the Confluence Connect framework.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Test and monitor integrations**: After configuring the integrations, thoroughly
    test their functionality to ensure they are working as expected. Monitor the integrations
    over time to identify any issues, such as API compatibility, performance, or security
    concerns. Regularly update the integration apps and Confluence versions to ensure
    compatibility and access to new features and improvements.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: By following these steps, it’s possible to configure Confluence as a hub for
    external systems, allowing you to centralize information, streamline workflows,
    and enhance collaboration by integrating and leveraging data from various SaaS
    applications within Confluence.
  prefs: []
  type: TYPE_NORMAL
- en: Using Confluence and Jira together for software project management
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Confluence and Jira are powerful tools that complement each other for software
    project management. Confluence is a collaboration and documentation platform,
    while Jira is a project management and issue-tracking tool. Here’s a quick guide
    on how to use them together effectively:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Define the purpose of each tool**: Understand the specific strengths and
    objectives of both tools. Confluence is ideal for collaborative documentation,
    knowledge-based articles, meeting notes, and design documents. Jira, on the other
    hand, is used for tracking tasks, managing issues, and facilitating project management
    workflows.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Establish a project structure**: Create a Confluence space for each project.
    This space will serve as a central platform for project-related documentation,
    specifications, and other relevant information. Within Jira, set up a project
    and define its elements, such as epics, user stories, tasks, and sprints. Establish
    a clear connection between the Confluence space and the Jira project.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Link Confluence pages to Jira issues**: Integrate Confluence and Jira to
    establish a seamless connection and enhance the power of each platform. Link Confluence
    pages to relevant Jira issues, epics, or user stories to allow your team members
    to easily access associated documentation directly from Jira and vice versa.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Use Jira for task management**: Leverage Jira’s issue-tracking and task-management
    capabilities to track and assign work. Create user stories, break them down into
    tasks, and assign them to team members. Use Jira’s agile boards (Scrum or Kanban)
    to visualize the progress of tasks and manage workflows. Update task statuses,
    log work, and track progress in Jira.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Document project information in Confluence**: Use Confluence to create and
    maintain project documentation such as requirements, meeting notes, and decision
    logs. Use Confluence’s rich formatting options, templates, and collaborative editing
    mode to create and update content. Embed Jira dashboards or boards in Confluence
    pages to provide a visual overview of the project’s progress.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Use Jira macros in Confluence**: Make the most of Jira macros available in
    Confluence to display relevant Jira data within Confluence pages. Embed Jira filters,
    agile boards, or issue lists in Confluence pages to showcase real-time project
    information, task statuses, and progress to keep team members informed without
    switching between tools.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Track discussions and decisions**: Utilize Confluence’s commenting and collaboration
    features to facilitate discussions and decision-making. Encourage team members
    to leave comments, provide feedback, and ask questions on Confluence pages. Use
    @mentions to notify relevant stakeholders and keep everyone engaged.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Track documentation changes**: Leverage Confluence’s version control capabilities
    to keep a record of changes and enable effortless reverting to previous versions
    if needed. Encourage team members to review and update Confluence pages regularly
    to ensure all documentation remains accurate and up to date.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Cross-reference between Confluence and Jira**: Establish cross-referencing
    between Confluence and Jira to maintain traceability. Link Confluence pages to
    related Jira issues and vice versa, allowing team members to easily navigate between
    documentation and task management, ensuring they have the necessary context and
    information.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Regularly review and update**: Check for inconsistencies, outdated information,
    or missing documentation in both tools. Encourage team members to contribute to
    Confluence and Jira, ensuring that all knowledge and project statuses reflect
    the most accurate versions.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: By leveraging the strengths of Confluence and Jira while establishing an effective
    workflow between the two, you can efficiently manage a software project, track
    tasks, maintain documentation, and foster collaboration among team members.
  prefs: []
  type: TYPE_NORMAL
- en: The step-by-step guide to creating a software project space on Confluence
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Confluence is a powerful collaboration platform that can be used to manage
    software projects effectively. By creating a Confluence space dedicated to your
    software project, it is possible to centralize project documentation, facilitate
    team collaboration, and streamline task management. In this section, we’ll walk
    you through the process of creating a software project space on Confluence to
    foster a productive project environment with a step-by-step guide:'
  prefs: []
  type: TYPE_NORMAL
- en: '`Software Project` and provide a brief description. Click **Create** to create
    the space.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Designing the home page**: The home page of your software project space should
    provide an overview of your project. Include essential components such as project
    goals, objectives, team members, timeline, priorities, and relevant links and
    resources.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Documentation and knowledge base**: Create pages within the space for a documentation
    and knowledge base. Include documents such as project requirements, design specifications,
    user guides, API references, and other relevant materials.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Team collaboration**: Foster collaboration among team members by creating
    pages or sections dedicated to communication and interaction. Include features
    such as meeting notes, discussion forums, and announcements to facilitate effective
    communication and information-sharing.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Task management with Jira integration**: Integrate Confluence with Jira,
    a powerful issue-tracking and project management tool. Create a project in Jira
    and link it to your Confluence space. Utilize Jira for defining tasks, tracking
    progress, and generating reports, while linking relevant Jira issues to Confluence
    pages.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Training and help resources**: Develop training materials and helpful resources
    to support your project team. These resources can include user guides, workflow
    instructions, video tutorials, and help pages to assist team members in navigating
    Confluence and Jira effectively.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note that this guide provides a general framework. You can always customize
    the process for your project-specific needs. By following these steps, you can
    create a well-organized and collaborative environment for managing your software
    project on Confluence.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we learned that Confluence is a collaboration and project management
    tool, particularly beneficial for remote software development teams. It provides
    a centralized platform for storing project-related documents, facilitating effective
    communication and collaboration. It integrates with Jira, allowing teams to track
    tasks, manage workflows, and monitor project progress. It also caters to various
    roles within a software development project, such as software developers, product
    managers, quality assurance engineers, DevOps engineers, and UX/UI designers.
    By using Confluence, we saw how teams can create a single source of truth for
    their projects, customize templates to meet specific needs, and enhance collaboration
    and productivity.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What is Confluence? How can remote software development teams benefit from it?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What are some of the roles in a remote software development team that can benefit
    from Confluence?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How can Confluence be used to create a single source of truth for a software
    development project?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How can remote teams benefit from the Confluence-Jira integration?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What is the role of the overview page? What does it include?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Answers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Confluence is a collaboration and project management tool that helps remote
    software development teams to effectively manage projects while facilitating collaboration.
    It provides a centralized platform for storing project-related documents and enables
    direct communication among team members.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Software developers, product managers, quality assurance engineers, DevOps engineers,
    and UX/UI designers can benefit from Confluence in a remote software development
    team. Confluence provides many features and capabilities to meet the specific
    needs of each role.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Confluence allows teams to centralize and organize all relevant project information
    in a well-structured place. By creating different pages dedicated to project overview,
    requirements, design, development, testing, and documentation, teams can ensure
    that each member of the team has access to the most up-to-date project information.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Confluence integrates with Jira, a project management tool to track tasks, overview
    workflows, and monitor project progress. This integration allows teams to have
    a comprehensive view of their projects and streamline their management processes.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The home page of your software project space should provide an overview of the
    project. You can include essential components such as project goals, objectives,
    team members, timeline, priorities, and relevant links and resources.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
