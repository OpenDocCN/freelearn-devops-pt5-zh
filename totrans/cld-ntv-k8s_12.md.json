["```\nAllocated resources:\n (Total limits may be over 100 percent, i.e., overcommitted.)\n CPU Requests\tCPU Limits    Memory Requests  Memory Limits\n ------------\t----------    ---------------  -------------\n 8520m (40%)\t4500m (24%)   16328Mi (104%)   16328Mi (104%)\n```", "```\nkubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/download/v0.3.7/components.yaml\n```", "```\nKubectl top pods -n kube-system \n```", "```\nNAMESPACE     NAME                CPU(cores)   MEMORY(bytes)   \ndefault       my-hungry-pod       8m           50Mi            \ndefault       my-lightweight-pod  2m           10Mi       \n```", "```\nkubectl logs <pod_name> <container_name> \n```", "```\nkubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/<VERSION> /aio/deploy/recommended.yaml\n```", "```\nkubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.4/aio/deploy/recommended.yaml\n```", "```\nhttp://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/\n```", "```\n    kubectl create serviceaccount dashboard-user\n    ```", "```\n    serviceaccount/dashboard-user created\n    ```", "```\n    kubectl create clusterrolebinding dashboard-user \\--clusterrole=cluster-admin --serviceaccount=default:dashboard-user\n    ```", "```\n    clusterrolebinding.rbac.authorization.k8s.io/dashboard-user created\n    ```", "```\n    kubectl get secrets\n    ```", "```\n    NAME                         TYPE                                  DATA   AGE\n    dashboard-user-token-dcn2g   kubernetes.io/service-account-token   3      112s\n    ```", "```\n    kubectl describe secret dashboard-user-token-dcn2g   \n    ```", "```\n    Name:         dashboard-user-token-dcn2g\n    Namespace:    default\n    Labels:       <none>\n    Annotations:  kubernetes.io/service-account.name: dashboard-user\n                  kubernetes.io/service-account.uid: 9dd255sd-426c-43f4-88c7-66ss91h44215\n    Type:  kubernetes.io/service-account-token\n    Data\n    ====\n    ca.crt:     1025 bytes\n    namespace:  7 bytes\n    token: < LONG TOKEN HERE >\n    ```", "```\ncurl -LO https://github.com/coreos/kube-prometheus/archive/v0.5.0.zip\n```", "```\nkubectl apply -f manifests/setup\n```", "```\nkubectl apply -f manifests/\n```", "```\nKubectl -n monitoring port-forward svc/prometheus-k8s 3000:9090\n```", "```\nkubelet_http_requests_total\n```", "```\n    Kubectl -n monitoring port-forward svc/grafana 3000:3000\n    ```", "```\n    Kubectl -n monitoring port-forward svc/alertmanager-main 3000:9093\n    ```", "```\n    git clone https://github.com/kubernetes/kubernetes\n    ```", "```\n    cd kubernetes/cluster/addons\n    ```", "```\n    kubectl apply -f ./fluentd-elasticsearch/es-statefulset.yaml\n    kubectl apply -f ./fluentd-elasticsearch/es-service.yaml\n    ```", "```\n    kubectl apply -f ./fluentd-elasticsearch/fluentd-es-configmap.yaml\n    kubectl apply -f ./fluentd-elasticsearch/fluentd-es-ds.yaml\n    ```", "```\n    kubectl apply -f ./fluentd-elasticsearch/kibana-deployment.yaml\n    kubectl apply -f ./fluentd-elasticsearch/kibana-service.yaml\n    ```", "```\n    kubectl get po -A\n    ```", "```\n    port-forward to your local machine's port 8080 from the Kibana UI. \n    ```", "```\nkubectl create namespace observability\n```", "```\n    kubectl create -f https://raw.githubusercontent.com/jaegertracing/jaeger-operator/master/deploy/crds/jaegertracing.io_jaegers_crd.yaml\n    ```", "```\n    kubectl create -n observability -f https://raw.githubusercontent.com/jaegertracing/jaeger-operator/master/deploy/service_account.yaml\n    kubectl create -n observability -f https://raw.githubusercontent.com/jaegertracing/jaeger-operator/master/deploy/role.yaml\n    kubectl create -n observability -f https://raw.githubusercontent.com/jaegertracing/jaeger-operator/master/deploy/role_binding.yaml\n    kubectl create -f https://raw.githubusercontent.com/jaegertracing/jaeger-operator/master/deploy/cluster_role.yaml\n    kubectl create -f https://raw.githubusercontent.com/jaegertracing/jaeger-operator/master/deploy/cluster_role_binding.yaml\n    ```", "```\n    kubectl create -n observability -f https://raw.githubusercontent.com/jaegertracing/jaeger-operator/master/deploy/operator.yaml\n    ```", "```\n    kubectl get deploy -n observability\n    ```", "```\napiVersion: jaegertracing.io/v1\nkind: Jaeger\nmetadata:\n  name: all-in-one\n  namespace: observability\nspec:\n  strategy: allInOne\n```", "```\nKubectl apply -f jaeger-allinone.yaml\n```", "```\nKubectl get po -n observability\n```", "```\nNAME                         READY   STATUS    RESTARTS   AGE\nall-in-one-12t6bc95sr-aog4s  1/1     Running   0          5m\n```", "```\nKubectl get ingress -n observability\n```"]