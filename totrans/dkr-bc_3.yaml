- en: Chapter 3. Docker in the Cloud
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第三章 Docker 在云中
- en: The third tool, alongside Docker and Docker Compose, which we installed during
    [Chapter 1](ch01.html "Chapter 1. Installing Docker Locally"), *Installing Docker
    Locally* was Docker Machine; this is a command line tool which allows you to manage
    both local and remote Docker hosts.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 第三个工具是 Docker 和 Docker Compose，两个我们在 [第 1 章](ch01.html "第 1 章. 安装 Docker") *安装
    Docker* 时安装的工具，就是 Docker Machine；这是一个命令行工具，允许你管理本地和远程的 Docker 主机。
- en: 'In this chapter, we are going to look at the basic usage of three of the public
    cloud drivers by using Docker Machine to provision Docker hosts in them. We will
    be launching our Docker hosts in the following:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将通过使用 Docker Machine 在三个公共云驱动程序中配置 Docker 主机，来查看它们的基本使用方法。我们将会在以下环境中启动
    Docker 主机：
- en: Digital Ocean [https://www.digitalocean.com/](https://www.digitalocean.com/)
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Digital Ocean [https://www.digitalocean.com/](https://www.digitalocean.com/)
- en: Amazon Web Services - [https://aws.amazon.com/](https://aws.amazon.com/)
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 亚马逊云服务 - [https://aws.amazon.com/](https://aws.amazon.com/)
- en: Microsoft Azure - [https://azure.microsoft.com/](https://azure.microsoft.com/)
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 微软 Azure - [https://azure.microsoft.com/](https://azure.microsoft.com/)
- en: All using a single command.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 所有操作只需一个命令。
- en: Docker Machine
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Docker Machine
- en: 'Docker Machine can connect to the following services, provision a Docker host,
    and configure your local Docker client to be able to communicate with the newly
    launched remote instance the following:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Docker Machine 可以连接到以下服务，配置 Docker 主机，并配置你的本地 Docker 客户端，使其能够与新启动的远程实例通信：
- en: 'As well as the three public cloud providers already mentioned, Docker Machine
    also supports:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 除了已提到的三家公共云提供商，Docker Machine 还支持：
- en: Google Compute Engine - [https://cloud.google.com/compute/](https://cloud.google.com/compute/)
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 谷歌计算引擎 - [https://cloud.google.com/compute/](https://cloud.google.com/compute/)
- en: Rackspace - [http://www.rackspace.co.uk/cloud/](http://www.rackspace.co.uk/cloud/)
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Rackspace - [http://www.rackspace.co.uk/cloud/](http://www.rackspace.co.uk/cloud/)
- en: IBM Softlayer [http://www.softlayer.com](http://www.softlayer.com)
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IBM Softlayer [http://www.softlayer.com](http://www.softlayer.com)
- en: Exoscale - [https://www.exoscale.ch/](https://www.exoscale.ch/)
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Exoscale - [https://www.exoscale.ch/](https://www.exoscale.ch/)
- en: VMware vCloud Air - [http://vcloud.vmware.com/](http://vcloud.vmware.com/)
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VMware vCloud Air - [http://vcloud.vmware.com/](http://vcloud.vmware.com/)
- en: 'It also supports the following self-hosted platforms:'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它还支持以下自托管平台：
- en: OpenStack - [https://www.openstack.org/](https://www.openstack.org/)
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenStack - [https://www.openstack.org/](https://www.openstack.org/)
- en: Microsoft Hyper-V - [http://www.microsoft.com/virtualization/](http://www.microsoft.com/virtualization/)
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 微软 Hyper-V - [http://www.microsoft.com/virtualization/](http://www.microsoft.com/virtualization/)
- en: VMware vSphere - [http://www.vmware.com/uk/products/vsphere/](http://www.vmware.com/uk/products/vsphere/)
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VMware vSphere - [http://www.vmware.com/uk/products/vsphere/](http://www.vmware.com/uk/products/vsphere/)
- en: Also, it allows you to launch Docker hosts locally using VirtualBox - [https://www.virtualbox.org/](https://www.virtualbox.org/).
    This is great if your local workstation doesn't meet the minimum specifications
    for Docker for Mac or Windows.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，它还允许你使用 VirtualBox本地启动 Docker 主机 - [https://www.virtualbox.org/](https://www.virtualbox.org/)。如果你的本地工作站不符合
    Docker for Mac 或 Windows 的最低规格，这将非常有用。
- en: The Digital Ocean driver
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Digital Ocean 驱动程序
- en: Let us start creating some instances in the cloud. First, let us launch a machine
    in Digital Ocean.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始在云中创建一些实例。首先，让我们在 Digital Ocean 启动一台机器。
- en: There are two prerequisites for launching an instance with Docker Machine in
    Digital Ocean, the first is a Digital Ocean account and the second is an API token.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Digital Ocean 上启动实例有两个先决条件，第一个是一个 Digital Ocean 账户，第二个是一个 API 令牌。
- en: To sign up for a Digital Ocean account, please visit [https://www.digitalocean.com/](https://www.digitalocean.com/)
    and click **Sign Up**. Once you have or are logged in to your account, you can
    generate an API token by clicking on the **API** link in the top menu.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 要注册 Digital Ocean 账户，请访问 [https://www.digitalocean.com/](https://www.digitalocean.com/)
    并点击**注册**。注册或登录账户后，你可以通过点击顶部菜单中的**API**链接来生成 API 令牌。
- en: To grab your token, click on **Generate New Token** and follow the onscreen
    instructions.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取你的令牌，点击**生成新令牌**并按照屏幕上的说明操作。
- en: Tip
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: You only get one chance to make a record of your token; please make sure you
    store it somewhere safe as it will allow anyone who has it to launch instances
    into your account.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 你只有一次机会记录下你的令牌；请确保将其保存在安全的地方，因为任何拥有该令牌的人都可以在你的账户中启动实例。
- en: 'Once you have the token, you can launch your instance using Docker Machine.
    To do this, run the following command, making sure to replace the example API
    token with your own:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦获得令牌，你可以使用Docker Machine启动实例。为此，运行以下命令，确保将示例API令牌替换为你自己的令牌：
- en: '[PRE0]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Note
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Please note, the tokens used in these examples have been revoked.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这些示例中使用的令牌已被撤销。
- en: This will launch an instance called **dotest** in your Digital Ocean account.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这将在你的Digital Ocean账户中启动一个名为**dotest**的实例。
- en: 'If you check your Digital Ocean control panel, you should now see the instance
    which was created by Docker Machine listed:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你查看Digital Ocean控制面板，你现在应该能看到Docker Machine创建的实例：
- en: '![The Digital Ocean driver](img/B06455_03_03.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![Digital Ocean驱动程序](img/B06455_03_03.jpg)'
- en: 'We can also confirm our Digital Ocean Docker host is running by using the following
    command:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也可以通过以下命令确认我们的Digital Ocean Docker主机正在运行：
- en: '[PRE1]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This will return all the machines we have running, confirming their state,
    IP address, Docker version, and name. There is also a column which lets you know
    which of the Docker Machine managed Docker hosts your local client is configured
    to communicate with:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这将返回所有我们正在运行的机器，确认它们的状态、IP地址、Docker版本和名称。还有一列显示你的本地客户端与哪个Docker Machine管理的Docker主机进行通信：
- en: '![The Digital Ocean driver](img/B06455_03_04.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![Digital Ocean驱动程序](img/B06455_03_04.jpg)'
- en: By default, your local Docker client is configured to communicate with our local
    Docker installation; as we launched our local Docker installation using Docker
    for Mac or Windows, or you have Docker installed on Linux Docker Machine will
    not list it.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，你的本地Docker客户端配置为与我们的本地Docker安装进行通信；由于我们是通过Docker for Mac或Windows启动的本地Docker安装，或者你在Linux上安装了Docker，Docker
    Machine将不会列出它。
- en: Let's change it so it interacts with the Digital Ocean instance.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们修改它，使其能够与Digital Ocean实例交互。
- en: To do this, you have to change some local environment variables; luckily, Docker
    Machine provides an easy way to find out what these are and change them.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，你需要更改一些本地环境变量；幸运的是，Docker Machine提供了一种简单的方法来找出这些变量并进行更改。
- en: 'To find out what they all you must do is simply run the following command:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 要找出这些变量，只需要运行以下命令：
- en: '[PRE2]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'This will tell you exactly what you need to run to change from the `default`
    machine to `dotest`; the best thing is that the command itself formats the results
    in such a way which they can execute, so if we run the command again, but this
    time in a way where the output will be executed:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 这将告诉你需要运行什么命令才能从`default`机器切换到`dotest`；最好的地方是命令本身将结果格式化为可执行的形式，所以如果我们再次运行命令，但这次以可以执行输出的方式：
- en: '[PRE3]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Or if you have launched your instance using PowerShell on Windows then use:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，如果你在Windows上使用PowerShell启动了实例，可以使用以下命令：
- en: '[PRE4]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'And now if you get a listing from Docker Machine, you will notice that the
    `dotest` environment is now the active one:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果你使用Docker Machine列出所有主机，你会发现`dotest`环境现在是活动的：
- en: '![The Digital Ocean driver](img/B06455_03_05.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![Digital Ocean驱动程序](img/B06455_03_05.jpg)'
- en: Now we have our Digital Ocean instance active, you can run the `docker container
    run` command on your local machine, and they will have been executed on the Digital
    Ocean instance; let's test this by running the `hello-world` container.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经激活了Digital Ocean实例，你可以在本地机器上运行`docker container run`命令，它们将在Digital Ocean实例上执行；让我们通过运行`hello-world`容器来测试这一点。
- en: 'Run the following command:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 运行以下命令：
- en: '[PRE5]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'You should see the image download and then the output of running the `hello-world`
    container if you then run the following command:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该会看到镜像下载，并且如果你运行以下命令，`hello-world`容器的输出也会显示：
- en: '[PRE6]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: You should see that the `hello-world` container exited a few seconds ago.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该能看到`hello-world`容器在几秒钟前已经退出。
- en: 'You can SSH into the Digital Ocean instance using the following command:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用以下命令通过SSH连接到Digital Ocean实例：
- en: '[PRE7]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Once logged in, run the `docker container ls –a` command to demonstrate that
    the `docker container run` you ran locally was executed on the Digital Ocean instance.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 登录后，运行`docker container ls –a`命令，演示你在本地运行的`docker container run`命令已经在Digital
    Ocean实例上执行。
- en: The beauty of this setup is that you shouldn't have to SSH to your instances
    often.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这个设置的优点是，你不需要频繁通过SSH连接到实例。
- en: Note
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: One thing you may have noticed is that all we told Docker Machine is that we
    want to use Digital Ocean and our API token; at no point did we tell it which
    region to launch the instance in, what specification we wanted, or even which
    SSH key to use.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能注意到的一件事是，我们告诉Docker Machine的只是我们想使用Digital Ocean和我们的API令牌；我们没有告诉它要在哪个区域启动实例，想要什么配置，甚至是要使用哪个SSH密钥。
- en: 'Docker Machine has some sensible defaults which are as follows:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 'Docker Machine有一些合理的默认设置，具体如下：  '
- en: digitalocean-image = ubuntu-16-04-x64
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'digitalocean-image = ubuntu-16-04-x64  '
- en: digitalocean-region = nyc3
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'digitalocean-region = nyc3  '
- en: digitalocean-size = 512mb
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'digitalocean-size = 512mb  '
- en: As I am based in the UK, let's look at changing the region and specification
    of the host launched by Docker Machine.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '由于我位于英国，我们来看一下如何更改Docker Machine启动的主机的区域和配置。  '
- en: 'First, we should remove the `dotest` instance by running the following command:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '首先，我们应该通过运行以下命令移除`dotest`实例：  '
- en: '[PRE8]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: This will terminate the 512 MB instance running in NYC3.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '这将终止在NYC3区域运行的512 MB实例。  '
- en: Tip
  id: totrans-69
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '提示  '
- en: It is important to terminate instances you are not using as they will will cost
    you for each hour they are active; remember, one of the key advantages of using
    Docker Machine is that you can quickly spin up instances both quickly and with
    as little interaction as possible.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '终止未使用的实例非常重要，因为它们在每小时运行时都会产生费用；记住，使用Docker Machine的一个关键优势是你可以快速启动实例，并尽可能减少交互。  '
- en: 'Now we have removed the old instance, let''s add some additional flags to our
    `docker-machine` command to launch the new instance in the desired region and
    specification, we will be calling our new instance `douktest`. The updated `docker-machine
    create` command now looks like this (again, remember to replace the example API
    token with your own):'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '现在我们已经移除了旧实例，接下来，我们需要为`docker-machine`命令添加一些额外的标志，以便在指定的区域和配置下启动新实例，我们将把新实例命名为`douktest`。更新后的`docker-machine
    create`命令现在看起来像这样（再次提醒，记得用你自己的API令牌替换示例令牌）：  '
- en: '[PRE9]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'You should see similar output from the command as before; once the instance
    has been deployed, you can make it active by running the following command:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '你应该会看到与之前类似的命令输出；一旦实例被部署，你可以通过运行以下命令使其生效：  '
- en: '[PRE10]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'When you enter the control panel, you will notice that the instance has launched
    in the specified region and at the desired specification:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '当你进入控制面板时，你会注意到实例已经在指定的区域和期望的配置下启动：  '
- en: '![The Digital Ocean driver](img/B06455_03_07.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![数字海洋驱动程序](img/B06455_03_07.jpg)  '
- en: 'For full details on each of the regions and what machine types are available
    in each one you can query the Digital Ocean API by running the following command
    (again, remember to replace the API token):'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '有关每个区域的详细信息以及每个区域中可用的机器类型，你可以通过运行以下命令查询Digital Ocean API（同样记得替换API令牌）：  '
- en: '[PRE11]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: This will output information about each region.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '这将输出每个区域的信息。  '
- en: 'One last thing; we still haven''t found out about the SSH key. Each time you
    run Docker Machine a new SSH key for the instance you are launching is created
    and uploaded to the provider; each key is stored in the `.docker` folder in your
    users home directory. For example, the key for `douktest` can be found by running:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '最后，还有一件事；我们仍然没有找到关于SSH密钥的信息。每次运行Docker Machine时，都会为你启动的实例创建一个新的SSH密钥，并将其上传到提供商；每个密钥都会保存在用户主目录的`.docker`文件夹中。例如，可以通过运行以下命令找到`douktest`的密钥：  '
- en: '[PRE12]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Here you will also find the certificates used to authenticate the Docker agent
    with the Docker installation on the instance and the configuration:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '在这里，你还会找到用于验证Docker代理与实例上的Docker安装的证书及其配置：  '
- en: '![The Digital Ocean driver](img/B06455_03_08.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![数字海洋驱动程序](img/B06455_03_08.jpg)  '
- en: So that covers launching a host in Digital Ocean; how about launching something
    more exciting than the Hello World container?
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '这就涵盖了在Digital Ocean中启动主机；那么，如何启动比Hello World容器更令人兴奋的东西呢？  '
- en: 'No problem, let''s use Docker Compose to launch a variation of the WordPress
    stack we used in [Chapter 2](ch02.html "Chapter 2. Launching Applications Using
    Docker"), *Launching Applications Using Docker*. Start by going to the `/bootcamp/chapter03/wordpress`
    folder and then run the following command:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '没问题，让我们使用Docker Compose启动一个变化版本的WordPress堆栈，类似于我们在[第2章](ch02.html "第2章：使用Docker启动应用程序")中使用的那个，*使用Docker启动应用程序*。首先，进入`/bootcamp/chapter03/wordpress`文件夹，然后运行以下命令：  '
- en: '[PRE13]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'To check you have your Docker client configured to use your Digital Ocean Docker
    host. Once you are sure your client is using the remote host, simply run:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '为了检查你的Docker客户端是否已配置为使用你的Digital Ocean Docker主机，一旦确认客户端使用了远程主机，只需运行以下命令：  '
- en: '[PRE14]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'This will download the images we need, then launch two containers. This time
    you will be able to access the WordPress installation on `port 80` on your Digital
    Ocean host. To find the IP of your host, you can run the following command:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 这将下载我们需要的镜像，并启动两个容器。此次你将能够通过`port 80`访问Digital Ocean主机上的WordPress安装。要找到你的主机的IP地址，你可以运行以下命令：
- en: '[PRE15]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Or on a Mac or Linux machine to open your browser and go to your installation
    page run the following command:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 或者在Mac或Linux机器上打开浏览器并访问你的安装页面，运行以下命令：
- en: '[PRE16]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The terminal session below shows the output you can expect to see from the
    previous commands:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的终端会话展示了你可以从之前的命令中预期看到的输出：
- en: '![The Digital Ocean driver](img/B06455_03_10.jpg)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![The Digital Ocean driver](img/B06455_03_10.jpg)'
- en: 'You will then be able to complete your WordPress installation:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 然后你将能够完成你的WordPress安装：
- en: '![The Digital Ocean driver](img/B06455_03_11.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![The Digital Ocean driver](img/B06455_03_11.jpg)'
- en: Tip
  id: totrans-97
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: I wouldn't recommend leaving your WordPress installation at the installation
    screen for long as it is possible that someone could complete the installation
    on your behalf and get up to no good.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 我不建议长时间将你的WordPress安装停留在安装页面上，因为有人可能会在你不知情的情况下完成安装并进行不当操作。
- en: 'Once you have finished your Digital Ocean, host run the following command to
    terminate it:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你完成了Digital Ocean主机，运行以下命令来终止它：
- en: '[PRE17]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Now that we have learned how to launch a Docker host in Digital Ocean let's
    move on to Amazon Web Services.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经学会了如何在Digital Ocean上启动Docker主机，接下来让我们来了解一下Amazon Web Services。
- en: The Amazon Web Services driver
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Amazon Web Services驱动程序
- en: If you don't already have an **Amazon Web Services** (**AWS**) account, you
    should sign up for one at [http://aws.amazon.com/](http://aws.amazon.com/); if
    you are new to AWS, then you will be eligible for their free tier [http://aws.amazon.com/free/](http://aws.amazon.com/free/).
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你还没有**Amazon Web Services**（**AWS**）账户，你应该在[http://aws.amazon.com/](http://aws.amazon.com/)注册一个；如果你是AWS新手，你将有资格获得他们的免费套餐，[http://aws.amazon.com/free/](http://aws.amazon.com/free/)。
- en: I would recommend reading through Amazon's getting started guide if you are
    unfamiliar with AWS before working through this section of the chapter; you can
    find the guide at [http://docs.aws.amazon.com/gettingstarted/latest/awsgsg-intro/gsg-aws-intro.html](http://docs.aws.amazon.com/gettingstarted/latest/awsgsg-intro/gsg-aws-intro.html).
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对AWS不熟悉，我建议在开始本章内容之前先阅读Amazon的入门指南；你可以在[http://docs.aws.amazon.com/gettingstarted/latest/awsgsg-intro/gsg-aws-intro.html](http://docs.aws.amazon.com/gettingstarted/latest/awsgsg-intro/gsg-aws-intro.html)找到该指南。
- en: 'The AWS driver is like the Digital Ocean driver in that it has some sensible
    defaults, Rather than going into too much detail about how to customize the EC2
    instance launched by Docker Machine, we will stick with the defaults. For AWS
    driver, these are as follows:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: AWS驱动程序与Digital Ocean驱动程序类似，具有一些合理的默认设置。我们不会详细讨论如何自定义Docker Machine启动的EC2实例，而是使用默认设置。对于AWS驱动程序，默认设置如下：
- en: amazonec2-region = us-east-1 (North Virginia)
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: amazonec2-region = us-east-1（北弗吉尼亚）
- en: amazonec2-ami = ami-fd6e3bea (Ubuntu 16.04)
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: amazonec2-ami = ami-fd6e3bea（Ubuntu 16.04）
- en: amazonec2-instance-type = t2.micro
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: amazonec2-instance-type = t2.micro
- en: amazonec2-root-size = 16GB
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: amazonec2-root-size = 16GB
- en: amazonec2-security-group = docker-machine
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: amazonec2-security-group = docker-machine
- en: Please note, if **amazonec2-security-group** does not exist, it will be created
    for you by Docker Machine; if it does exist, then Docker Machine will use the
    pre-existing rules instead.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，如果**amazonec2-security-group**不存在，Docker Machine会为你创建它；如果它已存在，则Docker Machine将使用现有规则。
- en: Before we launch our instance, we will also need to know our **AWS Access**
    and **AWS Secret** keys and the **VPC ID** we will be launching our instance into;
    to get these, please log in to the AWS console which can be found at [https://console.aws.amazon.com/](https://console.aws.amazon.com/).
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们启动实例之前，我们还需要知道我们的**AWS Access**和**AWS Secret**密钥以及我们将要启动实例的**VPC ID**；要获取这些信息，请登录到AWS控制台，网址为[https://console.aws.amazon.com/](https://console.aws.amazon.com/)。
- en: Most of you will be logging with your AWS root account. As your AWS root account
    shouldn't have any Access and Secret keys associated with it we should add a separate
    user for Docker Machine by going to **Services** | **IAM** | **Users** and then
    selecting your user and going to the **Security Credential**s tab.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数人会使用AWS根账户进行登录。由于AWS根账户不应该关联任何Access和Secret密钥，因此我们应该为Docker Machine添加一个单独的用户，方法是进入**Services**
    | **IAM** | **Users**，然后选择你的用户并进入**Security Credentials**标签。
- en: 'There you should see a button which says **Add user**, click this and you will
    be taken to a screen where you can set your user details. Enter the **User name**
    `docker-machine` and then for the **Access type** tick the **Programmatic access**
    check box:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在那里，您应该能看到一个按钮，上面写着**添加用户**，点击此按钮，您将进入一个页面，在该页面上可以设置您的用户详情。输入**用户名** `docker-machine`，然后在**访问类型**中勾选**程序化访问**复选框：
- en: '![The Amazon Web Services driver](img/B06455_03_13.jpg)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![Amazon Web Services 驱动程序](img/B06455_03_13.jpg)'
- en: 'When you have entered the details, click on **Next: Permissions** to be taken
    to the next step. On the permissions page, click on **Attach existing policies
    directly** and then in the **Policy type** search box, enter `SystemAdministrator`
    and hit return to filter the policies:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 输入详情后，点击**下一步：权限**进入下一步。在权限页面上，点击**直接附加现有策略**，然后在**策略类型**搜索框中输入`SystemAdministrator`，按回车键以筛选策略：
- en: 'Tick the check box next to `SystemAdministrator` and then click on **Ne** **xt:
    Review**:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 勾选`SystemAdministrator`旁边的复选框，然后点击**下一步：审查**：
- en: '![The Amazon Web Services driver](img/B06455_03_14.jpg)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![Amazon Web Services 驱动程序](img/B06455_03_14.jpg)'
- en: On the review page, click on **Create user** and after a few seconds, you should
    receive confirmation your user has been successfully created.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在审查页面上，点击**创建用户**，几秒钟后，您应该会收到确认，您的用户已成功创建。
- en: Make sure you click on **Download .csv** as you will not be shown the Secret
    access key again. Now you have your Access key ID and Secret access key.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 确保点击**下载 .csv**，因为您将不再看到密钥访问密钥。现在您已经拥有了您的访问密钥ID和密钥访问密钥。
- en: Before you find your VPC ID, you should make sure you are in the correct region
    by ensuring that it says, **N. Virginia** in the top-right of your AWS console;
    if it doesn't, select it from the drop-down list.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在找到您的 VPC ID 之前，您应该通过确保 AWS 控制台右上角显示的是**北弗吉尼亚**来确认您处于正确的区域；如果不是，从下拉列表中选择它。
- en: Note
  id: totrans-122
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Amazon describes Amazon VPC (Amazon Virtual Private Cloud) as letting you provision
    a logically isolated section of the AWS Cloud where you can launch resources in
    a virtual network which you define. You have complete control over your virtual
    networking environment, including the selection of your own IP address range,
    the creation of subnets, and configuration of route tables and network gateways.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊将 Amazon VPC（Amazon 虚拟私有云）描述为允许您提供 AWS 云的逻辑隔离部分，您可以在其中启动您定义的虚拟网络中的资源。您可以完全控制虚拟网络环境，包括选择自己的
    IP 地址范围、创建子网，以及配置路由表和网络网关。
- en: 'Once you have ensured you are in the correct region, go to **Services** then
    **VPC** and click on **Your VPCs**; you don''t need to worry about creating and
    configuring a VPC as Amazon provides you with a default VPC in each region. Select
    the VPC and you should see the something like the following:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦确认您处于正确的区域，转到**服务**，然后选择**VPC**，点击**您的 VPC**；您无需担心创建和配置 VPC，因为 Amazon 在每个区域都提供了默认的
    VPC。选择该 VPC，您应该看到类似以下的内容：
- en: '![The Amazon Web Services driver](img/B06455_03_17.jpg)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![Amazon Web Services 驱动程序](img/B06455_03_17.jpg)'
- en: Note
  id: totrans-126
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Make a note of the VPC ID; you should now have enough information to launch
    your instance using Docker Machine. To do this, run the following command:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 记下 VPC ID；您现在应该有足够的信息来使用 Docker Machine 启动您的实例。为此，请运行以下命令：
- en: '[PRE18]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'If all goes well, you should see something like the following output:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切顺利，您应该看到类似以下的输出：
- en: '![The Amazon Web Services driver](img/B06455_03_18.jpg)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![Amazon Web Services 驱动程序](img/B06455_03_18.jpg)'
- en: 'You should also be able to see an EC2 instance launched in the AWS Console
    by clicking on **Services** | **EC2** | **Instances**:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 您还应该能够通过点击**服务** | **EC2** | **实例**，在 AWS 控制台中看到一个已启动的 EC2 实例：
- en: '![The Amazon Web Services driver](img/B06455_03_19.jpg)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![Amazon Web Services 驱动程序](img/B06455_03_19.jpg)'
- en: You may have noticed Docker Machine created the security group and assigned
    an SSH key to the instance without any need for us to get involved, keeping within
    the principle that you don't need to be an expert in configuring the environments
    you are launching your Docker instance into.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能注意到，Docker Machine 创建了安全组并为实例分配了 SSH 密钥，而我们无需介入，这符合您无需成为专家即可配置启动 Docker 实例的环境的原则。
- en: 'Before we terminate the instance, let''s switch our local Docker client over
    to use the AWS instance and launch the **Hello World** container by running the
    following commands:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们终止实例之前，让我们将本地 Docker 客户端切换为使用 AWS 实例，并通过运行以下命令启动**Hello World**容器：
- en: '[PRE19]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: As you can see, once you have launched an instance using Docker Machine and
    switch your local Docker client to it, there is no difference in usage between
    running Docker locally or on a cloud provider.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，一旦使用 Docker Machine 启动实例并将本地 Docker 客户端切换到它，无论是在本地运行 Docker 还是在云提供商上运行，使用方法没有任何区别。
- en: 'Before we start to rack up cost we should terminate our test AWS instance by
    running the following command:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始累积成本之前，我们应该通过运行以下命令终止我们的测试 AWS 实例：
- en: '[PRE20]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'And then confirm in the AWS console that the instance has terminated correctly:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 然后在 AWS 控制台确认实例已正确终止：
- en: '![The Amazon Web Services driver](img/B06455_03_21.jpg)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![亚马逊 Web 服务驱动程序](img/B06455_03_21.jpg)'
- en: If you don't do this, the EC2 instance will quite happily sit there costing,
    you $0.013 per hour until it is terminated.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 如果不这样做，EC2 实例将愉快地保持在那里，并且每小时将花费您 0.013 美元，直到终止。
- en: Note
  id: totrans-142
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Please note, this is not Docker for AWS, we will be covering this service in
    [Chapter 4](ch04.html "Chapter 4. Docker Swarm"), *Docker Swarm*.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这不是 Docker for AWS，我们将在 [第 4 章](ch04.html "Chapter 4. Docker Swarm") 中介绍该服务，*Docker
    Swarm*。
- en: The Microsoft Azure driver
  id: totrans-144
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Microsoft Azure 驱动程序
- en: As you may have noticed from the terminal and browser screenshots, so far, we
    have been using Docker for Mac; let's look at the Microsoft Azure driver using
    Docker for Windows.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您可能从终端和浏览器截图中注意到的，到目前为止，我们一直在使用 Docker for Mac；现在让我们看看使用 Docker for Windows
    的 Microsoft Azure 驱动程序。
- en: First of all, you will need a Microsoft Azure account; if you don't already
    have one, you can sign up at [https://azure.microsoft.com/](https://azure.microsoft.com/).
    Once you have your account, the only piece of information you need to get started
    is your subscription ID; you can find this in the billing section of the portal.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，您需要一个 Microsoft Azure 账户；如果还没有，请访问 [https://azure.microsoft.com/](https://azure.microsoft.com/)
    注册。一旦拥有账户，您需要开始的唯一信息是您的订阅 ID；您可以在门户的计费部分找到此信息。
- en: 'Once you have your subscription ID, you can authenticate Docker Machine with
    Azure, to do this enter the following command, making sure to replace the subscription
    ID with your own:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您有了订阅 ID，您可以使用 Azure 认证 Docker Machine，输入以下命令，确保用您自己的订阅 ID 替换：
- en: '[PRE21]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '![The Microsoft Azure driver](img/B06455_03_22.jpg)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![Microsoft Azure 驱动程序](img/B06455_03_22.jpg)'
- en: 'You will receive an activation code to authorise Docker Machine; go to [https://aka.ms/devicelogin/](https://aka.ms/devicelogin/)
    and enter the code you have been given:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 您将收到一个激活码来授权 Docker Machine；请访问 [https://aka.ms/devicelogin/](https://aka.ms/devicelogin/)
    并输入您收到的代码：
- en: '![The Microsoft Azure driver](img/B06455_03_23.jpg)'
  id: totrans-151
  prefs: []
  type: TYPE_IMG
  zh: '![Microsoft Azure 驱动程序](img/B06455_03_23.jpg)'
- en: 'Clicking **Continue** will take you a page which then shows you the permissions
    which Docker Machine is going to grant:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 点击 **Continue** 将带您到一个页面，显示 Docker Machine 将授予您的权限：
- en: '![The Microsoft Azure driver](img/B06455_03_24.jpg)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![Microsoft Azure 驱动程序](img/B06455_03_24.jpg)'
- en: 'Once you click **Accept,** you should see Docker Machine start bootstrapping
    the environment. The process will take several minutes; once it completes, you
    should see something like the following output:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您点击 **Accept**，您将看到 Docker Machine 开始引导环境。此过程将花费几分钟；完成后，您应该看到类似以下输出：
- en: '![The Microsoft Azure driver](img/B06455_03_25.jpg)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![Microsoft Azure 驱动程序](img/B06455_03_25.jpg)'
- en: 'As you can see, Docker Machine has done the following:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，Docker Machine 已执行以下操作：
- en: Created a resource group
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建了一个资源组
- en: Configured a network security group
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置了网络安全组
- en: Configured a network subnet
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置了一个网络子网
- en: Created a virtual network
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建了一个虚拟网络
- en: Assigned a public IP address
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分配了一个公共 IP 地址
- en: Created a network interface
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建了一个网络接口
- en: Created a storage account
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建了一个存储帐户
- en: Launched a virtual machine
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动了一个虚拟机
- en: 'If you go to the resource group within the Azure Portal you should see your
    virtual machine is launched and ready:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在 Azure 门户中查看资源组，您应该看到已启动和准备就绪的虚拟机：
- en: '![The Microsoft Azure driver](img/B06455_03_26.jpg)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![Microsoft Azure 驱动程序](img/B06455_03_26.jpg)'
- en: 'Like the Mac and Linux versions of Docker Machine we need to configure our
    local Docker client to communicate with the remote host, to do this we need to
    run the following command:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 与 Mac 和 Linux 版本的 Docker Machine 一样，我们需要配置本地 Docker 客户端以与远程主机通信，为此我们需要运行以下命令：
- en: '[PRE22]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'This is the equivalent of running the following on Mac or Linux:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 这相当于在 Mac 或 Linux 上运行以下命令：
- en: '[PRE23]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'You can check that Azure is now active by running:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过运行以下命令检查 Azure 是否处于活动状态：
- en: '[PRE24]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Now that we have our client talking to our Azure remote host, we can launch
    the **Hello World** container by running:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的客户端已连接到我们的 Azure 远程主机，我们可以通过运行以下命令启动**Hello World**容器：
- en: '[PRE25]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'As with the Mac and Linux version of Docker Machine, you can SSH into your
    Azure host by running:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 与 Docker Machine 的 Mac 和 Linux 版本一样，你可以通过运行以下命令 SSH 连接到你的 Azure 主机：
- en: '[PRE26]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'As you can see from the output below, we can see the **Hello World** container:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 从下面的输出中你可以看到，我们可以看到 **Hello World** 容器：
- en: '![The Microsoft Azure driver](img/B06455_03_28.jpg)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![The Microsoft Azure driver](img/B06455_03_28.jpg)'
- en: 'From here you can interact with the Azure host as you would do any other Docker
    host. Once you are ready to terminate your Azure host, all you need to do is run
    the following command:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 从这里你可以像与任何其他 Docker 主机交互一样与 Azure 主机交互。一旦你准备好终止 Azure 主机，只需运行以下命令：
- en: '[PRE27]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'It will take a short while to remove the host and all the resources associated
    with it, once complete, you should see something like:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 移除主机及其相关资源需要一段时间，完成后你应该会看到类似以下内容：
- en: '![The Microsoft Azure driver](img/B06455_03_29.jpg)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![The Microsoft Azure driver](img/B06455_03_29.jpg)'
- en: 'Checking the **Activity log** in the docker-machine **Resource group** using
    the Azure portal should show you the resources being removed:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Azure 门户中检查 **Activity log**，可以看到正在被移除的资源：
- en: '![The Microsoft Azure driver](img/B06455_03_30.jpg)'
  id: totrans-184
  prefs: []
  type: TYPE_IMG
  zh: '![The Microsoft Azure driver](img/B06455_03_30.jpg)'
- en: As highlighted by the PowerShell output, it is best to check that everything
    has been properly terminated, the easiest way to do this is to remove the resource
    group itself, to do this click on the three dots (**...**) on the right-hand side
    of the **docker-machi** **ne** resource.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 正如 PowerShell 输出中所强调的，最好检查所有内容是否已正确终止，最简单的方法是删除资源组本身，操作步骤是点击右侧 **...** 的三个点，来删除
    **docker-machi** **ne** 资源。
- en: After you have followed the on-screen prompts, which include typing the name
    of the resource you are choosing to remove, you should receive confirmation that
    the resource group has been removed.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 在你按照屏幕上的提示操作后，包括输入你选择删除的资源名称，你应该会收到资源组已被移除的确认信息。
- en: While we have used Windows to look at Azure, the process, other than switching
    the local client to use the remote host, is the same on Mac and Linux.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们使用 Windows 查看 Azure，其他操作与 Mac 和 Linux 上的过程相同，唯一不同的是将本地客户端切换为使用远程主机。
- en: Note
  id: totrans-188
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Please note, this is not Docker for Azure, we will be covering this service
    in [Chapter 4](ch04.html "Chapter 4. Docker Swarm"), *Docker Swarm*.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这不是 Azure 的 Docker，我们将在 [第4章](ch04.html "第4章. Docker Swarm") 中讨论该服务，*Docker
    Swarm*。
- en: References
  id: totrans-190
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考资料
- en: 'The examples we have used in this chapter have been launching Ubuntu instances.
    Docker Machine also supports:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中使用的示例是启动 Ubuntu 实例。Docker Machine 还支持：
- en: Debian (8.0+) - [https://www.debian.org/](https://www.debian.org/)
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Debian (8.0+) - [https://www.debian.org/](https://www.debian.org/)
- en: Red Hat Enterprise Linux (7.0+) - [https://www.redhat.com/](https://www.redhat.com/)
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 红帽企业版 Linux (7.0+) - [https://www.redhat.com/](https://www.redhat.com/)
- en: CentOS (7+) - [https://www.centos.org/](https://www.centos.org/)
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CentOS (7+) - [https://www.centos.org/](https://www.centos.org/)
- en: Fedora (21+) - [https://getfedora.org/](https://getfedora.org/)
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Fedora (21+) - [https://getfedora.org/](https://getfedora.org/)
- en: RancherOS (0.3) - [http://rancher.com/rancher-os/](http://rancher.com/rancher-os/)
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RancherOS (0.3) - [http://rancher.com/rancher-os/](http://rancher.com/rancher-os/)
- en: The other thing to mention about Docker Machine is that by default it operates
    an opt-in for crash reporting, considering the number of different configuration
    /environment combinations Docker Machine can be used with it is important that
    Docker gets notified of any problems to help them make a better product.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 需要提到的另一件事是，Docker Machine 默认启用了崩溃报告功能，考虑到 Docker Machine 可以与不同的配置/环境组合一起使用，通知
    Docker 任何问题是非常重要的，这有助于他们改进产品。
- en: 'If for any reason, you want to opt out, then running the following command
    will disable crash reporting:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 如果由于任何原因你想选择退出，那么运行以下命令将禁用崩溃报告：
- en: '[PRE28]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'For more information on Docker Machine you can see the official documentation:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 获取更多关于 Docker Machine 的信息，请参考官方文档：
- en: Docker Machine - [https://docs.docker.com/machine/](https://docs.docker.com/machine/)
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker Machine - [https://docs.docker.com/machine/](https://docs.docker.com/machine/)
- en: Docker Machine Drivers - [https://docs.docker.com/machine/drivers/](https://docs.docker.com/machine/drivers/)
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker Machine 驱动程序 - [https://docs.docker.com/machine/drivers/](https://docs.docker.com/machine/drivers/)
- en: Docker Machine Command Reference - [https://docs.docker.com/machine/reference/](https://docs.docker.com/machine/reference/)
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker Machine 命令参考 - [https://docs.docker.com/machine/reference/](https://docs.docker.com/machine/reference/)
- en: Summary
  id: totrans-204
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: As you can see from examples we have worked through; Docker Machine is a powerful
    tool as it allows users of all skill levels to be able to launch an instance in
    a cloud provider without having to roll their sleeves up and get stuck in configuring
    server instances.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 从我们已经讨论过的例子可以看出，Docker Machine 是一个强大的工具，它让所有技能水平的用户都能轻松在云提供商中启动实例，而无需卷起袖子亲自配置服务器实例。
- en: In our next chapter, we are going to look at launching multiple Docker hosts
    in the same cloud providers and then configuring a Docker Swarm cluster.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们接下来的章节中，我们将讨论如何在同一个云提供商中启动多个 Docker 主机，并配置 Docker Swarm 集群。
