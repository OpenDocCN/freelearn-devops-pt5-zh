["```\n$ docker image pull portainer/portainer\n$ docker image ls\n```", "```\n$ docker volume create portainer_data\n$ docker container run -d \\\n      -p 9000:9000 \\\n      -v /var/run/docker.sock:/var/run/docker.sock \\\n      portainer/portainer\n```", "```\n$ docker container run -d -p 9000:9000 -v \\\\.\\pipe\\docker_engine:\\\\.\\pipe\\docker_engine portainer/portainer\n```", "```\n{\n  'type': 'container',\n  'title': 'Nginx',\n  'description': 'High performance web server',\n  'categories': ['webserver'],\n  'platform': 'linux',\n  'logo': 'https://portainer.io/images/logos/nginx.png',\n  'image': 'nginx:latest',\n  'ports': [\n    '80/tcp',\n    '443/tcp'\n  ],\n  'volumes': ['/etc/nginx', '/usr/share/nginx/html']\n}\n```", "```\n{\n  'type': 'container',\n  'title': 'MariaDB',\n  'description': 'Performance beyond MySQL',\n  'categories': ['database'],\n  'platform': 'linux',\n  'logo': 'https://portainer.io/images/logos/mariadb.png',\n  'image': 'mariadb:latest',\n  'env': [\n    {\n      'name': 'MYSQL_ROOT_PASSWORD',\n      'label': 'Root password'\n    } ],\n  'ports': ['3306/tcp' ],\n  'volumes': ['/var/lib/mysql']\n}\n```", "```\n$ docker container run --name [Name of Container] -p 3306 -e MYSQL_ROOT_PASSWORD=[Root password] -d mariadb:latest\n```", "```\n$ docker container inspect cluster\n```", "```\n$ docker container stats cluster\n```", "```\n$ docker container logs cluster\n```", "```\n$ docker container logs --timestamps cluster\n```", "```\n$ docker container exec -it cluster /bin/sh\n```", "```\n$ docker image pull amazonlinux:latest\n```", "```\n$ docker image inspect russmckendrick/cluster\n```", "```\n$ docker events --since '2020-04-17T16:30:00' --until '2020-04-\n17T16:30:00'\n```", "```\n$ docker info\n```", "```\n$ docker volume prune\n```", "```\n$ multipass launch -n node1\n$ multipass launch -n node2\n$ multipass launch -n node3\n```", "```\n$ multipass exec node1 -- \\\n\t/bin/bash -c 'curl -s https://get.docker.com | sh - && sudo \nusermod -aG docker ubuntu'\n$ multipass exec node2 -- \\\n\t/bin/bash -c 'curl -s https://get.docker.com | sh - && sudo \nusermod -aG docker ubuntu'\n$ multipass exec node3 -- \\\n\t/bin/bash -c 'curl -s https://get.docker.com | sh - && sudo\nusermod -aG docker ubuntu'\n```", "```\n$ multipass exec node1 -- \\\n\t/bin/bash -c 'docker swarm init --advertise-addr $IP:2377 \n--listen-addr $IP:2377'\n$ SWARM_TOKEN=$(multipass exec node1 -- /bin/bash -c 'docker \nswarm join-token --quiet worker')\n$ multipass exec node2 -- \\\n\t/bin/bash -c 'docker swarm join --token $SWARM_TOKEN \n$IP:2377'\n$ multipass exec node3 -- \\\n\t/bin/bash -c 'docker swarm join --token $SWARM_TOKEN \n$IP:2377'\n```", "```\n$ multipass list \n```", "```\n$ multipass shell node1\n```", "```\n$ curl -L https://downloads.portainer.io/portainer-agent-stack.yml -o portainer-agent-stack.yml\n$ docker stack deploy --compose-file=portainer-agent-stack.yml portainer\n```", "```\nversion: '3'\nservices:\n  redis:\n    image: redis:alpine\n    volumes:\n      - redis_data:/data\n    restart: always\n  mobycounter:\n    depends_on:\n      - redis\n    image: russmckendrick/moby-counter\n    ports:\n      - '8080:80'\n    restart: always\nvolumes:\n  redis_data:\n```", "```\n$ multipass delete --purge node1\n$ multipass delete --purge node2\n$ multipass delete --purge node3\n```"]