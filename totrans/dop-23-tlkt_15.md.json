["```\ncd k8s-specs\n\ngit pull\n\ncd cluster  \n```", "```\ncat kops  \n```", "```\nexport AWS_ACCESS_KEY_ID=...\nexport AWS_SECRET_ACCESS_KEY=...\nexport AWS_DEFAULT_REGION=us-east-2\nexport ZONES=us-east-2a,us-east-2b,us-east-2c\nexport NAME=devops23.k8s.local\nexport KOPS_STATE_STORE=s3://devops23-1520933480  \n```", "```\nsource kops  \n```", "```\nexport BUCKET_NAME=devops23-$(date +%s)\n\naws s3api create-bucket \\ \n --bucket $BUCKET_NAME \\\n --create-bucket-configuration \\\n LocationConstraint=$AWS_DEFAULT_REGION\n\nexport KOPS_STATE_STORE=s3://$BUCKET_NAME  \n```", "```\nalias kops=\"docker run -it --rm \\\n -v $PWD/devops23.pub:/devops23.pub \\\n -v $PWD/config:/config \\\n -e KUBECONFIG=/config/kubecfg.yaml \\\n -e NAME=$NAME -e ZONES=$ZONES \\\n -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \\\n -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \\\n -e KOPS_STATE_STORE=$KOPS_STATE_STORE \\\n vfarcic/kops\"  \n```", "```\nkops create cluster \\\n --name $NAME \\\n --master-count 3 \\\n --master-size t2.small \\\n --node-count 2 \\\n --node-size t2.medium \\\n --zones $ZONES \\\n --master-zones $ZONES \\\n --ssh-public-key devops23.pub \\\n --networking kubenet \\\n  --yes  \n```", "```\nkops validate cluster  \n```", "```\nkubectl create \\\n -f https://raw.githubusercontent.com/kubernetes/kops/master/addons/ingress-nginx/v1.6.0.yaml\n\n```", "```\nCLUSTER_DNS=$(aws elb \\\n describe-load-balancers | jq -r \\\n \".LoadBalancerDescriptions[] \\\n | select(.DNSName \\\n | contains (\\\"api-devops23\\\") \\\n | not).DNSName\")\n\necho $CLUSTER_DNS  \n```", "```\ncd ..  \n```", "```\ncat pv/jenkins-no-pv.yml  \n```", "```\n...\napiVersion: apps/v1beta2\nkind: Deployment\nmetadata:\n name: Jenkins\n      namespace: Jenkins\n    spec:\n      selector:\n        matchLabels:\n          app: Jenkins\n      strategy:\n        type: Recreate\n      template:\n        metadata:\n          labels:\n            app: Jenkins\n        spec:\n          containers:\n          - name: Jenkins\n            image: vfarcic/Jenkins\n            env:\n            - name: JENKINS_OPTS\n              value: --prefix=/Jenkins\n            volumeMounts:\n            - name: jenkins-creds\n              mountPath: /etc/secrets\n            resources:\n              limits:\n                memory: 2Gi\n                cpu: 1\n              requests:\n                memory: 1Gi\n                cpu: 0.5\n          volumes:\n          - name: jenkins-creds\n            secret:\n              secretName: jenkins-creds\n```", "```\nkubectl create \\\n -f pv/jenkins-no-pv.yml \\\n --record --save-config  \n```", "```\nnamespace \"jenkins\" created\ningress \"jenkins\" created\nservice \"jenkins\" created\ndeployment \"jenkins\" created  \n```", "```\nkubectl --namespace jenkins \\\n get events\n```", "```\n...\n2018-03-14 22:36:26 +0100 CET   2018-03-14 22:35:54 +0100 CET   7         jenkins-8768d486-lmv6b.151be70fd682e40d   Pod                 Warning   FailedMount  kubelet, ip-172-20-99-208.us-east-2.compute.internal   MountVolume.SetUp \n failed for volume \"jenkins-creds\" : secrets \"jenkins-creds\" not found\n    ...\n```", "```\nkubectl --namespace jenkins \\\n create secret \\\n generic jenkins-creds \\\n --from-literal=jenkins-user=jdoe \\\n --from-literal=jenkins-pass=incognito  \n```", "```\nkubectl --namespace jenkins \\\n rollout status \\\n deployment jenkins  \n```", "```\nopen \"http://$CLUSTER_DNS/jenkins\"\n```", "```\nkubectl --namespace jenkins \\\n get pods \\\n --selector=app=jenkins \\\n -o json  \n```", "```\n{\n \"apiVersion\": \"v1\",\n \"items\": [\n {\n ...\n \"metadata\": {\n ...\n \"name\": \"jenkins-8768d486-lmv6b\",\n ...\n```", "```\nPOD_NAME=$(kubectl \\\n --namespace jenkins \\\n get pods \\\n --selector=app=jenkins \\\n -o jsonpath=\"{.items[*].metadata.name}\")\n\necho $POD_NAME  \n```", "```\njenkins-8768d486-lmv6b  \n```", "```\nkubectl --namespace jenkins \\\n exec -it $POD_NAME pkill java  \n```", "```\nopen \"http://$CLUSTER_DNS/jenkins\"  \n```", "```\naws ec2 describe-instances  \n```", "```\n{\n \"Reservations\": [\n {\n \"Instances\": [\n {\n ...\n          \"SecurityGroups\": [\n            {\n              \"GroupName\": \"nodes.devops23.k8s.local\",\n              \"GroupId\": \"sg-33fd8c58\"\n            }\n          ],\n          ...\n          \"Placement\": {\n            \"Tenancy\": \"default\",\n            \"GroupName\": \"\",\n            \"AvailabilityZone\": \"us-east-2a\"\n          },\n          ...\n```", "```\naws ec2 describe-instances \\\n | jq -r \\\n \".Reservations[].Instances[] \\\n | select(.SecurityGroups[]\\\n .GroupName==\\\"nodes.$NAME\\\")\\\n .Placement.AvailabilityZone\"  \n```", "```\nus-east-2a\nus-east-2c  \n```", "```\naws ec2 describe-instances \\\n | jq -r \\\n \".Reservations[].Instances[] \\\n | select(.SecurityGroups[]\\\n .GroupName==\"\\nodes.$NAME\\\")\\\n .Placement.AvailabilityZone\" \\\n | tee zones\n\nAZ_1=$(cat zones | head -n 1)\n\nAZ_2=$(cat zones | tail -n 1)  \n```", "```\nVOLUME_ID_1=$(aws ec2 create-volume \\\n --availability-zone $AZ_1 \\\n --size 10 \\\n --volume-type gp2 \\\n --tag-specifications \"ResourceType=volume,Tags=[{Key=KubernetesCluster,Value=$NAME}]\" \\\n | jq -r '.VolumeId')\n\nVOLUME_ID_2=$(aws ec2 create-volume \\\n --availability-zone $AZ_1 \\\n --size 10 \\\n --volume-type gp2 \\\n --tag-specifications \"ResourceType=volume,Tags=[{Key=KubernetesCluster,Value=$NAME}]\" \\\n    | jq -r '.VolumeId')\n\nVOLUME_ID_3=$(aws ec2 create-volume \\\n    --availability-zone $AZ_2 \\\n    --size 10 \\\n    --volume-type gp2 \\\n    --tag-specifications \"ResourceType=volume,Tags=[{Key=KubernetesCluster,Value=$NAME}]\" \\\n | jq -r '.VolumeId')\n```", "```\necho $VOLUME_ID_1  \n```", "```\nvol-092b8980b1964574a  \n```", "```\naws ec2 describe-volumes \\\n --volume-ids $VOLUME_ID_1  \n```", "```\n{\n \"Volumes\": [\n {\n \"AvailabilityZone\": \"us-east-2c\",\n \"Attachments\": [],\n \"Tags\": [\n {\n \"Value\": \"devops23.k8s.local\",\n \"Key\": \"KubernetesCluster\"\n }\n ],\n \"Encrypted\": false,\n \"VolumeType\": \"gp2\",\n \"VolumeId\": \"vol-092b8980b1964574a\",\n \"State\": \"available\",\n \"Iops\": 100,\n \"SnapshotId\": \"\",\n \"CreateTime\": \"2018-03-14T21:47:13.242Z\",\n \"Size\": 10\n }\n ]\n}  \n```", "```\ncat pv/pv.yml  \n```", "```\nkind: PersistentVolume\napiVersion: v1\nmetadata:\n name: manual-ebs-01\n labels:\n type: ebs\nspec:\n storageClassName: manual-ebs\n capacity:\n storage: 5Gi\n accessModes:\n - ReadWriteOnce\n awsElasticBlockStore:\n volumeID: REPLACE_ME_1\n fsType: ext4\n...  \n```", "```\ncat pv/pv.yml \\\n | sed -e \\\n \"s@REPLACE_ME_1@$VOLUME_ID_1@g\" \\\n | sed -e \\\n \"s@REPLACE_ME_2@$VOLUME_ID_2@g\" \\\n | sed -e \\\n \"s@REPLACE_ME_3@$VOLUME_ID_3@g\" \\\n | kubectl create -f - \\\n --save-config --record  \n```", "```\nkubectl get pv  \n```", "```\nNAME          CAPACITY ACCESS MODES RECLAIM POLICY STATUS    CLAIM STORAGECLASS REASON AGE\nmanual-ebs-01 5Gi      RWO          Retain         Available       manual-ebs          11s\nmanual-ebs-02 5Gi      RWO          Retain         Available       manual-ebs          11s\nmanual-ebs-03 5Gi      RWO          Retain         Available       manual-ebs          11s\n```", "```\ncat pv/pvc.yml \n```", "```\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n name: jenkins\n namespace: jenkins\nspec:\n storageClassName: manual-ebs\n accessModes:\n - ReadWriteOnce\n resources:\n requests:\n storage: 1Gi  \n```", "```\nkubectl create -f pv/pvc.yml \\\n --save-config --record  \n```", "```\nkubectl --namespace jenkins \\\n get pvc  \n```", "```\nNAME    STATUS VOLUME        CAPACITY ACCESS MODES STORAGECLASS AGE\njenkins Bound  manual-ebs-02 5Gi      RWO          manual-ebs   17s  \n```", "```\nkubectl get pv  \n```", "```\nNAME          CAPACITY ACCESS MODES RECLAIM POLICY STATUS    CLAIM           STORAGECLASS REASON AGE\nmanual-ebs-01 5Gi      RWO          Retain         Available                 manual-ebs          7m\nmanual-ebs-02 5Gi      RWO          Retain         Bound     jenkins/jenkins manual-ebs          7m\nmanual-ebs-03 5Gi      RWO          Retain         Available                 manual-ebs          7m\n\n```", "```\ncat pv/jenkins-pv.yml  \n```", "```\n...\napiVersion: apps/v1beta2\nkind: Deployment\nmetadata:\n name: jenkins\n namespace: jenkins\nspec:\n ...\n template:\n ...\n spec:\n containers:\n - name: jenkins\n ...\n volumeMounts:\n - name: jenkins-home\n mountPath: /var/jenkins_home\n ...\n volumes:\n - name: jenkins-home\n persistentVolumeClaim:\n claimName: jenkins\n ...  \n```", "```\nkubectl apply \\\n -f pv/jenkins-pv.yml \\\n --record  \n```", "```\nnamespace \"jenkins\" configured\ningress \"jenkins\" configured\nservice \"jenkins\" configured\ndeployment \"jenkins\" configured  \n```", "```\nkubectl --namespace jenkins \\\n rollout status \\\n deployment jenkins  \n```", "```\nopen \"http://$CLUSTER_DNS/jenkins\"  \n```", "```\nPOD_NAME=$(kubectl \\\n --namespace jenkins \\\n get pod \\\n --selector=app=jenkins \\\n -o jsonpath=\"{.items[*].metadata.name}\")\n```", "```\nkubectl --namespace jenkins \\\n exec -it $POD_NAME pkill java  \n```", "```\nopen \"http://$CLUSTER_DNS/jenkins\"  \n```", "```\nkubectl --namespace jenkins delete \\\n deploy jenkins  \n```", "```\nkubectl --namespace jenkins get pvc\n\nkubectl get pv  \n```", "```\nNAME    STATUS VOLUME        CAPACITY ACCESS MODES STORAGECLASS   AGE\njenkins Bound  manual-ebs-02 5Gi      RWO          manual-ebs     57s\n\nNAME          CAPACITY ACCESS MODES RECLAIM POLICY STATUS    CLAIM           STORAGECLASS REASON AGE\nmanual-ebs-01 5Gi      RWO          Retain         Available jenkins/jenkins manual-ebs          10m\nmanual-ebs-02 5Gi      RWO          Retain         Bound     jenkins/jenkins manual-ebs          10m\nmanual-ebs-03 5Gi      RWO          Retain         Available jenkins/jenkins manual-ebs          10m\n```", "```\nkubectl --namespace jenkins \\\n delete pvc jenkins  \n```", "```\nkubectl get pv  \n```", "```\nNAME          CAPACITY ACCESS MODES RECLAIM POLICY STATUS   CLAIM          STORAGECLASS REASON AGE\nmanual-ebs-01 5Gi      RWO          Retain         Available jenkins/jenkins manual-ebs          10m\nmanual-ebs-02 5Gi      RWO          Retain         Released  jenkins/jenkins manual-ebs          10m\nmanual-ebs-03 5Gi      RWO          Retain         Available jenkins/jenkins manual-ebs          10m\n```", "```\nkubectl delete -f pv/pv.yml \n```", "```\npersistentvolume \"manual-ebs-01\" deleted\npersistentvolume \"manual-ebs-02\" deleted\npersistentvolume \"manual-ebs-03\" deleted \n```", "```\naws ec2 delete-volume \\\n --volume-id $VOLUME_ID_1\n\naws ec2 delete-volume \\\n --volume-id $VOLUME_ID_2\n\naws ec2 delete-volume \\\n --volume-id $VOLUME_ID_3\n```", "```\nkubectl get sc  \n```", "```\nNAME          PROVISIONER           AGE\ndefault       kubernetes.io/aws-ebs 44m\ngp2 (default) kubernetes.io/aws-ebs 44m  \n```", "```\ncat pv/jenkins-dynamic.yml  \n```", "```\n...\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n name: jenkins\n namespace: jenkins\nspec:\n storageClassName: gp2\n accessModes:\n - ReadWriteOnce\n resources:\n requests:\n storage: 1Gi\n...  \n```", "```\nkubectl apply \\\n -f pv/jenkins-dynamic.yml \\\n --record\n```", "```\nkubectl --namespace jenkins \\\n rollout status \\\n deployment jenkins\n```", "```\nkubectl --namespace jenkins \\\n get events\n```", "```\n...\n20s 20s 1 jenkins.... Deployment            Normal ScalingReplicaSet     deployment-controller       Scaled up replica set jenkins-... to 1\n20s 20s 1 jenkins.... PersistentVolumeClaim Normal ProvisioningSucceeded persistentvolume-controller Successfully provisioned volume pvc-... using kubernetes.io/aws-ebs\n```", "```\nkubectl --namespace jenkins get pvc  \n```", "```\nNAME    STATUS VOLUME  CAPACITY ACCESS MODES STORAGECLASS AGE\njenkins Bound  pvc-... 1Gi      RWO          gp2          1m\n```", "```\nkubectl get pv  \n```", "```\nNAME    CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM                STORAGECLASS REASON AGE\npvc-... 1Gi      RWO          Delete         Bound  jenkins/jenkins gp2                      4m\n\n```", "```\naws ec2 describe-volumes \\\n --filters 'Name=tag-key,Values=\"kubernetes.io/created-for/pvc\n /name\"'\n\n```", "```\n{\n \"Volumes\": [\n {\n \"AvailabilityZone\": \"us-east-2c\",\n ...\n \"VolumeType\": \"gp2\",\n \"VolumeId\": \"vol-0a4d5cfa4699e5c6f\",\n \"State\": \"in-use\",\n ...\n }\n ]\n}  \n```", "```\nkubectl --namespace jenkins \\\n delete deploy,pvc jenkins  \n```", "```\ndeployment \"jenkins\" deleted\npersistentvolumeclaim \"jenkins\" deleted\n```", "```\nkubectl get pv  \n```", "```\naws ec2 describe-volumes \\\n --filters 'Name=tag-key,Values=\"kubernetes.io/created-for/pvc/name\"'\n\n```", "```\n{\n \"Volumes\": []\n}  \n```", "```\nkubectl get sc\n```", "```\nNAME          PROVISIONER           AGE\ndefault       kubernetes.io/aws-ebs 56m\ngp2 (default) kubernetes.io/aws-ebs 56m  \n```", "```\nkubectl describe sc gp2 \n```", "```\nName:            gp2\nIsDefaultClass:  Yes\nAnnotations:     kubectl.kubernetes.io/last-applied-configuration={\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"storageclass.beta.kubernetes.io/is-default-class\":\"true\"},\"labels\":{\"k8s-addon\":\"storage-aws.addons.k8s.io\"},\"name\":\"gp2\",\"namespace\":\"\"},\"parameters\":{\"type\":\"gp2\"},\"provisioner\":\"kubernetes.io/aws-ebs\"}\n,storageclass.beta.kubernetes.io/is-default-class=true\nProvisioner:    kubernetes.io/aws-ebs\nParameters:     type=gp2\nReclaimPolicy:  Delete\nEvents:         <none>  \n```", "```\ncat pv/jenkins-default.yml\n```", "```\n...\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n name: jenkins\n namespace: jenkins\nspec:\n accessModes:\n - ReadWriteOnce\n resources:\n requests:\n storage: 1Gi\n...  \n```", "```\ndiff pv/jenkins-dynamic.yml \\\n pv/jenkins-default.yml\n```", "```\n48d47\n<   storageClassName: gp2  \n```", "```\nkubectl apply \\\n -f pv/jenkins-default.yml \\\n --record  \n```", "```\nnamespace \"jenkins\" configured\ningress \"jenkins\" configured\nservice \"jenkins\" configured\npersistentvolumeclaim \"jenkins\" created\ndeployment \"jenkins\" created  \n```", "```\nkubectl get pv\nNAME    CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM                STORAGECLASS REASON AGE\npvc-... 1Gi      RWO          Delete         Bound  jenkins/jenkins gp2                      16s\n\n```", "```\nkubectl --namespace jenkins \\\n delete deploy,pvc jenkins\n```", "```\ndeployment \"jenkins\" deleted\npersistentvolumeclaim \"jenkins\" deleted  \n```", "```\ncat pv/sc.yml  \n```", "```\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n name: fast\n labels:\n type: ebs\nprovisioner: kubernetes.io/aws-ebs\nparameters:\n type: io1\nreclaimPolicy: Delete  \n```", "```\nkubectl create -f pv/sc.yml\n```", "```\nkubectl get sc\n```", "```\nNAME          PROVISIONER           AGE default       kubernetes.io/aws-ebs 58m fast          kubernetes.io/aws-ebs 19s gp2 (default) kubernetes.io/aws-ebs 58m\n```", "```\ncat pv/jenkins-sc.yml\n```", "```\n... kind: PersistentVolumeClaim apiVersion: v1 metadata:\n name: jenkins namespace: jenkins spec:\n storageClassName: fast accessModes: - ReadWriteOnce resources: requests: storage: 4Gi ...\n```", "```\nkubectl apply \\\n -f pv/jenkins-sc.yml \\ --record\n```", "```\nnamespace \"jenkins\" configured ingress \"jenkins\" configured service \"jenkins\" configured persistentvolumeclaim \"jenkins\" created deployment \"jenkins\" created\n```", "```\naws ec2 describe-volumes \\ \n    --filters 'Name=tag-key,Values=\"kubernetes.io/created-for/pvc/name\"' \n```", "```\n{\n \"Volumes\": [ { ... \"VolumeType\": \"io1\",\n \"VolumeId\": \"vol-0e0af4f2a7a54354d\", \"State\": \"in-use\", ...    }\n ]\n}\n```", "```\nkubectl delete ns jenkins\n```", "```\nkops delete cluster \\ --name $NAME \\ --yes\n```", "```\naws s3api delete-bucket \\ --bucket $BUCKET_NAME\n```"]