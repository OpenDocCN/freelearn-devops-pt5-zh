["```\n$ cat Vagrantfile\nVagrant.configure(2) do |config| \n  config.vm.define \"openshift\" do |conf| \n    conf.vm.box = \"centos/7\" \n    conf.vm.network \"private_network\", ip: \"172.24.0.11\" \n    conf.vm.hostname = 'openshift.example.com' \n    conf.vm.network \"forwarded_port\", guest: 80, host: 980\n    conf.vm.network \"forwarded_port\", guest: 443, host: 9443\n    conf.vm.network \"forwarded_port\", guest: 8080, host: 8080\n    conf.vm.network \"forwarded_port\", guest: 8443, host: 8443\n    conf.vm.provider \"virtualbox\" do |v| \n      v.memory = 4096 \n      v.cpus = 2 \n    end\n    conf.vm.provision \"shell\", inline: $lab_main \n  end \nend\n$lab_main = <<SCRIPT\ncat <<EOF >> /etc/hosts\n172.24.0.11 openshift.example.com openshift\n172.24.0.12 storage.example.com storage nfs\nEOF\nsystemctl disable firewalld\nsystemctl stop firewalld\nyum update -y\nyum install -y epel-release\nyum install -y docker\ncat << EOF >/etc/docker/daemon.json\n{\n   \"insecure-registries\": [\n     \"172.30.0.0/16\"\n   ]\n}\nEOF\nsystemctl restart docker\nsystemctl enable docker\nyum -y install centos-release-openshift-origin39\nyum -y install origin-clients\noc cluster up\nSCRIPT\n```", "```\n$ vagrant up\n```", "```\n$ vagrant ssh\n```", "```\n$ oc login -u developer\nServer [https://localhost:8443]:\nThe server uses a certificate signed by an unknown authority.\nYou can bypass the certificate check, but any data you send to the server could be intercepted by others.\nUse insecure connections? (y/n): y\n\nAuthentication required for https://localhost:8443 (openshift)\nUsername: developer\nPassword: <ANY PASSWORD>\nLogin successful.\n\nYou have one project on this server: \"myproject\"\n\nUsing project \"myproject\".\nWelcome! See 'oc help' to get started.\n```", "```\n$ sudo docker search httpd\nINDEX NAME DESCRIPTION STARS OFFICIAL AUTOMATED\ndocker.io docker.io/httpd The Apache HTTP Server Project 1719 [OK]\n<OMITTED>\n```", "```\n$ oc get is -n openshift | egrep \"^NAME | ^httpd\"\nNAME DOCKER REPO TAGS UPDATED\nhttpd 172.30.1.1:5000/openshift/httpd latest,2.4 3 hours ago\n\n$ oc describe is httpd -n openshift | grep \"tagged from\"\n  tagged from centos/httpd-24-centos7:latest\n```", "```\n$ oc new-project simpleappication\nNow using project \"simpleappication\" on server \"https://localhost:8443\".\n<OMITTED>\n```", "```\n$ cat <<EOF > pod_httpd.yml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: httpd\n  labels:\n    name: httpd\nspec:\n  containers:\n    - name: httpd\n      image: centos/httpd-24-centos7\n      ports:\n        - name: web\n          containerPort: 8080\nEOF\n```", "```\n$ oc create -f pod_httpd.yml\npod \"httpd\" created\n```", "```\n$ oc get pod\nNAME READY STATUS RESTARTS AGE\nhttpd 1/1 Running 0 2m\n```", "```\n$ oc describe pod httpd | grep IP:\nIP: 172.17.0.2\n```", "```\n$ curl -s http://172.17.0.2:8080 | head -n 4\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">\n<html  xml:lang=\"en\">\n <head>\n```", "```\n$ oc get pod\nNAME READY STATUS RESTARTS AGE\nhttpd 1/1 Running 0 13m\n\n$ oc expose pod httpd --name httpd\nservice \"httpd\" exposed\n\n$ oc get svc\nNAME CLUSTER-IP EXTERNAL-IP PORT(S) AGE\nhttpd 172.30.128.131 <none> 8080/TCP 3s\n```", "```\n$ curl -s http://172.30.128.131:8080 | head -n4\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">\n\n<html  xml:lang=\"en\">\n  <head>\n```", "```\n$ oc delete svc/httpd\nservice \"httpd\" deleted\n```", "```\n$ cat <<EOF > svc-httpd.yml\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    name: httpd\n  name: httpd\nspec:\n  ports:\n  - port: 8080\n    protocol: TCP\n    targetPort: 8080\n  selector:\n    name: httpd\nEOF\n```", "```\n$ oc create -f svc-httpd.yml\nservice \"httpd\" created\n\n$ oc get svc\nNAME CLUSTER-IP EXTERNAL-IP PORT(S) AGE\nhttpd 172.30.112.133 <none> 8080/TCP 2s\n```", "```\n$ curl -s http://172.30.112.133:8080 | head -n 4\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">\n\n<html  xml:lang=\"en\">\n  <head>\n```", "```\n$ oc expose svc httpd\nroute \"httpd\" exposed\n$ oc get route\nNAME HOST/PORT PATH SERVICES PORT TERMINATION WILDCARD\nhttpd httpd-simpleappication.127.0.0.1.nip.io httpd 8080 None\n$ curl -s http://httpd-simpleappication.127.0.0.1.nip.io | head -n 4\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">\n```", "```\n<html  xml:lang=\"en\">\n  <head> $ oc delete route httpd route \"httpd\" deleted\n```", "```\n$ oc expose svc httpd --name httpd1 --hostname httpd.example.com\nroute \"httpd1\" exposed\n$ oc get route\nNAME HOST/PORT PATH SERVICES PORT TERMINATION WILDCARD\nhttpd httpd-simpleappication.127.0.0.1.nip.io httpd 8080 None\nhttpd1 httpd.example.com httpd 8080 None\n $ sudo bash -c  'echo \"127.0.0.1 httpd.example.com\" >>/etc/hosts'\n $ curl -s http://httpd.example.com | head -n 4\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">\n\n<html  xml:lang=\"en\">\n  <head>\n```", "```\n$ cat <<EOF > route-httpd2.yml\napiVersion: v1\nkind: Route\nmetadata:\n labels:\n name: httpd2\n name: httpd2\nspec:\n host: myhttpd.example.com\n port:\n targetPort: 8080\n to:\n kind: Service\n name: httpd\n weight: 100\nEOF\n```", "```\n$ oc create -f route-httpd2.yml route \"httpd2\" created $ oc get route\nNAME HOST/PORT PATH SERVICES PORT TERMINATION WILDCARD\nhttpd httpd-simpleappication.127.0.0.1.nip.io httpd 8080 None\nhttpd1 httpd.example.com httpd 8080 None\nhttpd2 myhttpd.example.com httpd 8080 None\n```", "```\n$ oc delete all --all\nroute \"httpd\" deleted\nroute \"httpd1\" deleted\nroute \"httpd2\" deleted\npod \"httpd\" deleted\nservice \"httpd\" deleted\n```", "```\n$ oc new-app httpd\n--> Found image cc641a9 (5 days old) in image stream \"openshift/httpd\" under tag \"2.4\" for \"httpd\"\n\n    Apache httpd 2.4\n    ----------------\n    Apache httpd 2.4 available as container, is a powerful, efficient, and extensible web server. Apache supports a variety of features, many implemented as compiled modules which extend the core functionality. These can range from server-side programming language support to authentication schemes. Virtual hosting allows one Apache installation to serve many different Web sites.\n\n    Tags: builder, httpd, httpd24\n\n    * This image will be deployed in deployment config \"httpd\"\n    * Ports 8080/tcp, 8443/tcp will be load balanced by service \"httpd\"\n      * Other containers can access this service through the hostname \"httpd\"\n\n--> Creating resources ...\n    deploymentconfig \"httpd\" created\n    service \"httpd\" created\n--> Success\n    Application is not exposed. You can expose services to the outside world by executing one or more of the commands below:\n     'oc expose svc/httpd'\n    Run 'oc status' to view your app.\n```", "```\n$ oc get all\nNAME REVISION DESIRED CURRENT TRIGGERED BY\ndeploymentconfigs/httpd 1 1 1 config,image(httpd:2.4)\n\nNAME READY STATUS RESTARTS AGE\npo/httpd-1-n7st4 1/1 Running 0 31s\n\nNAME DESIRED CURRENT READY AGE\nrc/httpd-1 1 1 1 32s\n\nNAME CLUSTER-IP EXTERNAL-IP PORT(S) AGE\nsvc/httpd 172.30.222.179 <none> 8080/TCP,8443/TCP 33s\n```", "```\n$ oc describe pod httpd-1-n7st4 | grep Image:\n    Image: centos/httpd-24-centos7@sha256:6da9085c5e7963efaae3929895b9730d7e76e937a7a0109a23015622f3e7156b\n```", "```\n$ oc expose svc httpd\nroute \"httpd\" exposed\n\n$ curl -s http://httpd-simpleappication.127.0.0.1.nip.io | head -n 4\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">\n\n<html  xml:lang=\"en\">\n  <head>\n```", "```\n$ oc new-app --help\nCreate a new application by specifying source code, templates, and/or images\n\n...\n<OMITTED>\n...\n\nIf you provide source code, a new build will be automatically triggered. You can use 'oc status' to\ncheck the progress.\n\nUsage:\n  oc new-app (IMAGE | IMAGESTREAM | TEMPLATE | PATH | URL ...) [options]\n\nExamples:\n  # List all local templates and image streams that can be used to create an app\n  oc new-app --list\n\n  # Create an application based on the source code in the current git repository (with a public\nremote)\n  # and a Docker image\n  oc new-app . --docker-image=repo/langimage\n...\n<OMITTED>\n...\n```", "```\n$ oc delete all --all ...\n<OUTPUT OMITTED>\n...\n```", "```\n$ oc new-app -e MYSQL_USER=openshift -e MYSQL_PASSWORD=openshift \\\n-e MYSQL_DATABASE=openshift mariadb \n--> Found image 1b0e3a6 (5 days old) in image stream \"openshift/mariadb\" under tag \"10.2\" for \"mariadb\"\n\n...\n<OUTPUT OMITTED>\n...\n\n    Run 'oc status' to view your app.\n```", "```\n$ oc get all\nNAME REVISION DESIRED CURRENT TRIGGERED BY\ndeploymentconfigs/mariadb 1 1 1 config,image(mariadb:10.1)\n\nNAME READY STATUS RESTARTS AGE\npo/mariadb-1-54h6x 1/1 Running 0 2m\n\nNAME DESIRED CURRENT READY AGE\nrc/mariadb-1 1 1 1 2m\n\nNAME CLUSTER-IP EXTERNAL-IP PORT(S) AGE\nsvc/mariadb 172.30.233.119 <none> 3306/TCP 2m\n```", "```\n$ oc exec -it mariadb-1-54h6x /bin/bash\nbash-4.2$\n```", "```\n$ mysql -uopenshift -popenshift -h127.0.0.1 openshift\n...\n<OUTPUT OMITTED>\n...\n\nMariaDB [openshift]> show databases;\n+--------------------+\n| Database |\n+--------------------+\n| information_schema |\n| openshift |\n| test |\n+--------------------+\n3 rows in set (0.00 sec)\n```", "```\nMariaDB [openshift]> exit\nBye\nbash-4.2$ exit\nexit\n[vagrant@openshift ~]\n```", "```\n$ oc delete all --all\ndeploymentconfig \"mariadb\" deleted\nimagestream \"mariadb\" deleted\npod \"mariadb-1-9qcsp\" deleted\nservice \"mariadb\" deleted\n\n$ oc delete project simpleappication\nproject \"simpleappication\" deleted\n\n$ oc project myproject\nNow using project \"myproject\" on server \"https://localhost:8443\".\n```"]