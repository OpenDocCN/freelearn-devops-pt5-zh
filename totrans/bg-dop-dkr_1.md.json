["```\ndocker search <term> (for example, docker search ubuntu)\n```", "```\ndocker search <term>\n\n```", "```\ndocker pull\n\n```", "```\n    docker pull\n\n    ```", "```\ndocker run <image>\n\n```", "```\ndocker ps\n```", "```\nprint(\"Hello Docker - PY\")\n```", "```\nFROM python\nADD . .\nRUN ls\nCMD python run.py\n```", "```\nconsole.log(\"Hello Docker - JS\")\n```", "```\nFROM node\nADD . .\nRUN ls\nCMD node run.js\n\n```", "```\n    FROM ubuntu:xenial \n    RUN apt-get install -y apt-transport-https curl software-properties-common python-software-properties\n    RUN curl -fsSL https://apt.dockerproject.org/gpg | apt-key add \n    RUN echo 'deb https://apt.dockerproject.org/repo ubuntu-xenial main' > /etc/apt/sources.list.d/docker.list\n    RUN apt-get update\n    RUN apt-get install -y python3-pip\n    RUN apt-get install -y build-essential libssl-dev libffi-dev python-dev\n\n    ```", "```\ndocker build -t <image-name> <relative location of the Dockerfile>\n```", "```\n>$ docker build -t python-docker .\n\n```", "```\n>$ docker build -t js-docker .\n\n```", "```\ndocker rmi $(docker images | grep \"^<none>\" | awk \"{print $3}\")\n```", "```\ndocker build -t python-docker:test .  and docker build -t js-docker:test .\n```", "```\npython-docker:test and docker run js-docker:test\n```", "```\ndocker build -t <image-name>:<tag> <relative location of the Dockerfile>\n```"]