- en: Chapter 3. Bringing DevOps to Network Operations
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第三章：将 DevOps 引入网络运维
- en: This chapter will switch the focus from technology to people and processes.
    The DevOps initiative was initially about breaking down silos between development
    and operations teams and changing companys' operational models. It will highlight
    methods to unblock IT staff and allow them to work in a more productive fashion,
    but these mindsets have since been extended to quality assurance testing, security,
    and now network operations. This chapter will primarily focus on the evolving
    role of the network engineer, which is changing like the operations engineer before
    them, and the need for network engineers to learn new skills that will allow network
    engineers to remain as valuable as they are today as the industry moves towards
    a completely programmatically controlled operational model.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将重点转向人员和流程，而不是技术。DevOps 的初衷是打破开发与运维团队之间的壁垒，并改变公司运营模式。它将重点介绍解锁 IT 员工、帮助他们以更高效的方式工作的方法，但这些思维方式如今已被扩展到质量保证测试、安全性，甚至网络运维。本章将主要关注网络工程师的角色演变，这一角色与之前的运维工程师一样正在发生变化，网络工程师需要学习新技能，以便在行业朝着完全程序化控制的运营模型发展时，依然能保持现有的价值。
- en: This chapter will look at two differing roles, that of the CTO / senior manager
    and the engineer, discussing at length some of the initiatives that can be utilized
    to facilitate the desired cultural changes that are required to create a successful
    DevOps transformation for a whole organization or even just allow a single department
    to improve their internal processes by automating everything they do.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将探讨两种不同的角色：CTO / 高级经理与工程师，详细讨论可以用来促进所需文化变革的一些举措，这些变革对于实现整个组织的 DevOps 转型至关重要，或者至少帮助某个单独的部门通过自动化所有工作来改善其内部流程。
- en: 'In this chapter, the following topics will be covered:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Initiating a change in behavior
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动行为变革
- en: Top-down DevOps initiatives for networking teams
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自上而下的 DevOps 倡议针对网络团队
- en: Bottom-up DevOps initiatives for networking teams
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 针对网络团队的自下而上的 DevOps 倡议
- en: Initiating a change in behavior
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启动行为变革
- en: 'The networking OSI model contains seven layers, but it is widely suggested
    that the OSI model has an additional eighth layer named the user layer, which
    governs how end users integrate and interact with the network. People are undoubtedly
    a harder beast to master and manage than technology, so there is *no one size
    fits all* solution to the vast amount of people issues that exist. The seven layers
    of OSI are shown in the following image:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 网络的 OSI 模型包含七个层级，但广泛建议在 OSI 模型中增加一个名为“用户层”的第八层，负责管理终端用户如何与网络进行集成和互动。显然，人与技术相比，更难以掌握和管理，因此不存在*一刀切*的解决方案来应对大量的人员问题。OSI
    的七层结构如下图所示：
- en: '![Initiating a change in behavior](img/B05559_03_01.jpg)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![启动行为变革](img/B05559_03_01.jpg)'
- en: Initiating cultural change and changes in behavior is the most difficult task
    an organization will face, and it won’t occur overnight. To change behavior there
    must first be obvious business benefits. It is important to first outline the
    benefits that these cultural changes will bring to an organization, which will
    enable managers or change agents to make business justifications to implement
    the required changes.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 启动文化变革和行为变革是组织将面临的最困难任务，而且这不是一蹴而就的。要改变行为，首先必须有明显的商业利益。重要的是要先概述这些文化变革将为组织带来的好处，这将使经理或变革推动者能够为实施所需的变革提供商业正当性。
- en: 'Cultural change and dealing with people and processes is notoriously hard,
    so divorcing the tools and dealing with people and processes is paramount to the
    success of any DevOps initiative or project. Cultural change needs to be carefully
    planned and become a company initiative. In a recent study by Gartner, it was
    shown that selecting the wrong tooling was not the main reason that cloud projects
    were a failure, instead the top reason was failure to change the operational model:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 文化变革以及应对人员和流程的挑战是众所周知的困难，因此，将工具与人员和流程分开，专注于人员和流程的管理是任何 DevOps 项目或倡议成功的关键。文化变革需要经过精心规划，并成为公司的一项倡议。在最近一项由
    Gartner 进行的研究中，数据显示，选择错误的工具并不是云项目失败的主要原因，失败的主要原因是未能改变操作模型：
- en: '![Initiating a change in behavior](img/B05559_03_04.jpg)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![启动行为变革](img/B05559_03_04.jpg)'
- en: Reasons to implement DevOps
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实施 DevOps 的原因
- en: When implementing DevOps, some myths are often perpetuated, such as DevOps only
    works for start-ups, it won’t bring any value to a particular team, or that it
    is simply a buzz word and a fad.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: 'The quantifiable benefits of DevOps initiatives are undeniable when done correctly.
    Some of these benefits include improvements to the following:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: The velocity of change
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mean time to resolve
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved uptime
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Increased number of deployments
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cross-skilling between teams
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The removal of the bus factor of one
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Any team in the IT industry would benefit from these improvements, so really
    teams can’t afford to not adopt DevOps, as it will undoubtedly improve their business
    functions.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: By implementing a DevOps initiative, it promotes repeatability, measurement,
    and automation. Implementing automation naturally improves the velocity of change,
    increases the number of deployments a team can do in any given day and improves
    time to market. Automation of the deployment process allows teams to push fixes
    through to production quickly as well as allowing an organization to push new
    products and features to market.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: A byproduct of automation is that the mean time to resolve will also become
    quicker for infrastructure issues. If infrastructure or network changes are automated,
    they can be applied much more efficiently than if they were carried out manually.
    Manual changes depend on the velocity of the engineer implementing the change
    rather than an automated script that can be measured more accurately.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: Implementing DevOps also means measuring and monitoring efficiently too, so
    having effective monitoring is crucial on all parts of infrastructure and networking,
    as it means the pace in which root cause analysis can be carried out improves.
    Having effective monitoring helps to facilitate the process of mean time to resolve,
    so when a production issue occurs, the source of the issue can be found quicker
    than numerous engineers logging onto consoles and servers trying to debug issues.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: Instead a well-implemented monitoring system can provide a quick notification
    to localize the source of the issue, silencing any resultant alarms that result
    from the initial root cause, allowing the issue to be highlighted and fixed efficiently.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: The monitoring then hands over to the repeatable automation, which can then
    push out the localized fix to production. This process provides a highly accurate
    feedback loop, where processes will improve daily. If alerts are missed, they
    will ideally be built into the monitoring system over time as part of the incident
    post-mortem.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: Effective monitoring and automation results in quicker mean time to resolve,
    which leads to happier customers, and results in improved uptime of products.
    Utilizing automation and effective monitoring also means that all members of a
    team have access to see how processes work and how fixes and new features are
    pushed out.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: This will mean less of a reliance on key individuals removing the *bus factor*
    of one where a key engineer needs to do the majority of tasks in the team as he
    is the most highly skilled individual and has all of the system knowledge stored
    in his head.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: Using a DevOps model means that the very highly skilled engineer can instead
    use their talents to help *cross skill* other team members and create effective
    monitoring that can help any team member carry out the root cause analysis they
    normally do manually. This builds the talented engineer's deep knowledge into
    the monitoring system, so the monitoring system as opposed to the talented engineer
    becomes the go-to point of reference when an issue first occurs, or ideally the
    monitoring system becomes the source of truth that alerts on events to prevent
    customer facing issues. To improve cross-skilling, the talented engineer should
    ideally help write automation too, so they are not the only member of the team
    that can carry out specific tasks.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: Reasons to implement DevOps for networking
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'So how do some of those DevOps benefits apply to traditional networking teams?
    Some of the common complaints with siloed networking teams today are the following:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: Reactive
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Slow, often using ticketing systems to collaborate
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Manual processes carried out using admin terminals
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lack of preproduction testing
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Manual mistakes leading to network outages
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Constantly in firefighting mode
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lack of automation in daily processes
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Network teams like infrastructure teams before them are often used to working
    in siloed teams, interacting with other teams in large organizations via ticketing
    systems or using suboptimal processes. This is not a streamlined or optimized
    way of working, it is scenarios such as this which led to the DevOps initiative
    being started, that sought to break down barriers between *Development* and *Operations*
    staff, but its remit has since widened.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: Networking does not seem to have been initially included in this DevOps movement
    yet, but software delivery can only operate as fast as the slowest component.
    The slowest component will eventually become the bottleneck or blocker of the
    entire delivery process. That slowest component often becomes the star engineer
    in a siloed team that can’t process enough tickets in a day manually to keep up
    with demand, thus becoming the bus factor of one. If that engineer takes a holiday
    or has a sick day, then work is blocked, the company becomes too reliant and cannot
    function efficiently without them.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: If a team is not operating in the same way as the rest of the business, then
    all other departments will be slowed down as the siloed department is not agile
    enough. Put simply, the reason networking teams exist in most companies is to
    provide a service to development teams. Development teams require networking to
    be deployed, so they can test product changes and also deploy products to production,
    once deployed to production the business can start making money from those products.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: Networking changes to ACL policies, load balancing rules, and provisioning of
    new subnets for new applications can no longer be deemed a success if they take
    days, months or even weeks. Networking has a direct impact on the *velocity of
    change*, *mean time to resolve*, *uptime,* as well as *the number of deployments*,
    which are four of the key performance indicators of a successful DevOps initiative.
    So networking needs to be included in a DevOps model by companies, otherwise all
    of these quantifiable benefits will become constrained.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: Given the rapid way AWS, Microsoft Azure, OpenStack, and **Software-defined
    Networking** (**SDN**) can be used to provision network functions in the private
    and public cloud, it is no longer acceptable for network teams to not adapt their
    operational processes and learn new skills. But the caveat is that the evolution
    of networking has been quick, and they need the support and time to do this.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: If a cloud solution is implemented and the operational model does not change,
    then no real quantifiable benefits will be felt by the organization. Cloud projects
    traditionally do not fail because of technology, cloud projects fail because of
    the incumbent operational models that hinder them from being a success. There
    is zero value to be had from building a brand new OpenStack private cloud, with
    its open set of extensible APIs to manage compute, networking, and storage if
    a company doesn’t change its operational model and allow end users to use those
    APIs to self-service their requests.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: If network engineers are still using the GUI to point and click and cut and
    paste then this doesn’t bring any real business value as the network engineer
    that cuts and pastes the slowest is the bottleneck. The company may as well stick
    with their current technology and processes as implementing a private cloud solution
    with manual processes will not result in speeding up time to market or mean time
    to recover from failure.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: However, cloud should not be used as an excuse to deride your internal network
    staff, as incumbent operational models in companies are typically not designed
    or set up by current staff, they are normally inherited. Moving to public cloud
    doesn’t solve the problem of the operational agility of a company’s network team,
    it is a quick fix and bandage that disguises the deeper rooted cultural challenges
    that exist.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: However, smarter ways of working allied with use of automation, measurement,
    and monitoring can help network teams refine their internal processes and facilitate
    the developers and operations staff that they work with daily. Cultural change
    can be initiated in two different ways, grass roots bottom-up initiatives coming
    from engineers, or top-down management initiatives.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: Top-down DevOps initiatives for networking teams
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Top-down DevOps initiatives are when a CTO, director, or senior manager have
    to buy in from the company to make changes to the operational model. These changes
    are required as the incumbent operational model is deemed suboptimal and not set
    up to deliver software at the speed of competitors, which inherently delays new
    products or crucial fixes from being delivered to market.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 自上而下的DevOps倡议是指CTO、总监或高级经理需要从公司获得支持，以对操作模型进行改变。这些改变是必要的，因为现有的操作模型被认为不够理想，并且无法像竞争对手一样快速交付软件，从而导致新产品或重要修复的推迟，影响市场的及时交付。
- en: When doing DevOps transformations from a top-down management level, it is imperative
    that some ground work is done with the teams involved, if large changes are going
    to be made to the operational model, it can often cause unrest or stress to staff
    on the ground.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 当从自上而下的管理层进行DevOps转型时，如果要对操作模型进行重大更改，必须先与相关团队进行一些基础工作，因为这种大规模的变动往往会导致现场员工的不安或压力。
- en: When implementing operational changes, upper management need to have the buy
    in of the people on the ground as they will operate within that model daily. Having
    teams buy in is a very important aspect; otherwise, the company will end up with
    an unhappy workforce, which will mean the best staff will ultimately leave.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在实施操作变革时，高层管理人员需要获得现场员工的支持，因为他们每天将会在这一模型下工作。让团队获得支持是非常重要的一环，否则，公司将面临员工不满的局面，这最终意味着最优秀的员工将离开。
- en: It is very important that upper management engage staff when implementing new
    operational processes and deal with any concerns transparently from the outset,
    as opposed to going for an offsite management meeting and coming back with an
    enforced plan, which is all too common theme.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在实施新的操作流程时，让高层管理人员与员工积极互动，并从一开始就透明处理任何担忧是非常重要的，而不是去参加一个外部管理会议，然后带着一个强制性的计划回来，这种情况太常见了。
- en: Management should survey the teams to understand how they operate on a daily
    basis, what they like about the current processes and where their frustrations
    lie. The biggest impediment to changing an operational model is misunderstanding
    the current operational model. All initiatives should ideally be led and not enforced.
    So let’s focus on some specific top-down initiatives that could be used to help.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 管理层应对团队进行调查，以了解他们每天是如何运作的，喜欢当前流程的哪些方面，以及他们在哪些方面感到困惑。改变操作模型的最大障碍是误解现有的操作模型。所有的倡议理想情况下应该是由团队主导，而不是强加的。所以让我们重点关注一些可以帮助的具体自上而下的倡议。
- en: Analyzing successful teams
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分析成功的团队
- en: One approach would be for the management to look at other teams within the organization
    whose processes are working well and are delivering in an incremental agile fashion,
    if no other team in the organization is working in this fashion, then reach out
    to other companies.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 一种方法是管理层查看组织内其他团队的运作情况，特别是那些流程运作良好且采用增量敏捷方式交付的团队。如果组织内没有团队以这种方式运作，可以联系其他公司。
- en: Ask if it would be possible to go and look at the way another company operates
    for a day. Most companies will happily use successful projects as reference cases
    to public audiences at conferences or meet-ups, as they enjoy showing their achievements,
    so it shouldn’t be difficult to seek out companies that have overcome similar
    cultural challenges. It is good to attend some DevOps conferences and look at
    who is speaking, so approach the speakers and they will undoubtedly be happy to
    help.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 询问是否可以参观其他公司的一天运营方式。大多数公司会很高兴将成功的项目作为案例在会议或聚会中展示，因为他们喜欢展示自己的成就，所以寻找那些已经克服了类似文化挑战的公司应该不难。参加一些DevOps会议并看看谁在发言，接触这些发言人，他们无疑会乐意提供帮助。
- en: Management teams should initially book a meeting with the high-performing team
    and do a question and answer session focusing on the following points, if it is
    an external vendor then an introduction phone call can suffice.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 管理团队应首先与高效能团队安排一次会议，并进行问答环节，重点关注以下几点，如果是外部供应商，那么一次简单的介绍电话也可以。
- en: 'Some important questions to ask in the initial meeting are the following:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在初次会议中需要提出的一些重要问题如下：
- en: Which processes normally work well?
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 哪些流程通常运作得很好？
- en: What tools do they actually use on a daily basis?
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 他们每天实际上使用什么工具？
- en: How is work assigned?
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工作是如何分配的？
- en: How do they track work?
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 他们如何跟踪工作进展？
- en: What is the team structure?
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 团队结构是什么？
- en: How do other teams make requests to the team?
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他团队是如何向该团队提出请求的？
- en: How is work prioritized?
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 工作是如何优先排序的？
- en: How do they deal with interruptions?
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How are meetings structured?
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It is important not to reinvent the wheel, if a team in the organization already
    has a proven template that works well, then that team could also be invaluable
    in helping facilitate cultural change within the networks team. It will be slightly
    more challenging if focus is put on an external team as the evangelist as it opens
    up excuses such as it being easier for them because of x, y, and z in their company.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
- en: A good strategy, when utilizing a local team in the organization as the evangelist,
    is to embed a network engineer in that team for a few weeks and have them observe
    and give feedback how the other teams operate and document their findings. This
    is imperative, so the network engineers on the ground understand the processes.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: Flexibility is also important, as only some of the successful team’s processes
    may be applicable to a network team, so don’t expect two teams to work identically.
    The sum of parts and personal individuals in the team really do mean that every
    team is different, so focus on goals rather than the implementation of strict
    processes. If teams achieve the same outcomes in slightly different ways, then
    as long as work can be tracked and is visible to management, it shouldn’t be an
    issue as long as it can be easily reported on.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: Make sure pace is prioritized, select specific change agents to make sure teams
    are comfortable with new processes, so empower change agents in the network team
    to choose how they want to work by engaging with the team by creating new processes
    and also put them in charge of eventual tool selection. However, before selecting
    any tooling, it is important to start with process and agree on the new operational
    model to prevent tooling driving processes, this is a common mistake in IT.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: Mapping out activity diagrams
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A good piece of advice is to use an activity diagram as a visual aid to understand
    how a team’s interactions work and where they can be improved.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
- en: 'A typical development activity diagram, with manual hand-off to a quality assurance
    team is shown here:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: '![Mapping out activity diagrams](img/B05559_03_02.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
- en: Utilizing activity diagrams as a visual aid is important as it highlights suboptimal
    business process flows. In the example, we see a development team’s activity diagram.
    This process is suboptimal as it doesn’t include the quality assurance team in
    the **Test locally** and **Peer review** phases. Instead it has a formalized QA
    hand-off phase, which is very late in the development cycle, and a suboptimal
    way of working as it promotes a development and QA silo, which is a DevOps anti-pattern.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
- en: A better approach would be to have QA engineers work on creating test tasks
    and creating automated tests, whereas the development team works on coding tasks.
    This would allow the development **Peer review** process to have a QA engineers’
    review and test developer code earlier in the development lifecycle and make sure
    that every piece of code written has appropriate test coverage before the code
    is checked in.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 更好的方法是让质量保证工程师负责创建测试任务和创建自动化测试，而开发团队负责编码任务。这将允许开发**同行评审**流程在开发生命周期的早期由质量保证工程师审查和测试开发人员的代码，并确保每段编写的代码在提交之前具有适当的测试覆盖率。
- en: Another shortcoming in the process is that it does not cater for software bugs
    found by the quality assurance team or in production by customers, so mapping
    these streams of work into the activity diagram would also be useful to show all
    potential feedback loops.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 流程中的另一个缺点是，它未考虑到质量保证团队或客户在生产中发现的软件缺陷，因此将这些工作流引入活动图中也很有用，以展示所有潜在的反馈循环。
- en: If a feedback loop is missed in the overall activity diagram, then it can cause
    a breakdown in the process flow, so it is important to capture all permutations
    in the overarching flow that could occur before mapping tooling to facilitate
    the process.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在整体活动图中漏掉了反馈循环，那么可能会导致流程流失，因此捕捉在映射工具前可以促进流程的所有排列组合是非常重要的。
- en: Each team should look at ways of shortening interactions to aid mean time to
    resolve and improve the velocity of change at which work can flow through the
    overall process.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 每个团队都应考虑缩短互动时间的方法，以帮助减少解决时间并提高工作能够流经整体流程的速度。
- en: Management should dedicate some time in their schedule with the development,
    infrastructure, networking, and test teams and map out what they believe the team
    processes to be in their individual teams. Keep it high level, this should represent
    a simple activity swim-lane utilizing the start point where they accept work and
    the process the team goes through to deliver that work.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 管理层应该在他们的日程中安排一些时间与开发、基础设施、网络和测试团队会面，并绘制出他们认为各自团队流程的图示。保持高层次，这应该是一个简单的活动泳道，利用从接受工作开始到团队进行工作交付的过程。
- en: Once each team has mapped out the initial approach, they should focus on optimizing
    it and removing the parts of the process they dislike and discuss ways the process
    could be improved as a team. It may take many iterations before this is mapped
    out effectively, so don’t rush this process, it should be used as a learning experience
    for each team.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 每个团队绘制出初始方法后，应专注于优化它，并去除他们不喜欢的流程部分，并讨论团队如何改进流程的方式。可能需要多次迭代才能有效绘制出这一过程，所以不要急于此过程，应该将其视为每个团队的学习经验。
- en: The finalized activity diagram will normally include management and technical
    functions combined in an optimized way to show the overall process flow. Try not
    to bother using **Business Process Management** (**BPM**) software at this stage;
    a simple white board will suffice to keep it simple and informal.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 最终的活动图通常会以优化的方式结合管理和技术功能，以展示整体流程。在此阶段不要使用**业务流程管理**（**BPM**）软件，简单的白板足以保持简单和非正式。
- en: It is a good practice to utilize two layers of an activity diagram, so the first
    layer can be a box that simply says **Peer review**, which then references a nested
    activity diagram outlining what the team's peer review process is. Both need refined
    but the nested tier of business processes should be dictated by the individual
    teams as these are specific to their needs, so it’s important to give teams the
    flexibility they need at this level.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在活动图中使用两层是一个良好的做法，因此第一层可以是一个简单的方框，仅写着**同行评审**，然后引用一个嵌套的活动图，概述团队的同行评审过程。两者都需要精细化，但业务流程的嵌套层应由各个团队决定，因为这些是特定于他们需求的，所以在这个层面给团队所需的灵活性非常重要。
- en: It is important to split the two tiers out; otherwise, the overall top layer
    of the activity diagram will be too complex to extract any real value from, so
    try and minimize the complexity at the top layer, as this will need to be integrated
    with other teams' processes. The activity doesn’t need to contain team-specific
    details such as how an internal team’s **Peer review** process operates as this
    will always be subjective to that team; this should be included but will be a
    nested layer activity that won’t be shared.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 将这两个层次分开是很重要的；否则，活动图的整体顶层将过于复杂，无法从中提取任何真正的价值，因此尽量减少顶层的复杂性，因为这将需要与其他团队的流程集成。这个活动不需要包含团队特定的细节，比如内部团队的**同行评审**流程如何操作，因为这将始终是该团队主观的；这应该包括在内，但将是一个不会被分享的嵌套层次活动。
- en: Another team should be able to look at a team’s top layer activity diagram and
    understand the process without explanation. It can sometimes be useful to first
    map out a high-performing teams' top layer activity diagram to show how an integrated
    joined-up business process should look.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个团队应该能够查看团队的顶层活动图并理解流程而无需解释。有时首先绘制高效团队的顶层活动图可以很有用，以展示一个集成的、连贯的业务流程应该是什么样子。
- en: This will help teams that struggle a bit more with these concepts and allow
    them to use that team’s activity diagram as a guide. This can be used as a point
    of reference and show how these teams have solved their cross-team interaction
    issues and facilitated one or more teams interacting without friction. The main
    aim of this exercise is to join up business processes, so they are not siloed
    between teams, so the planning and execution of work is as integrated as possible
    for joined-up initiatives.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 这将帮助那些在这些概念上有些困难的团队，并允许他们使用那个团队的活动图作为指南。这可以作为参考点，并展示这些团队如何解决他们的跨团队互动问题，并促进一个或多个团队在没有摩擦的情况下互动。这个练习的主要目的是连接业务流程，使它们不再在团队之间孤立，以便为集成的计划和执行尽可能地整合工作。
- en: Once each team has completed their individual activity diagram and optimized
    it to the way the team wants, the second phase of the process can begin. This
    involves layering each team’s top layer of their activity diagrams together to
    create a joined-up process.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦每个团队完成了他们的个人活动图并将其优化到团队希望的方式，流程的第二阶段可以开始。这涉及将每个团队的顶层活动图分层，以创建一个集成的流程。
- en: Teams should use this layering exercise as an excuse to talk about suboptimal
    processes and how the overall business process should look end to end. Utilize
    this session to remove perceived bottlenecks between teams, completely ignoring
    existing tools and the constraints of current tools, this whole exercise should
    be focusing on process not tooling.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 团队应该将这个分层练习作为借口来讨论次优的流程以及整个业务流程应该如何从头到尾看起来。利用这个会议来消除团队之间的感知瓶颈，完全忽略现有工具以及当前工具的约束，整个练习应该集中在流程而非工具上。
- en: A good example of a suboptimum process flow that is constrained by tooling would
    be a stage on a top layer activity diagram that says raise ticket with ticketing
    system. This should be broken down so work is people focused, what does the person
    requesting the change actually require?
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 一个受工具约束的次优流程流程的良好示例是顶层活动图上的一个阶段，表示使用工单系统提出工单。应将其细分为以人为中心的工作，请求变更的人实际需要什么？
- en: A Developers day job involves writing code and building great features and products,
    so if a new feature needs a network change, then networking should be treated
    as part of that feature change. So the time taken for the network changes needs
    to be catered for as part of the planning and estimation for that feature rather
    than a ticketed request that will hinder the velocity of change when it is done
    reactively as an afterthought.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 开发者的日常工作包括编写代码和构建优秀的功能和产品，所以如果一个新功能需要网络变更，那么网络应被视为该功能变更的一部分。因此，网络变更所需的时间需要作为该功能的规划和估算的一部分考虑，而不是作为一个单独的请求，当其作为事后想法被动执行时，会阻碍变更的速度。
- en: This is normally a very successful exercise when engagement is good, it is good
    to utilize a senior engineer and manager from each team in the combined activity
    diagram layering exercise with more junior engineers involved in each team included
    in the team-specific activity diagram exercise.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 当参与度高时，这通常是一次非常成功的练习，最好利用每个团队中的高级工程师和经理参与组合活动图层练习，更初级的工程师参与各自团队特定活动图练习。
- en: Changing the network team’s operational model
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更改网络团队的运营模式
- en: The network team’s operational model at the end of the activity diagram exercise
    should ideally be fully integrated with the rest of the business. Once the new
    operational model has been agreed with all teams, it is time to implement it.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
- en: It is important to note that because the teams on the ground created the operational
    model and joined-up activity diagram, it should be signed off by all parties as
    the new business process. So this removes the issue of an enforced model from
    management as those using it have been involved in creating it. The operational
    model can be iterated and improved over time, but interactions shouldn’t change
    greatly although new interaction points may be added that have been initially
    missed. A master copy of the business process can then be stored and updated,
    so anyone new joining the company knows exactly how to interact with other teams.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
- en: In the short term, it may seem the new approach is slowing down development
    estimates as automation is not in place for network functions, so estimation for
    developer features becomes higher when they require network changes.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
- en: This is often just a truer reflection of reality, as estimations didn’t take
    into account network changes and then they became blockers as they were tickets,
    but once reported, it can be optimized and improved over time.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
- en: Once the overall activity diagram has been merged together and agreed with all
    the teams, it is important to remember if the processes are properly optimized,
    there should not be pages and pages of high-level operations on the diagram. If
    the interactions are too verbose, it will take any change hours and hours to traverse
    each of the steps on the activity diagram.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: The activity diagram mentioned later shows a joined-up business process, where
    work is defined from a single roadmap producing user stories for all teams. New
    user stories, which are units of work, are then estimated out by cross-functional
    teams, including developers, infrastructure, quality assurance, and network engineers.
    Each team will review the user story and work out which cross-functional tasks
    are involved to deliver the feature.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: The user story then becomes part of the sprint with the cross-functional teams
    working on the user story together making sure that it has everything it needs
    to work prior to the check-in. After **Peer review**, the feature or change is
    then handed off to the automated processes to deliver the code, infrastructure,
    and network changes to production.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: The checked-in feature then flows through unit testing, quality assurance, integration,
    and performance testing quality gates, which will include any new tests that were
    written by the quality assurance team before check-in. Once every stage is passed,
    the automation is invoked by a button press to push the changes to production.
    Each environment has the same network changes applied, so network changes are
    made first on test environments before production.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
- en: This relies on treating networking as code, meaning automated network processes
    need to be created so the network team can be as agile as the developers.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
- en: '![Changing the network team’s operational model](img/B05559_03_03.jpg)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
- en: 'Once the agreed operational model is mapped out only then should the DevOps
    transformation begin. This will involve selecting the best of breed tools at every
    stage to deliver the desired outcome with the focus on the following benefits:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
- en: The velocity of change
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mean time to resolve
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved uptime
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Increased number of deployments
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cross-skilling between teams
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The removal of the bus factor of one
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: All business processes will be different for each company, so it is important
    to engage each department and have the buy-in from all managers to make this activity
    a success.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: Changing the network team's behavior
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Once a new operational model has been established in the business, it is important
    to help prevent the network team from becoming the bottleneck in a DevOps-focused
    Continuous Delivery model.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: Traditionally, network engineers will be used to operating command lines and
    logging into admin consoles on network devices to make changes. Infrastructure
    engineers adjusted to automation as they already had scripting experience in **bash**
    and **PowerShell** coupled with a firm grounding in Linux or Windows operating
    systems, so transitioning to configuration management tooling was not a huge step.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: However, it may be more difficult to persuade network engineers to make that
    same transition initially. Moving network engineers towards coding against APIs
    and adopting configuration management tools may initially appear daunting, as
    it is a higher barrier to entry, but having an experienced automation engineer
    on hand can help network engineers make this transition.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
- en: It is important to be patient, so try to change this behavior gradually by setting
    some automation initiatives for the network team in their objectives. This will
    encourage the correct behavior and try and incentivize it too. It may be useful
    to start off automation initiatives by offering training or purchasing particular
    coding books for teams.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
- en: It may also be useful to hold an initial automation hack day; this will give
    network engineers a day away from their day jobs and time to attempt to automate
    a small process, which is repeated everyday by network engineers. If possible,
    make this a mandatory exercise, so that the engineers have to participate and
    make other teams available to cover for the network team, so they aren’t distracted.
    This is a good way of seeing which members of the network team may be open to
    evangelizing DevOps and automation. If any particular individual stands out, then
    work with them to help push automation initiatives forward to the rest of the
    team by making them the champion for process automation.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
- en: Establishing an internal DevOps meet-up where teams present back their automation
    achievements is also a good way of promoting automation in network teams and this
    keeps the momentum going. Encourage each team across the business to present back
    interesting things they have achieved each quarter and incentivize this too by
    allowing each team time off from their day job to attend if they participate.
    This leads to a sense of community and shows teams they are part of a bigger movement
    that is bringing real cost benefits to the business. This also helps to focus
    teams on the common goal of making the company better and breaks down barriers
    between teams in the process.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
- en: One approach that should be avoided at all costs is having other teams write
    all the network automation for the network team. Ideally, it should be the networking
    team that evolves and adopts automation, so giving the network team a sense of
    ownership over the network automation is very important. This though requires
    full buy-in from networking teams and discipline not to revert back to manual
    tasks at any point even if issues occur.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
- en: To ease the transition, offer to put an automation engineer into the network
    team from the infrastructure or developments teams, but this should only be a
    temporary measure. It is important to select an automation engineer that is respected
    by the network team and knowledgeable in networking, as no one should ever attempt
    to automate network processes that they cannot operate by hand, so having someone
    well-versed in networking to help with network automation is crucial, as they
    will be training the network team so have to be respected. If an automation engineer
    is assigned to the network team and isn’t knowledgeable or respected, then the
    initiative will likely fail, so choose wisely.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: It is important to accept at an early stage that this transition towards DevOps
    and automation may not be for everyone, so not every network engineer will be
    able to make the journey. It is all about the network team seizing the opportunity
    and showing initiative and willingness to pick up and learn new skills. Disruptive
    or negative behavior to new automation initiatives should be stamped out early
    on as it may have a bad influence on the network team.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: It is fine to have for people to have a cynical skepticism at first, but not
    attempting to change or build new skills shouldn’t be tolerated, as it will disrupt
    the team dynamic and this should be monitored so it doesn’t cause automation initiatives
    to fail or stall, just because individuals are proving to be blockers or being
    disruptive.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
- en: Every organization has its own unique culture and a company’s rate of change
    will be subject to cultural uptake of the new processes and ways of working. When
    initiating cultural change, change agents are necessary and can come from internal
    IT staff or external sources depending on the aptitude and appetite of the staff
    to change. Every change project is different, but it is important that it has
    the correct individuals involved to make it a success along with the correct management
    sponsorship and backing.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
- en: Bottom-up DevOps initiatives for networking teams
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Bottom-up DevOps initiatives** are when an engineer, team leads, or lower
    management don’t necessarily have buy-in from the company to make changes to the
    operational model. However, they realize that although changes can’t be made to
    the overall incumbent operational model, they can try and facilitate positive
    changes using DevOps philosophies within their team that can help the team perform
    better and make their productivity more efficient.'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
- en: When implementing DevOps initiatives from a bottom-up initiative, it is much
    more difficult and challenging at times as some individuals or teams may not be
    willing to change the way they work and operate as they don’t have to. But it
    is important not to become disheartened and do the best possible job for the business.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: It is still possible to eventually convince upper management to implement a
    DevOps initiative using grass roots initiatives to prove the process brings real
    business benefits.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: Evangelizing DevOps in the networking team
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Try and stay positive at all times, working on a bottom-up initiative can be
    exhausting at times, but it is important to roll with the punches and not take
    things too personally. Always remain positive and try to focus on evangelizing
    the benefits associated with DevOps processes and positive behavior first within
    your own team. The first challenge is to convince your own team of the merits
    of adopting a DevOps approach before even attempting to convince other teams in
    the business.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
- en: A good way of doing this is by showing the benefits that the DevOps approach
    has made to other companies, such as Google, Facebook, and Etsy, focusing on what
    they have done in the networking space. A pushback from individuals may be the
    fact that these companies are unicorns and DevOps has only worked for companies
    for this reason, so be prepared to be challenged. Seek out initiatives that have
    been implemented by these companies that the networking team could adopt and are
    actually applicable to your company.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
- en: 'In order to facilitate an environment of change, work out what your colleagues''
    drivers are, what motivates them? Try tailoring the sell to individual''s motivations,
    the sell to an engineer or manager may be completely different. An engineer on
    the ground may be motivated by the following:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
- en: Doing more interesting work
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Developing skills and experience
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Helping automate menial daily tasks
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Learning sought-after configuration management skills
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Understanding the development lifecycle
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Learning to code
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'A manager on the other hand will probably be more motivated by offering to
    measure KPIs that make his team look better such as:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
- en: Time taken to implement changes
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mean time to resolve failures
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Improved uptime of the network
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Another way to promote engagement is to invite your networking team to DevOps
    meet-ups arranged by forward-thinking networking vendors. They may be amazed that
    most networking and load balancing vendors are now actively promoting automation
    and DevOps and not yet be aware of this. Some of the new innovations in this space
    may be enough to change their opinions and make them interested in picking up
    some of the new approaches, so they can keep pace with the industry.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
- en: Seeking sponsorship from a respected manager or engineer
  id: totrans-144
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: After making the network team aware of the DevOps initiatives, it is important
    to take this to the next stage. Seek out a respected manager or senior engineer
    in the networking team that may be open to trying out DevOps and automation. It
    is important to sell this person the dream, state how you are passionate about
    implementing some changes to help the team, and that you are keen to utilize some
    proven best practices that have worked well for other successful companies.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
- en: It is important to be humble, try not to rant or spew generalized DevOps jargon
    to your peers, which can be very off-putting. Always make reasonable arguments
    and justify them while avoiding to make sweeping statements or generalizations.
    Try not to appear to be trying to undermine the manager or senior engineer, instead
    ask for their help to achieve the goal by seeking their approval to back the initiative
    or idea. A charm offensive may be necessary at this stage to convince the manager
    or engineer that it’s a good idea but gradually building up to the request can
    help otherwise it may appear insincere if the request comes out the blue. Potentially
    analyze the situation over lunch or drinks and gauge if it is something they would
    be interested in, there is little point trying to convince people that are stubborn
    as they probably will not budge unless the initiative comes from above.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
- en: Once you have found the courage to broach the subject, it is now time to put
    forward numerous suggestions on how the team could work differently with the help
    of a mediator that could take the form of a project manager. Ask for the opportunity
    to try this out on a small scale and offer to lead the initiative and ask for
    their support and backing. It is likely that the manager or senior engineer will
    be impressed at your initiative and allow you to run with the idea, but they may
    choose the initiative you implement. So, never suggest anything you can’t achieve,
    you may only get one opportunity at this so it is important to make a good impression.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
- en: Try and focus on a small task to start with; that’s typically a pain point,
    and attempt to automate it. Anyone can write an automation script, but try and
    make the automation process easy to use, find what the team likes in the current
    process, and try and incorporate aspects of it. For example, if they often see
    the output from a command line displayed in a particular way, write the automation
    script so that it still displays the same output, so the process is not completely
    alien to them.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
- en: Try not to hardcode values into scripts and extract them into a configuration
    files to make the automation more flexible, so it could potentially be used again
    in different ways. By showing engineers the flexibility of automation, it will
    encourage them to use it more, show others in the teams how you wrote the automation
    and ways they could adapt it to apply it to other activities. If this is done
    wisely, then automation will be adopted by enthusiastic members of the team, and
    you will gain enough momentum to impress the sponsor enough to take it forward
    onto more complex tasks.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
- en: Automating a complex problem with the networking team
  id: totrans-150
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The next stage of the process after building confidence by automating small
    repeatable tasks is to take on a more complex problem; this can be used to cement
    the use of automation within the networking team going forward.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
- en: This part of the process is about empowering others to take charge, and lead
    automation initiatives themselves in the future, so will be more time-consuming.
    It is imperative that the more difficult to work with engineers that may have
    been deliberately avoided while building out the initial automation are involved
    this time.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
- en: These engineers more than likely have not been involved in automation at all
    at this stage. This probably means the most certified person in the team and alpha
    of the team, nobody said it was going to be easy, but it will be worth it in the
    long run convincing the biggest skeptics of the merits of DevOps and automation.
    At this stage, automation within the network team should have enough credibility
    and momentum to broach the subject citing successful use cases.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
- en: It’s easier to involve all difficult individuals in the process rather than
    presenting ideas back to them at the end of the process. Difficult senior engineers
    or managers are less likely to shoot down your ideas in front of your peers if
    they are involved in the creation of the process and have contributed in some
    way.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
- en: Try and be respectful, even if you do not agree with their viewpoints, but don’t
    back down if you believe that you are correct, or give up. Make arguments fact
    based and non-emotive, write down pros and cons, and document any concerns without
    ignoring them, you have to be willing to compromise but not to the point of devaluing
    the solution.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
- en: There may actually be genuine risks involved that need addressed, so valid points
    should not be glossed over or ignored. Where possible seek backup from your sponsor
    if you are not sure on some of the points or feel individuals are being unreasonable.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
- en: When implementing the complex automation task work as a team, not as an individual,
    this is a learning experience for others as well as yourself. Try and teach the
    network team a configuration management tool, they may just be scared try out
    new things, so go with a gentle approach. Potentially stop at times to try out
    some online tutorials to familiarize everyone with the tool and try out various
    approaches to solve problems in the easiest way possible.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
- en: Try and show the network engineers how easy it is to use configuration management
    tools and the benefits. Don’t use complicated configuration management tools as
    it may put them off. The majority of network engineers can’t currently code, something
    that will potentially change in the coming years. As stated before, infrastructure
    engineers at least had a grounding in bash or PowerShell to help get started,
    so pick tooling that they like and give them options. Try not to enforce tools
    they are not comfortable with. When utilizing automation, one of the key concerns
    for network engineers is peer review as they have a natural distrust that the
    automation has worked. Try and build in gated processes to address these concerns,
    automation doesn’t mean no peer review so create a lightweight process to help.
    Make the automation easy to review by utilizing source control to show diffs and
    educate the network engineers on how to do this.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
- en: Coding can be a scary prospect initially, so propose to do some team exercises
    each week on a coding or configuration management task. Work on it as a team.
    This makes it less threatening, and it is important to listen to feedback. If
    the consensus is that something isn’t working well or isn’t of benefit, then look
    at alternate ways to achieve the same goal that works for the whole team. Before
    releasing any new automated process, test it in the preproduction environment,
    alongside an experienced engineer and have them peer review it, and try to make
    it fail against numerous test cases. There is only one opportunity to make a first
    impression, with a new process, so make sure it is a successful one.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
- en: Try and set up knowledge-sharing sessions between the team to discuss the automation
    and make sure everyone knows how to do operations manually too, so they can easily
    debug any future issues or extend or amend the automation. Make sure that output
    and logging is clear to all users as they will all need to support the automation
    when it is used in production.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-161
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we covered practical initiatives, which when combined, will
    allow IT staff to implement successful DevOps models in their organization. Rather
    than just focusing on departmental issues, it has promoted using a set of practical
    strategies to change the day-to-day operational models that constrain teams. It
    also focuses on the need for network engineers to learn new skills and techniques
    in order to make the most of a new operational model and not become the bottleneck
    for delivery.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
- en: This chapter has provided practical real-world examples that could help senior
    managers and engineers to improve their own companies, emphasizing collaboration
    between teams and showing that networking departments is now required to automate
    all network operations to deliver at the pace expected by businesses.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
- en: Key takeaways from this chapter are that DevOps is not just about development
    and operations staff it can be applied to network teams. It is important to understand
    that before starting a DevOps initiative, take the time to analyze successful
    teams or companies and focus on what made them successful, but senior management
    sponsorship is the key to creating a successful DevOps model.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
- en: Your own company's model will not identically mirror other companies, so try
    not to copy like for like. Adapt the model so that it works in your own organization,
    allow teams to create their own processes, but don’t dictate processes. Also,
    allow change agents to initiate changes that teams are comfortable with.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
- en: Try to automate all operational work, start small, and build up to larger, more
    complex problems once the team is comfortable with new ways of working. Always
    try and remember that successful change will not happen overnight. It will only
    work through a model of continuous improvement.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
- en: In the following chapters, we will look at ways of applying automation to networking
    and concentrate on configuration management tools such as **Ansible**. These configuration
    management tools can be used to increase the pace that network engineers can implement
    changes as well as making sure all network changes that are made are done in the
    same way and are less error-prone.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-168
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Useful links on DevOps are as follows:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
- en: '[https://www.youtube.com/watch?v=TdAmAj3eaFI](https://www.youtube.com/watch?v=TdAmAj3eaFI)'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
- en: '[https://www.youtube.com/watch?v=gqmuVHw-hQw](https://www.youtube.com/watch?v=gqmuVHw-hQw)'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
