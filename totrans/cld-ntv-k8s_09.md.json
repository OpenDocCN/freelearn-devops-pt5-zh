["```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: pod-with-vol\nspec:\n  containers:\n  - name: busybox\n    image: busybox\n    volumeMounts:\n    - name: my-storage-volume\n      mountPath: /data\n  volumes:\n  - name: my-storage-volume\n    emptyDir: {}\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: my-pod\nspec:\n  containers:\n  - name: busybox\n    image: busybox\n    volumeMounts:\n    - name: config-volume\n      mountPath: /shared-config\n  - name: busybox2\n    image: busybox\n    volumeMounts:\n    - name: config-volume\n      mountPath: /myconfig\n  volumes:\n  - name: config-volume\n    emptyDir: {}\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: my-app\nspec:\n  containers:\n  - image: busybox\n    name: busybox\n    volumeMounts:\n    - mountPath: /data\n      name: my-ebs-volume\n  volumes:\n  - name: my-ebs-volume\n    awsElasticBlockStore:\n      volumeID: [INSERT VOLUME ID HERE]\n```", "```\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: my-pv\nspec:\n  storageClassName: manual\n  capacity:\n    storage: 5Gi\n  accessModes:\n    - ReadWriteOnce\n  hostPath:\n    path: \"/mnt/mydata\"\n```", "```\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: gp2Encrypted\n  annotations:\n    storageclass.kubernetes.io/is-default-class: \"true\"\nprovisioner: kubernetes.io/aws-ebs\nparameters:\n  type: gp2\n  encrypted: \"true\"\n  fsType: ext4\n```", "```\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n  name: my-pv-claim\nspec:\n  storageClassName: gp2Encrypted\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 1Gi\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: my-pod\nspec:\n  volumes:\n    - name: my-pv\n      persistentVolumeClaim:\n        claimName: my-pv-claim\n  containers:\n    - name: my-container\n      image: busybox\n      volumeMounts:\n        - mountPath: \"/usr/data\"\n          name: my-pv\n```", "```\n> kubectl exec -it shell-demo -- /bin/bash\n> cd /usr/data\n> touch myfile.txt\n```", "```\n> kubectl delete pod my-pod\n```", "```\n> kubectl apply -f my-pod.yaml\n```", "```\n> kubectl exec -it my-pod -- /bin/bash\n> ls /usr/data\n> myfile.txt\n```", "```\n    > git clone --single-branch --branch master https://github.com/rook/rook.git\n    > cd cluster/examples/kubernetes/ceph\n    ```", "```\n    > kubectl apply -f ./common.yaml\n    ```", "```\n    > kubectl apply -f ./operator.yaml\n    ```", "```\n    > kubectl -n rook-ceph get pod\n    ```", "```\n    > kubectl create -f cluster.yaml\n    ```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: rook-tools\n  namespace: rook\nspec:\n  dnsPolicy: ClusterFirstWithHostNet\n  containers:\n  - name: rook-tools\n    image: rook/toolbox:v0.7.1\n    imagePullPolicy: IfNotPresent\n```", "```\napiVersion: ceph.rook.io/v1\nkind: CephBlockPool\nmetadata:\n  name: replicapool\n  namespace: rook-ceph\nspec:\n  failureDomain: host\n  replicated:\n    size: 3\n---\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n   name: rook-ceph-block\nprovisioner: rook-ceph.rbd.csi.ceph.com\nparameters:\n    clusterID: rook-ceph\n    pool: replicapool\n    imageFormat: \"2\"\ncurrently supports only `layering` feature.\n    imageFeatures: layering\n    csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner\n    csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph\n    csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node\n    csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph\ncsi-provisioner\n    csi.storage.k8s.io/fstype: xfs\nreclaimPolicy: Delete\n```", "```\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n  name: rook-pvc\nspec:\n  storageClassName: rook-ceph-block\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 1Gi\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: my-rook-test-pod\nspec:\n  volumes:\n    - name: my-rook-pv\n      persistentVolumeClaim:\n        claimName: rook-pvc\n  containers:\n    - name: my-container\n      image: busybox\n      volumeMounts:\n        - mountPath: \"/usr/rooktest\"\n          name: my-rook-pv\n```", "```\n> kubectl exec -it my-rook-test-pod -- /bin/bash\n> cd /usr/rooktest\n> touch myfile.txt\n> ls\n```", "```\n> myfile.txt\n```", "```\napiVersion: ceph.rook.io/v1\nkind: CephFilesystem\nmetadata:\n  name: ceph-fs\n  namespace: rook-ceph\nspec:\n  metadataPool:\n    replicated:\n      size: 2\n  dataPools:\n    - replicated:\n        size: 2\n  preservePoolsOnDelete: true\n  metadataServer:\n    activeCount: 1\n    activeStandby: true\n```", "```\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: rook-cephfs\nprovisioner: rook-ceph.cephfs.csi.ceph.com\nparameters:\n  clusterID: rook-ceph\n  fsName: ceph-fs\n  pool: ceph-fs-data0\n  csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner\n  csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph\n  csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node\n  csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph\nreclaimPolicy: Delete\n```", "```\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n  name: rook-ceph-pvc\nspec:\n  storageClassName: rook-cephfs\n  accessModes:\n    - ReadWriteMany\n  resources:\n    requests:\n      storage: 1Gi\n```", "```\napiVersion: v1\nkind: Deployment\nmetadata:\n  name: my-rook-fs-test\nspec:\n  replicas: 3\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25% \n  selector:\n    matchLabels:\n      app: myapp\n  template:\n      spec:\n  \t  volumes:\n    \t  - name: my-rook-ceph-pv\n        persistentVolumeClaim:\n          claimName: rook-ceph-pvc\n  \t  containers:\n    \t  - name: my-container\n         image: busybox\n         volumeMounts:\n         - mountPath: \"/usr/rooktest\"\n           name: my-rook-ceph-pv\n```"]