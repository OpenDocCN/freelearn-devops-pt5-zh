["```\n    // Global Variables\n    private static TfsTeamProjectCollection _tfs;\n    private static ProjectInfo _selectedTeamProject;\n\n    // Connect to TFS Using Team Project Picker\n    public static void ConnectToTfsUsingTeamProjectPicker()\n    {\n    // The user is allowed to select only one project\n    var tfsPp = new TeamProjectPicker(TeamProjectPickerMode.SingleProject, false);\n\n    tfsPp.ShowDialog();\n\n           // The TFS project collection\n           _tfs = tfsPp.SelectedTeamProjectCollection;\n\n    if (tfsPp.SelectedProjects.Any())\n           {\n        //  The selected Team Project\n              _selectedTeamProject = tfsPp.SelectedProjects[0];\n           }\n    }\n    ```", "```\n    var server = new TfsTeamProjectCollection(new Uri(\"http://tfs2015:8080/tfs\"));\n    server.EnsureAuthenticated();\n    var serverVersion = server.ServerDataProvider.ServerVersion;\n    Console.WriteLine(\"Server Version: {0}\", serverVersion);\n    Console.ReadKey();\n    ```", "```\n    var tfs = TfsTeamProjectCollectionFactory\n                    .GetTeamProjectCollection(new Uri(\"http://tfs2015:8080/tfs\")); \n    tfs.EnsureAuthenticated();\n    ```", "```\n    // Version control service exposes methods to work with TFS version control\n    var vcs = tfs.GetService<VersionControlServer>();\n\n    // Since we'll be reporting groups for all team projects, imp to get all team projects\n    var teamProjects = vcs.GetAllTeamProjects(false);\n    // Narrow down to the FabrikamTFVC Team Project\n    var teamProject = teamProjects.FirstOrDefault(p=>p.Name == \"FabrikamTFVC\");\n    ```", "```\n    // Group Security service exposes methods to get groups, users and security details\n    var sec = tfs.GetService<IGroupSecurityService>();\n\n    Identity[] appGroups = sec.ListApplicationGroups(teamProject.ArtifactUri. AbsoluteUri);\n    ```", "```\n    foreach (Identity group in appGroups)\n    {\n    Identity[] groupMembers = sec.ReadIdentities(SearchFactor.Sid, new string[] { group.Sid }, QueryMembership.Expanded);\n\n    foreach (Identity member in groupMembers)\n                    {\n    Console.WriteLine(member.DisplayName); \n    if (member.Members != null)\n                        {\n    foreach (string memberSid in member.Members)\n                            {\n                                Identity memberInfo = sec.ReadIdentity (SearchFactor.Sid, memberSid, QueryMembership.Expanded);\n    var userName = memberInfo.Domain + \"\\\\\" + memberInfo.AccountName;\n    Console.WriteLine(string.Format(\"       {0}\", memberInfo.AccountName));\n                            }\n                        }\n                    }\n    }\n    ```", "```\n    var actualPermission = vcs.GetPermissions(new string[] { TeamProject.ServerItem }, RecursionType.Full);\n    foreach (var memberOf in memberInfo.MemberOf)\n       {\n        // Get information about the members\n    }\n    ```", "```\n    var permissions = vcs.GetEffectivePermissions(userName, teamProject.ServerItem);\n\n    foreach (var permission in permissions)\n    {\n    versionControlPerTmissions.Add(new VersionControlPermission(){Name = permission});\n    }\n    ```", "```\n    var tfs = TfsTeamProjectCollectionFactory\n                    .GetTeamProjectCollection(new Uri(\"http://tfs2015:8080/tfs\")); \n    tfs.EnsureAuthenticated();\n    ```", "```\n    // Get an instance of the VersionControlServer\n    var vcs = server.GetService<VersionControlServer>();\n    // Get an instance of the ICommonStructureService\n    var ics = server.GetService<ICommonStructureService>();\n    ProjectProperty[] ProjectProperties = null;\n\n    // Get the team project by name\n    var teamProject= vcs.GetTeamProject(\"FabrikamTFVC\");\n\n    string ProjectName = string.Empty;\n    string ProjectState = string.Empty;\n    int templateId = 0;\n    ProjectProperties = null;\n\n    // Get the project properties using the ICommonStructureServer\n    ics.GetProjectProperties(teamProject.ArtifactUri.AbsoluteUri, \n    out ProjectName, out ProjectState, \n    out templateId, out ProjectProperties);\n\n    // Output all the project properties\n    foreach (var pp in ProjectProperties)\n    {\n    Console.WriteLine(string.Format(\"{0} - {1}\", pp.Name, pp.Value));\n    }\n    ```", "```\nvar tfsServerUrl = Console.ReadLine(); \nvar userName = Console.ReadLine(); \nvar password = GetConsolePassword(); \nvar projectName = Console.ReadLine(); \nvar credentials = new VssBasicCredential(userName, password); \nBuildHttpClient buildClient = new BuildHttpClient(new Uri(tfsServerUrl), credentials); \n```", "```\nvar builds = buildClient.GetBuildsAsync(projectName).Result;\n```", "```\nvar tfsServerUrl = Console.ReadLine();\nvar userName = Console.ReadLine();\nvar password = GetConsolePassword();\nvar projectName = Console.ReadLine();\nvar credentials = new VssBasicCredential(userName, password);\n\nGitHttpClient gitClient = new GitHttpClient(new Uri(tfsServerUrl), credentials);\n```", "```\nvar gitRepositories = gitClient.GetRepositoriesAsync(projectName, true).Result;\n```", "```\nvar tfsServerUrl = Console.ReadLine();\nvar userName = Console.ReadLine();\nvar password = GetConsolePassword();\nvar credentials = new VssBasicCredential(userName, password);\n\nWorkItemTrackingHttpClient witClient =\nnew WorkItemTrackingHttpClient(new Uri(tfsServerUrl),\nnew VssBasicCredential(userName, password));\n```", "```\nvar workItem = witClient.GetWorkItemAsync(Convert.ToInt32(workitemId)).Result;\n```", "```\nConsole.WriteLine($\"Team Project: workItem.Fields[\"System.TeamProject\"]}\");\nConsole.WriteLine($\"Type: {workItem.Fields[\"System.WorkItemType\"]}\");\nConsole.WriteLine($\"Title: {workItem.Fields[\"System.Title\"]}\");\nConsole.WriteLine($\"State: {workItem.Fields[\"System.State\"]}\");\nConsole.WriteLine($\"Created By: {workItem.Fields[\"System.CreatedBy\"]}\");\n```", "```\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <gl:GLOBALLISTS >\n        <GLOBALLIST name=\"Teams\">\n            <LISTITEM value=\"Unassigned\"/>\n            <LISTITEM value=\"Fabrikam Feature 1\"/>\n            <LISTITEM value=\"Fabrikam Feature 2\"/>\n            <LISTITEM value=\"Fabrikam Feature 3\"/>\n            <LISTITEM value=\"Fabrikam Feature 4\"/>\n        </GLOBALLIST>\n    </gl:GLOBALLISTS>\n    ```"]