["```\n$ docker container run -d --name mysql --read-only -v /\nvar/lib/mysql -v /tmp -v /var/run/mysqld -e MYSQL_ROOT_\nPASSWORD=password mysql\n```", "```\n$ docker container exec mysql touch /trying_to_write_a_file\n```", "```\ntouch: cannot touch '/trying_to_write_a_file': Read-only file \nsystem\n```", "```\n$ docker container run -d -v /local/path/to/html/:/var/www/\nhtml/:ro nginx\n```", "```\n$ docker container diff mysql\n```", "```\n$ docker container stop mysql\n$ docker container rm mysql\n$ docker volume prune\n```", "```\n$ docker container run -d --name mysql -e MYSQL_ROOT_\nPASSWORD=password mysql\n$ docker container exec mysql touch /trying_to_write_a_file\n$ docker container diff mysql\n```", "```\nC /run\nC /run/mysqld\nA /run/mysqld/mysqld.pid\nA /run/mysqld/mysqld.sock\nA /run/mysqld/mysqld.sock.lock\nA /run/mysqld/mysqlx.sock\nA /run/mysqld/mysqlx.sock.lock\nA /trying_to_write_a_file\n```", "```\ndocker container run -it --net host --pid host \\\n\t--cap-add audit_control \\\n\t-e DOCKER_CONTENT_TRUST=$DOCKER_CONTENT_TRUST \\\n\t-v /var/lib:/var/lib \\\n\t-v /var/run/docker.sock:/var/run/docker.sock \\\n\t-v /etc:/etc \\\n\t--label docker_bench_security \\\n\tdocker/docker-bench-security\n```", "```\n$ multipass launch --name docker-host\n$ multipass exec docker-host -- /bin/bash -c 'curl -s https://\nget.docker.com | sh - && sudo usermod -aG docker ubuntu'\n$ multipass shell docker-host\n```", "```\n$ docker container run -d --name root-nginx -v /:/mnt nginx\n$ docker container run -d --name priv-nginx --privileged=true \nnginx\n```", "```\nFROM ubuntu:16.04\nRUN apt-get update && apt-get install -y openssh-server\nRUN mkdir /var/run/sshd\nRUN echo 'root:screencast' | chpasswd\nRUN sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin\n yes/' /etc/ssh/sshd_config\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session \noptional pam_loginuid.so@g' -i /etc/pam.d/sshd\nENV NOTVISIBLE 'in users profile'\nRUN echo 'export VISIBLE=now' >> /etc/profile\nEXPOSE 22\nCMD ['/usr/sbin/sshd', '-D']\n```", "```\n$ docker image build --tag sshd .\n$ docker container run -d -P --name sshd sshd\n```", "```\n$ docker container run -it --net host --pid host \\\n    --cap-add audit_control \\\n    -e DOCKER_CONTENT_TRUST=$DOCKER_CONTENT_TRUST \\\n    -v /var/lib:/var/lib \\\n    -v /var/run/docker.sock:/var/run/docker.sock \\\n    -v /usr/lib/systemd:/usr/lib/systemd \\\n    -v /etc:/etc --label docker_bench_security \\\n    docker/docker-bench-security\n```", "```\n[WARN] 1.1  - Ensure a separate partition for containers has\n been created\n```", "```\n[WARN] 1.5  - Ensure auditing is configured for the Docker \ndaemon\n[WARN] 1.6  - Ensure auditing is configured for Docker files \nand directories - /var/lib/docker\n[WARN] 1.7  - Ensure auditing is configured for Docker files \nand directories - /etc/docker\n[WARN] 1.10  - Ensure auditing is configured for Docker files \nand directories - /etc/default/docker\n```", "```\n[WARN] 2.1  - Ensure network traffic is restricted between \ncontainers on the default bridge\n```", "```\n[WARN] 2.8  - Enable user namespace support\n```", "```\n[WARN] 2.11  - Ensure that authorization for Docker client commands is enabled\n```", "```\n[WARN] 2.12  - Ensure centralized and remote logging is configured\n```", "```\n[WARN] 2.14  - Ensure live restore is Enabled\n```", "```\n[WARN] 2.15  - Ensure Userland Proxy is Disabled\n```", "```\n[WARN] 2.18  - Ensure containers are restricted from acquiring \nnew privileges\n```", "```\n[WARN] 4.1  - Ensure a user for the container has been created\n[WARN]      * Running as root: sshd\n[WARN]      * Running as root: priv-nginx\n[WARN]      * Running as root: root-nginx\n```", "```\n[WARN] 4.5  - Ensure Content trust for Docker is Enabled\n```", "```\n[WARN] 4.6  - Ensure HEALTHCHECK instructions have been added \nto the container image\n[WARN]      * No Healthcheck found: [sshd:latest]\n[WARN]      * No Healthcheck found: [nginx:latest]\n[WARN]      * No Healthcheck found: [ubuntu:16.04]\n```", "```\n[WARN] 5.2  - Ensure SELinux security options are set, if \napplicable\n[WARN]      * No SecurityOptions Found: sshd\n[WARN]      * No SecurityOptions Found: root-nginx\n```", "```\n[PASS] 5.1 - Ensure AppArmor Profile is Enabled\n```", "```\n[WARN] 5.4  - Ensure privileged containers are not used\n[WARN]      * Container running in Privileged mode: priv-nginx\n```", "```\n[WARN] 5.6  - Ensure ssh is not run within containers\n[WARN]      * Container running sshd: sshd\n```", "```\n[WARN] 5.10  - Ensure memory usage for container is limited\n[WARN]      * Container running without memory restrictions: \nsshd\n[WARN]      * Container running without memory restrictions: \npriv-nginx\n[WARN]      * Container running without memory restrictions: \nroot-nginx\n[WARN] 5.11  - Ensure CPU priority is set appropriately on the \ncontainer\n[WARN]      * Container running without CPU restrictions: sshd\n[WARN]      * Container running without CPU restrictions: priv-\nnginx\n[WARN]      * Container running without CPU restrictions: root-\nnginx\n```", "```\n[WARN] 5.12  - Ensure the container's root filesystem is \nmounted as read only\n[WARN]      * Container running with root FS mounted R/W: sshd\n[WARN]      * Container running with root FS mounted R/W: priv-\nnginx\n[WARN]      * Container running with root FS mounted R/W: root-\nnginx\n```", "```\n[WARN] 5.13  - Ensure incoming container traffic is binded to a \nspecific host interface\n[WARN]      * Port being bound to wildcard IP: 0.0.0.0 in sshd\n```", "```\n[WARN] 5.14  - Ensure 'on-failure' container restart policy is \nset to '5'\n[WARN]      * MaximumRetryCount is not set to 5: sshd\n[WARN]      * MaximumRetryCount is not set to 5: priv-nginx\n[WARN]      * MaximumRetryCount is not set to 5: root-nginx\n```", "```\n[WARN] 5.25  - Ensure the container is restricted from \nacquiring additional privileges\n[WARN]      * Privileges not restricted: sshd\n[WARN]      * Privileges not restricted: priv-nginx\n[WARN]      * Privileges not restricted: root-nginx\n```", "```\n[WARN] 5.26  - Ensure container health is checked at runtime\n[WARN]      * Health check not set: sshd\n[WARN]      * Health check not set: priv-nginx\n[WARN]      * Health check not set: root-nginx\n```", "```\n[WARN] 5.28  - Ensure PIDs cgroup limit is used\n[WARN]      * PIDs limit not set: sshd\n[WARN]      * PIDs limit not set: priv-nginx\n[WARN]      * PIDs limit not set: root-nginx\n```", "```\n[INFO] 6.1  - Avoid image sprawl\n[INFO]      * There are currently: 4 images\n[INFO] 6.2  - Avoid container sprawl\n[INFO]      * There are currently a total of 4 containers, with \n4 of them currently running\n```", "```\n$ multipass delete docker-host –purge\n```", "```\n$ mkdir anchore\n$ cd anchore\n$ curl https://docs.anchore.com/current/docs/engine/quickstart/\ndocker-compose.yaml -o docker-compose.yaml\n```", "```\n$ docker-compose pull\n$ docker-compose up -d\n```", "```\n$ docker-compose exec api anchore-cli system status\n```", "```\n$ docker-compose exec api anchore-cli system feeds list\n```", "```\n$ docker-compose exec api anchore-cli image add russmckendrick/\nmoby-counter:old\n```", "```\n$ docker-compose exec api anchore-cli image list\n```", "```\n$ docker-compose exec api anchore-cli image add russmckendrick/\nmoby-counter:old\n```", "```\n$ docker-compose exec api anchore-cli image vuln \nrussmckendrick/moby-counter:old os\n```", "```\n$ docker-compose stop\n$ docker-compose rm\n$ docker volume rm anchore_anchore-db-volume\n```"]