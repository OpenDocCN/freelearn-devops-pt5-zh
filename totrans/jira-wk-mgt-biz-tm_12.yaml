- en: '*Chapter 9*: Duplicating Projects and Starting Outside the Box'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: So far, we have explored and learned how to get up and running with **Jira Work
    Management** (**JWM**) quickly by making use of the standard or out-of-the-box
    functions of JWM. This typically means creating projects and issues directly in
    the product by simply clicking on a few buttons and adding some text.
  prefs: []
  type: TYPE_NORMAL
- en: This chapter will venture off the beaten path and look at ways to create issues
    from outside of the tool. This provides us with flexibility as to how our customers
    and internal teammates can get work requests to us and removes some of the friction
    when starting new work.
  prefs: []
  type: TYPE_NORMAL
- en: If you have already been using the Jira Software and/or **Jira Service Management**
    (**JSM**) projects but want to take advantage of the cool new features of JWM
    with your existing work, we will learn how to migrate existing projects to JWM.
    Finally, we will have one more look at a Marketplace app to help with creating
    issues based on existing issues.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we are going to cover the following main topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Creating a project based on an existing project
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using shared schemes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating issues externally
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Migrating existing Jira projects to JWM
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Working with Marketplace apps – Deep Clone for Jira
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: By completing this chapter, you will have learned how to create a new project
    based on an existing project and how to mimic that using shared schemes. You will
    have also learned some alternative methods to creating issues from outside of
    the system and how to migrate projects within Jira to JWM.
  prefs: []
  type: TYPE_NORMAL
- en: Let's get started!
  prefs: []
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'As JWM is only available in the Jira Cloud environment, the requirement for
    this chapter is simple: *you must have access to a Jira Cloud environment*.'
  prefs: []
  type: TYPE_NORMAL
- en: Atlassian provides a free JWM account for up to 10 users. You can create an
    account by going to [https://www.atlassian.com/try/cloud/signup?bundle=jira-core&edition=free](https://www.atlassian.com/try/cloud/signup?bundle=jira-core&edition=free)
    and following the instructions provided.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a project based on an existing project
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Although we have seen that the availability of project templates is numerous
    for quickly creating projects in JWM, we will often tweak those initial settings
    once the project has been created. This might entail modifying the workflow or
    adjusting/adding fields to the screen.
  prefs: []
  type: TYPE_NORMAL
- en: At this stage, it may be helpful if subsequent similar projects that we create
    make use of the changes we have made. In effect, we have created a new *template*
    for our project. So, the question is, how can we create new projects using the
    changed objects that are attached to existing projects?
  prefs: []
  type: TYPE_NORMAL
- en: 'The answer is to create a new project based on the existing project. Let''s
    learn how to do this:'
  prefs: []
  type: TYPE_NORMAL
- en: First, we will begin as we normally would; that is, by clicking on the **Projects**
    option from the top navigation bar and selecting **Create project**:![Figure 9.1
    – Creating a project
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_9.1_B17952.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 9.1 – Creating a project
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: This leads us to the group of JWM templates we saw in [*Chapter 2*](B17952_02_ePub.xhtml#_idTextAnchor023),
    *Working with Project Templates*. To investigate an alternative route to these
    templates, let's click on **Jira Work Management**, which can be found at the
    bottom left of the screen.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once again, a list of all the JWM project templates will be displayed, as shown
    in the following screenshot. In our scenario, let's say we want to create a new
    project for the technology division's monthly meetings. We have decided that it
    should follow the same pattern we have already set up for our Staff Meeting project.
    From here, we must select **Project management**:![Figure 9.2 – JWM project templates
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_9.2_B17952.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 9.2 – JWM project templates
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: As soon as we arrive on the next screen, we can simply click on the **Use template**
    button at the top or bottom of the screen:![Figure 9.3 – Use template
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_9.3_B17952.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 9.3 – Use template
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Finally, the **Add project details** screen will be displayed. Note that, once
    again, you will encounter a difference if you are using the free subscription.
    Creating a project based on an existing project is not available for those plans:![Figure
    9.4 – Add project details
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_9.4_B17952.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 9.4 – Add project details
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Let''s continue by looking at the process for those with a paid subscription.
    Enter a **Name** for the new project, as well as the project''s **Key**, as you
    normally would. However, there''s a twist to this: check the box for **Share settings
    with an existing project**, as shown in the preceding screenshot.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Checking this box will give you access to a dropdown field. Click on that field
    and scroll down to select the project that you would like to base your new project
    on. For our example, we will select the **Staff Meeting** project. After that,
    click the **Create project** button to finish creating the project:![Figure 9.5
    – Create project
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_9.5_B17952.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 9.5 – Create project
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Once the project has been created, you will be dropped onto the project''s
    new board, as we saw in [*Chapter 3*](B17952_03_ePub.xhtml#_idTextAnchor047),
    *Creating Your First Project*. Notice the name of the new project in the top breadcrumbs
    section. Also, notice that this looks just like the board that was created for
    our original **Staff Meeting** project:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 9.6 – Your new project'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_9.6_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 9.6 – Your new project
  prefs: []
  type: TYPE_NORMAL
- en: 'If we proceed to the **Summary** section of **Project settings** for the **Technology
    Monthly Meetings** project, we will see that this new project uses the same schemes
    as the **Staff Meeting** project. In effect, these schemes have now become **shared
    schemes** because more than one project uses each of those schemes. The following
    screenshot shows the new project using the Staff Meeting project-related schemes:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.7 – Shared schemes'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_9.7_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 9.7 – Shared schemes
  prefs: []
  type: TYPE_NORMAL
- en: Since creating new projects in this manner is not available for those on a free
    plan, let's look at an alternative to achieve similar results. What we are about
    to see with shared schemes will work with any Jira Work Management, JSM, or Jira
    Software company-managed type of project.
  prefs: []
  type: TYPE_NORMAL
- en: Using shared schemes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Shared schemes** are a great way to bring consistency to projects in your
    organization and reduce the maintenance needs for your Jira administrators. Having
    multiple projects use a single shared scheme allows you to change the scheme once
    and have it automatically update all the connected projects.'
  prefs: []
  type: TYPE_NORMAL
- en: In my organization, we try to use shared schemes as often as possible. This
    might mean being a little creative with workflows to include statuses and transitions
    that use conditions based on the project's name or role. But once you have done
    that, it becomes easier the next time.
  prefs: []
  type: TYPE_NORMAL
- en: Updating the schemes on a free plan project can achieve the same result as a
    **shared project template**; it will just take a few extra steps. Note that we
    can do this with most shared schemes for the free plan, except for the permission
    scheme. As we saw in the previous chapter, [*Chapter 8*](B17952_08_ePub.xhtml#_idTextAnchor132),
    *Configuring Permissions and Simple Administration*, you cannot modify the permission
    scheme for free subscriptions.
  prefs: []
  type: TYPE_NORMAL
- en: 'So, how does this work? Let''s take a look:'
  prefs: []
  type: TYPE_NORMAL
- en: Once again, we begin by navigating to the **Project settings** area and then
    the **Summary** section. As shown in the following screenshot, you can click on
    any of the schemes to make a change:![Figure 9.8 – Changing shared schemes
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_9.8_B17952.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 9.8 – Changing shared schemes
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Depending on which scheme you are looking to change, the process might be slightly
    different. For **TECH: Project Management Issue Type Scheme**, you will enter
    the scheme, then click the **Actions** button, and finally select **Use a different
    scheme**, as shown in the following screenshot. Then, you must select the scheme
    you want to use from the resulting list:![Figure 9.9 – Issue Type Scheme'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_9.9_B17952.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 9.9 – Issue Type Scheme
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'For **TECH: Project Management Workflow Scheme**, you must click on the **Switch
    Scheme** button and select the new scheme instead:![Figure 9.10 – Workflow Scheme'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_9.10_B17952.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 9.10 – Workflow Scheme
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Again, for our example, we will use the Staff Meeting-related scheme:![Figure
    9.11 – Selecting a workflow scheme
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_9.11_B17952.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 9.11 – Selecting a workflow scheme
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: For the new workflow scheme selection, you will be required to associate all
    the existing issues in your project with the new workflow(s).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now that we know how to change our schemes so that we can share them, let's
    look at alternative ways we can create issues.
  prefs: []
  type: TYPE_NORMAL
- en: Creating issues externally
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As we have mentioned previously, issues represent the work we do on our projects.
    They may manifest themselves as cards on a board or simply as a row in a list
    for the project. All of that tells us that issues are unique objects and belong
    to the project, not the list or the board. In other words, you do not create an
    issue on a board or a list – you create an issue against a project.
  prefs: []
  type: TYPE_NORMAL
- en: 'We are not going to go into the details of each of the following methods, but
    this list is intended to give you a high-level familiarity with the possibilities.
    Where appropriate, we have added links to further details about each method. But
    suffice it to say that each of these processes will allow you to create issues
    on your project from outside of your JWM product:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Email**: This function will allow your users to create cards by simply sending
    an email to a prearranged email address in your organization. The sender of the
    email will be captured as the *Reporter*, the subject of the email will be the
    *Summary*, and the body of the email will be placed in the *Description* field
    of the issue. See [https://support.atlassian.com/jira-cloud-administration/docs/create-issues-and-comments-from-email/](https://support.atlassian.com/jira-cloud-administration/docs/create-issues-and-comments-from-email/)
    for more details. There are also free and paid apps in the Atlassian Marketplace
    to perform this process.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Slack**: Slack is a favorite tool for many companies due to how easily internal
    chats can take place. Atlassian and Slack have teamed up to produce some excellent
    integration between the products, including the ability to create Jira issues
    from comments/discussions inside of Slack. This requires a free app to be installed.
    See [https://www.atlassian.com/software/jira/guides/expand-jira/jira-slack-integration](https://www.atlassian.com/software/jira/guides/expand-jira/jira-slack-integration)
    for more information.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Microsoft Teams**: Very similar to the Slack integration, Microsoft and Atlassian
    have connected to bring you a free app to connect the two tools. Besides issue
    creation, you can display lists of Jira issues and/or boards directly in a Teams
    tab. See [https://marketplace.atlassian.com/apps/1217836/microsoft-teams-for-jira?tab=overview&hosting=cloud](https://marketplace.atlassian.com/apps/1217836/microsoft-teams-for-jira?tab=overview&hosting=cloud)
    for more information.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**REST API call**: Though more technical, this option will provide the most
    flexibility as to the amount of information that can be created in a new issue.
    It is strongly suggested that you have some type of development background to
    attempt this. See [https://blog.developer.atlassian.com/creating-a-jira-cloud-issue-in-a-single-rest-call/](https://blog.developer.atlassian.com/creating-a-jira-cloud-issue-in-a-single-rest-call/)
    for more information.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It is awesome to see so many ways to create issues for your JWM project. But
    what if you already have other projects in Jira and want to use JWM's features?
    Let's see how we can migrate those.
  prefs: []
  type: TYPE_NORMAL
- en: Migrating existing Jira projects to Jira Work Management
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As we outlined in our very first chapter, [*Chapter 1*](B17952_01_ePub.xhtml#_idTextAnchor013),
    *Why Choose Jira Work Management?*, part of the target audience for this book
    is both those completely new to Jira and those who have used Jira before but are
    not familiar with the new JWM product.
  prefs: []
  type: TYPE_NORMAL
- en: As such, some of you may already have existing projects that use other Jira
    project types. And now, having seen the new features and capabilities of JWM,
    perhaps you would like to move some of your projects over to the new product.
    Remember that you cannot simply convert project types – you must create a new
    project and migrate issues from the old project to the new project.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you have already done some project migrations before, this will not be anything
    new for you. But for those who have not, let''s take a look. We will follow a
    basic flow that we will outline first and then add screenshots as we progress
    to reinforce the process:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Create a new JWM project**: This can be any JWM project type you desire.
    Just use a template and off you go!'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Map any existing custom fields in your project to the new project**: In the
    *Custom fields* section of [*Chapter 7*](B17952_07_ePub.xhtml#_idTextAnchor121),
    *Managing Fields, Screens, and Issue Layouts*, we discussed how to modify the
    context of the custom field to add projects. You should do this for any custom
    fields on your existing non-JWM project to add the new JWM project you just created.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Add any custom fields to your JWM project screen**: At this point, you must
    add these custom fields to the screen that will be used by your new JWM project.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Execute a basic or advanced filter search**: Execute a simple search, as
    shown in *Figure 9.13*.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Perform a bulk change to move the existing issues to the new project**: Finally,
    bulk move the existing issues to the new project.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'For our example, we will move issues from the **Staff Meeting** project to
    the **Technology Monthly Meetings** project. First, click on the **Search** box
    in the top navigation bar:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.12 – The search box'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_9.12_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 9.12 – The search box
  prefs: []
  type: TYPE_NORMAL
- en: 'At this point, you can do a basic search by changing the project on the far
    left to your existing project (Staff Meeting, for our example). Alternatively,
    you can click the `Project = STAFF`. Then, click **Search**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.13 –Search and the Bulk change option'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_9.13_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 9.13 –Search and the Bulk change option
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have a list of all the issues in the project, click the ellipsis menu
    (**…**) at the top right and select the **Bulk change** option. Select all of
    the issues, and then select **Move**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.14 – Performing a bulk move'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_9.14_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 9.14 – Performing a bulk move
  prefs: []
  type: TYPE_NORMAL
- en: Change the **To** project to your new JWM project, click **Next**, and then
    follow the prompts. When the migration is complete, all of your old project's
    issues will have been moved to your JWM project!
  prefs: []
  type: TYPE_NORMAL
- en: Finally, we will learn how another Atlassian Marketplace app can help you be
    more productive.
  prefs: []
  type: TYPE_NORMAL
- en: Working with Marketplace apps – Deep Clone for Jira
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As we saw in [*Chapter 4*](B17952_04_ePub.xhtml#_idTextAnchor062), *Modifying
    the Board, Workflow, and Associated Schemes*, Atlassian Marketplace apps can bring
    some very helpful functionality to our JWM projects by extending the capabilities
    of the built-in tools.
  prefs: []
  type: TYPE_NORMAL
- en: So, we will continue that spirit here with the Marketplace app called **Deep
    Clone for Jira**. Earlier, in the *Creating issues externally* section, we learned
    how to create issues outside of the normal **Create** button process. With Deep
    Clone, we can create issues by cloning existing issues.
  prefs: []
  type: TYPE_NORMAL
- en: Jira has a built-in clone process, but it does not provide much flexibility.
    Namely, you can only clone an issue into the same project, and you cannot adjust
    any fields in the new issue during the cloning process.
  prefs: []
  type: TYPE_NORMAL
- en: What sets Deep Clone apart is its ability to modify all the fields that are
    available in the create screen for the new issue, regardless of the project you
    are cloning into. So, you can clone an issue from Project A to Project B and modify
    the values of the fields in Project A so that they're different values in the
    new issue in Project B. You can also bulk clone issues, clone comments, subtasks,
    and even epics and their related children. Here's how to find more information
    on the app.
  prefs: []
  type: TYPE_NORMAL
- en: 'Since Deep Clone can also clone multiple objects at the same time, it can be
    used to create several new issues of varying types (epics, stories, tasks, subtasks,
    and more) in a single process. This is perhaps the closest you can come to creating
    what could be considered a custom template (in addition to the standard out-of-the-box
    templates):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.15 – Deep Clone for Jira'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_9.15_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 9.15 – Deep Clone for Jira
  prefs: []
  type: TYPE_NORMAL
- en: You can find out more about Deep Clone for Jira at [https://bit.ly/3tPqFTD](https://bit.ly/3tPqFTD).
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we learned how to create a new project by utilizing the components
    of an existing project and how to achieve similar results using shared schemes.
    We also saw some alternative methods to creating issues from outside of Jira using
    various third-party applications and tools.
  prefs: []
  type: TYPE_NORMAL
- en: Then, we learned how to migrate existing Jira projects into JWM projects to
    begin using JWM's features. Finally, we learned about the Deep Clone for Jira
    Marketplace app and how it can extend functionality by cloning issues into other
    projects and modifying fields in the process.
  prefs: []
  type: TYPE_NORMAL
- en: With these new skills, you will be able to add flexibility to how you approach
    project and issue creation. This might eliminate the need for you to have to jump
    back and forth between applications to create issues.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will learn how to leverage the Automation for Jira tool
    to automate routine tasks and add power to our projects and issues.
  prefs: []
  type: TYPE_NORMAL
