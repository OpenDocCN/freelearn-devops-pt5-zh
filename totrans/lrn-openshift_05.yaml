- en: Building an OpenShift Lab
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建 OpenShift 实验环境
- en: In the previous chapter, we briefly discussed the differences between IaaS and
    PaaS solutions. We also discussed OpenShift as a part of the PaaS solution. We
    provided a basic explanation of OpenShift's business value and the main OpenShift
    components.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们简要讨论了 IaaS 和 PaaS 解决方案之间的区别。我们还讨论了 OpenShift 作为 PaaS 解决方案的一部分。我们提供了
    OpenShift 商业价值和主要组件的基本解释。
- en: Some OpenShift users don't want to spend time deploying and configuring the
    OpenShift development or evaluation environment. However, they may need the environment
    to perform day to day operations. In this chapter, we are going to show you how
    to quickly set up a ready-to-use development environment on most popular desktop
    operating systems, using the most popular approaches.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 一些 OpenShift 用户不想花时间部署和配置 OpenShift 开发或评估环境。然而，他们可能需要该环境来执行日常操作。本章将展示如何在大多数流行桌面操作系统上，使用最流行的方法快速设置一个现成的开发环境。
- en: 'We will cover the following topics in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Why use a development environment?
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么使用开发环境？
- en: Deployment variants
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署变体
- en: Working with oc cluster up
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 oc cluster up
- en: Working with Minishift
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Minishift
- en: Working with Vagrant
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Vagrant
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'To successfully perform the labs in this chapter, you will need the following:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 为了顺利完成本章的实验，你将需要以下内容：
- en: 'One of the following desktop operating systems:'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以下任一桌面操作系统：
- en: macOS
  id: totrans-12
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: macOS
- en: Linux (CentOS 7)
  id: totrans-13
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux (CentOS 7)
- en: Windows
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows
- en: Bash for Linux or macOS
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于 Linux 或 macOS 的 Bash
- en: Brew package manager for macOS
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: macOS 的 Brew 包管理器
- en: VirtualBox
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VirtualBox
- en: Virtualization support
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 虚拟化支持
- en: Docker for macOS/Linux/Windows
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于 macOS/Linux/Windows 的 Docker
- en: The OpenShift client utility
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenShift 客户端工具
- en: You will also be asked to download and install some dependencies and binaries.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 你还需要下载并安装一些依赖项和二进制文件。
- en: Why use a development environment?
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么使用开发环境？
- en: As we mentioned in the previous chapter, OpenShift is an application delivery
    platform that can simplify day to day duties for infrastructure engineers and
    development teams. If a company's software delivery strategy is aligned with containers,
    OpenShift can significantly help to reduce production time.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在上一章提到的，OpenShift 是一个应用交付平台，可以简化基础设施工程师和开发团队的日常工作。如果公司的软件交付策略与容器对接，OpenShift
    可以显著减少生产时间。
- en: 'Every platform has a community. It is an ecosystem around the platform that
    helps to improve the platform''s functionality, aligns the platform with end user
    needs, and so on. OpenShift has a community that includes some important members
    that use the platform: software developers, QA specialists, system administrators,
    IT architects, and so on. It is very important for OpenShift to extend its community
    and involve new team members and customers. To achieve this, all team members
    should have access to the OpenShift environment; depending on their roles, specialists
    will perform software development, testing, and software delivery. Not every software
    developer or QA team member will be able to set OpenShift up from scratch, and
    that is the main reason they seek an easy way to start working with OpenShift.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 每个平台都有一个社区。它是围绕平台构建的生态系统，旨在帮助提升平台功能，使平台与最终用户需求对接，等等。OpenShift 拥有一个社区，社区成员包括一些使用该平台的重要人物：软件开发人员、QA
    专家、系统管理员、IT 架构师等。对于 OpenShift 来说，扩展社区并吸引新的团队成员和客户是非常重要的。为了实现这一目标，所有团队成员都应该能够访问
    OpenShift 环境；根据他们的角色，专家们将进行软件开发、测试和软件交付。并非每个软件开发人员或 QA 团队成员都能从零开始搭建 OpenShift，这是他们寻找简便方法开始使用
    OpenShift 的主要原因。
- en: The OpenShift development environment can be created easily and doesn't require
    significant effort. Usually, this environment is located on a local PC and doesn't
    have a large capacity.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: OpenShift 开发环境可以轻松创建，不需要大量的努力。通常，这个环境位于本地计算机上，并且不需要大容量。
- en: 'There are a number of benefits in having an easy-to-use development environment:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有易于使用的开发环境有很多好处：
- en: '**OpenShift evaluation**: Sometimes, users want to understand how OpenShift
    is aligned with their needs. They may have no experience with OpenShift, and may
    want to touch it on a real system. For most technical people, marketing presentations/demonstrations
    don''t mean anything. A fast and easy deployment process for the development environment
    can help.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OpenShift 评估**：有时，用户希望了解 OpenShift 如何与他们的需求对接。他们可能没有 OpenShift 经验，可能想在真实系统上试用它。对于大多数技术人员而言，营销演示并没有实质意义。为开发环境提供一个快速简便的部署过程可以帮助解决这个问题。'
- en: '**A quick environment for developers/QAs**: Developers usually don''t want
    to get too involved with deploying an environment. A fast method for deploying
    OpenShift can save some effort, allowing them to focus on primary activities (such
    as software development and testing).'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**为开发者/QA 提供快速环境**：开发者通常不想过多参与环境的部署。快速部署 OpenShift 的方法可以节省一些精力，让他们能够专注于主要工作（如软件开发和测试）。'
- en: Deployment variants
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署变体
- en: There are several ways to set up and start a development environment. Usually,
    the development environment is run on a workstation, and it is important to cover
    the most popular workstation operating systems. In the next section, we will describe
    several ways to quickly deploy OpenShift on workstations on different platforms.
    The most popular desktops are Windows, macOS, and Linux.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 有多种方法可以设置和启动开发环境。通常，开发环境运行在工作站上，覆盖最流行的工作站操作系统非常重要。在下一节中，我们将描述几种在不同平台的工作站上快速部署
    OpenShift 的方法。最流行的桌面操作系统包括 Windows、macOS 和 Linux。
- en: Please be aware that a development environment is not equal to a production
    environment, due to capacity, scalability, and security limitations.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，开发环境不等同于生产环境，原因是容量、可扩展性和安全性方面的限制。
- en: Working with oc cluster up
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 oc cluster up
- en: The OpenShift client utility named `oc` can start a local OpenShift cluster,
    which includes all of the required services, such as an internal registry, a router,
    templates, and so on. This is one of the easiest ways to start a development environment.
    `oc cluster up` creates a default user and project, and once it is complete, it
    will allow you to use any commands to work with the OpenShift environment, such
    as `oc new-app`.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 名为 `oc` 的 OpenShift 客户端工具可以启动本地 OpenShift 集群，其中包括所有必要的服务，如内部注册表、路由器、模板等。这是启动开发环境最简单的方法之一。`oc
    cluster up` 会创建一个默认用户和项目，完成后，你可以使用任何命令来操作 OpenShift 环境，如 `oc new-app`。
- en: This method provides a containerized OpenShift environment that can easily be
    run on a number of platforms.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 该方法提供了一个容器化的 OpenShift 环境，可以轻松在多个平台上运行。
- en: System requirements and prerequisites
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 系统要求和前提条件
- en: 'The `oc cluster up` method supports Linux, macOS, and Windows-based workstations.
    By default, the method requires an environment with a Docker machine installed.
    However, the command can create a Docker machine by itself. The following table
    shows the available deployment scenarios:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '`oc cluster up` 方法支持基于 Linux、macOS 和 Windows 的工作站。默认情况下，该方法需要安装了 Docker 的环境。然而，命令本身也可以创建
    Docker 机器。以下表格展示了可用的部署场景：'
- en: '| **Operating system** | **Docker implementation** |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| **操作系统** | **Docker 实现** |'
- en: '| Linux | Default docker daemon for OS |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| Linux | 操作系统默认 Docker 守护进程 |'
- en: '| macOS | Docker for macOS |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| macOS | Docker for macOS |'
- en: '| macOS | Docker Toolbox |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| macOS | Docker Toolbox |'
- en: '| Windows | Docker for Windows |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| Windows | Docker for Windows |'
- en: '| Windows | Docker Toolbox |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| Windows | Docker Toolbox |'
- en: CentOS 7
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CentOS 7
- en: This method can also be used on Fedora or RHEL based hosts.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法也可以用于 Fedora 或基于 RHEL 的主机。
- en: 'The deployment process involves several steps:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 部署过程涉及多个步骤：
- en: Install Docker
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装 Docker
- en: Configure an insecure registry
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置不安全的注册表
- en: Allow ports on the firewall
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 允许防火墙上的端口
- en: Download the OpenShift client utility
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载 OpenShift 客户端工具
- en: Start a cluster
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动集群
- en: 'Let''s study these steps in detail:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们详细研究这些步骤：
- en: '**Docker installation**:This doesn''t involve anything special, and was described
    in previous chapters. The following commands must be run under the root account:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**Docker 安装**：这并不涉及特别的操作，之前的章节中已有描述。以下命令必须以 root 用户身份运行：'
- en: '[PRE0]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**Configuring an insecure registry**:This is required to be able to use an
    internal Docker registry, which comes with OpenShift installation. If this is
    not configured, `oc cluster up` will fail.'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**配置不安全的注册表**：这对于能够使用与 OpenShift 安装一起提供的内部 Docker 注册表是必需的。如果没有配置这个，`oc cluster
    up` 将会失败。'
- en: 'To allow for an insecure OpenShift registry, run the following commands under
    the root user:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 为了允许不安全的OpenShift注册表，请在root用户下运行以下命令：
- en: '[PRE1]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This requires restarting the Docker daemon so as to apply the new configuration.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这需要重新启动Docker守护进程以应用新的配置。
- en: '**Configuring the firewall**: The default firewall configuration doesn''t enable all
    of the ports required for an OpenShift cluster. You need to adjust the settings
    using `firewall-cmd`:'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**配置防火墙**：默认的防火墙配置没有启用OpenShift集群所需的所有端口。你需要使用`firewall-cmd`调整设置：'
- en: '| **Port** | **Description** |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| **端口** | **描述** |'
- en: '| `8443`/`tcp` | `API port` |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| `8443`/`tcp` | `API端口` |'
- en: '| `53`/`udp` | `DND` |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| `53`/`udp` | `DND` |'
- en: '| `8053`/`udp` | `Internal DNS` |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| `8053`/`udp` | `内部DNS` |'
- en: 'This can be achieved through the following snippet:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以通过以下代码片段实现：
- en: '[PRE2]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: In most cases, the firewall is not an issue in the development environment,
    and can be stopped with `systemctl stop firewalld` and `systemctl disable firewalld`.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数情况下，防火墙在开发环境中不是问题，可以通过`systemctl stop firewalld`和`systemctl disable firewalld`停止防火墙。
- en: You can determine the network address of Docker by running
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过运行以下命令来确定Docker的网络地址：
- en: '`docker network inspect -f "{{range .IPAM.Config }}{{ .Subnet }}{{end}}" bridge`.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '`docker network inspect -f "{{range .IPAM.Config }}{{ .Subnet }}{{end}}" bridge`。'
- en: '**Downloading the** **oc** **utility**:The OpenShift client utility named `oc`
    is available in standard repositories; however, it is possible to download the
    utility from [https://github.com/openshift/origin/releases](https://github.com/openshift/origin/releases).
    We would recommend using the standard CentOS repositories:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**下载** **oc** **工具**：名为`oc`的OpenShift客户端工具可以在标准仓库中找到；但是，也可以从[https://github.com/openshift/origin/releases](https://github.com/openshift/origin/releases)下载该工具。我们建议使用标准的CentOS仓库：'
- en: '[PRE3]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: We omitted the output of the commands. It is expected that these commands will
    install a number of dependencies.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们省略了命令的输出。预计这些命令将安装多个依赖项。
- en: '**Starting an OpenShift cluster**:Once all of the prerequisites are met, you
    will be able to start the cluster by running `oc cluster up`. The command will
    download all of the required Docker images from public repositories, and then
    run all of the required containers:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**启动OpenShift集群**：一旦满足所有前提条件，你就可以通过运行`oc cluster up`来启动集群。该命令将从公共仓库下载所有必需的Docker镜像，然后运行所有必需的容器：'
- en: '[PRE4]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: In the preceding example, we statically bound the version of the OpenShift cluster
    to `v3.9.0`. In most cases, you don't have to specify a version. So, you just
    need `oc cluster up` without any arguments.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的示例中，我们将OpenShift集群的版本静态绑定到`v3.9.0`。在大多数情况下，你无需指定版本。因此，你只需要运行`oc cluster
    up`，而不带任何参数。
- en: As you can see, `oc cluster up` deployed a ready-to-use, one-node OpenShift
    environment.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，`oc cluster up`已部署了一个可供使用的单节点OpenShift环境。
- en: 'By default, this OpenShift environment was configured to listen on the loopback
    interface (`127.0.0.1`). This means that you may connect to the cluster using
    `https://127.0.0.1:8443`. This behavior can be changed by adding special parameters,
    such as `--public-hostname=`. A full list of available options can be shown by
    using the following command:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，这个OpenShift环境被配置为在回环接口（`127.0.0.1`）上监听。这意味着你可以通过`https://127.0.0.1:8443`连接到集群。可以通过添加特定的参数（如`--public-hostname=`）来更改这种行为。可以使用以下命令显示所有可用选项：
- en: '[PRE5]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '**Verification**:Once the cluster has deployed, you can verify that it is ready
    to use. The default OpenShift configuration points you to an unprivileged user,
    named `developer`. You may raise your permissions by using the following commands:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**验证**：集群部署完成后，你可以验证它是否准备好使用。默认的OpenShift配置指向一个无特权的用户，名为`developer`。你可以使用以下命令提升权限：'
- en: '[PRE6]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Once you have admin access rights, you can verify the node configuration with
    `oc get node`:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你获得管理员访问权限，就可以使用`oc get node`来验证节点配置：
- en: '[PRE7]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '**Shutting down**:Once an `oc cluster up` environment has deployed, it can
    be shut down with `oc cluster down`.'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**关闭**：一旦`oc cluster up`环境部署完成，可以通过`oc cluster down`将其关闭。'
- en: macOS
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: macOS
- en: 'The installation and configuration process for macOS is very similar to that
    for Linux. It assumes that Docker for macOS is being used. The deployment process
    involves the following:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: macOS的安装和配置过程与Linux非常相似。假设正在使用Docker for macOS。部署过程包括以下步骤：
- en: Docker for macOS installation and configuration
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker for macOS的安装和配置
- en: Installation of `openshift-cli` and required packages
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装`openshift-cli`和所需的包
- en: Starting a cluster
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动集群
- en: The `oc cluster up` command requires Docker to be installed on your system,
    because essentially, it creates a Docker container and runs OpenShift inside that
    Docker container. It is a very elegant and clean solution.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '`oc cluster up` 命令要求系统上安装 Docker，因为它本质上是创建一个 Docker 容器并在该容器内运行 OpenShift。这是一个非常优雅且清晰的解决方案。'
- en: The Docker for macOS installation process is described at the official portal: [https://docs.docker.com/docker-for-mac](https://docs.docker.com/docker-for-mac).
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: Docker for macOS 的安装过程可以参考官方门户：[https://docs.docker.com/docker-for-mac](https://docs.docker.com/docker-for-mac)。
- en: 'Once the Docker service is running, you need to configure the insecure registry
    (`172.30.0.0/16`). From the Docker menu in the toolbar, you need to select the
    Preferences menu and click on the Daemon icon. In the Basic tab of the configuration
    dialog, click on the + icon under Insecure registries and add the following new
    entry: `172.30.0.0/16`:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦 Docker 服务运行起来，你需要配置不安全的注册表（`172.30.0.0/16`）。在工具栏的 Docker 菜单中，选择首选项菜单并点击 Daemon
    图标。在配置对话框的基本选项卡中，点击不安全注册表下的 + 图标，并添加以下新条目：`172.30.0.0/16`：
- en: '![](img/00038.jpeg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00038.jpeg)'
- en: When finished, click on Apply & Restart.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，点击应用并重启。
- en: 'Once the Docker service is configured, we need to install all the required
    software and start the cluster using the following steps:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦配置好 Docker 服务，我们需要安装所有必需的软件，并按照以下步骤启动集群：
- en: '**OpenShift client installation**: Install the `socat` and `openshift-cli`
    packages on your system as follows:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**OpenShift 客户端安装**：按照以下步骤在系统上安装 `socat` 和 `openshift-cli` 包：'
- en: '[PRE8]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: If you do not have `brew` installed, find the installation process at [https://brew.sh/](https://brew.sh/).
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你没有安装`brew`，可以在[https://brew.sh/](https://brew.sh/)找到安装过程。
- en: '**Starting and stopping the OpenShift cluster**:The cluster can be started
    just like it was in Linux:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**启动和停止 OpenShift 集群**：集群可以像在 Linux 中一样启动：'
- en: '[PRE9]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: At the time of writing this book, `oc cluster up` on macOS didn't work for version
    3.9\. I would recommend you to temporarily use 3.7 version of the client utility.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在编写本书时，`oc cluster up`在 macOS 上的版本 3.9 不可用。我建议你暂时使用版本 3.7 的客户端工具。
- en: 'An installation verification can be performed by the OpenShift admin user,
    as follows:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: OpenShift 管理员用户可以执行安装验证，方法如下：
- en: '[PRE10]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The Openshift cluster is up and ready for work. We may check the status of
    the cluster using the following command:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: OpenShift 集群已经启动并准备好工作。我们可以使用以下命令检查集群的状态：
- en: '[PRE11]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The cluster can be stopped as follows:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 集群可以通过以下方式停止：
- en: '[PRE12]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Windows
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Windows
- en: The OpenShift environment can be deployed on Windows on a machine that supports
    Docker for Windows.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: OpenShift 环境可以部署在支持 Docker for Windows 的 Windows 机器上。
- en: '**Docker for Windows installation and configuration**:'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Docker for Windows 安装与配置**：'
- en: The Docker for Windows installation process is described at [https://docs.docker.com/docker-for-windows](https://docs.docker.com/docker-for-windows).
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: Docker for Windows 的安装过程可以参考[https://docs.docker.com/docker-for-windows](https://docs.docker.com/docker-for-windows)。
- en: 'Once Docker is running, you will need to configure the insecure registry settings,
    as follows:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦 Docker 运行，你需要配置不安全注册表设置，如下所示：
- en: Right-click on the Docker icon in the notification area, and select Settings.
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键点击通知区域的 Docker 图标，选择设置。
- en: Click on Docker Daemon in the Settings dialog.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在设置对话框中点击 Docker Daemon。
- en: 'Edit the Docker daemon configuration by adding `172.30.0.0/16` to the `"insecure-registries":`
    setting:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过添加 `172.30.0.0/16` 到 `"insecure-registries":` 设置中，编辑 Docker 守护进程配置：
- en: '[PRE13]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Click on Apply, and Docker will restart.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击应用，Docker 将重启。
- en: 'Once Docker service is configured, the OpenShift client `oc` can be installed
    as shown below. The example also shows how to start the cluster:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦配置好 Docker 服务，就可以按照以下方式安装 OpenShift 客户端`oc`。示例还展示了如何启动集群：
- en: '**OpenShift client installation**:Download the Windows `oc.exe` binary from [https://github.com/openshift/origin/releases/download/v3.7.1/openshift-origin-client-tools-v3.7.1-ab0f056-mac.zip](https://github.com/openshift/origin/releases/download/v3.7.1/openshift-origin-client-tools-v3.7.1-ab0f056-mac.zip),[ ](https://github.com/openshift/origin/releases/download/v3.7.1/openshift-origin-client-tools-v3.7.1-ab0f056-mac.zip)and
    place it in `C:\Windows\system32` or another path folder.'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OpenShift 客户端安装**：从[https://github.com/openshift/origin/releases/download/v3.7.1/openshift-origin-client-tools-v3.7.1-ab0f056-mac.zip](https://github.com/openshift/origin/releases/download/v3.7.1/openshift-origin-client-tools-v3.7.1-ab0f056-mac.zip)下载
    Windows `oc.exe` 二进制文件，并将其放置在 `C:\Windows\system32` 或其他路径文件夹中。'
- en: You can also download the latest code from [https://github.com/openshift/origin/releases](https://github.com/openshift/origin/releases)
    under `Assets`.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以从 [https://github.com/openshift/origin/releases](https://github.com/openshift/origin/releases)
    下载最新代码，在 `Assets` 下。
- en: '**Starting/stopping a cluster**: The Windows version of the OpenShift client
    is also able to start and stop the cluster, as follows:'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**启动/停止集群**：OpenShift 客户端的 Windows 版本也可以启动和停止集群，具体操作如下：'
- en: '[PRE14]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The Openshift cluster is up. You may want to check the status of the cluster
    using the following:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: OpenShift 集群已启动。您可能希望使用以下命令检查集群的状态：
- en: '[PRE15]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Accessing OpenShift through a web browser
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过 Web 浏览器访问 OpenShift。
- en: 'Whether you use `oc cluster up` or any other solution, when OpenShift is up
    and running, you can access it via a web browser. OpenShift is available on port
    `8443`, by default. In the case of `oc cluster up`, you can reach the OpenShift
    login page at `https://localhost:8443/`:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 无论您是使用 `oc cluster up` 还是其他解决方案，当 OpenShift 正在运行时，您都可以通过 Web 浏览器访问它。OpenShift
    默认在端口 `8443` 上可用。在 `oc cluster up` 的情况下，您可以通过 `https://localhost:8443/` 访问 OpenShift
    登录页面：
- en: '![](img/00039.jpeg)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00039.jpeg)'
- en: Use the developer login, with any password, to log in to OpenShift. We are going
    to work with the OpenShift web interface later in this book, while developing
    and running microservice applications.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 使用开发者登录并输入任意密码即可登录 OpenShift。稍后我们将通过本书中的 Web 界面开发和运行微服务应用程序。
- en: 'Once you log in, you will be presented with the service catalog, which lets
    you to choose from available language runtimes:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 登录后，您将看到服务目录，您可以从中选择可用的语言运行时：
- en: '![](img/00040.jpeg)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00040.jpeg)'
- en: '*Project* in OpenShift extend the concept of namespaces from Kubernetes and
    serve as means of separating teams and individual users working with the same
    OpenShift cluster. Another term often used for projects is *tenant *(for example,
    in OpenStack). You can create projects from the web console by clicking on the
    Create Project button and specifying its name:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: OpenShift 中的 *Project* 扩展了 Kubernetes 的命名空间概念，作为将同一 OpenShift 集群中的团队和个人用户分隔开来的手段。项目的另一个常用术语是
    *tenant*（例如，在 OpenStack 中）。您可以通过点击“创建项目”按钮并指定项目名称来从 Web 控制台创建项目：
- en: '![](img/00041.jpeg)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00041.jpeg)'
- en: 'After the project is created, you can click on its name on the right side of
    the screen and you will be redirected to the project''s overview page, from where
    you can create applications and other resources:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 创建项目后，您可以点击屏幕右侧的项目名称，系统将引导您进入项目概览页面，在该页面您可以创建应用程序和其他资源：
- en: '![](img/00042.jpeg)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00042.jpeg)'
- en: 'Just to give you the basic understanding of how to navigate through OpenShift
    web console, see the short guide below:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让您基本了解如何在 OpenShift Web 控制台中导航，请参阅下面的简要指南：
- en: Applications menu is used to access resources, directly responsible for your
    application, like Deployments, Pods, Services, Stateful Sets, and Routes
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序菜单用于访问与您的应用程序直接相关的资源，如部署、Pods、服务、Stateful Sets 和路由。
- en: Builds menu lets you manage configuration of Builds and build strategies, such
    as Pipelines, as well as Images used to build your application from source code
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Builds 菜单让您管理构建配置和构建策略，如 Pipelines，以及用于从源代码构建应用程序的镜像。
- en: Resources menu gives you access to other secondary resources that can be used
    by your application in advanced use cases, such as Quotas, Config Maps, Secrets,
    and Other Resources. You can also use this menu to view and manage Membership
    for your project
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Resources 菜单让您访问可以在高级用例中由应用程序使用的其他次要资源，如配额、配置映射、秘密和其他资源。您还可以使用此菜单查看和管理项目的成员资格。
- en: Storage menu is used to request persistent storage by creating persistent storage
    claims
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储菜单用于通过创建持久存储声明来请求持久存储。
- en: Monitoring menu provides you with access to various metrics collected by OpenShift
    on CPU, RAM, and network bandwidth utilization (if you have metrics enabled),
    as well as Events going on in real time
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 监控菜单为您提供访问 OpenShift 收集的各种指标，包括 CPU、RAM 和网络带宽利用率（如果启用了指标收集），以及实时发生的事件。
- en: Finally, Catalog menu is a shortcut you can take to access service catalog directly
    from the project you are currently in without having to go back to the first page.
    This was introduced in OpenShift Origin 3.9.
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，Catalog 菜单是您可以直接访问服务目录的快捷方式，您无需返回首页即可从当前项目访问。这一功能在 OpenShift Origin 3.9 中引入。
- en: Working with Minishift
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Minishift。
- en: Minishift is another way to deploy OpenShift locally, by running a single-node
    OpenShift cluster inside a virtual machine. Recently, we showed you how to use
    Minikube to deploy a development environment for Kubernetes. Minishift uses the
    same approach, because it was developed by Kubernetes community as a continuation
    of Minikube, mentioned in the [Chapter 2](part0071.html#23MNU0-78aafb146b304cdeb9b3261a70edabde), *Kubernetes
    Overview*, so it uses the same command line syntax. Minishift deployment is supported
    on the Windows, macOS, and Linux operating systems. Minishift uses libmachine to
    provision a virtual machine, boot2docker as OS, and OpenShift Origin to run the
    cluster. Minishift requires a hypervisor to run the virtual machine containing
    OpenShift.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: Minishift 是另一种在本地部署 OpenShift 的方式，它通过在虚拟机中运行一个单节点的 OpenShift 集群来实现。最近，我们展示了如何使用
    Minikube 来部署 Kubernetes 的开发环境。Minishift 采用了相同的方法，因为它是 Kubernetes 社区开发的，并作为 Minikube
    的延续（详见 [第 2 章](part0071.html#23MNU0-78aafb146b304cdeb9b3261a70edabde)，*Kubernetes
    概述*），因此使用了相同的命令行语法。Minishift 支持在 Windows、macOS 和 Linux 操作系统上进行部署。Minishift 使用
    libmachine 来提供虚拟机，使用 boot2docker 作为操作系统，并使用 OpenShift Origin 来运行集群。Minishift 需要一个虚拟化管理程序来运行包含
    OpenShift 的虚拟机。
- en: 'Depending on your host operating system, you have a choice between the following
    hypervisors:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 根据你的主机操作系统，你可以选择以下虚拟化管理程序：
- en: '| **Operating system** | **Hypervisor** | **Platform** |'
  id: totrans-142
  prefs: []
  type: TYPE_TB
  zh: '| **操作系统** | **虚拟化管理程序** | **平台** |'
- en: '| macOS | xhyve | VirtualBox |'
  id: totrans-143
  prefs: []
  type: TYPE_TB
  zh: '| macOS | xhyve | VirtualBox |'
- en: '| Linux | KVM | VirtualBox |'
  id: totrans-144
  prefs: []
  type: TYPE_TB
  zh: '| Linux | KVM | VirtualBox |'
- en: '| Windows | Hyper-V | VirtualBox |'
  id: totrans-145
  prefs: []
  type: TYPE_TB
  zh: '| Windows | Hyper-V | VirtualBox |'
- en: '`boot2docker` is a lightweight Linux distribution based on Tiny Core Linux,
    built specifically to run containers. The project is now deprecated.'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '`boot2docker` 是一个基于 Tiny Core Linux 的轻量级 Linux 发行版，专门为运行容器而构建。该项目现已弃用。'
- en: Before you begin, you need to configure virtualization support ([https://docs.openshift.org/latest/minishift/getting-started/installing.html#install-prerequisites](https://docs.openshift.org/latest/minishift/getting-started/installing.html#install-prerequisites))
    and install VirtualBox.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始之前，你需要配置虚拟化支持（[https://docs.openshift.org/latest/minishift/getting-started/installing.html#install-prerequisites](https://docs.openshift.org/latest/minishift/getting-started/installing.html#install-prerequisites)）并安装
    VirtualBox。
- en: Then, you need to download the archive for your operating system from the Minishift
    releases page ([https://github.com/minishift/minishift/releases](https://github.com/minishift/minishift/releases))
    and unpack it. The `minishift` binary file from the archive needs to be copied
    to the OS's preferred location, and the location should be added to your `PATH`
    environment variable. Minishift will use the SSH binary found in the system `PATH` environment.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，你需要从 Minishift 发布页面下载适用于你操作系统的压缩包（[https://github.com/minishift/minishift/releases](https://github.com/minishift/minishift/releases)）并解压。压缩包中的
    `minishift` 二进制文件需要复制到操作系统的首选位置，并将该位置添加到你的 `PATH` 环境变量中。Minishift 将使用系统 `PATH`
    环境中找到的 SSH 二进制文件。
- en: 'On macOS, you can also use Homebrew Cask to install a stable version of Minishift:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 在 macOS 上，你还可以使用 Homebrew Cask 安装 Minishift 的稳定版本：
- en: '`$ brew cask install minishift`'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '`$ brew cask install minishift`'
- en: 'To update the binary, run the following command:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 要更新二进制文件，请运行以下命令：
- en: '`$ brew cask install --force minishif`'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '`$ brew cask install --force minishif`'
- en: If all of the prerequisites are met, you can start a cluster using `minishift
    start`.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 如果所有先决条件都满足，你可以使用 `minishift start` 启动一个集群。
- en: '[PRE16]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Once the deployment process is complete, you will be able to connect using
    the OpenShift client:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 部署过程完成后，你将能够使用 OpenShift 客户端连接：
- en: '[PRE17]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: You will need to install `oc client`, as well. You can refer to the previous
    sections in this chapter for the `oc client` installation procedure.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 你还需要安装 `oc client`。你可以参考本章前面的章节来获取 `oc client` 安装的步骤。
- en: 'The OpenShift cluster is up. You may want to check its status using `oc get
    nodes` as it is shown in the following command:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: OpenShift 集群已启动。你可能需要使用 `oc get nodes` 来检查其状态，如下所示：
- en: '[PRE18]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: You can connect to the Minishift VM using `minishift ssh`. The Minishift cluster
    can be stopped with `minishift stop`.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过 `minishift ssh` 连接到 Minishift 虚拟机。可以使用 `minishift stop` 停止 Minishift 集群。
- en: Depending on the `oc client` and OpenShift versions, your output may vary.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 根据 `oc client` 和 OpenShift 的版本，输出结果可能有所不同。
- en: 'To stop a Minishift environment and delete it, you can use `minishift stop`
    and `minishift delete`, as follows:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 要停止一个 Minishift 环境并删除它，你可以使用 `minishift stop` 和 `minishift delete`，如下所示：
- en: '[PRE19]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Working with Vagrant
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 与 Vagrant 一起使用
- en: This method allows for using an available Vagrant box, that has all the OpenShift
    software installed on a single VM.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 该方法允许使用已安装所有 OpenShift 软件的可用 Vagrant box，在单个虚拟机上运行。
- en: Vagrant software allows for simplifying the deployment and the initial configuration
    of virtual machines, by using different underlying virtualization technologies.
    In most cases, a plain text file called `Vagrantfile` describes the parameters
    of the VM (such as the name, hostname, RAM, vCPUs, storage, and so on). Once `Vagrantfile`
    is ready, the Vagrant software can use it to create, stop, and destroy a VM.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: Vagrant 软件通过使用不同的底层虚拟化技术，简化了虚拟机的部署和初始配置。在大多数情况下，一个名为 `Vagrantfile` 的纯文本文件描述了虚拟机的参数（如名称、主机名、内存、vCPUs、存储等）。一旦
    `Vagrantfile` 准备好，Vagrant 软件就可以使用它来创建、停止和销毁虚拟机。
- en: 'The beauty of using Vagrant is that we can redeploy VMs as many times as we
    need to, and each time, we will have the same result:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Vagrant 的优点是我们可以根据需要重新部署虚拟机多次，并且每次都会得到相同的结果：
- en: '![](img/00043.gif)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00043.gif)'
- en: Vagrant architecture
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: Vagrant 架构
- en: 'Vagrant includes the following main components:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: Vagrant 包含以下主要组件：
- en: '**Vagrant software**: Automates virtual machine building and configuration.
    Has the vagrant CLI utility, available for different operating systems.'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Vagrant 软件**：自动化虚拟机的构建和配置。具有 vagrant CLI 工具，适用于不同的操作系统。'
- en: '**Box**: A TAR file that contains a virtual machine image, with metadata. Box
    files and their contained images are specific to each provider.'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Box**：包含虚拟机镜像和元数据的 TAR 文件。Box 文件及其包含的镜像特定于每个提供商。'
- en: '**Provider**: The interface that allows Vagrant to communicate with different
    virtualization platforms. By default, it uses VirtualBox. Libvirt, KVM, OpenStack,
    and other providers are also available .'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Provider**：允许 Vagrant 与不同虚拟化平台通信的接口。默认情况下，使用 VirtualBox。也可以使用 Libvirt、KVM、OpenStack
    和其他提供商。'
- en: '**Vagrantfile**: A plain text file that contains the instructions for how to
    create virtual machines. The instructions are written using Ruby-based **Domain
    Specific Language** (**DSL**). Plain Ruby can also be used, for advanced use cases.'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Vagrantfile**：一个纯文本文件，包含创建虚拟机的指令。这些指令是使用基于 Ruby 的 **领域特定语言**（**DSL**）编写的。对于高级用例，也可以使用纯
    Ruby。'
- en: Vagrant installation
  id: totrans-175
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Vagrant 安装
- en: The Vagrant instructions and the software to download are available at [https://www.vagrantup.com/docs/installation/](https://www.vagrantup.com/docs/installation/).
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: Vagrant 的安装指令和下载软件可在 [https://www.vagrantup.com/docs/installation/](https://www.vagrantup.com/docs/installation/)
    找到。
- en: Just download the package for your OS, and then install it. Vagrant also requires
    a virtualization platform, like Vmware, KVM, VirtualBox, AWS, Hyper-V, or Docker.
    You will be required to install the appropriate virtualization platform, depending
    on your operating system.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 只需下载适用于你的操作系统的安装包，然后进行安装。Vagrant 还需要一个虚拟化平台，如 Vmware、KVM、VirtualBox、AWS、Hyper-V
    或 Docker。根据操作系统的不同，你需要安装适当的虚拟化平台。
- en: '**For macOS, install the following**:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '**对于 macOS，安装以下组件**：'
- en: Download the latest Vagrant software from the preceding link, and install it.
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从上述链接下载最新的 Vagrant 软件并安装。
- en: Download and install VirtualBox from [https://www.virtualbox.org/wiki/Downloads](https://www.virtualbox.org/wiki/Downloads).
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 [https://www.virtualbox.org/wiki/Downloads](https://www.virtualbox.org/wiki/Downloads)
    下载并安装 VirtualBox。
- en: '**For CentOS, install the following**:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: '**对于 CentOS，安装以下组件**：'
- en: Download the latest Vagrant software from the preceding link, and install it.
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从上述链接下载最新的 Vagrant 软件并安装。
- en: 'Install `libvirt` drivers and `kvm`:'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装 `libvirt` 驱动程序和 `kvm`：
- en: '[PRE20]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '**For Windows install the following**:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '**对于 Windows，安装以下组件**：'
- en: Download the latest Vagrant software from the preceding link, and install it.
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从上述链接下载最新的 Vagrant 软件并安装。
- en: Download and install VirtualBox from [https://www.virtualbox.org/wiki/Downloads](https://www.virtualbox.org/wiki/Downloads).
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 [https://www.virtualbox.org/wiki/Downloads](https://www.virtualbox.org/wiki/Downloads)
    下载并安装 VirtualBox。
- en: 'Once you are done, verify that Vagrant is installed by checking the Vagrant
    software version:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，通过检查 Vagrant 软件版本来验证 Vagrant 是否已安装：
- en: '[PRE21]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Installing OpenShift with an all-in-one Vagrant box
  id: totrans-190
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用全功能 Vagrant box 安装 OpenShift
- en: Before introduction of Minishift in May 2017, users mostly relied on `openshift/origin-all-in-one` Vagrant
    all-in-one box. This method is not so popular, because the box hasn't been updated
    for almost 2 years and represents OpenShift Origin 1.3, which lacks in features,
    as well as in stability, so it's mostly of historical interest today. Even though
    it can still be used for testing purposes, we suggest you rely on `oc cluster
    up` and Minishift.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 在 2017 年 5 月引入 Minishift 之前，用户主要依赖 `openshift/origin-all-in-one` Vagrant 全功能盒子。这种方法不太流行，因为该盒子已近两年没有更新，并且代表的是
    OpenShift Origin 1.3，功能和稳定性较差，因此现在主要具有历史意义。尽管它仍然可以用于测试目的，我们建议你使用 `oc cluster up`
    和 Minishift。
- en: 'A Vagrant-based environment can be deployed as follows:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 可以按照以下方式部署基于 Vagrant 的环境：
- en: '[PRE22]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The preceding command will create the following `Vagrantfile`:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令将创建以下 `Vagrantfile`：
- en: '[PRE23]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Once the box has deployed, you can log in using `admin` and a password, as
    follows:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦盒子部署完成，你可以使用 `admin` 和密码登录，如下所示：
- en: '[PRE24]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'The OpenShift cluster is up. You may want to check the cluster status as shown
    in the following command:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: OpenShift 集群已启动。你可能想要检查集群状态，使用以下命令查看：
- en: '[PRE25]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Please keep in mind that the Vagrant box for this method is 2 years behind latest
    version of OpenShift, so if you want to see most recent features, we recommend
    using another option.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，这种方法的 Vagrant 盒子落后于最新版本的 OpenShift 两年，因此，如果你想看到最新的功能，建议使用其他选项。
- en: Summary
  id: totrans-201
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we discussed how to create an OpenShift lab environment quickly
    and easily, using the most popular and simple methods: `oc cluster up`, Minishift,
    and Vagrant, on the CentOS 7, macOS, and Windows operating systems.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们讨论了如何使用最流行和最简单的方法：`oc cluster up`、Minishift 和 Vagrant，在 CentOS 7、macOS
    和 Windows 操作系统上快速轻松地创建 OpenShift 实验环境。
- en: In the next chapter, you will learn about the hardware and software requirements
    of OpenShift Origin. You will get a basic understanding of OpenShift deployment
    scenarios and installation methods. Also, you will perform an advanced installation
    of OpenShift using Ansible, and you will learn about the various options to customize
    your setup with Ansible inventory.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，你将了解 OpenShift Origin 的硬件和软件要求。你将对 OpenShift 的部署场景和安装方法有一个基本的理解。此外，你还将使用
    Ansible 执行 OpenShift 的高级安装，并了解如何通过 Ansible 清单自定义你的设置。
- en: Questions
  id: totrans-204
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: 'What is the main prerequisite for the `oc cluster up` solution? (Choose one):'
  id: totrans-205
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`oc cluster up` 解决方案的主要前提是什么？（请选择一个）：'
- en: Docker
  id: totrans-206
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Docker
- en: Minishift
  id: totrans-207
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Minishift
- en: Virtualbox
  id: totrans-208
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Virtualbox
- en: Hyper-V
  id: totrans-209
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Hyper-V
- en: 'What port is used, by default, to reach the OpenShift management web page?
    choose one:'
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 默认情况下，访问 OpenShift 管理网页所使用的端口是哪个？请选择一个：
- en: '8443'
  id: totrans-211
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '8443'
- en: '443'
  id: totrans-212
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '443'
- en: '8080'
  id: totrans-213
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '8080'
- en: '80'
  id: totrans-214
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: '80'
- en: 'The `oc cluster up` command uses a VM to bring up the Openshift cluster:'
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`oc cluster up` 命令使用虚拟机启动 OpenShift 集群：'
- en: 'True'
  id: totrans-216
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'True'
- en: 'False'
  id: totrans-217
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'False'
- en: 'What command is used to log in to Openshift via the CLI? choose one:'
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用于通过 CLI 登录 OpenShift 的命令是什么？请选择一个：
- en: oc login system:admin
  id: totrans-219
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: oc login system:admin
- en: oc login -u system:admin
  id: totrans-220
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: oc login -u system:admin
- en: oc login -u admin
  id: totrans-221
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: oc login -u admin
- en: oc login admin
  id: totrans-222
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: oc login admin
- en: 'What are the commands to start and stop the OpenShift demo cluster with the
    `oc` command? choose one:'
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `oc` 命令启动和停止 OpenShift 演示集群的命令是什么？请选择一个：
- en: oc cluster up
  id: totrans-224
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: oc cluster up
- en: oc cluster start
  id: totrans-225
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: oc cluster start
- en: oc cluster down
  id: totrans-226
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: oc cluster down
- en: oc cluster stop
  id: totrans-227
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: oc cluster stop
- en: 'The `minishift start` command uses a VM to bring up the Openshift Cluster:'
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`minishift start` 命令使用虚拟机启动 OpenShift 集群：'
- en: 'True'
  id: totrans-229
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'True'
- en: 'False'
  id: totrans-230
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'False'
- en: Further reading
  id: totrans-231
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 深入阅读
- en: 'Take a look at the following links, if you are interested in learning more
    or are facing some issues in your lab environment:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有兴趣了解更多内容或在实验环境中遇到问题，请查看以下链接：
- en: '**oc cluster up installation**: [https://github.com/openshift/origin/blob/master/docs/cluster_up_down.md](https://github.com/openshift/origin/blob/master/docs/cluster_up_down.md)'
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**oc cluster up 安装**: [https://github.com/openshift/origin/blob/master/docs/cluster_up_down.md](https://github.com/openshift/origin/blob/master/docs/cluster_up_down.md)'
- en: '**Minishift installation**: [https://docs.openshift.org/latest/minishift/getting-started/installing.html](https://docs.openshift.org/latest/minishift/getting-started/installing.html)'
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Minishift 安装**: [https://docs.openshift.org/latest/minishift/getting-started/installing.html](https://docs.openshift.org/latest/minishift/getting-started/installing.html)'
- en: '**Vagrant installation**: [https://www.vagrantup.com/intro/getting-started/install.html](https://www.vagrantup.com/intro/getting-started/install.html)'
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Vagrant 安装**: [https://www.vagrantup.com/intro/getting-started/install.html](https://www.vagrantup.com/intro/getting-started/install.html)'
- en: '**An alternative method to install the OpenShift cluster in a VM**: [https://blog.openshift.com/openshift-developers-set-full-cluster-30-minutes/](https://blog.openshift.com/openshift-developers-set-full-cluster-30-minutes/)'
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在虚拟机中安装 OpenShift 集群的替代方法**：[https://blog.openshift.com/openshift-developers-set-full-cluster-30-minutes/](https://blog.openshift.com/openshift-developers-set-full-cluster-30-minutes/)'
- en: '**4 ways to set up a development environment on OpenShift**: [https://developers.redhat.com/blog/2016/10/11/four-creative-ways-to-create-an-openshiftkubernetes-dev-environment/](https://developers.redhat.com/blog/2016/10/11/four-creative-ways-to-create-an-openshiftkubernetes-dev-environment/)'
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**在 OpenShift 上设置开发环境的 4 种方法**：[https://developers.redhat.com/blog/2016/10/11/four-creative-ways-to-create-an-openshiftkubernetes-dev-environment/](https://developers.redhat.com/blog/2016/10/11/four-creative-ways-to-create-an-openshiftkubernetes-dev-environment/)'
