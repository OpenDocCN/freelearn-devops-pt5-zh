- en: Hybrid Cloud with Azure - Extending Local Workloads to the Cloud
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The hybrid cloud is an important part of the cloud journey, helping us to combine
    Azure (or any other cloud) with on-premises resources. In this chapter, we'll
    discuss how to configure the environment and the connections between the Azure
    and local infrastructure in order to take advantage of the best from both worlds—local
    and cloud infrastructure.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following topics will be covered in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Hybrid clouds
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Connecting virtual networks to on-premises
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: On-premises data gateways
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Azure Stack
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For this chapter, you''ll need:'
  prefs: []
  type: TYPE_NORMAL
- en: An Azure subscription
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A local server running Windows Server 2012 R2 or later
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A VPN (firewall) device supporting an S2S connection
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hybrid clouds
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Migrating completely to the cloud is not an option for many organizations. Even
    though the cloud offers multiple benefits, there are many scenarios to consider.
  prefs: []
  type: TYPE_NORMAL
- en: For example, if a company invested in local infrastructure, it would be hard
    to just abandon all that and move everything to the cloud. When creating a local
    data center, we need to invest in server rooms, networking, servers, storage,
    and software licenses. There is no business justification to abandon all investments
    and start investing in the cloud.
  prefs: []
  type: TYPE_NORMAL
- en: Another scenario is when we are not allowed to move specific services. In this
    case, compliance with the law can stop us from moving something out of a local
    data center. For example, some countries don't allow you to keep a user's personal
    information outside of that country. If an Azure data center is not available
    in your region, this may be a blocker and you may have to keep data in your local
    data center.
  prefs: []
  type: TYPE_NORMAL
- en: In both cases, when something is preventing us from using all of the cloud's
    services, we can benefit from what the cloud offers by setting up a hybrid cloud.
    This allows us to use cloud services along with local infrastructure, allowing
    us to create powerful combinations of the best from both wolds.
  prefs: []
  type: TYPE_NORMAL
- en: For example, we can set up database in a local data center (if we're not allowed
    to migrate a database or we have a brand new database server) and set up cloud
    services that will use a local database in the background. This especially applies
    to the Azure data analytics platform, which offers multiple powerful services
    that can provide you with fast data processing and still retain data locally.
  prefs: []
  type: TYPE_NORMAL
- en: There is a third scenario in which you can use services from multiple cloud
    providers and benefit from what each of them has to offer. Again, we need to set
    up a hybrid cloud scenario to secure communication and exchange resources between
    services you are using in each cloud.
  prefs: []
  type: TYPE_NORMAL
- en: The best way to set up security and keep your data safe in the hybrid cloud
    is to create a direct connection between Azure and the local infrastructure.
  prefs: []
  type: TYPE_NORMAL
- en: Connecting the local network and Azure Virtual Network
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In order to connect local infrastructure and Azure, we need to create a connection
    between the local network and Azure Virtual Network. This connection can be either
    **Point-to-Site** (**P2S**) or **Site-to-Site** (**S2S**). As P2S allows access
    to Azure Virtual Network from a single computer, it's not ideal for a true hybrid
    cloud, but more as point of access for remote workers.
  prefs: []
  type: TYPE_NORMAL
- en: To set up a true hybrid cloud, we need to create an S2S connection that will
    allow full communication between our local network and Azure Virtual Network.
    By doing so, we extend our local network to Azure and can access resources in
    Azure the same way as we would access resources in a local environment.
  prefs: []
  type: TYPE_NORMAL
- en: 'Creating an S2S connection can be done in two ways: using a VPN and using ExpressRoute.
    A VPN will provide communication encryption between two networks. ExpressRoute
    goes one step further and provides a dedicated connection between a local network
    and Azure Virtual Network. A dedicated connection provides more reliability, faster
    speeds, lower latency, and higher security, but it must be purchased as a separate
    service provided by the ISP.'
  prefs: []
  type: TYPE_NORMAL
- en: Establishing a connection between a local network and Azure Virtual Network
    is a two-step process. First, we need to create and configure Azure resources,
    and in the second step we need to configure our local firewall. In the local environment,
    we need a VPN (firewall) device that supports creating S2S connections and public
    IP addresses. Note that all devices, with S2S option, do not support S2S connection
    with Azure.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a S2S Connection
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To create an S2S connection between Azure Virtual Network and our local network,
    first we must create two Azure resources: a virtual network gateway and a local
    network gateway.'
  prefs: []
  type: TYPE_NORMAL
- en: Creating a virtual network gateway is done in a single blade. The information
    we need to provide is the Name, Gateway type, VPN type, SKU, Virtual network,
    Gateway subnet address range, Public IP address, Subscription, and Location. The
    Name, Subscription, and Location are the usual parameters.
  prefs: []
  type: TYPE_NORMAL
- en: The first option is to select the Gateway type. This can be either VPN or ExpressRoute
    (as we explained earlier). If VPN is selected, we need to choose whether the VPN
    type is policy- or route-based. (This option will probably depend on the settings
    of your local network.) The next step is to select an SKU that will decide the
    bandwidth and number of connections available. The option for active-active mode
    can be enabled or disabled. This mode allows you to create a redundant connection
    that will be observed as a single one from a traffic point of view. In other words,
    you need to create two S2S connections on your on-premises device, which will
    route traffic to the same virtual network. Traffic will be routed though both
    connections unless one becomes unavailable, and then traffic is routed through
    the S2S connection that is still available.
  prefs: []
  type: TYPE_NORMAL
- en: Active-active mode is not only used for highly available connections, but for
    better performance as well. You need to select a Virtual network that is available.
    Available networks will depend on the subscription and location that are selected.
    After the virtual network is selected, you need to provide a range for the gateway
    subnet. If such a subnet doesn't exist, it will be created automatically (unless
    there is no free address space on the network; then the process will fail). Note
    that there is no resource group needed. A virtual network gateway will be created
    in the same resource group in which the virtual network is located.
  prefs: []
  type: TYPE_NORMAL
- en: Next, you need to create or select an existing Public IP address that will be
    used for the connection. This IP is needed to establish a connection to your local
    network and will be used in the configuration for the local firewall in order
    to accept a connection from Azure. I recommend using a static IP address as you
    don't want to change the configuration in case the IP address changes.
  prefs: []
  type: TYPE_NORMAL
- en: 'An example of a virtual network gateway configuration is shown next:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/75e580ca-06ac-48d3-a6db-f764c993c2b5.png)'
  prefs: []
  type: TYPE_IMG
- en: Creating a virtual network gateway takes from 30 to 90 minutes. This is one
    of the resources in Azure that takes the longest time to deploy.
  prefs: []
  type: TYPE_NORMAL
- en: 'The ARM template for the deployment of an Azure virtual network gateway is
    provided here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'After the deployment of the virtual network gateway is completed, we can proceed
    and create a local network gateway. A local network gateway is used to input information
    on your local firewall and network. You need to the provide the public IP address
    of your local firewall and the Address space of the local network (or gateway
    subnet of your local network, depending on the firewall). You also need to provide
    a Subscription, Location, and Resource group. The Location should be the same
    as the one that is used for the virtual network gateway and virtual network. I
    recommend placing them in the same resource group for easier management. Example
    settings for the local network gateway are shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/371de212-eaeb-485d-aab0-696b5c891892.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The ARM template for the deployment of a local network gateway is provided
    here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Deploying a local network gateway is relatively fast compared to a virtual network
    gateway, and deployment should complete in under 5 minutes.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring Azure settings for S2S
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: After the virtual network gateway and local network gateway are created, we
    can proceed to configuration. In the virtual network gateway, we select Connection
    type options under Settings. You'll see that Settings has options for configuration,
    connections, and point-to-site connections.
  prefs: []
  type: TYPE_NORMAL
- en: 'As we are going to concentrate on S2S connections, we only use the connections
    blade and add a new connection. We need to provide a Name as usual. The options
    for the Virtual network gateway, Subscription, Resource group, and Location are
    locked and can''t be changed, as they depend on the Virtual network gateway that
    is used to create a connection. Parameters that we need to provide are the Connection
    type and Shared key (PSK). The Connection type options are VNet-to-VNet, Site-to-Site
    (IPsec), and ExpressRoute. We are going to select the option for Site-to-Site
    (IPsec) as we want to connect to a local network. For the Shared Key (PSK), I
    recommend it be as complex as possible because security can depend on this. Sample
    settings for a new connection are shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/92a3dbd8-7ed9-42cc-b1df-c9d21f713596.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Creating a connection is only the first step; we also need to configure settings
    for our local network. After the initial creation, the status of the connection
    will be unknown, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/66aac4a3-8678-47a0-bb41-52c14cefc73b.png)'
  prefs: []
  type: TYPE_IMG
- en: Configuring a local firewall for S2S
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Configuration of a local firewall depends on the vendor and type of device.
    Under created connection, there is an option to download configurations for some
    devices. You can select a few different vendors (for example, Cisco and Juniper), and
    also depending on the Device vendor, Device family, and Firmware version to download
    specific configuration. Only a few devices are available to download directly
    from the Azure portal. In Microsoft''s documentation you can find more devices,
    and some vendors have a section on Azure S2S configuration on their websites.
    A screenshot of the configuration downloading process is shown next:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/7b4258a6-5520-4c9e-865b-0012c05b83ee.png)'
  prefs: []
  type: TYPE_IMG
- en: 'After the connection is configured on both sides, the status will change to
    Connected, as shown:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/511e64a3-ffe3-4269-8f48-65fba4bced61.png)'
  prefs: []
  type: TYPE_IMG
- en: This will allow you to connect to any resource in the Azure Virtual Network
    directly from the local network with a secure, private connection. In some cases,
    you don't want to expose your resources for public access, so this is the only
    approach to connect to your resources.
  prefs: []
  type: TYPE_NORMAL
- en: In other cases, and this is probably most common practice, services are accessed
    publicly, but management is done over a private network. For example, access to
    a website is allowed over HTTP or HTTPS over the internet, but access to databases
    or an RDP connection to virtual machines is only allowed over a private network.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring services in a hybrid environment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Once we have established a connection between the local network and Azure, we
    can start using services in both environments, as if these are single site or
    network. However, there are a few things that we need to keep in mind.
  prefs: []
  type: TYPE_NORMAL
- en: If we have a domain set up in the local environment and want to use the same
    domain in the cloud, it's a good idea to have one domain controller running in
    the Azure Virtual Network. Even when we have an S2S connection established, occasional
    interrupts in connection can be expected. By having one DC running in the cloud,
    we can ensure that services in Azure can use all features and run independently
    when interruptions occur.
  prefs: []
  type: TYPE_NORMAL
- en: 'When running SQL Server and using Always On Availability Groups, you can use
    Azure to extend the service and add one replica in the cloud. As we previously
    mentioned, there are two modes for running Azure: resource manager and classic.
    The classic model supports adding a replica in Azure through a wizard, and it''s
    relatively easy to set up.'
  prefs: []
  type: TYPE_NORMAL
- en: The resource manager requires use of T-SQL commands to add a replica in Azure
    resource manager mode, but it's a little more complicated. But as the resource
    manager is a recommended mode, I suggest using the resource manager, as classic
    is bound to be dropped at some point and you'll have to set up the resource manager
    eventually anyway.
  prefs: []
  type: TYPE_NORMAL
- en: Another thing to consider is Azure Hybrid Benefit, which allows you to use existing
    on-premises licenses in Azure. With software assurance, you can use licenses for
    Windows server and SQL Server, and deploy Azure resources with a significant discount.
  prefs: []
  type: TYPE_NORMAL
- en: The data center location is very important when establishing a connection between
    the local network and Azure. If you are located on one continent and the Azure
    data center (in which the virtual network is deployed)is in another, you will
    experience network latency and lag. Choosing the closest geographical location
    is the best possible option.
  prefs: []
  type: TYPE_NORMAL
- en: If you experience network latency and lag or have performance issues, ExpressRoute
    is the service you need to consider. It does come at a price, but it has an enterprise-grade
    connection with the best possible reliability, speed, and security.
  prefs: []
  type: TYPE_NORMAL
- en: Connecting virtual networks across Azure
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A virtual network gateway can be used to connect different Azure Virtual Networks.
    But as you pay for a virtual network gateway, I recommend a different approach.
    To connect Azure Virtual Networks to another Azure Virtual Network, we can use
    **peering**. Peering, in general, is the interconnection of separate networks for
    the purpose of exchanging traffic networks. Options for peering are available
    under Settings in the virtual network blade. If we choose to create a new peering,
    we need to provide a Name and select if we are going to connect to a Resource
    manager or Classic virtual network. As Resource manager is recommended, we'll
    explain this process. If Resource manager is selected, we can either provide an
    ID for a resource or use a drop-down menu to select our Azure Subscription and
    the Virtual network we want to connect to.
  prefs: []
  type: TYPE_NORMAL
- en: 'Some additional options are available for forwarded traffic and a remote gateway
    if needed. Example peering settings are shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/7d9cd44f-3f00-4fff-8a70-cd033ee24e9c.png)'
  prefs: []
  type: TYPE_IMG
- en: On-premises data gateway
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In some cases, all the requirements to create S2S connections to Azure are not
    met, but we still need to connect to local resources. For example, we need to
    connect to a local database, but the VPN device we have locally doesn't support
    a connection to Azure.
  prefs: []
  type: TYPE_NORMAL
- en: In this case, we can use an on-premises data gateway to allow Azure services
    to use a local database in a secure way.
  prefs: []
  type: TYPE_NORMAL
- en: An on-premises data gateway acts as a bridge and allows us to access local data
    with Azure services. Services currently supported are Power BI, Microsoft Flow,
    PowerApps, Azure Analysis Services, and Azure Logic Apps. Logic apps can be used
    to pass this data to other services as well.
  prefs: []
  type: TYPE_NORMAL
- en: 'Supported connectors are:'
  prefs: []
  type: TYPE_NORMAL
- en: BizTalk Server 2016
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Filesystems
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: IBM DB2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: IBM Informix
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: IBM MQ
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MySQL
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Oracle Database
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: PostgreSQL
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SAP Application Server
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SAP Message Server
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SharePoint Server
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SQL Server
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Teradata
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up an on-premises data gateway is a two-step process; we need to install
    the agent locally and configure the gateway in Azure next.
  prefs: []
  type: TYPE_NORMAL
- en: Local installation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To start the installation process, we need to sign in with an account that
    has access to an Azure subscription. Usually, to access an Azure subscription,
    you use either a Microsoft Live account or a work/school/O365/AAD account. In
    this case, we cannot use a Microsoft Live account because only a work account
    is allowed. The sign-in form is shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/34688838-c172-4047-a0cf-20cb069ee2e4.png)'
  prefs: []
  type: TYPE_IMG
- en: 'After the sign-in process is completed, we need to provide a New on-premises
    data gateway name and a Recovery key (8 character minimum). The recovery key is
    used if you need to restart the service or change its configuration:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e7331ddd-750c-4631-9406-cee45541342f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Once deployment is completed, you will see a Status page and some additional
    configuration. You can change the Service Settings, Network settings, and Connectors,
    or launch Diagnostics if you''re having an issue with the service. In order to
    access these settings again, you need to use a recovery key:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f3870440-d608-48c1-8bf2-c112853ecba6.png)'
  prefs: []
  type: TYPE_IMG
- en: Cloud service
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'After installation on a local server is done, we need to configure a gateway
    in Azure as well. Parameters we need to provide are the Resource Name, Subscription,
    Resource group, and Location. Based on other information, available gateways will
    be available for selection under Installation Name:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d58ec446-28d6-4b04-ac1a-d2cbe50f7eb7.png)'
  prefs: []
  type: TYPE_IMG
- en: After deployment is completed, we can use an on-premises data gateway to connect
    Azure to the local server. The number of services that can use this kind of connection
    is limited, but we can use logic app to extend the connection to other services
    as well. Configuring the logic app to use an on-premises data gateway allows us
    to extend this connection to other services in a single logic app flow and access
    the same data. The connection is limited, but it can help in certain scenarios
    in which S2S is not an option.
  prefs: []
  type: TYPE_NORMAL
- en: Azure Stack
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Microsoft is probably the only cloud provider that has the option for true hybrid
    cloud. Most cloud providers include some sort of hybrid cloud, allowing you to
    combine on-premises and cloud services. In most cases, with IaaS, we have the
    option of running everything we have on-premises in the cloud with little to no
    effort. Migrating local resources to the cloud is an option everyone in the cloud
    business is offering.
  prefs: []
  type: TYPE_NORMAL
- en: Azure Stack is the only option which allows you to have things the other way
    around and to run cloud services in your local data center. With Azure Stack,
    you can run IaaS and even PaaS in your own environment. Basically, Azure Stack
    is an extension of Azure in a local environment, and it uses the same fabric that
    the public version of Azure is using, but on a much smaller scale. It comes in
    a pre-configured box that must be bought from one of the authorized vendors and
    uses the same "real" fabric Azure uses. It supports the same models and deployment
    tools that the public version of Azure supports. All applications and services
    deployed in Azure will run in the Azure Stack, and all applications and services
    deployed in Azure Stack will run in Azure. The model is developed once and deployed
    anywhere.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are a few scenarios in which Azure Stack may be considered. The first
    is one we already mentioned when we discussed hybrid cloud options: when we have
    regulatory requirements to keep data in our local data center or within our own
    country. Even with the hybrid cloud, in this scenario we must use SQL Server.
    With Azure Stack, this is not the case anymore; we can use Azure SQL databases
    and take advantage of PaaS even when retaining the database locally.'
  prefs: []
  type: TYPE_NORMAL
- en: Latency and connectivity can be an issue when handling large datasets. Azure
    Stack is a solution with which we can process data locally and then aggregate
    it in Azure for further analytics, sharing common application logic across both.
  prefs: []
  type: TYPE_NORMAL
- en: Another example would be systems that are disconnected, or partly disconnected,
    and have connections to the internet occasionally. With Azure Stack, we can provide
    cloud applications in environments like airplanes or ships that don't have an
    internet connection all the time. An airline could create a cloud application
    for customers, and customers could access such an application when the airplane
    is offline. Once an internet connection is established, a data sync can be performed
    and everything updated.
  prefs: []
  type: TYPE_NORMAL
- en: In certain scenarios, a company can have multiple locations, and some of these
    locations can be required to be offline. Cloud applications were not an option
    in this scenario before, but with Azure Stack all locations can use the same application
    even when using the cloud. Some locations may use an application in public Azure
    and some of them may use Azure Stack, but they have all the same features and
    capabilities.
  prefs: []
  type: TYPE_NORMAL
- en: Azure Stack may be an interesting option for Microsoft partners that may want
    to host Azure Stack in their data center and offer Azure services in their country.
    If companies or government agencies are required to keep data in their country,
    hosting providers could use Azure Stack to run Azure services in that country
    for such organizations.
  prefs: []
  type: TYPE_NORMAL
- en: 'Fabric, model, and deployment tools are not only things that Azure and Azure
    Stack share. Azure portal is another thing that is very similar in both cases.
    Azure Stack comes with two versions of portal: user and administration. The former
    is used for consuming and creating resources, similar to what we have in the public
    Azure portal, and is later used to configure quotas and limitations for users
    and tenants. The administration part of the portal is especially interesting for
    those who decide to use Azure Stack to host Azure services locally and offer them
    to others, as this will allow them to control limitations and spending for each
    customer.'
  prefs: []
  type: TYPE_NORMAL
- en: 'You can compare the design of Azure and the Azure Stack portal in the next
    two screenshots, the first being **public Azure** and the second **Azure Stack**.
    As you can see, the design is very similar and the difference is the name in the
    top-left corner:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e1f215d3-1bac-45d5-b97c-7a7dc1353da8.png)'
  prefs: []
  type: TYPE_IMG
- en: '![](img/221ccd4b-8527-4cb8-bd23-de07ae6d1e07.png)'
  prefs: []
  type: TYPE_IMG
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As explained, the hybrid cloud is a reality for most organizations, whether
    it's because of regulations or investment in local infrastructure. We already
    covered how to migrate or extend services to the cloud, and a very important part
    of this is managing identities in the cloud. Data is important, but managing who
    can access that data is just as important. In extending local infrastructure to
    the cloud, we can set up a replica of the domain controller and use the Active
    Directory to manage identities and delegate access, but this only extends to IaaS.
  prefs: []
  type: TYPE_NORMAL
- en: To manage this with PaaS, we must use Azure Active Directory, which is often
    called Identity as a Service. In the next chapter, we'll discuss Azure Active
    Directory, how to use it, and even extend local identities to Azure Active Directory.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The hybrid cloud is often only an option because of...
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Regulations
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Investment
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Both
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: We can connect a local network and Azure using...
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Site-to-Site
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: ExpressRoute
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Both
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure resources needed for S2S...
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A virtual network gateway
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: An on-premises data gateway
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Both
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: A local network gateway holds the configuration of a...
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Virtual network
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Local network
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Both
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: A VPN device configuration can be downloaded from the Azure portal.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'True'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: True, but for a limited number of devices
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 'False'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: The recommended mode for S2S connection is...
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Resource manager
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Classic
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Both
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: To ensure that you can use local identities in the hybrid cloud, you must deploy...
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Domain controller in disaster recovery
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Domain controller in Azure
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Always on availability group
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: An on-premises data gateway can be used with...
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: All Azure Services
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: A limited number of Azure Services
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: A single Azure Service
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure Stack is...
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: An extension of Azure in your local data center
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: An extension of your local data center in Azure
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: An extension of Azure in another public cloud
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure Stack offers...
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: IaaS
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: PaaS
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Both
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
