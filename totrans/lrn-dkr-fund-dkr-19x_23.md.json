["```\nFROM ubuntu:19.04\nRUN apt-get update && \\\n    apt-get install -y iputils-ping\nCMD ping 127.0.0.1\n```", "```\nFROM alpine:latest\nRUN apk update && \\\n    apk add curl\n```", "```\nFROM golang:alpine\nWORKDIR /app\nADD . /app\nRUN cd /app && go build -o goapp\nENTRYPOINT ./goapp\n```", "```\n$ docker-machine create --driver virtualbox volume-test\n$ docker-machine ssh volume-test\n```", "```\n$ docker volume create my-products\n```", "```\n$ docker container run -it --rm \\\n -v my-products:/data:ro \\\n alpine /bin/sh\n```", "```\n$ docker volume inspect my-products | grep Mountpoint\n```", "```\n\"Mountpoint\": \"/mnt/sda1/var/lib/docker/volumes/myproducts/_data\"\n```", "```\n$ sudo su\n$ cd /mnt/sda1/var/lib/docker/volumes/my-products/_data\n$ echo \"Hello world\" > sample.txt\n$ exit\n```", "```\n$ docker run -it --rm -v my-products:/data:ro alpine /bin/sh\n/ # cd /data\n/data # cat sample.txt\n```", "```\n$ docker run -it --rm -v my-products:/app-data alpine /bin/sh\n/ # cd /app-data\n/app-data # echo \"Hello other container\" > hello.txt\n/app-data # exit\n```", "```\n$ docker container run -it --rm \\\n -v $HOME/my-project:/app/data \\\n alpine /bin/sh\n```", "```\n$ docker volume prune\n```", "```\n$ docker container run --rm -it \\\n --env-file ./development.config \\\n alpine sh -c \"export\"\n```", "```\n$ docker network create --driver bridge frontend\n```", "```\n\n$ docker container run -d --name n1 \\\n --network frontend -p 8080:80 nginx:alpine\n$ docker container run -d --name n2 \\\n --network frontend -p 8081:80 nginx:alpine\n```", "```\n$ curl -4 localhost:8080\n$ curl -4 localhost:8081\n```", "```\n$ docker network inspect frontend | grep IPv4Address\n```", "```\n\"IPv4Address\": \"172.18.0.2/16\",\n\"IPv4Address\": \"172.18.0.3/16\",\n```", "```\n$ docker network inspect frontend | grep subnet\n```", "```\n\"Subnet\": \"172.18.0.0/16\",\n```", "```\n$ docker-compose up -d\n```", "```\n$ docker-compose ps\n```", "```\nName               Command               State  Ports\n-------------------------------------------------------------------\nmycontent_nginx_1  nginx -g daemon off;  Up     0.0.0.0:3000->80/tcp\n```", "```\n$ docker-compose up --scale web=3\n```", "```\n$ docker swarm init [--advertise-addr <IP address>]\n```", "```\n $ docker swarm leave\n```", "```\n$ docker network create \\\n --driver overlay \\\n --attachable \\\n front-tier\n```", "```\n$ docker service create --name web \\\n --network front-tier \\\n --replicas 5 \\\n -p 3000:80 \\\n nginx:alpine\n```", "```\n$ docker service update --replicas 3 web\n```", "```\n$ docker service update --image acme/inventory:2.1 \\\n --update-parallelism 2 \\\n --update-delay 60s \\\n inventory\n```", "```\n$ docker service update \\\n --secret-rm MYSQL_PASSWORD \\\n inventory\n$ docker service update \\\n --secret-add source=MYSQL_PASSWORD_V2, target=MYSQL_PASSWORD \\\n inventory\n```"]