["```\n# docker run hello-world Unable to find image 'hello-world:latest' locally latest: Pulling from library/hello-world 1b930d010525: Pull complete Digest: sha256:4fe721ccc2e8dc7362278a29dc660d833570ec2682f4e 4194f4ee23e415e1064 Status: Downloaded newer image for hello-world:latest\nHello from Docker!\nThis message shows that your installation appears to be working correctly.\nTo generate this message, Docker took the following steps: 1\\. The Docker client contacted the Docker daemon. 2\\. The Docker daemon pulled the \"hello-world\" image from the Docker Hub.\n    (amd64)\n 3\\. The Docker daemon created a new container from that image which runs the\n    executable that produces the output you are currently reading.\n 4\\. The Docker daemon streamed that output to the Docker client, which sent it\n    to your terminal.\nTo try something more ambitious, you can run an Ubuntu container with:\n $ docker run -it ubuntu bash\nShare images, automate workflows, and more with a free Docker ID:\n https://hub.docker.com/\nFor more examples and ideas, visit:\n https://docs.docker.com/get-started/\n```", "```\n#!/bin/bash\n# start-mongodb.sh\nSERVICE=mongodb # name of the service\n# You can set these in this script (uncomment and edit the lines) or set them in your .zshrc/.bashrc/etc.\n# Change this to an EXISTING directory on the HOST where the mongodb database files will be created #!/bin/bash\n# start-mongodb.sh\nSERVICE=mongodb # name of the service\n# Change this to an EXISTING directory on the HOST where the mongodb database files will be created and maintained.\n#MONGO_DATADIR=\"$HOME/data\"\n# Stop any running MongoDB container, remove previous container, pull newer version\ndocker stop $SERVICE\ndocker rm $SERVICE\ndocker pull mongo:3.4\n# Now we run it!\ndocker run …\n```", "```\ndocker run \\\n  --name $SERVICE \\\n  -d \\\n  --restart always \\\n  -e TITLE=$SERVICE \\\n  -p 27017:27017 \\\n  -v \"$MONGO_DATADIR\":/data/db \\\n  mongo:3.4\n```", "```\n# mkdir -p ~/mongodb\n# MONGO_DATADIR=~/mongodb ./start-mongodb.sh\n```", "```\n# mkdir -p ~/mongodb && MONGO_DATADIR=~/mongodb ./start-mongodb.sh stopping mongodb Error response from daemon: No such container: mongodb removing old mongodb Error: No such container: mongodb pulling mongodb 3.4: Pulling from library/mongo 976a760c94fc: Pull complete c58992f3c37b: Pull complete 0ca0e5e7f12e: Pull complete …\n3757d63ce2b9: Pull complete Digest: sha256:4c7003e140fc7dce5f12817d510b5a9bd265f2 c3bbd6f81d50a60cc11f6395d9 Status: Downloaded newer image for mongo:3.4 docker.io/library/mongo:3.4 e3854f6931e1aa4b64557d5a54e652653123f84a 544fedf39a5cf68d2ee9d0af  # docker ps CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                      NAMES e3854f6931e1        mongo:3.4           \"docker-entrypoint.s…\"   5 seconds ago       Up 3 seconds        0.0.0.0:27017->27017/tcp   mongodb  #\n```", "```\ndocker exec -it mongodb bash\n```", "```\n# docker exec -it mongodb bash root@e3854f6931e1:/# ls bin   data  docker-entrypoint-initdb.d  etc   js-yaml.js  lib64  mnt  proc  run   srv  tmp  var boot  dev   entrypoint.sh               home  lib         media  opt  root  sbin  sys  usr\n```", "```\nroot@e3854f6931e1:/# ps -aux USER         PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND mongodb        1  0.7  0.0 954676 62028 ?        Ssl  22:37   0:02 mongod root          40  2.8  0.0  18240  3248 pts/0    Ss   22:41   0:00 bash root          51  0.0  0.0  34420  2848 pts/0    R+   22:41   0:00 ps -aux root@e3854f6931e1:/# \n```", "```\nroot@e3854f6931e1:/# mongo MongoDB shell version v3.4.23 connecting to: mongodb://127.0.0.1:27017 MongoDB server version: 3.4.23 Welcome to the MongoDB shell.For interactive help, type \"help\".For more comprehensive documentation, see         http://docs.mongodb.org/Questions? Try the support group         http://groups.google.com/group/mongodb-user Server has startup warnings:2019-12-13T22:37:12.342+0000 I CONTROL  [initandlisten]2019-12-13T22:37:12.342+0000 I CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.2019-12-13T22:37:12.342+0000 I CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.2019-12-13T22:37:12.342+0000 I CONTROL  [initandlisten]> show collections > show databases admin  0.000GB local  0.000GB >root@e3854f6931e1:/# exit\n```", "```\n# docker logs mongodb 2019-12-13T22:37:09.161+0000 I CONTROL  [initandlisten] MongoDB starting : pid=1 port=27017 dbpath=/data/db 64-bit host=e3854f6931e1 2019-12-13T22:37:09.162+0000 I CONTROL  [initandlisten] db version v3.4.23 2019-12-13T22:37:09.162+0000 I CONTROL  [initandlisten] git version: 324017ede1dbb1c9554dd2dceb15f8da3c59d0e8 2019-12-13T22:37:09.162+0000 I CONTROL  [initandlisten] OpenSSL version: OpenSSL 1.0.2g  1 Mar 2016 2019-12-13T22:37:09.162+0000 I CONTROL  [initandlisten] allocator: tcmalloc 2019-12-13T22:37:09.162+0000 I CONTROL  [initandlisten] modules: none 2019-12-13T22:37:09.162+0000 I CONTROL  [initandlisten] build environment:2019-12-13T22:37:09.162+0000 I CONTROL  [initandlisten]     distmod: ubuntu1604 2019-12-13T22:37:09.162+0000 I CONTROL  [initandlisten]     distarch: x86_64 2019-12-13T22:37:09.162+0000 I CONTROL  [initandlisten]     target_arch: x86_64 2019-12-13T22:37:09.162+0000 I CONTROL  [initandlisten] options: {}2019-12-13T22:37:09.165+0000 I STORAGE  [initandlisten] wiredtiger_open config: create,cache_size=31491M,session_max=20000,eviction=(threads_min=4,threads_m ax=4),config_base=false,statistics=(fast),log=(enabled=true,archive=true,path=journal,compressor=snappy),file_manager=(close_idle_time=100000),checkpoint=(w ait=60,log_size=2GB),statistics_log=(wait=0),verbose=(recovery_progress),2019-12-13T22:37:14.335+0000 I INDEX    [initandlisten]          building index using bulk method; build may temporarily use up to 500 megabytes of RAM     2019-12-13T22:37:14.342+0000 I INDEX    [initandlisten] build index done.  scanned 0 total records. 0 secs 2019-12-13T22:37:14.344+0000 I COMMAND  [initandlisten] setting featureCompatibilityVersion to 3.4 (\n…\n```", "```\n#!/bin/sh\n# start-subscriber.sh\nyarn start\n```", "```\n# ifconfig | grep 192\ninet 192.168.0.19 netmask 0xffff0000 broadcast 192.168.255.255\n```", "```\n$ ip address | grep 192\ninet 192.168.0.21/16 brd 192.168.255.255 scope global dynamic enp0s31f6\n```", "```\nHOSTIP=192.168.0.19 ./start-publisher.sh\n```", "```\nHOSTIP=192.168.0.19 ./start-subscriber.sh\n```", "```\n# we will inherit from the NodeJS v12 image on Docker Hub\nFROM node:12\n# set time zone so files' timestamps are correct\nENV TZ=America/Los_Angeles\n# we include procps and telnet so you can use these with shell.sh prompt\nRUN apt-get update -qq >/dev/null && apt-get install -y -qq curl procps telnet >/dev/null\n# add a user - this user will own the files in /home/app\nRUN useradd --user-group --create-home --shell /bin/false app\n# set up and copy files to /home/app\nENV HOME=/usr/app\nWORKDIR /home/app\nCOPY . /home/app\n# install our NodeJS packages (from package.json)\nRUN yarn install\n# we run a script to stat the server; the array syntax makes it so ^C will work as we want\nCMD  [\"yarn\", \"start\"]\n```", "```\n#!/bin/sh\n# build.sh\n# we use the \"docker build\" command to build a container named \"dockerfordevelopers/publisher\" from . (current directory)\n# Dockerfile is found in the current directory, and determines how the container is built.\ndocker build -t dockerfordevelopers/publisher .\n```", "```\n# ./build.sh\nSending build context to Docker daemon  4.902MB\nStep 1/9 : FROM node:12\nStep 2/9 : ENV TZ=America/Los_Angeles\nStep 3/9 : RUN apt-get update -qq >/dev/null && apt-get install -y -qq curl procps telnet >/dev/null\nStep 4/9 : RUN useradd --user-group --create-home --shell /bin/false app\nStep 5/9 : ENV HOME=/usr/app\nStep 6/9 : WORKDIR /home/app\nStep 7/9 : COPY . /home/app\nStep 8/9 : RUN yarn install\nyarn install v1.16.0\n[1/4] Resolving packages...\n[2/4] Fetching packages...\n[3/4] Linking dependencies...\n[4/4] Building fresh packages...\nDone in 1.55s.\nStep 9/9 : CMD  [\"yarn\", \"start\"]\n ---> Running in f882d870bc6a\nRemoving intermediate container f882d870bc6a\n ---> b8f9439e36fa\nSuccessfully built b8f9439e36fa\nSuccessfully tagged dockerfordevelopers/publisher:latest\n```", "```\n#!/bin/sh\n# push.sh\ndocker push dockerfordevelopers/publisher\n```", "```\n# ./push.sh\nThe push refers to repository [docker.io/dockerfordevelopers/publisher]\n9502c45a0d0e: Pushed\n79b7f0047832: Pushed\nbca5484440a2: Pushed\n…\n6a335755bda7: Pushed\nlatest: digest: sha256:e408ae01416511ad8451c31e532e3c2c6eb3324 ad43834a966ff161f9062e9ad size: 3056\n#\n```", "```\n# docker run --rm dockerfordevelopers/publisher\nUnable to find image 'dockerfordevelopers/publisher:latest' locally\nlatest: Pulling from dockerfordevelopers/publisher\nc5e155d5a1d1: Pull complete\n221d80d00ae9: Pull complete\n4250b3117dca: Pull complete\n69df12c70287: Pull complete\n…\nDigest: sha256:e408ae01416511ad8451c31e532e3c2c6eb3324ad 43834a966ff161f9062e9ad\nStatus: Downloaded newer image for dockerfordevelopers/publisher:latest\nyarn run v1.16.0\n$ node ./index.js\n```"]