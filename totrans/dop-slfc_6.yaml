- en: Continuous Integration
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 持续集成
- en: In the previous chapter, we learned about the importance of version control
    systems in projects and how we can achieve version control in our Salesforce project.
    We looked at instructions for how to set up our own GitLab server and push metadata
    from the Salesforce organization to the Git repository. After following the steps
    to install Git on a developer machine and sync it with the Salesforce sandbox,
    developers will be able to make and save their changes in the Git repository.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们了解了版本控制系统在项目中的重要性，以及如何在我们的 Salesforce 项目中实现版本控制。我们查看了如何设置自己的 GitLab
    服务器，并将 Salesforce 组织中的元数据推送到 Git 仓库的说明。按照步骤在开发者机器上安装 Git 并与 Salesforce 沙盒同步后，开发人员将能够在
    Git 仓库中进行并保存他们的更改。
- en: In this chapter, we will learn about how we can use Git integration with Jenkins
    to automate backups and the deployment of Salesforce metadata. We will discuss
    Jenkins and look at how continuous integration is achieved in Salesforce using
    Jenkins and the Ant Migration Tool. We will look at how to configure the Ant Migration
    Tool with Jenkins and and how to configure a Jenkins job to retrieve metadata
    from the sandbox. We will cover step-by-step instructions for deploying changes
    to UAT or a testing environment using Jenkins.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习如何通过 Git 集成与 Jenkins 自动备份和部署 Salesforce 元数据。我们将讨论 Jenkins，并查看如何在 Salesforce
    中通过 Jenkins 和 Ant Migration Tool 实现持续集成。我们将查看如何配置 Ant Migration Tool 与 Jenkins
    配合使用，以及如何配置 Jenkins 作业从沙盒中获取元数据。我们将提供逐步的说明，介绍如何使用 Jenkins 将更改部署到 UAT 或测试环境。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: What is Jenkins?
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是 Jenkins？
- en: Installing Jenkins
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装 Jenkins
- en: Configuring the Ant Migration Tool with Jenkins
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置 Ant Migration Tool 与 Jenkins 配合使用
- en: Providing sandbox credentials to Jenkins
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供沙盒凭证给 Jenkins
- en: Configuring a Jenkins job to retrieve metadata from a sandbox
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置 Jenkins 作业以从沙盒中获取元数据
- en: Configuring a Jenkins job to deploy metadata on a sandbox
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置 Jenkins 作业以在沙盒上部署元数据
- en: What is Jenkins?
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是 Jenkins？
- en: Jenkins is a continuous integration server written in Java. Jenkins is an open
    source automation server. You can install it on your machine easily. Jenkins can
    be installed on Windows, macOS, and Linux machines. Jenkins is easily configurable
    and has many plugins to support continuous integration and deployment. If you
    have experience of using containers, you can use Docker to install Jenkins using
    Docker images from the registry.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Jenkins 是一个用 Java 编写的持续集成服务器。Jenkins 是一个开源自动化服务器，你可以轻松地在你的机器上安装它。Jenkins 可以安装在
    Windows、macOS 和 Linux 机器上。Jenkins 配置简单，并且有很多插件来支持持续集成和部署。如果你有使用容器的经验，可以使用 Docker
    从注册表中获取 Docker 镜像来安装 Jenkins。
- en: CI using Jenkins
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Jenkins 的 CI
- en: Continuous integration entails developers pushing their code to a shared repository
    and testing it using regular builds so that they can detect problems in the code
    gradually.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 持续集成是指开发人员将他们的代码推送到共享的代码库，并通过定期构建进行测试，这样他们可以逐步发现代码中的问题。
- en: There are several tools that can be used to achieve continuous integration.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种工具可以用于实现持续集成。
- en: Using continuous integration, you can easily back-track where things have gone
    wrong in the code. If you don't follow continuous integration, it will be more
    difficult and expensive to detect errors in the code at the production stage.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 通过持续集成，你可以轻松地追溯代码出现问题的地方。如果你不遵循持续集成，那么在生产阶段发现代码错误将变得更加困难和昂贵。
- en: 'The following is a list of CI tools:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是 CI 工具的列表：
- en: Jenkins
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jenkins
- en: TeamCity
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TeamCity
- en: Travis CI
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Travis CI
- en: Go CD
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Go CD
- en: Bamboo
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bamboo
- en: In this chapter, we are going to use Jenkins to achieve continuous integration.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将使用 Jenkins 实现持续集成。
- en: Jenkins is an open source, cross-platform CI tool. Jenkins has ability to add
    plugins, which makes it very flexible and easy to integrate. You can configure
    CI using the UI as well as commands.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Jenkins 是一个开源的跨平台 CI 工具。Jenkins 可以添加插件，这使得它非常灵活且易于集成。你可以通过 UI 或命令来配置 CI。
- en: Installing a Jenkins server
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 Jenkins 服务器
- en: Let's start with the Jenkins server installation on a Windows server. Installation
    on the Linux server has already been covered in [Chapter 2](92e8e2f1-2836-46d5-bfc4-7876cf9b8a9f.xhtml),
    *Applying DevOps to Salesforce Applications.* We will cover Jenkins server installation
    on a Windows machine here so that Windows users can get an idea about the setup.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从 Windows 服务器上的 Jenkins 安装开始。Linux 服务器的安装过程已在[第 2 章](92e8e2f1-2836-46d5-bfc4-7876cf9b8a9f.xhtml)，*将
    DevOps 应用到 Salesforce 应用程序*中介绍过。这里我们将介绍 Windows 机器上的 Jenkins 安装，以便 Windows 用户了解安装步骤。
- en: The following are the hardware and software requirements for installation of
    the Jenkins server.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是 Jenkins 服务器安装的硬件和软件要求。
- en: 'The hardware requirements are:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 硬件要求如下：
- en: 256 MB of RAM
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 256 MB 的内存
- en: 1 GB of drive space
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1 GB 的硬盘空间
- en: 'The software requirements are:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 软件要求如下：
- en: Java 8
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Java 8
- en: 'A web browser: Jenkins is supported by most of popular web browsers, such as
    Google Chrome, Mozilla Firefox, Microsoft Internet Explorer, and the latest version
    of Apple Safari'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个网页浏览器：Jenkins 支持大多数流行的网页浏览器，如 Google Chrome、Mozilla Firefox、Microsoft Internet
    Explorer 以及最新版本的 Apple Safari。
- en: Download the latest Jenkins server package for Windows at the following website
    [http://mirrors.jenkins.io/windows/latest](http://mirrors.jenkins.io/windows/latest).
    You will get the latest ZIP file on your machine of the version of the Jenkins
    package.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 访问以下网站下载最新的 Jenkins 服务器包适用于 Windows：[http://mirrors.jenkins.io/windows/latest](http://mirrors.jenkins.io/windows/latest)。你将获得最新版本的
    Jenkins 包的 ZIP 文件。
- en: 'Once the download is completed, extract the ZIP file and start the installation
    by double-clicking on the `jenkins.msi` file. Follow the Jenkins setup wizard
    to complete the Jenkins server installation. Choose the path for the Jenkins server
    installation and click on Next:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 下载完成后，解压 ZIP 文件并通过双击 `jenkins.msi` 文件启动安装。按照 Jenkins 安装向导完成 Jenkins 服务器安装。选择
    Jenkins 服务器的安装路径并点击“下一步”：
- en: '![](img/7f59f533-24f7-4693-9bfc-c21eb0013f22.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7f59f533-24f7-4693-9bfc-c21eb0013f22.png)'
- en: 'On the next screen, click on Install to proceed with the installation:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一屏幕上，点击“安装”以继续安装：
- en: '![](img/c9104091-7d45-4cb9-9016-4901b3593ed0.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c9104091-7d45-4cb9-9016-4901b3593ed0.png)'
- en: 'After the Jenkins installation is done, you need to configure the Jenkins server.
    Visit `http://<Server-IP-address>:8080` if the setup has been done on a local
    machine for testing. You can access the Jenkins server at [`http://localhost:8080`](http://localhost:8080).
    You will need to wait for some time if you see a message such as Please wait while
    Jenkins is getting ready to work...:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: Jenkins 安装完成后，你需要配置 Jenkins 服务器。如果是在本地机器上进行测试安装，请访问 `http://<Server-IP-address>:8080`。你也可以通过访问
    [`http://localhost:8080`](http://localhost:8080) 来访问 Jenkins 服务器。如果看到“请稍等，Jenkins
    正在准备工作...”的信息，你需要等待一段时间：
- en: '![](img/be45e823-f63f-4440-87fc-2dc9a576275b.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](img/be45e823-f63f-4440-87fc-2dc9a576275b.png)'
- en: 'To unlock the Jenkins server, you need to provide the default Jenkins password
    stored at the following location: `C:\Program Files (x86)\Jenkins\secrets\initialAdminPassword`.
    For a Linux machine, the path will be different.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 要解锁 Jenkins 服务器，你需要提供默认的 Jenkins 密码，密码存储在以下位置：`C:\Program Files (x86)\Jenkins\secrets\initialAdminPassword`。对于
    Linux 系统，路径会有所不同。
- en: 'On the next screen, we will be able to choose plugins to install in the Jenkins
    server. Click on Select plugins to install:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一屏幕上，我们可以选择要安装的插件。点击“选择要安装的插件”：
- en: '![](img/9e971faf-0096-45aa-9c16-f48852960606.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9e971faf-0096-45aa-9c16-f48852960606.png)'
- en: 'We will only choose Ant Plugin and Git Plugin, as we can install other plugins
    after the basic setup is done:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我们只选择 Ant 插件和 Git 插件，因为在基本配置完成后可以安装其他插件：
- en: '![](img/25693d51-ae4d-494d-bb8b-df5b1b0eacc3.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](img/25693d51-ae4d-494d-bb8b-df5b1b0eacc3.png)'
- en: 'Here is the next page:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这是下一页：
- en: '![](img/b2975f11-a07f-4567-aa1f-7a63b64c8f05.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b2975f11-a07f-4567-aa1f-7a63b64c8f05.png)'
- en: 'After the plugin installation has been completed, in Create First Admin User provide
    a Username, Password, Full name, and E-mail address:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 插件安装完成后，在“创建第一个管理员用户”中提供用户名、密码、全名和电子邮件地址：
- en: '![](img/2308a870-5995-493b-8ca0-7f89d755d0f2.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2308a870-5995-493b-8ca0-7f89d755d0f2.png)'
- en: Click on Save and Finish to complete the Jenkins setup.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“保存并完成”以完成 Jenkins 配置。
- en: Configuring the Ant Migration Tool with Jenkins
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置 Ant 迁移工具与 Jenkins
- en: 'To communicate with Salesforce, we need to install the Ant Migration Tool on
    the Jenkins server. We have already covered the installation steps for the Ant
    Migration Tool in [Chapter 4](6f12a8fb-da46-4121-ab9f-415af1276871.xhtml), *Introduction
    to the Force.com Migration Tool*. Install the Ant Migration Tool on the Jenkins
    server and configure the path in Jenkins. Once you install the Ant plugin in Jenkins,
    you will get the option to Invoke Ant in the Add build step  dropdown menu for
    your Jenkins Job, which will run `build.xml` and perform the tasks mentioned in
    the script:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 为了与 Salesforce 通信，我们需要在 Jenkins 服务器上安装 Ant 迁移工具。我们已经在[第 4 章](6f12a8fb-da46-4121-ab9f-415af1276871.xhtml)，*Force.com
    迁移工具介绍*中涵盖了 Ant 迁移工具的安装步骤。在 Jenkins 服务器上安装 Ant 迁移工具并在 Jenkins 中配置路径。一旦在 Jenkins
    中安装了 Ant 插件，您将能在“添加构建步骤”下拉菜单中看到“调用 Ant”选项，它将运行 `build.xml` 并执行脚本中提到的任务：
- en: '![](img/48410d95-a933-48f4-b3ad-8b2c784b2382.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](img/48410d95-a933-48f4-b3ad-8b2c784b2382.png)'
- en: When the developer triggers the Jenkins Job, we will select Invoke Ant to retrieve
    the Salesforce metadata. Once the build is successful, we will have the metadata
    in the directory and trigger the Jenkins job to push the metadata from Jenkins
    to the GitLab repository. Verify the metadata in the GitLab repository.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 当开发者触发 Jenkins 作业时，我们将选择调用 Ant 来检索 Salesforce 元数据。构建成功后，元数据将保存在目录中，并触发 Jenkins
    作业将元数据从 Jenkins 推送到 GitLab 仓库。验证 GitLab 仓库中的元数据。
- en: Now we will set the global credentials in Jenkins.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将在 Jenkins 中设置全局凭据。
- en: 'Go to Manage Jenkins and select Global Tool Configuration. On your machine,
    the executable file can be different. Go to the Git section and provide Path to
    Git executable as shown in the following screenshot:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 转到“管理 Jenkins”并选择“全局工具配置”。在您的机器上，可执行文件可能不同。转到 Git 部分并提供 Git 可执行文件的路径，如下图所示：
- en: '![](img/83a91bed-0dce-4300-abb8-ccb1c5beb369.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](img/83a91bed-0dce-4300-abb8-ccb1c5beb369.png)'
- en: Configuring a Jenkins job to retrieve metadata from a sandbox
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置一个 Jenkins 作业以从沙盒检索元数据
- en: 'We have created the Git repository with the metadata from the Salesforce Production
    organization in [Chapter 5](45e26817-986f-4fa4-a9c3-3044e7aad5da.xhtml), *Version
    Control*. We will use the same sample project and GitLab repository, `Salesforce_demo`,
    with the current production code from the Salesforce Sandbox. The instructions
    are as follows:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经在[第 5 章](45e26817-986f-4fa4-a9c3-3044e7aad5da.xhtml)，*版本控制*中创建了一个包含来自 Salesforce
    生产组织的元数据的 Git 仓库。我们将使用相同的示例项目和 GitLab 仓库 `Salesforce_demo`，以及来自 Salesforce 沙盒的当前生产代码。操作步骤如下：
- en: 'Create the branch to retrieve code from the sandbox:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个分支以从沙盒检索代码：
- en: '[PRE0]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Log in to the Jenkins server and click on New Item to create a Jenkins job:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录 Jenkins 服务器并点击“新建项目”以创建 Jenkins 作业：
- en: '![](img/08692ed5-6b53-41bb-8a4b-d831e181d3c9.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](img/08692ed5-6b53-41bb-8a4b-d831e181d3c9.png)'
- en: 'Give the name `Retrive_sandbox_to_git` to the Jenkins job. As we are working
    on an Ant build project, select Build a Free-style Project. Click OK. The Freestyle
    project type is used to create a Jenkins project with any SCM using any build
    system:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 Jenkins 作业命名为 `Retrive_sandbox_to_git`。由于我们正在处理一个 Ant 构建项目，选择“构建自由风格项目”。点击确定。自由风格项目类型用于创建一个可以使用任何构建系统的
    Jenkins 项目：
- en: '![](img/684e37f5-2d15-4297-8858-f2dff196501f.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](img/684e37f5-2d15-4297-8858-f2dff196501f.png)'
- en: 'Configure the job. After the job has been created, we will go to the job configuration
    page. In the General tab, provide the project name and description, as follows:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置作业。创建作业后，我们将进入作业配置页面。在“常规”选项卡中，提供项目名称和描述，如下所示：
- en: 'Project Name: `Retrive_sandbox_to_git`.'
  id: totrans-66
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 项目名称：`Retrive_sandbox_to_git`。
- en: 'Description: Job to retrieve metadata from sandbox and push to Git.'
  id: totrans-67
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 描述：用于从沙盒检索元数据并推送到 Git 的作业。
- en: 'Source Code Management: Keep it as None, as we don''t need SCM for this job.'
  id: totrans-68
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 源代码管理：保持为“无”，因为我们不需要在此作业中使用 SCM。
- en: 'Build Triggers: Do not choose any trigger.'
  id: totrans-69
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建触发器：不要选择任何触发器。
- en: 'Build Environment: Select Add timestamp to console output if available:'
  id: totrans-70
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建环境：如果可用，选择“添加时间戳到控制台输出”：
- en: '![](img/33bb1266-d791-4f90-b8dc-e0f53930ad43.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](img/33bb1266-d791-4f90-b8dc-e0f53930ad43.png)'
- en: 'Select Invoke Ant from the Add build step dropdown menu and provide the path
    for `build.xml` to retrieve the metadata from the sandbox to the Jenkins workspace:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从“添加构建步骤”下拉菜单中选择调用 Ant，并提供 `build.xml` 的路径，以将元数据从沙盒检索到 Jenkins 工作区：
- en: '![](img/ebc36f3a-52e3-4387-97f6-7f720d4ab966.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ebc36f3a-52e3-4387-97f6-7f720d4ab966.png)'
- en: 'Configure the build:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置构建：
- en: 'Targets: Leave the target empty. Here, you can specify a list of targets you
    want to run. If we leave it empty, the target specified in the build script will
    be executed.'
  id: totrans-75
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 目标：保持目标为空。在此，你可以指定一个你想运行的目标列表。如果我们将其保持为空，构建脚本中指定的目标将会执行。
- en: 'Build File: The location of `build.xml` is at `<JENKINS_WORKSPACE>/<ITEM-NAME>`.
    You can specify your build file here; by default Ant will use `build.xml` in the
    root directory. The workspace root directory is at: `<JENKINS_WORKSPACE>/$ITEM_NAME`.
    Example: Building in workspace `<JENKoNS_WORKSPACE>/Retrive_SandBox_to_Git`.'
  id: totrans-76
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 构建文件：`build.xml` 文件的位置在 `<JENKINS_WORKSPACE>/<ITEM-NAME>`。你可以在此指定构建文件；默认情况下，Ant
    会使用根目录中的 `build.xml` 文件。工作空间根目录的位置是：`<JENKINS_WORKSPACE>/$ITEM_NAME`。示例：在工作空间
    `<JENKINS_WORKSPACE>/Retrive_SandBox_to_Git` 中构建。
- en: 'Java Options: `<-Xmn1024m>` provide the Java memory limit, because the job
    will throw error if its less.'
  id: totrans-77
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Java 选项：`<-Xmn1024m>` 提供 Java 内存限制，因为如果内存不足，任务会抛出错误。
- en: 'The sample `build.xml` is as shown:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 示例 `build.xml` 如下所示：
- en: '[PRE1]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This will retrieve an unpackaged set of metadata from your organization. In
    `retrieveTarget`, mention the path where the metadata will be stored:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这将从你的组织中检索一组未打包的元数据。在 `retrieveTarget` 中，指定元数据将存储的路径：
- en: '![](img/3ffa82e6-d041-4187-a1d5-fc33963abfc7.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3ffa82e6-d041-4187-a1d5-fc33963abfc7.png)'
- en: 'In Post-build Actions, we will execute a shell script to perform a Git push
    to the `sandbox_to_git` branch:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在构建后操作中，我们将执行一个 Shell 脚本，将代码推送到 `sandbox_to_git` 分支：
- en: Trigger job `Retrive_SandBox_to_Git2`. It will push all the code retrieved by
    the `Build.xml` script in `DevOps/src`.
  id: totrans-83
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 触发任务 `Retrive_SandBox_to_Git2`。它将推送 `DevOps/src` 中由 `Build.xml` 脚本检索到的所有代码。
- en: 'The following are some sample commands to push code in the Git repository:'
  id: totrans-84
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以下是一些推送代码到 Git 仓库的示例命令：
- en: '[PRE2]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Test the job: Make sure the project is *enabled* in Jenkins. Select it from
    the list of projects, and click Build Now.'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试任务：确保 Jenkins 中的项目已*启用*。从项目列表中选择它，然后点击立即构建。
- en: 'Check the Console Output. After the build, click Build Details and you can
    also refer to the Console Output and check if there are any errors on the build
    script:'
  id: totrans-87
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查控制台输出。构建完成后，点击 “构建详情”，你也可以查看控制台输出，检查构建脚本中是否有错误：
- en: '![](img/e72e0ebb-d675-4e7e-8c33-555daece8f19.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e72e0ebb-d675-4e7e-8c33-555daece8f19.png)'
- en: 'Check the Console Output in the Jenkins Console. If the build is successful,
    then it will show the following message: BUILD SUCCESSFUL:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Jenkins 控制台查看控制台输出。如果构建成功，则会显示以下消息：BUILD SUCCESSFUL：
- en: '![](img/0df7d616-50c6-447d-a4fe-b40b87c377fb.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0df7d616-50c6-447d-a4fe-b40b87c377fb.png)'
- en: Verify the updated code in the Git Branch `sandbox_to_git`.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证 Git 分支 `sandbox_to_git` 中更新的代码。
- en: Triggering the same job again
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 再次触发相同的任务
- en: 'To execute the same Jenkins job again, follow these steps:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 要再次执行相同的 Jenkins 任务，请按照以下步骤操作：
- en: Log in to Jenkins.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录 Jenkins。
- en: Select the job that you want to run.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择你想运行的任务。
- en: Click on Build Now.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击立即构建。
- en: Check the status/console output.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查状态/控制台输出。
- en: Configuring a Jenkins job to deploy metadata on a sandbox
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置 Jenkins 任务以将元数据部署到沙盒
- en: 'We have Eclipse with the Force.com IDE and Git installed in it. The developer
    sandbox is in sync with Eclipse. Developers work with Eclipse and the Force.com
    IDE. Sandbox will be in sync with the Eclipse workspace. After changes are done,
    the developer will push changes to the Git branch and mention the deployment component
    in `package.xml`. This Git push will trigger a Jenkins job that will execute the
    Ant deploy script and deploy changes from the developer sandbox to test the sandbox:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已在 Eclipse 中安装了 Force.com IDE 和 Git。开发者沙盒与 Eclipse 同步。开发者使用 Eclipse 和 Force.com
    IDE，沙盒将与 Eclipse 工作区同步。修改完成后，开发者将代码推送到 Git 分支，并在 `package.xml` 中提及部署组件。这个 Git
    推送将触发 Jenkins 任务，执行 Ant 部署脚本，将开发者沙盒中的更改部署到测试沙盒：
- en: '![](img/ab0ba0cd-55d5-4b7f-a7c8-945b0bc9c700.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ab0ba0cd-55d5-4b7f-a7c8-945b0bc9c700.png)'
- en: 'The tools used are:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 使用的工具有：
- en: '**Git**: To track Salesforce changes in Git'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Git**：用于跟踪 Salesforce 更改在 Git 中的记录'
- en: '**Force.com Migration Tool**: For Salesforce deployments'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Force.com Migration Tool**：用于 Salesforce 部署'
- en: '**Jenkins**: To automate deployments to a pre-UAT environment with Jenkins
    and Ant scripts'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Jenkins**：使用 Jenkins 和 Ant 脚本自动化部署到预 UAT 环境'
- en: 'The configuration steps are as follows:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 配置步骤如下：
- en: 'Create a Jenkins job to deploy code to the sandbox. Log in to the Jenkins server
    and click on New Item to create a Jenkins job:'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个 Jenkins 任务以将代码部署到沙盒。登录 Jenkins 服务器并点击新建项来创建 Jenkins 任务：
- en: '![](img/6f0bc8c6-6525-4d6a-82b4-89ffe722e6ac.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6f0bc8c6-6525-4d6a-82b4-89ffe722e6ac.png)'
- en: Configure Source Code Management. Copy the project URL from your Git project
    and paste it the to Repository URL.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置源代码管理。复制你 Git 项目的项目 URL，并将其粘贴到仓库 URL 中。
- en: '![](img/10ed69f1-eeed-4a9d-9f00-1d523058a067.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![](img/10ed69f1-eeed-4a9d-9f00-1d523058a067.png)'
- en: 'Add the credentials for Git access in Jenkins Credentials. Add your username
    and password and select the following credential:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Jenkins 凭证中添加 Git 访问凭证。添加你的用户名和密码，并选择以下凭证：
- en: '![](img/fb5c3725-a5d0-4880-9c78-1703b9c71cfb.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![](img/fb5c3725-a5d0-4880-9c78-1703b9c71cfb.png)'
- en: 'Configure the Git credentials and branches you want to build:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置你希望构建的 Git 凭证和分支：
- en: '![](img/72de775b-ded1-48b9-b5f9-890c96024d35.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![](img/72de775b-ded1-48b9-b5f9-890c96024d35.png)'
- en: 'Select the build and select Invoke Ant. Configure the build file and the `build.properties`
    file:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择构建并选择调用 Ant。配置构建文件和 `build.properties` 文件：
- en: '![](img/d96095f6-46cd-4864-8ffd-58e159ecfd6a.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d96095f6-46cd-4864-8ffd-58e159ecfd6a.png)'
- en: 'The components developers want to deploy will be mentioned in `package.xml`
    and deployed in the ant job. The sample `Build.xml` for the deploy job is as follows:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 开发者希望部署的组件将会在 `package.xml` 中列出，并在 Ant 任务中部署。部署任务的示例 `Build.xml` 如下：
- en: '[PRE3]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Once developers push the code to the respective Git branch, the Jenkins job
    will be triggered and the new code is deployed to the destination sandbox. This
    sandbox can be a UAT sandbox or production. You can use the same job for different
    scenarios.
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦开发者将代码推送到相应的 Git 分支，Jenkins 任务将被触发，新代码将被部署到目标沙箱中。这个沙箱可以是 UAT 沙箱或生产环境。你可以使用同一个任务来处理不同的场景。
- en: Summary
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we have learned how to automate backups for Salesforce metadata
    and push code to the Git repository using Jenkins. Tracking changes in Salesforce
    is possible with GitLab and Jenkins jobs. We have explained how to configure the
    Ant Migration Tool with Jenkins and what the flow is for this retrieved code from
    the sandbox to the Jenkins server so as to push it to the Git branch using the
    script for backup.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何自动化备份 Salesforce 元数据，并使用 Jenkins 将代码推送到 Git 仓库。通过 GitLab 和 Jenkins
    任务，可以跟踪 Salesforce 中的变化。我们解释了如何配置 Ant 迁移工具与 Jenkins 配合使用，以及从沙箱到 Jenkins 服务器的代码提取流程，并使用备份脚本将其推送到
    Git 分支。
- en: We have learned how to set up our own Jenkins server and configure it to retrieve
    metadata from our Salesforce sandbox. Also we have configured a Jenkins job for
    deploying metadata from one sandbox to another sandbox. Regarding the deployment
    job, we discussed the tools that can be used and explained the flow for deployment
    to UAT or testing with a diagram.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 我们学习了如何搭建自己的 Jenkins 服务器，并配置它从 Salesforce 沙箱中检索元数据。同时，我们还配置了一个 Jenkins 任务，将元数据从一个沙箱部署到另一个沙箱。关于部署任务，我们讨论了可以使用的工具，并通过图示解释了
    UAT 或测试环境的部署流程。
- en: In the next chapter, we will learn about continuous testing and code coverage
    in Salesforce. We will discuss the steps to perform tests on Salesforce using
    Selenium and Qualitia. We will learn about automating the process of continuous
    testing using Jenkins.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习 Salesforce 中的持续测试和代码覆盖率。我们将讨论如何使用 Selenium 和 Qualitia 在 Salesforce
    上进行测试的步骤。我们还将学习如何使用 Jenkins 自动化持续测试的过程。
