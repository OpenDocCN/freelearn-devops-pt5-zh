["```\nmy-hostname.my-subdomain.my-namespace.svc.my-cluster-domain.example\n```", "```\nmy-svc.my-namespace.svc.cluster-domain.example\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: my-svc\nSpec:\n  type: ClusterIP\n  selector:\n    app: web-application\n    environment: staging\n  ports:\n    - name: http\n      protocol: TCP\n      port: 80\n      targetPort: 8080\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: my-svc\nSpec:\n  type: NodePort\n  selector:\n    app: web-application\n  ports:\n    - name: http\n      protocol: TCP\n      port: 80\n      targetPort: 8080\n```", "```\nkubectl apply -f svc.yaml \n```", "```\nkubectl describe service my-svc\n```", "```\nName:                   my-svc\nNamespace:              default\nLabels:                 app=web-application\nAnnotations:            <none>\nSelector:               app=web-application\nType:                   NodePort\nIP:                     10.32.0.8\nPort:                   <unset> 8080/TCP\nTargetPort:             8080/TCP\nNodePort:               <unset> 31598/TCP\nEndpoints:              10.200.1.3:8080,10.200.1.5:8080\nSession Affinity:       None\nEvents:                 <none>\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: my-svc\nSpec:\n  type: NodePort\n  selector:\n    app: web-application\n  ports:\n    - name: http\n      protocol: TCP\n      port: 80\n      targetPort: 8080\n      nodePort: 31233\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: my-svc\n  annotations:\n    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws.. \nspec:\n  type: LoadBalancer\n  selector:\n    app: web-application\n  ports:\n    - name: http\n      protocol: TCP\n      port: 80\n      targetPort: 8080\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: my-svc\n  namespace: dev\nSpec:\n  type: ClusterIP\n  selector:\n    app: newly-containerized-app\n  ports:\n    - name: http\n      protocol: TCP\n      port: 80\n      targetPort: 8080\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: my-svc\n  namespace: prod\nspec:\n  type: ExternalName\n  externalName: myoldapp.mydomain.com\n```", "```\nkubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v0.41.2/deploy/static/provider/cloud/deploy.yaml\n```", "```\n    apiVersion: v1\n    kind: Service\n    metadata:\n      name: service-a\n    Spec:\n      type: ClusterIP\n      selector:\n        app: application-a\n      ports:\n        - name: http\n          protocol: TCP\n          port: 80\n          targetPort: 8080\n    ```", "```\n    kubectl apply -f service-a.yaml\n    ```", "```\n    apiVersion: v1\n    kind: Service\n    metadata:\n      name: service-b\n    Spec:\n      type: ClusterIP\n      selector:\n        app: application-b\n      ports:\n        - name: http\n          protocol: TCP\n          port: 80\n          targetPort: 8000\n    ```", "```\n    kubectl apply -f service-b.yaml\n    ```", "```\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: my-first-ingress\n  annotations:\n    nginx.ingress.kubernetes.io/rewrite-target: /\nspec:\n  rules:\n  - host: my.application.com\n    http:\n      paths:\n      - path: /a\n        backend:\n          serviceName: service-a\n          servicePort: 80\n      - path: /b\n        backend:\n          serviceName: service-b\n          servicePort: 80\n```", "```\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: my-first-ingress\n  annotations:\n    nginx.ingress.kubernetes.io/rewrite-target: /\nspec:\n  rules:\n   - http:\n      paths:\n      - path: /a\n        backend:\n          serviceName: service-a\n          servicePort: 80\n      - path: /b\n        backend:\n          serviceName: service-b\n          servicePort: 80\n```", "```\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: multiple-branches-ingress\nspec:\n  rules:\n  - host: my.application.com\n    http:\n      paths:\n      - backend:\n          serviceName: service-a\n          servicePort: 80\n  - host: my.otherapplication.com\n    http:\n      paths:\n      - backend:\n          serviceName: service-b\n          servicePort: 80\n```", "```\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: secured-ingress\nspec:\n  tls:\n  - hosts:\n    - my.application.com\n    secretName: my-tls-secret\n  rules:\n    - host: my.application.com\n      http:\n        paths:\n        - path: /\n          backend:\n            serviceName: service-a\n            servicePort: 8080\n```"]