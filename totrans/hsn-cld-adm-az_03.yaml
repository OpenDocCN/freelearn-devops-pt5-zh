- en: Infrastructure as a Service - the First Layer of Cloud Computing
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基础设施即服务 - 云计算的第一层
- en: The next step in our cloud journey is to leverage the Azure Virtual Machines
    offering as part of Azure IaaS. This is the first logical step when moving our
    workloads to the cloud, as managing Azure Virtual Machines is not much different
    from managing local VMs. We no longer have access to the virtualization host and
    hardware, but administrating and managing Azure VMs is no different from administrating
    and managing local servers or VMs.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的云旅程中的下一步是利用 Azure 虚拟机作为 Azure IaaS 的一部分。这是将工作负载转移到云端的第一个逻辑步骤，因为管理 Azure
    虚拟机与管理本地虚拟机并无多大不同。虽然我们不再访问虚拟化主机和硬件，但管理 Azure VM 与管理本地服务器或虚拟机没有任何区别。
- en: We'll show you how to achieve high availability of your services and how to
    scale out workloads as one of the main benefits that Microsoft Azure offers.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将向您展示如何实现服务的高可用性以及如何扩展工作负载，这是 Microsoft Azure 提供的主要优势之一。
- en: 'Areas that we''ll cover in this chapter are:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖的领域包括：
- en: Creating Azure Virtual Machines
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建 Azure 虚拟机
- en: Managing Azure Virtual Machines
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理 Azure 虚拟机
- en: Creating Azure Load Balancers
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建 Azure 负载均衡器
- en: Configuring Azure Load Balancers
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置 Azure 负载均衡器
- en: Creating Azure Virtual Machines scale sets
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建 Azure 虚拟机规模集
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'For this chapter, you''ll need:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本章需要：
- en: An Azure subscription
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Azure 订阅
- en: Deploying Azure Virtual Machines
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署 Azure 虚拟机
- en: Deployment of any Azure resource can be done in several ways and it's no different
    with Azure Virtual Machines. We can use the Azure portal, ARM templates, Azure
    PowerShell, or Azure CLI. We will discuss all these methods but for the time being
    we'll stick to the Azure portal and occasionally use ARM templates. This is to
    gain better knowledge of Azure services and what is created in each deployment.
    Other tools can help us in the long run, especially when we talk redeployment
    and automation, but we'll get to that part later.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 任何 Azure 资源的部署都可以通过多种方式进行，Azure 虚拟机也不例外。我们可以使用 Azure 门户、ARM 模板、Azure PowerShell
    或 Azure CLI。我们将讨论所有这些方法，但目前我们将专注于使用 Azure 门户，并偶尔使用 ARM 模板。这是为了更好地了解 Azure 服务以及每次部署创建了什么。其他工具在长远来看也会对我们有所帮助，特别是当我们谈论重新部署和自动化时，但这部分我们稍后再谈。
- en: We already did a quick create of an Azure VM, but this time we'll look more
    closely for options that are available as last time we only considered the Azure
    networking part as the important one.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经快速创建了一个 Azure VM，但这一次我们将更仔细地查看可用的选项，因为上次我们只考虑了 Azure 网络部分作为重点。
- en: Creating a new Azure Virtual Machine
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建新的 Azure 虚拟机
- en: To create a new Azure VM, we need to select New resource and select New Virtual
    Machine.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建新的 Azure VM，我们需要选择新资源并选择新虚拟机。
- en: The first step is to select the operating system for our VM. There are hundreds
    of images available to select from both Windows and Linux. It's important to mention
    that more and more Linux VMs are deployed to Azure daily. Information from the
    end of 2017 tells us that more than 40% of all Azure Virtual Machines are running
    Linux, and that percentage is probably up since then.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是为我们的 VM 选择操作系统。Windows 和 Linux 都有数百个可供选择的镜像。重要的是要提到，越来越多的 Linux VM 每天都被部署到
    Azure 中。来自 2017 年底的信息告诉我们，超过 40% 的所有 Azure 虚拟机正在运行 Linux，而该百分比可能自那时以来已经增加。
- en: 'Supported versions of Windows Server in Azure are:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: Azure 中支持的 Windows Server 版本有：
- en: Windows Server 2008 R2 SP1
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows Server 2008 R2 SP1
- en: Windows Server 2012
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows Server 2012
- en: Windows Server 2012 R2
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows Server 2012 R2
- en: Windows Server 2016
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows Server 2016
- en: 'For Linux, there are too many versions to name but supported distributions
    are:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Linux，有太多版本以至于无法一一列举，但支持的发行版包括：
- en: Ubuntu
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ubuntu
- en: CentOS
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CentOS
- en: RHEL
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RHEL
- en: Kali
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kali
- en: Oracle
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Oracle
- en: All images can be selected as a minimum installation or preconfigured with additional
    software installed. For example, we can select Windows Server 2016 with all settings
    at default or select an image that has SQL Server installed and ready to use.
    We can choose the same for Linux, choose minimum installation, or choose an already
    configured image with software such as Chef, Puppet, Jenkins, and so on.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 所有镜像都可以选择最小安装或预配置安装额外软件。例如，我们可以选择默认设置的 Windows Server 2016 或选择已安装 SQL Server
    并且准备好使用的镜像。对于 Linux，我们可以选择最小安装，或者选择已配置好软件如 Chef、Puppet、Jenkins 等的镜像。
- en: There is also an option to choose your custom image with the configuration and
    software of your choosing. This can be an image of your on-premises VM that is
    uploaded to Azure or an image created from another Azure VM.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 还可以选择自定义映像，使用自己选择的配置和软件。这可以是上传到 Azure 的本地虚拟机映像，也可以是从另一个 Azure 虚拟机创建的映像。
- en: After we choose the OS, we start a new blade that will take us through three
    stages.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 选择操作系统后，我们将进入一个新的面板，指导我们完成三个阶段。
- en: Basic Azure Virtual Machine information
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基本 Azure 虚拟机信息
- en: The first step is to provide basic information for our VM. A name needs to be
    provided for any type of resource in Azure. It's useful to give names based on
    procedures and roles as this will help in later management. It's easier when the
    name of your VM gives you a hint about what its purpose is. As I intend to use
    this one as a web server, I'll name it `WebSrv1`.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步是为我们的虚拟机提供基本信息。Azure 中的任何资源都需要提供名称。最好根据过程和角色为资源命名，这将有助于后续管理。当虚拟机的名称能提示其用途时，管理起来会更方便。由于我打算将其用作
    web 服务器，因此我会将其命名为`WebSrv1`。
- en: VM disk type lets us choose between two values—HDD and SSD. This can be critical
    for our VM as the disk type can significantly impact performance. As this impacts
    the price of the VM as well, we need to find a balance and choose based on expected
    workloads. Choosing HDD may be good enough if we create a web server but if you're
    going to deploy a database server, SSD is the recommended option.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: VM 磁盘类型让我们可以在两种值之间选择——HDD 和 SSD。磁盘类型对虚拟机性能有重大影响，因此选择合适的磁盘类型对我们非常关键。由于磁盘类型也会影响虚拟机的价格，我们需要在预期工作负载的基础上找到平衡。若我们创建的是
    web 服务器，选择 HDD 可能就足够了，但如果打算部署数据库服务器，推荐选择 SSD。
- en: The Username option doesn't allow us to use most common server usernames such
    as `Admin`, `Administrator`, `SysAdmin`, and similar. This is in order to protect
    your cloud resources. As most Azure VMs with a public IP address can be accessed
    through RDP, it's critical to limit that access as much as possible. I have multiple
    VMs that are attacked daily and the most common attempts are made using these
    exact usernames. We can apply additional security to VMs and usernames, but we'll
    discuss that in later chapters.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 用户名选项不允许我们使用如 `Admin`、`Administrator`、`SysAdmin` 等常见服务器用户名。这是为了保护你的云资源。由于大多数带有公网
    IP 地址的 Azure 虚拟机可以通过 RDP 访问，因此限制访问非常关键。我有多台虚拟机每天都受到攻击，最常见的攻击就是使用这些用户名。我们可以为虚拟机和用户名应用额外的安全措施，但这些将在后续章节中讨论。
- en: 'Similar to any other resource, we need to provide information for the Subscription,
    the Resource group, and Location where the VM will be deployed. An example of
    basic information can be seen in the screenshot shown here:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他资源类似，我们需要提供虚拟机部署所在的订阅、资源组和位置等信息。这里可以看到一个基本信息的示例：
- en: '![](img/e5f54b82-dcd4-422b-a6a4-a01e58b70e0f.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e5f54b82-dcd4-422b-a6a4-a01e58b70e0f.png)'
- en: Azure Virtual Machine sizes
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Azure 虚拟机规格
- en: 'The second step in the Azure Virtual Machine creation blade is to choose the
    size of your VM. The size of the VM will determine three things—the number of
    CPUs, the amount of memory, and the type of OS disk. As you choose the type of
    disk in step one as well, this will narrow down the options that are available.
    VM sizes have three different pricing tiers:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 创建虚拟机的第二步是选择虚拟机的规格。虚拟机的规格将决定三项内容——CPU 数量、内存大小以及操作系统磁盘类型。由于在第一步中也选择了磁盘类型，这将缩小可用选项范围。虚拟机规格有三个不同的定价层级：
- en: Basic
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基础
- en: Standard
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标准
- en: Low priority
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 低优先级
- en: Basic-tier VMs are intended for `dev/test` environments and, even though they
    have a similar performance to VMs on the standard tier, there are a few limitations.
    They have lower IOPS than standard-tier VMs and don't support load balancing or
    auto-scaling.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 基础层虚拟机用于`开发/测试`环境，尽管它们与标准层虚拟机在性能上相似，但有一些限制。它们的 IOPS 比标准层虚拟机低，并且不支持负载均衡或自动扩展。
- en: Standard-tier VMs are intended to be used in a production environment and have
    better CPUs and IOPS performance.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 标准层虚拟机用于生产环境，提供更好的 CPU 和 IOPS 性能。
- en: Low-priority VMs are allocated based on free and unused resources in Azure Datacenter.
    They come with a lower price but can be unavailable at any time, as Microsoft
    Azure may claim these resources to satisfy requests with a higher priority. They
    are intended to be used for batch processing and random jobs.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 低优先级虚拟机根据 Azure 数据中心中空闲和未使用的资源分配。它们价格较低，但可能随时不可用，因为微软 Azure 可能会回收这些资源以满足更高优先级的请求。它们主要用于批处理和随机任务。
- en: But the pricing tier isn't the only thing to determine the price of your VM.
    Each tier has different sizes that provide a certain amount of CPU and memory;
    a higher amount equals a higher price.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 但定价层级并不是唯一决定虚拟机价格的因素。每个层级都有不同的大小，提供一定数量的 CPU 和内存；数量越高，价格越高。
- en: 'The standard tier has additional categories based on the VM purpose:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 标准层根据虚拟机的用途有额外的类别：
- en: General-purpose
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一般用途
- en: Compute-optimized
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计算优化型
- en: Memory-optimized
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内存优化型
- en: Storage-optimized
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储优化型
- en: GPU
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GPU
- en: High-performance compute
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高性能计算
- en: Most of these are self-explanatory as general-purpose has a balanced CPU-to-memory
    ratio, compute-optimized has more CPU, memory-optimized has more RAM, and storage-optimized
    has the best IOPS. GPUs are specialized VMs for heavy graphic rendering and video
    editing. High-performance VMs have at least eight vCPUs and use DDR4 RAM.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这些大部分都不难理解，一般用途虚拟机有平衡的 CPU 与内存比例，计算优化型有更多的 CPU，内存优化型有更多的内存，存储优化型有最佳的 IOPS。GPU
    是专门用于重型图形渲染和视频编辑的虚拟机。高性能虚拟机至少有八个虚拟 CPU，并使用 DDR4 内存。
- en: The size of the VM also determines the number of NICs that can be attached to
    your VM.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟机的大小还决定了可以附加到虚拟机的网络接口卡（NIC）的数量。
- en: This can be from one to eight depending on purpose and size.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这个数量从一个到八个不等，具体取决于用途和大小。
- en: 'Options for selecting the VM size can be seen in the following screenshot:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 可以在以下截图中查看选择虚拟机大小的选项：
- en: '![](img/ada72268-d797-4cb6-8e9b-ec5d827cfa04.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ada72268-d797-4cb6-8e9b-ec5d827cfa04.png)'
- en: Advanced VM options
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 高级虚拟机选项
- en: The third blade gives us the option to configure a lot of additional settings.
    In the previous chapter, we focused only on the networking part, but this time
    we'll explore these options more closely.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 第三部分提供了配置许多额外设置的选项。在上一章中，我们只关注了网络部分，但这一次我们将更仔细地探索这些选项。
- en: The high availability section gives us two options—Availability zone and Availability
    set.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 高可用性部分提供了两个选项——可用性区域和可用性集。
- en: The Availability zone determines the zones inside the Azure Datacenter. These
    zones have an independent power source, networking, and cooling, and protect your
    VM against failures inside the Datacenter. If you have a critical service that
    will run on multiple VMs, you want to place these VMs in different availability
    zones so, if there is a failure on the Datacenter level, there is less chance
    that all your VMs will be impacted.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 可用性区域决定了 Azure 数据中心内的区域。这些区域有独立的电源、网络和冷却系统，能够保护你的虚拟机免受数据中心内故障的影响。如果你有需要在多个虚拟机上运行的关键服务，你应该将这些虚拟机放置在不同的可用性区域中，这样如果数据中心级别发生故障，所有虚拟机受到影响的可能性就会减少。
- en: Availability set does similar things on a host level, ensuring that your VMs
    are placed across multiple physical servers, compute racks, storage units, and
    network switches. If hardware failure occurs, there is less chance that all your
    VMs will be impacted.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 可用性集在主机级别做类似的事情，确保你的虚拟机分布在多个物理服务器、计算机机架、存储单元和网络交换机上。如果发生硬件故障，所有虚拟机受到影响的可能性较小。
- en: Note that these availability options can't be changed later. You need to define
    the Availability zone and Availability set during the creation process. This is
    important to remember if you plan to design highly available solutions and services.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这些可用性选项在后续不能更改。在创建过程中需要定义可用性区域和可用性集。如果你计划设计高可用性解决方案和服务，这一点特别重要。
- en: I'll place this VM in an Availability set named (new) WebSet as I intend to
    use it later.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我将把这个虚拟机放入名为（new）WebSet的可用性集，因为我打算稍后使用它。
- en: Storage options allow us to choose between Disk type and Use managed disks.
    The Disk type option is the same as we had before; we can choose between HDD and
    SSD. Depending on the size of VM chosen, all types of disk may not be available
    to choose here. If you want to choose a different option that is not available,
    you need to go back and choose a different size of VM.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 存储选项允许我们选择磁盘类型和使用托管磁盘。磁盘类型选项与之前一样，我们可以选择 HDD 或 SSD。根据所选择的虚拟机大小，并非所有类型的磁盘都可以在此处选择。如果你想选择一个不可用的选项，你需要返回并选择一个不同的虚拟机大小。
- en: Use managed disks are there to make our lives a little easier. This option was
    available from February 2017 and, prior to this, we need to manage storage on
    our own. Creating a disk actually creates a storage account and we needed to manage
    that storage. With a managed disk, we don't have to be concerned with this and
    it's managed automatically. Storage is still created but, if we choose Use managed
    disks, everything is handled in the background and no user action is required.
    This can be especially useful when scaling our VM (or VM Scale Sets). Managed
    disks also introduced a few very useful features such as snapshots and backups.
    I strongly recommend using a managed disk as this helps you get better performance
    with less management.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 使用托管磁盘可以让我们的工作变得更加轻松。这个选项自2017年2月起提供，在此之前，我们需要自己管理存储。创建一个磁盘实际上是创建一个存储账户，我们需要管理该存储。使用托管磁盘后，我们不必关心这些，所有的管理都会自动完成。虽然存储依然会被创建，但如果选择使用托管磁盘，一切都会在后台处理，无需用户操作。尤其是在扩展虚拟机（或虚拟机规模集）时，这个功能特别有用。托管磁盘还引入了一些非常实用的功能，如快照和备份。我强烈建议使用托管磁盘，因为它可以帮助你获得更好的性能，且管理更简便。
- en: 'Setting for high availability and disks can be seen in the screenshot shown here:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 高可用性和磁盘设置可以在下面的截图中看到：
- en: '![](img/1ba84a39-99de-4991-a2a5-5700e3d276cc.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1ba84a39-99de-4991-a2a5-5700e3d276cc.png)'
- en: 'Networking options were covered in the previous chapter but let''s quickly
    review what our options are here. We can select our VNet, subnet on that VNet,
    and public IP address for our VM. The last networking option is to select the
    **network security group** (**NSG**) for our VM. In the following screenshot,
    you can see that I selected PacktVNet and the DMZ (10.1.1.0/24) subnet. A new
    public IP address is created for my new VM as I intend to use it as a web server.
    As I have the NSG rule applied on the DMZ subnet, I don''t want to separate the
    NSG on the VM level. This will help me simplify management and keep standardized
    rules across all my VMs, so I''ll leave the NSG field blank as shown here:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 网络选项在前一章中已经讨论过，但我们快速回顾一下这里的选项。我们可以选择虚拟网络（VNet）、该VNet上的子网以及虚拟机的公共IP地址。最后一个网络选项是选择**网络安全组**（**NSG**）用于虚拟机。在下面的截图中，你可以看到我选择了PacktVNet和DMZ（10.1.1.0/24）子网。由于我打算将其作为Web服务器使用，所以为我的新虚拟机创建了一个新的公共IP地址。由于我已经在DMZ子网上应用了NSG规则，我不想在虚拟机级别单独设置NSG。这将帮助我简化管理，并保持所有虚拟机上的标准化规则，因此我会像下面这样保持NSG字段为空：
- en: '![](img/bb634969-8f14-4667-acf2-caa0c81a7705.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bb634969-8f14-4667-acf2-caa0c81a7705.png)'
- en: Extensions gives us the option to add additional features to our VM. You can
    choose from set predefined software or execute a custom script that will install
    additional software or features.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 扩展功能使我们可以为虚拟机添加额外的功能。你可以从预设的软件中选择，或者执行自定义脚本来安装额外的软件或功能。
- en: Auto-shutdown can help you save on computing hours if you don't need the VM
    to run 24/7\. For example, if this is a `dev` environment and no one is using
    it after work hours, you can set Auto-shutdown to shut down your VM every day
    at 5 p.m. so you don't pay for it overnight. Of course, if this web or database
    server is in production, this isn't an option you really want to use.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 自动关机可以帮助你节省计算时长，如果你不需要虚拟机24小时运行。例如，如果这是一个`dev`环境，且下班后没有人使用它，你可以设置自动关机，每天在下午5点关机，这样你就不用为它支付夜间费用。当然，如果这是一个生产环境中的Web或数据库服务器，那就不建议使用这个选项。
- en: Monitoring can be Enabled for boot diagnostics and guest OS monitoring. This
    is beside the basic monitoring options that are available by default. Both of
    these options will require a storage account where logs will be stored. Avoid
    using storage that is used for a VM disk as this can cause performance issues.
    If your VM is having performance issues on a disk level, this will generate more
    logs, and these logs will increase the load on storage on top of that. This will
    cause more disk issues and you will be in an infinite loop where you won't be
    able to see if the issue is caused by disk or by logs.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 监控可以启用启动诊断和客户操作系统监控。这是默认情况下提供的基本监控选项之外的功能。启用这两个选项需要一个存储账户来存储日志。避免使用虚拟机磁盘的存储，因为这可能导致性能问题。如果虚拟机在磁盘层面出现性能问题，这将生成更多日志，这些日志将进一步增加存储的负载。这会导致更多的磁盘问题，进入一个无法分辨问题是由磁盘还是日志引起的无限循环。
- en: The last options are Managed service identity and Backup. Managed service identity allows
    you to use your Azure Active Directory with your VM, and Backup will create an
    additional backup service (Azure Backup). Both of these services will be covered
    in more depth later.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 最后的选项是托管服务标识和备份。托管服务标识允许你使用 Azure Active Directory 来管理虚拟机，而备份将创建一个额外的备份服务（Azure
    备份）。这两个服务将在后续章节中详细讨论。
- en: 'Options for Extensions, Auto-shutdown, Monitoring, Managed service identity,
    and Backup can be seen in the following screenshot:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了扩展、自动关机、监控、托管服务标识和备份的选项：
- en: '![](img/7afa1b96-e018-436e-8a12-fafbe642b7e3.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7afa1b96-e018-436e-8a12-fafbe642b7e3.png)'
- en: Finally, we can start deployment and after a few minutes we can start using
    our VM. As I mentioned before, the time taken to create a new VM can depend on
    the size of the VM and the availability of resources in the Azure Datacenter.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们可以开始部署，几分钟后便可以开始使用我们的虚拟机。如前所述，创建新虚拟机所需的时间可能取决于虚拟机的大小和 Azure 数据中心中的资源可用性。
- en: Managing Azure Virtual Machines
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理 Azure 虚拟机
- en: 'After deployment is completed, we can see four different resources have been
    created—`Virtual machine`, `Disk`, `Network interface` and `Public IP address`.
    A `Public IP address` is optional and doesn''t need to be created if you intend
    to use and manage the VM only using private IP addresses with the use of VPN.
    If a managed disk wasn''t chosen, there would be a storage account where the disk
    would be placed here as well, as shown:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 部署完成后，我们可以看到已经创建了四个不同的资源——`虚拟机`、`磁盘`、`网络接口`和`公共 IP 地址`。`公共 IP 地址`是可选的，如果你打算仅使用私有
    IP 地址并通过 VPN 管理虚拟机，则不需要创建公共 IP 地址。如果没有选择托管磁盘，那么这里也会有一个存储账户，用来存放磁盘，如下所示：
- en: '![](img/4623beb7-47da-4285-8135-5d5d0fc7c3de.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4623beb7-47da-4285-8135-5d5d0fc7c3de.png)'
- en: Every one of these resources has different options for management. We have already
    seen options for IP addresses and NICs; we'll explore disk and storage in later
    chapters. For now, let us focus on the VM and what options are available to us
    for administration and management.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 每一个这些资源都有不同的管理选项。我们已经看过了 IP 地址和 NIC 的选项，稍后我们会探讨磁盘和存储的选项。目前，让我们集中关注虚拟机以及可用的管理选项。
- en: VM settings
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 虚拟机设置
- en: 'Under the Virtual Machine blade, we have various options such as SETTINGS,
    OPERATIONS, MONITORING, and SUPPORT. Under SETTINGS, we have multiple choices
    as well: Networking, Disks, Size, Security, Extensions, Availability set and Configuration.
    Properties, Locks and Automation script are available as for all other Azure resources
    as well. Note that we have Continuous delivery (Preview) here as well. Preview
    features are still in development and they aren''t intended for production purposes.
    It''s fine to test but avoid depending on these features until they are officially
    released. In this instance, Continuous delivery (Preview) allows us to connect
    to VSTS projects and make easier CI/CD.'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在虚拟机刀片下，我们有多个选项，如设置、操作、监控和支持。在设置下，我们还有多个选项：网络、磁盘、大小、安全、扩展、可用性集和配置。属性、锁和自动化脚本也适用于所有其他
    Azure 资源。请注意，我们这里还有“持续交付（预览）”。预览功能仍在开发中，不能用于生产环境。测试是可以的，但在这些功能正式发布之前，最好不要依赖它们。在这种情况下，持续交付（预览）允许我们连接到
    VSTS 项目，并简化 CI/CD 流程。
- en: Some options here are similar to options in the VM creation process. Size will
    allow us to open the blade to choose a different size for our VM at any time.
    Note that to complete this process, a restart of the VM is required. Extensions
    can be used to add software or execute custom scripts, the same as before. Availability
    set is only for information purposes as this setting needs to be defined during
    VM creation. Security and Configuration will be our focus in chapters to come
    and we'll leave these settings as defaults for now.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的一些选项与虚拟机创建过程中的选项类似。大小允许我们随时打开刀片，选择不同的虚拟机大小。请注意，要完成此过程，虚拟机需要重启。扩展可以用来添加软件或执行自定义脚本，与之前一样。可用性集仅供参考，因为此设置需要在虚拟机创建时定义。安全性和配置将是我们接下来章节的重点，暂时我们将这些设置保留为默认值。
- en: 'The Networking option gives us an overview of all network information regarding
    our VM. We can see NIC information, what addresses are associated with our VM,
    the network security group associated with the VM and all NSG rules. We can attach
    additional NICs here and add additional NSG rules. Note that in the following
    screenshot, the NSG is applied on the subnet level. If changes are made to the
    NSG, these will be applied to all VMs on this subnet so you need to be careful.
    For example, if this subnet had multiple VMs and we wanted to allow RDP access
    to a single one, creating this rule would result in all VMs being accessible over
    RDP:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 网络选项为我们提供了关于虚拟机所有网络信息的概览。我们可以看到网卡信息、与虚拟机关联的地址、与虚拟机关联的网络安全组以及所有的 NSG 规则。我们可以在此处附加额外的网卡，并添加额外的
    NSG 规则。请注意，在下面的截图中，NSG 应用于子网级别。如果对 NSG 进行更改，这些更改将应用于该子网中的所有虚拟机，因此需要小心。例如，如果这个子网有多个虚拟机，并且我们想为其中的某一个虚拟机允许
    RDP 访问，创建这个规则将导致所有虚拟机都可以通过 RDP 访问：
- en: '![](img/2204e568-b80d-45e0-a6bf-0d450f733157.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2204e568-b80d-45e0-a6bf-0d450f733157.png)'
- en: 'Under the disk blade, we can see all disks associated with our VM. The OS disk
    can''t be changed, data disks can be added or removed. An example of the disk
    blade can be seen in the following screenshot:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在磁盘刀片下，我们可以看到与虚拟机关联的所有磁盘。操作系统磁盘无法更改，但可以添加或移除数据磁盘。以下截图展示了磁盘刀片的示例：
- en: '![](img/e77ab337-1867-48a3-b7f4-4eafdd91080e.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e77ab337-1867-48a3-b7f4-4eafdd91080e.png)'
- en: Azure Virtual Machine operation and monitoring
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Azure 虚拟机操作与监控
- en: OPERATIONS and MONITORING give us more administration and managing options for
    our Azure Virtual Machines. In OPERATIONS, we have Auto-shutdown, Backup, Disaster
    recovery, Update management, Inventory, Change tracking, and the Run command.
    We will explain Auto-shutdown and the Run command now but the rest of these features
    require additional services that we'll cover later.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 操作（OPERATIONS）和监控（MONITORING）为我们提供了更多的 Azure 虚拟机管理和操作选项。在操作（OPERATIONS）中，我们有自动关机、备份、灾难恢复、更新管理、清单、变更跟踪和运行命令。我们将现在解释自动关机和运行命令，但这些其他功能需要额外的服务，稍后我们会介绍。
- en: We have a similar situation with MONITORING , we'll cover Metrics and Alerts
    (classic) now and the rest of the services will be explained in the chapters to
    come.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在监控（MONITORING）方面有类似的情况，我们现在将介绍“指标”和“警报（经典）”，而其他服务将在后续章节中讲解。
- en: The Auto-shutdown option enables you to schedule the shutdown of your VM in
    Azure. As I mentioned before, this option allow us to save money if we don't need
    the VM to run all the time. The feature is intended to be used in `dev/test` environments
    and isn't for production.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 自动关机选项使您可以安排在 Azure 中关闭虚拟机。如前所述，如果我们不需要虚拟机全天运行，这个选项可以帮助我们节省开销。此功能旨在用于 `dev/test`
    环境，而不适用于生产环境。
- en: 'However, I''ve seen people using it for applications that are needed only during
    working hours. In that case, Auto-shutdown is used to turn the VM off at specific
    times and use Azure Automation for starting it before work hours begin. Other
    than for scheduled time, we have options to send a notification when the VM is
    going to be turned off. This allows us to notify people using the VM that shutdown
    will occur. We can use email or webhooks for these notifications. The following
    screenshot shows the `run` script option. We can use various prepared scripts
    such as `EnableAdminAcount`, `SetRDPPort`, `ResetAccountPaasword`, and so on.
    Or we can execute a custom script against our VM. Options for script execution
    can be seen in following screenshot:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，我也见过一些人将其用于只在工作时间需要的应用程序。在这种情况下，自动关机用于在特定时间关闭虚拟机，并使用 Azure 自动化在工作时间开始前启动虚拟机。除此之外，我们还可以在虚拟机关闭前发送通知，以告知使用该虚拟机的人员即将关闭。我们可以使用电子邮件或
    Webhook 进行通知。以下截图展示了 `run` 脚本选项。我们可以使用各种预设脚本，如 `EnableAdminAcount`、`SetRDPPort`、`ResetAccountPassword`
    等等，或者执行自定义脚本。脚本执行选项可以在以下截图中看到：
- en: '![](img/c4f403d6-fde6-4601-8ea4-9f5232475398.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c4f403d6-fde6-4601-8ea4-9f5232475398.png)'
- en: 'The running command can be done directly through the portal. This can be really
    useful when we can''t access the VM any other way (for example, from a mobile
    device or machine that doesn''t have PowerShell). An example is shown in the following
    screenshot where the script to enable `PSRemoting` is executed:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 运行命令可以直接通过门户完成。这在我们无法以其他方式访问虚拟机时（例如，通过移动设备或没有 PowerShell 的机器）非常有用。以下截图展示了启用
    `PSRemoting` 的脚本执行示例：
- en: '![](img/51fc783d-335b-499a-ba91-145be37d7cd5.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![](img/51fc783d-335b-499a-ba91-145be37d7cd5.png)'
- en: 'Here is also the script to enable `PSRemote` on the Azure Virtual Machine:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 这里还有一个脚本，用于在 Azure 虚拟机上启用 `PSRemote`：
- en: '[PRE0]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Monitoring your Azure resources is important on many levels. It gives you the
    ability to see your resource consumption and plan the pricing tier accordingly.
    If monitoring shows that your resources are under a certain percentage of workload,
    it''s probably a good idea to lower the resource tier. If it''s another way around
    and you have a high percentage all the time, it''s probably a good idea to change
    to a higher tier. A lot of different metrics are available but not for CPU and
    memory monitoring, you need to enable guest-level monitoring. Metrics gives us
    the option to change different metrics over different time periods. An example
    is show in the screenshot here where you can see graphs on disk `read` and `write`
    operations over the last hour:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 监控您的 Azure 资源在多个方面都很重要。它使您能够查看资源的消耗情况，并相应地规划定价层级。如果监控显示您的资源工作负载处于某个百分比以下，可能是时候降低资源层级了。如果情况相反，您的资源长期处于高负载，可能需要更高的层级。提供了许多不同的指标，但对于
    CPU 和内存监控，您需要启用客户级别的监控。指标让我们可以根据不同的时间周期改变不同的度量值。下面的截图展示了一个示例，您可以看到过去一小时磁盘 `读`
    和 `写` 操作的图表：
- en: '![](img/50694a93-185e-44c2-afd6-a6ef62bdc8ca.png)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![](img/50694a93-185e-44c2-afd6-a6ef62bdc8ca.png)'
- en: Alerts are an essential part of your Azure resource management and can be real
    lifesavers. In alerts, you can create custom rules that will notify you if a defined
    trigger is activated. For example, you can set up alerts that will notify you
    if the CPU reaches a threshold of 90% utilization over a period of more than 5
    minutes. Similar to auto-shutdown, you can send notifications via email or webhooks.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 警报是 Azure 资源管理的重要组成部分，可以在关键时刻救命。在警报中，您可以创建自定义规则，如果激活了定义的触发条件，将通知您。例如，您可以设置警报，当
    CPU 使用率在超过 5 分钟的时间段内达到 90% 时，会通知您。类似于自动关机，您可以通过电子邮件或 Webhook 发送通知。
- en: 'This example is shown in the following screenshot:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了这个示例：
- en: '![](img/f7baf9a3-0b9b-4099-a3cf-2882166e2225.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f7baf9a3-0b9b-4099-a3cf-2882166e2225.png)'
- en: 'Beside sending a notification, alerts can be set to trigger a custom action
    with the use of runbooks or logic apps. Both are powerful tools to perform custom
    actions when needed. The logic app is easy to use with workflow diagrams that
    enable you to drag and drop actions that need to be taken, in order to perform
    some maintenance tasks or resolve issues. Runbooks require an Azure Automation
    account and can perform actions based on predefined plans or use custom scripts.
    Most administrators find runbooks more useful as they allow you to perform any
    type of action using PowerShell. In my opinion, both are very useful but administrators
    find runbooks more familiar as they can use PowerShell, which is the tool they
    used for on-premises administration:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 除了发送通知外，还可以通过使用运行手册或逻辑应用程序设置警报，以触发自定义操作。两者都是在需要时执行自定义操作的强大工具。逻辑应用程序通过工作流图使其易于使用，您可以拖放需要执行的操作，以进行一些维护任务或解决问题。运行手册需要一个
    Azure 自动化帐户，并且可以根据预定义的计划或使用自定义脚本执行操作。大多数管理员发现运行手册更有用，因为它们允许您使用 PowerShell 执行任何类型的操作。依我看，两者都非常有用，但管理员更熟悉运行手册，因为他们可以使用
    PowerShell，这是他们用于本地管理的工具：
- en: '![](img/cf66f9de-c614-4550-837e-1f54c3979c51.png)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cf66f9de-c614-4550-837e-1f54c3979c51.png)'
- en: If we select to perform an action via runbooks, we can select either a user-defined
    or built-in action. With a user-defined action, you need to select an automation
    account and select a custom runbook in that account to be executed. This can be
    any type of script that will be executed on your Azure VM.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们选择通过运行手册执行某个操作，我们可以选择用户定义的操作或内置操作。使用用户定义的操作时，您需要选择一个自动化帐户，并在该帐户中选择要执行的自定义运行手册。这可以是任何类型的脚本，将在您的
    Azure 虚拟机上执行。
- en: 'Built-in action offers you five options: Restart VM, Stop VM, Scale Up VM,
    Scale Down VM, and Remove VM. An example of a runbook configuration is shown here
    with Built-in runbooks listed:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 内置操作提供了五个选项：重启虚拟机、停止虚拟机、扩展虚拟机、缩减虚拟机和移除虚拟机。以下是一个运行手册配置的示例，其中列出了内置运行手册：
- en: '![](img/07fffd74-9c90-4a0e-944e-c622591f7b28.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![](img/07fffd74-9c90-4a0e-944e-c622591f7b28.png)'
- en: Most of these actions are self-explanatory, but note that you have Scale Up
    VM and Scale Down VM. This allows us to create a scaling up or scaling down of
    our resources based on demand. One of the cloud's benefits is to pay for what
    you use, when you use it. So, if our VM can handle workloads 90% of the time but
    we have peaks in workload only occasionally, we try to avoid paying more to satisfy
    only peaks. If we scale up permanently only to handle peak workloads, we pay more
    and now have a VM that isn't fully utilized 90% of the time, as a lower price
    VM could handle everything but peak periods. Setting up a Scale Up VM rule allows
    you to change your VM size to a higher tier in case 90% CPU is reached. This will
    enable your VM to handle workloads when the threshold is reached and increase
    the VM size on demand. To make the most out of what Microsoft Azure is offering,
    you need to create a similar rule in the other direction, to scale down once workload
    decreases. Having only a rule to scale up will increase the price of your VM and
    you will end up paying more. To prevent this, you can create a rule that when
    the CPU falls below 40%, a Scale Down VM action is performed and the VM is reverted
    to its original size. This way you will pay for more only when workload demands,
    and pay less for periods when workload isn't high.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
- en: The SUPPORT + TROUBLESHOOTING section give us a few additional options. Resource
    health and New support request are options present for all Azure resources. The
    first one gives you information if there is an issue with your VM on the Azure
    Datacenter level, and the second one takes you to the form to submit an Azure
    support ticket. Resource health can be useful to check when your resource isn't
    performing as usual. This can save you time troubleshooting and trying to figure
    out what went wrong when in fact there is a large issue at the Datacenter level
    you can't do anything about. Luckily, this isn't a common occurrence.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
- en: Boot diagnostics gives you the ability to see the current screen of your VM
    and serial log. It can be very helpful when the VM is unresponsive in order to
    check the current state.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: With the Reset password option, you can reset the password for the VM but only
    if you know the correct username. Once you log in to the VM, you'll need to reset
    the password again as the password used here is only temporary. Reset password
    also has the option to reset the remote desktop service configuration.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: Serial console (Preview) gives you access to Windows serial console through
    your browser. However, this feature is still in preview so you shouldn't rely
    on it too much.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: Redeploy is a very interesting feature. If your VM is unresponsive and you can't
    connect, you can use this feature. Redeploying the VM will migrate your VM to
    a new host in the Azure Datacenter to try to fix your issue. Migration will cause
    the reboot of your VM, which is unresponsive to begin with, so this isn't really
    an issue and may resolve the problem you have.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: Features and options listed here are management options specific to Azure Virtual
    Machines. Managing the VM continues with the use of standard administrator tools.
    We can connect to the VM via RDP and perform any kind of task we want. We can
    install roles and features to our VM, add any kind of third-party software or
    our custom software. Other administration tools such as **Remote Server Administration
    Tools** (**RSAT**) or PowerShell are also options.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
- en: Azure Load Balancers
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Deploying Azure Virtual Machines is the first step but what about business critical
    services and applications. For these, we'll probably want to design highly available
    solutions that will have the best possible **service level agreement** (**SLA**)
    and uptime.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
- en: The first step for this must be performed during VM creation with the setting
    up of an Availability zone and Availability set. Then we add another VM to our
    solution with a different Availability zone and the same Availability set. This
    will ensure that the VMs are placed in different zones in the Azure Datacenter
    and don't depend on the same power source, networking, and cooling. If there is
    an issue within the Azure Datacenter, there is less chance that both VMs will
    be impacted.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
- en: Setting up the same Availability set will insure that VMs are placed on different physical
    servers, compute racks, storage units, and network switches. If hardware failure
    occurs, there is less chance both VMs will be affected. Another thing availability
    set takes care of is that Microsoft will never perform maintenance that will impact
    both VMs at the same time. To keep Azure Datacenters secure and performing in
    the best possible way, maintenance tasks must be performed periodically to install
    updates to hosts, or upgrade firmware on hardware. Placing VMs in an availability
    set informs Microsoft that these VMs are set up to achieve high availability,
    and maintenance will be performed keeping this in mind and never affecting all
    VMs at the same time.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
- en: So, to achieve high availability, we need at least two VMs set up. But what
    about traffic? How do we direct whether something goes to the first or the second
    VM? If the first VM isn't available, how do we direct traffic to the second one?
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: This is where Azure Load Balancers come into play. This is one of Azure's network
    services that we skipped before and will explain when the time is right. We will
    have similar situations in later chapters as well. Azure Load Balancers distribute
    incoming traffic from frontend to backend pool instances. They can support both
    inbound and outbound scenarios with low latency and high throughput. In this scenario,
    incoming traffic would come to the Load Balancer IP and the Load Balancer would
    distribute traffic to VMs configured in the backend pool. Azure Load Balancer
    can be internal or public, depending on what kind of traffic we need to distribute.
    For web server roles, we probably want public Load Balancers. But in the case
    of a database server, we probably want to use an internal one as we don't want
    databases exposed over the internet.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: Creating an Azure Load Balancer
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To create a new Azure Load Balancer, we need to select to create a new resource
    and select Azure Load Balancer from the list. This will open the create load Balancer
    blade where we need to provide basic information.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
- en: The information that is the same for all resources are Name, Subscription, Resource
    group, and Location.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
- en: Options specific to Azure Load Balancer are Type, SKU, and Public IP address.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
- en: The Type of Load Balancer can be internal or external, depending on what kind
    of traffic you want to route. A Public type must have the public IP address configured
    and I recommend you place static for this IP address. Optionally, you can enable
    Public IPv6 for your Azure Load Balancer while Public IPv4 is the default.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: The **stock keeping unit** (**SKU**) can be Basic or Standard. Standard has
    more options and features available but comes at a price that is formed based
    on the number of load-balancing rules. On the other hand, Basic is free of charge
    and the only fee associated with it comes from reserving public IP addresses and
    outbound traffic.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: 'An example of the information needed to create a new Azure Load Balancer is
    shown in the following screenshot:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/3e75172d-09fe-4df3-8579-5e84925d8ac3.png)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
- en: Deployment of most Azure Network features is done in under one minute. Azure
    Load Balancer is no different and deployment should complete very quickly.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
- en: Configuring the Azure Load Balancer
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: After the deployment of the Azure Load Balancer is completed, we can go to the
    resource and find different options. SETTINGS is of most interest to us and we'll
    need it to configure our Load Balancer. We can find standard Azure resource settings
    such as Properties, Locks, and Automation script that can be found for all Azure
    resources. Frontend IP configuration gives us the ability to manage IP addresses
    associated with our Load Balancer, add new IP addresses, or remove existing ones.
    Other settings will be needed to configure our Load Balancer to distribute incoming
    traffic and to configure where that traffic should be directed to.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
- en: 'First, we need to configure the Backend pools for our Load Balancer. I''ll
    select my Load Balancer to be associated to an Availability set. Previously in
    this chapter, I created a VM named `WebSrv1` with an Availability set named `WebSet`.
    Then I added an identical VM named `WebSrv2` and added it to the same Availability
    set. So, I have two identical VMs in the same Availability set and I have associated
    my Azure Load Balancer to this set. Finally, we have to define the network IP
    configuration that will be used and set it up to use both VMs in this availability
    set. If we had more VMs in this Availability set, we could set up more IP configurations
    to be targeted. An example of how to set up a backend pool is shown in this screenshot:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4abd8206-2a47-4604-a6ce-b34f733f36b8.png)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
- en: 'The second step is to set up health probes. We need to define the Protocol,
    Port, Interval, and Unhealthy threshold. Protocol and Port will define what needs
    to be monitored. As I intend to use `WebSrv1` and `WebSrv2` as web servers, I''ll
    set up monitoring on port `80`. Interval will define how often a check needs to
    be performed in order to make sure the server is responsive. The threshold defines
    how many consecutive intervals must probe and fail to contact the server in order
    to declare it unresponsive. An example of how to set up a health probe on port
    `80` is shown in this screenshot:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c915be24-918e-4423-a05c-55067b47026b.png)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
- en: 'As I want to use the web server role, I''ll repeat the same thing for port
    `443`. In the screenshot here, we can see both probes are created but the USED
    BY information is empty:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/cf31447c-8b5f-400e-ac4a-92d4c462fc67.png)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
- en: In the third step, we create a load-balancing rule. We need to provide a Name,
    IP Version, Frontend IP address, Protocol, Frontend port, Backend port, Backend
    pool, Health probe, Session persistence, and Idle timeout (minutes). Name and
    IP Version are self-explanatory options, so let's jump on the rest of them.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
- en: For the Frontend IP address, you can choose any of the Load Balancer IP addresses
    as it can be associated with multiple IP addresses. There is a restriction on
    what IP address you can choose based on the IP version selected. If the IP Version
    is set to IPv4, you can select only the IPV4 IP address. If IPv6 is selected,
    only the IP addresses of the same version associated with the Load Balancer can
    be selected.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
- en: Protocol and Port are connected, with this option you select what protocol needs
    to be forwarded from the defined port to the defined Backend port. For example,
    TCP on port `80` should be forwarded to port `80`.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
- en: With the Backend pool, we define where traffic is forwarded to. As you can have
    multiple backend pools in a single Azure Balancer, you can select any of these
    pools.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
- en: Health probe needs to be selected in order to have a check on the VM state.
    You need to select the probe that performs a check on the backend port used in
    the rule you are creating.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
- en: Options for Sessions persistence and Idle timeout (minutes) are related to how
    client connections should be handled. As you have at least two VMs in your Backend
    pool, you need to set traffic to be handled by the same VM for the duration of
    one session. If you select that traffic coming from the same client IP over the
    same protocol, this should keep the session alive. The client will be directed
    to the same VM as long as the session is active.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
- en: Idle timeout (minutes) determines how long the session will stay active if no
    action is taken. The default value is 4 minutes but it can be changed to up to
    30 minutes. With this setting, you determine how long the session will be active
    if the client isn't using the application, and isn't sending any messages in order
    to keep the session alive.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
- en: The option for a Floating IP (direct server return) address is Disabled by default
    and should only be used with SQL AlwaysOn Availability Listener.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
- en: 'In the screenshot here, you can see the options to set up the load-balancing
    rule, HTTP:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/361606ca-297e-4c2b-8034-8a978c421af1.png)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
- en: 'I''ll create another rule named HTTPS for port `443`. Note in the screenshot
    here, that probes created earlier are now used by load-balancing rules:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/729b8657-8a15-4fe2-92e0-70e2efd081f2.png)'
  id: totrans-151
  prefs: []
  type: TYPE_IMG
- en: 'The last option in the Load Balancer settings is the inbound NAT rule. It has
    similar options as the load-balancing rule with one exception. Traffic, in this
    case, isn''t forwarded to the backend pool but to a single VM. In the screenshot
    here, you can see how to set up an inbound NAT rule that will forward traffic
    coming over port `5589` (WinRM) to WebSrv1:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/bd281842-088e-4403-8c24-9458d1c5afad.png)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
- en: So, let's review what was achieved with setting the Load Balancer and availability set.
    We have two VMs acting as web servers in the backend pool. VMs are placed in different
    availability zones and the same availability set in order to increase the chance
    that at least one of the VMs is running. Health probes are checking if VMs are
    available on the defined port. If any of the VMs is unresponsive to two consecutive
    checks, it will be declared as failed. A load-balancing rule is set up to forward
    traffic that is coming over the Load Balancer public IP address to the backend
    pool. If both VMs in the backend pool are healthy, traffic will be forwarded on
    the round-robin rule. If the health probe declares any of the VMs unresponsive,
    all traffic will be forwarded to the VM that is in a healthy state. Sessions are
    kept alive based on the client IP, protocol, and idle timeout. Sessions from the
    same IP address over the same protocol will be forwarded to the same VM as long
    as a keep-alive signal is sent at least every 4 minutes.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
- en: This will ensure our application is up and running, even if a single VM fails.
    Failures can be caused by hardware or network errors in the Azure Datacenter (the
    availability zone and availability set ensure that both VMs are not affected).
    Placing more VMs in the availability set and backend pool increases the chances
    that at least one VM is up and running.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
- en: Azure Load Balancer ARM template
  id: totrans-156
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Here is the ARM template for creating a new Azure Load Balancer:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Azure Virtual Machine Scale Set
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Elasticity is one of the big benefits of cloud computing. We have the ability
    to scale up and down based on our workloads and demand. If we have increased workload,
    we scale up. If workload decreases, we scale back down. With a pricing model of
    paying for what you use and billing by the minute, this allow us to save money.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
- en: We have already explained how to set up scale up and scale down VMs in Microsoft
    Azure. Scaling up and down means to change the size of the VM to a bigger or smaller
    instance. This is called vertical scaling. This can be very useful, but this approach
    has one consequence—every time a VM size is changed, reboot occurs. So, vertical
    scaling can be helpful as it can increase the size of the VM to handle more workload,
    but it will always cause downtime in the period when the VM is rebooting.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
- en: The solution for this is horizontal scaling, and for Azure Virtual Machines
    we can use Azure Virtual Machine Scale Set. Instead of changing the size of the
    VM, scale set creates additional instances of the VM and spreads the workload
    across instances using Azure Load Balancer. This is called horizontal scaling.
    The approach is similar to the high availability scenario but, instead of having
    multiple VMs in the availability set, scale set starts VMs based on workload and
    starts them only when needed. Another difference is that in the availability set,
    VMs are independent and an issue on one VM will not cause an issue on others.
    In scale set, all VMs take a copy of the primary VM, and if the primary VM is
    compromised, the issue will reflect across the scale set. We need to outline that
    the scale set is not a high availability solution but horizontal scaling based
    on workloads.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
- en: Creating an Azure Virtual Machine Scale Set
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let's create a new Azure Virtual Machine Scale Set and explain all the details
    as we go.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
- en: To create a new Azure Virtual Machine Scale Set, all information is provided
    in a single screen. In order to make it more visible, I have separated the screen
    into three images—basic and instances, autoscale, and networking.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
- en: The basic information for Scale Set is very similar to the basic information
    for VMs. This is only logical as scale set creates a primary VM and then clones
    this VM in order to scale out. We need to provide a Virtual machine scale set
    name, Operating system disk image, Subscription, Resource group, Location, Username,
    Password, and optionally add an Availability zone.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
- en: Next, we create the instance rules. This will determine the size of VMs in Scale
    Set and how many instances scale set is allowed to create. The maximum number
    of instances allowed is 1,000 for Azure-provided OS images and 300 for custom
    OS images. If you have an issue on the application and the application itself
    is causing high CPU or memory, it will cause scale set to scale out and create
    new instances. As new instances are an identical replica of the primary VM, the
    issue will persist on these VMs and scaling out will continue until you reach
    the maximum instance count. It's important to set up an instance count to something
    you are actually ready to pay for, as spinning 1,000 VMs can cause significant
    financial impact, even for a short period of time.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
- en: Deploying scale set VMs as low-priority can save you up to 80% in prices. Low-priority
    VMs are created using allocated and unused resources in the Azure Datacenter but
    these resources can be claimed by higher priority resources and can be unavailable
    at any time. So, even if this option can help you save a lot of money, resources
    may not be available when needed. This option shouldn't be used for services that
    are required to be available at any time, or for critical services. The recommendation
    is to use lower priority only for low-priority services or batch processing.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
- en: Scale Set creates multiple instances of a VM and all these VMs have a separate
    disk. Managing these disk and storage accounts in a scale-out process, especially
    when we spin up 1,000 instances, can prove to be very challenging. I recommend
    using a managed disk that will be managed by Azure automatically so you don't
    need to worry about this part.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
- en: 'An example of basic and instance settings is shown in the following screenshot:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/71462f2b-fd3d-4bb9-a355-caf8117293ce.png)'
  id: totrans-171
  prefs: []
  type: TYPE_IMG
- en: Auto-scale creates a set of rules on how your scale set is going to scale in
    and out. We need to set a minimum and maximum number of VMs in our scale set.
    A maximum number is automatically collected from the instance count previously
    set, but it doesn't have to be the same. The Instance count determines how many
    VMs are going to be created initially but the maximum number determines how many
    VMs can be created in total.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
- en: We create scale-out and scale-in rules that will increase and decrease the number
    of VMs in our scale set. For example, if the threshold reaches `75`% of CPU utilization,
    it will spin up additional VM(s). If utilization falls below `25`%, it will decrease
    the number of VM(s) in the scale set. The number of VMs that will be added/removed
    can be set as a separate value.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s say that we set a minimum number of VMs to `1`, the instance count to
    `10` and the maximum number of VMs to `100`. When the scale set is created, it
    will create `10` copies of the VM and start only one of them, the primary copy.
    When the scale-out threshold is reached, it will add a new VM to Scale Set. This
    VM is one of `10` initially created. If utilization continues to rise, it will
    add new VMs until we reach 10 VMs. If the maximum number of VMs is different from
    the instance count, new VMs will be created and started. The difference between
    the first `10` VMs and later ones is that initial VMs are already created and
    only need to be started. Additional VMs need to be provisioned before being started
    and this makes the process of scaling out slower. However, initial VM comes with
    a cost even when not running, as you pay for the disk even when the VM is turned
    off. It''s good to find a balance between the initial number and maximum number of
    VMs . AUTOSCALE is shown in the following screenshot:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/016cc75a-1afb-4c65-83c3-57a003b762a0.png)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
- en: The NETWORKING part gives us the option to choose between the Application Gateway
    and Load balancer. Whatever you choose, this will be used as the endpoint for
    your users and it will automatically disperse traffic across the Azure Virtual
    Machine Scale Set. The Load balancer in Azure Virtual Machines is free and Application
    Gateway is billed per hour but supports many additional features. Application
    Gateway supports SSL termination, URL-based routing, multisite routing, cookie-based
    session affinity, web application firewalls, and routable IP addresses.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
- en: 'When using the Load balancer, the difference between one used in the availibility
    set and scale set is that for scale set no additional management is needed (you
    have the option to set additional rules and settings, but it''s not required).
    Load-balancing rules and adding VMs to the backend pool is done automatically
    and no user action is required. An example of network settings with the Azure
    Load Balancer is shown in the screenshot here:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/50396904-101b-40e4-80d5-10eb715eaf66.png)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
- en: Deployment of Azure Virtual Machine Scale Set depends on many different parameters.
    Network services needed for scale set must be deployed prior to the VMs, but this
    process is done very quickly. Then, VMs are deployed and this can take time depending
    on the instance count and VM size. Deploying a few large instances can be done
    relatively quickly, but if we deploy hundreds of small VMs, it can take up to
    an hour.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
- en: Managing Azure Virtual Machine Scale Sets
  id: totrans-180
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'After deployment is finished, multiple resources are created in our resource
    group and we can see Virtual machine scale set and a set of network-related resources.
    Network resources created are a Load balancer, Public IP address (used by the
    Load Balancer), Virtual network, and Network security group. NSG is applied on
    the subnet level and NSG rules will be effective on all VMs in scale set. This
    makes sense as all VMs are identical, are used by the same application, and have
    the same purpose. We can see in the screenshot here all the resources created
    for our scale set:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f8c23c8a-bdcf-4340-95d1-671ee9866cda.png)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
- en: As we have already discussed all the networking features in question, we are
    going to concentrate on Virtual Machine Scale Set and options that are provided
    to manage it. A lot of options are identical to the VM settings such as Size,
    Continuous delivery (Preview), Configuration, Properties, Locks, and Automation
    script. SETTINGS that are unique to scale set are Instances, Scaling, Storage,
    and Operating system. Operating system is only informational and we can see only
    information such as the image and OS version used to create a scale set.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
- en: Storage settings also gives us information on the type of storage and disks
    used with only one option to choose—Caching. Options available are None, Read-only,
    and Read/write.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
- en: The Instance blade shows us all VMs in our scale set and their state. We can
    see which VMs are running and perform different operations such as Start, Stop,
    De-allocate and Delete. Specially interesting options are Reimage and Upgrade.
    Reimage will reset all settings on a selected VM and restore it to the default
    version. Upgrade will perform a manual upgrade for a selected VM to the latest
    changes. All VMs in scale set are an identical replica of the primary VM and,
    if changes are made on the primary, they will be replicated to all instances in
    time. The Upgrade option gives us the ability to perform upgrades manually and
    force changes immediately. This can be useful when we have a large number of VMs
    in scale set, as replicating changes will take time and change might be critical
    to be applied as soon as possible. However, both the Reimage and Upgrade options
    will reboot the VM in the process, so take that into consideration as well. The
    last option unique to the Azure Virtual Machine Scale Set is scaling, but it will
    take time to explain this option further.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
- en: 'The scaling blade shows us all the rules for scaling out and scaling in that
    are effective on our scale set. If rules are created during the deployment process,
    they will be shown here and we can edit them or delete them. Additional rules
    can be created as well and we can monitor multiple parameters for our VMs. For
    example, we can create separate rules for CPU, memory, and disk utilization. If
    any of these rules are triggered, it will perform scaling out or scaling in processes,
    accordingly. Creating more scale rules gives us better flexibility and performance
    as we don''t depend on a single point. If we monitor CPU but have issues with
    memory, scaling out will not happen and performance will decrease. If we monitor
    memory but have high disk utilization, again we don''t have automatic scaling
    out and performance will decrease:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/2fe5643c-5389-4b97-a3b3-8c399b47d153.png)'
  id: totrans-187
  prefs: []
  type: TYPE_IMG
- en: It's important to outline two things when speaking about Azure Virtual Machine
    Scale Set. A scale set is very different to an availability set. In an availability
    set, we have a constant number of VMs in order to increase the chances of at least
    one VM being available at all times and achieving high availability. Scale set
    monitors workload and increases the number of VMs based on demand, but all VMs
    are replicas and an issue can cause all VMs to replicate issue.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
- en: Another thing we need to outline is scenarios where we can use Azure Virtual
    Machine Scale Set. As all VMs in scale set are replicas of the initial image,
    changes are made from the initial image to all other VMs. But the process is not
    done the other way around, and changes on additional instances are not applied
    anywhere. For this reason, Azure Virtual Machine Scale Set is not good for roles
    like SQL Server or Exchange Server where changes must be applied across all instances.
    Rather use scale set for application scenarios where changes are not made by user
    sessions and data persists over time.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
- en: Azure Virtual Machine Scale Set ARM template
  id: totrans-190
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In addition, here is the ARM template to deploy a new Azure Virtual Machine
    Scale Set:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Summary
  id: totrans-193
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We have covered the basic IaaS concepts and how to set up Azure Virtual Machines.
    The logical step to expand IaaS scenarios was to cover high availability and we
    succeeded in achieving this goal with Azure Load Balancers and availability sets.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
- en: One of the key concepts of cloud computing is elasticity and on-demand resources.
    We showed how to achieve both vertical scaling (with alerts and custom actions)
    and horizontal scaling (with Azure Virtual Machine Scale Sets).
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will progress to the PaaS model and explore the Azure
    App Service as a more abstract model compared to Azure Virtual Machines. The app
    service gives us some unique options that will help us progress in our cloud journey
    but gives us less control over infrastructure than VMs. We'll compare how IaaS
    features relate to PaaS and how we can achieve scaling and high availability with
    app service.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  id: totrans-197
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What is the oldest Windows Server version supported for Azure VMs?
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Windows Server 2003
  id: totrans-199
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Windows Server 2008 R2 SP1
  id: totrans-200
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Windows Server 2012 R2
  id: totrans-201
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: What do basic-tier VMs support?
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Lower IOPS
  id: totrans-203
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Load Balancers
  id: totrans-204
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Auto-scaling
  id: totrans-205
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: What are low-priority VMs intended to be used for?
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: High availability
  id: totrans-207
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Batch processing
  id: totrans-208
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Balanced workloads
  id: totrans-209
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Size setting in the Azure Virtual Machine blade is used to...?
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Scale up
  id: totrans-211
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Scale down
  id: totrans-212
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Both
  id: totrans-213
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Runbooks can be used to perform?
  id: totrans-214
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Maintenance tasks
  id: totrans-215
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Scaling up and down VMs
  id: totrans-216
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Both
  id: totrans-217
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Azure Load Balancer is used...?
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To distribute traffic across VMs in the backend pool
  id: totrans-219
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: To isolate traffic and stop attacks on the VM
  id: totrans-220
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Both
  id: totrans-221
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Placing VMs in the same availability set will result in...?
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: VMs will be created in different Azure Datacenters
  id: totrans-223
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: VMs will be placed in a different rack
  id: totrans-224
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: VMs will be placed in the same rack
  id: totrans-225
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Scaling by creating additional instances of VM is called...?
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Scaling up
  id: totrans-227
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Scaling down
  id: totrans-228
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Scaling out
  id: totrans-229
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Scaling out is an example of...?
  id: totrans-230
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Vertical scaling
  id: totrans-231
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Horizontal scaling
  id: totrans-232
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Diagonal scaling
  id: totrans-233
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: For scaling out of Azure VMs we use...?
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Availability zone
  id: totrans-235
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Availability set
  id: totrans-236
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Scale set
  id: totrans-237
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
