["```\n$sudo apt-get update \n$sudo apt-get install ca-certificates curl openssh-server postfix \n```", "```\n$curl -LO https://packages.gitlab.com/install/repositories\n/gitlab/gitlab-ce/script.deb.sh\n% Total    % Received % Xferd  Average Speed   Time    Time     Time  Current Dload  Upload   Total   Spent    Left  Speed\n100  5933    0  5933    0     0  23796      0 --:--:-- --:--:-- --:--:-- 23827  \n```", "```\n$ sudo bash script.deb.sh \nDetected operating system as Ubuntu/xenial.\nChecking for curl...\nDetected curl...\nChecking for gpg...\nDetected gpg...\nRunning apt-get update... done.\nInstalling apt-transport-https... done.\nInstalling /etc/apt/sources.list.d/gitlab_gitlab-ce.list...done.\nImporting packagecloud gpg key... done.\nRunning apt-get update... done.\n```", "```\n$sudo apt-get install gitlab-ce\n```", "```\n$sudo gitlab-ctl reconfigure\n```", "```\n$git clone http://35.155.183.87/root/Sample.git\nCloning into 'Sample'...\nremote: Enumerating objects: 3, done.\nremote: Counting objects: 100% (3/3), done.\nremote: Total 3 (delta 0), reused 0 (delta 0)\nUnpacking objects: 100% (3/3), done.  \n```", "```\nvar http = require(\"http\"); \n\nhttp.createServer(function (request, response) { \n\n   // Send the HTTP header  \n   // HTTP Status 200 OK \n   // Content Type is text/plain \n   response.writeHead(200, {'Content-Type': 'text/plain'}); \n\n   // Send response body as \"Hello World\" \n   response.end('Hello World\\n'); \n}).listen(8080); \n\n// Print message \nconsole.log('Server running at http://127.0.0.1:8080/'); \n```", "```\n$git status \nOn branch master \nYour branch is up to date with 'origin/master'. \nUntracked files: \n  (use \"git add <file>...\" to include in what will be committed) \n   main.js \nnothing added to commit but untracked files present (use \"git add\" to track)\n```", "```\n.gitignore \n# ignore all logs \n*.log \n```", "```\n$git add . \n$ git status \nOn branch master \nYour branch is up to date with 'origin/master'. \nChanges to be committed: \n  (use \"git reset HEAD <file>...\" to unstage) \n          new file:   main.js \n```", "```\n$git commit -m \"Add main.js file\" \n[master 9d8892d] Add main.js file \n 1 file changed, 15 insertions(+) \n create mode 100644 main.js \n```", "```\n$ git push origin master \nUsername for 'http://35.155.183.87': priyanka \nPassword for 'http://priyanka@35.155.183.87':  \nCounting objects: 3, done. \nDelta compression using up to 4 threads. \nCompressing objects: 100% (3/3), done. \nWriting objects: 100% (3/3), 547 bytes | 547.00 KiB/s, done. \nTotal 3 (delta 0), reused 0 (delta 0) \nTo http://35.155.183.87/priyanka/Sample.git \n   aad9bc9..9d8892d  master -> master \n```", "```\n$git log \ncommit 9d8892da192fffb93a9a8a58fdf700632dabee3c (HEAD -> master, origin/master, origin/HEAD) \nAuthor: Priyanka Dive <user@example.com> \nDate:   Mon Aug 27 00:56:39 2018 +0530 \n\n    Add main.js file \n\ncommit aad9bc971f4e69242e550f9e1771e23c1785b5e2 \nAuthor: priyanka <user@example.com> \nDate:   Sun Aug 26 18:47:08 2018 +0000 \n\n    Initial commit \n```", "```\nThere was an error running gitlab-ctl reconfigure: \nexecute[/opt/gitlab/embedded/bin/initdb -D /var/opt/gitlab/postgresql/data -E UTF8] (postgresql::enable line 80) had an error: Mixlib::ShellOut::ShellCommandFailed: Expected process to exit with [0], but received '1' \n---- Begin output of /opt/gitlab/embedded/bin/initdb -D /var/opt/gitlab/postgresql/data -E UTF8 ---- \nSTDOUT: The files belonging to this database system will be owned by user \"gitlab-psql\". \nThis user must also own the server process. \nSTDERR: initdb: invalid locale settings; check LANG and LC_* environment variables \n---- End output of /opt/gitlab/embedded/bin/initdb -D /var/opt/gitlab/postgresql/data -E UTF8 ---- \nRan /opt/gitlab/embedded/bin/initdb -D /var/opt/gitlab/postgresql/data -E UTF8 returned 1 \n```", "```\n$export LC_ALL=\"en_US.UTF-8\" \n$export LC_CTYPE=\"en_US.UTF-8\" \n```", "```\n$git branch \n* master \n```", "```\n$git branch test\n```", "```\n    $git branch\n    * master\n      test\n\n```", "```\n    $git checkout test\n    Switched to branch 'test'\n\n    $git push origin test\n    Username for 'http://54.202.196.64': root\n    Password for 'http://root@54.202.196.64': \n    Total 0 (delta 0), reused 0 (delta 0)\n    remote: \n    remote: To create a merge request for test, visit:\n    remote:   http://54.202.196.64/root/Sample/merge_requests/new?merge_request%5Bsource_branch%5D=test\n    remote: \n    To http://54.202.196.64/root/Sample.git\n     * [new branch]      test -> test\n\n```", "```\n$git clone http://54.202.196.64/root/Sample.git -b develop\nCloning into 'Sample'...\nremote: Enumerating objects: 6, done.\nremote: Counting objects: 100% (6/6), done.\nremote: Compressing objects: 100% (4/4), done.\nremote: Total 6 (delta 0), reused 0 (delta 0)\nUnpacking objects: 100% (6/6), done.  \n```", "```\n$git add main.js\n$git commit -m \"Test merge request\"\n$git push origin develop\nCounting objects: 3, done.\nDelta compression using up to 4 threads.\nCompressing objects: 100% (3/3), done.\nWriting objects: 100% (3/3), 321 bytes | 321.00 KiB/s, done.\nTotal 3 (delta 1), reused 0 (delta 0)\nremote: \nremote: To create a merge request for develop, visit:\nremote: http://54.202.196.64/root/Sample/merge_requests/new?merge_request%5Bsource_branch%5D=develop\nremote: \nTo http://54.202.196.64/root/Sample.git\n44fd847..a93bd41  develop -> develop\n```"]