- en: Cloud Computing and Configuration Management
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 云计算与配置管理
- en: '"Change is hard because people overestimate the value of what they have and
    underestimate the value of what they may gain by giving that up."'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: “变革之所以困难，是因为人们高估了自己所拥有的价值，而低估了放弃它后可能获得的价值。”
- en: – James Belasco and Ralph Stayer
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: —— James Belasco 和 Ralph Stayer
- en: In the previous chapter, we have seen an overview of Docker containers. In this
    chapter, we will focus on creating and configuring the environment for application
    deployment in the cloud. We will use **Infrastructure as a Service** (**IaaS**)
    and the configuration management tool, Chef, to create a platform so that we can
    deploy an application in the later part using automation.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们已概述了 Docker 容器。本章将重点讲解如何为云中的应用程序部署创建和配置环境。我们将使用 **基础设施即服务**（**IaaS**）和配置管理工具
    Chef 来创建一个平台，以便后续使用自动化部署应用程序。
- en: Chef is a configuration management tool that can be utilized to create a runtime
    environment for application deployment on a physical machine, virtualized infrastructure,
    or in the public or private cloud infrastructure.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Chef 是一种配置管理工具，可用于创建物理机、虚拟化基础设施或公有或私有云基础设施上的应用程序部署运行时环境。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论以下主题：
- en: An overview of the Chef configuration management tool
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chef 配置管理工具概述
- en: Installing and configuring a Chef workstation
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装和配置 Chef 工作站
- en: Converging a Chef node using a Chef workstation
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Chef 工作站合并 Chef 节点
- en: Installing Tomcat packages using community cookbooks
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用社区食谱安装 Tomcat 包
- en: An overview of the Chef configuration management tool
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Chef 配置管理工具概述
- en: 'Chef is one of the most popular configuration tools. It comes in two flavors:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Chef 是最受欢迎的配置工具之一。它有两种版本：
- en: Open source Chef server
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开源 Chef 服务器
- en: Hosted Chef
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 托管 Chef
- en: 'What we intend to do here is to show how to prepare a runtime environment for
    application deployment. Let''s understand it in terms of application life cycle
    management:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们这里打算展示的是如何为应用程序部署准备运行时环境。让我们从应用生命周期管理的角度来理解：
- en: We have a Java-based Spring application package ready after continuous integration.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们有一个基于 Java 的 Spring 应用程序包，经过持续集成后已经准备好。
- en: We need to deploy the application in the Tomcat web server.
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要在 Tomcat Web 服务器中部署应用程序。
- en: The Tomcat server can be installed in a physical system, virtualized environment,
    Amazon EC2 instances, or Microsoft Azure virtual machines.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Tomcat 服务器可以安装在物理系统、虚拟化环境、Amazon EC2 实例或 Microsoft Azure 虚拟机中。
- en: We also need to install Java.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们还需要安装 Java。
- en: In all these, except for the first point, we need to do the installation and
    configuration activity manual avoid such a repetitive scenario, we can use the
    Chef configuration management tool to create a virtual machine in AWS or in Microsoft
    Azure and then install Tomcat with all the dependencies in order to deploy our Java-based
    spring application.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些内容中，除了第一点外，我们需要手动完成安装和配置活动。为了避免这种重复场景，我们可以使用 Chef 配置管理工具在 AWS 或 Microsoft
    Azure 中创建虚拟机，然后安装 Tomcat 及其所有依赖项，以便部署基于 Java 的 Spring 应用程序。
- en: However, let's look at the basics of the Chef configuration management tool
    so that we can understand how Chef works and how it performs various steps.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，让我们先了解 Chef 配置管理工具的基本知识，以便理解 Chef 如何工作以及它如何执行各种步骤。
- en: 'There are three important parts of the Chef configuration management tool:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: Chef 配置管理工具有三个重要部分：
- en: '**The open source Chef server or hosted Chef**: The Chef server installed on-premise
    or the hosted Chef, is the heart of this automation process of installing the
    runtime environment. It is a centralized repository of cookbooks and details of
    registered nodes. A Chef workstation is used to upload cookbooks and make changes
    in the configurations so that they can be applied to the nodes available in the
    AWS and Microsoft Azure.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**开源 Chef 服务器或托管 Chef**：安装在本地的 Chef 服务器或托管的 Chef，是自动化安装运行时环境过程的核心。它是食谱和注册节点详细信息的集中存储库。Chef
    工作站用于上传食谱并修改配置，使其可以应用到 AWS 和 Microsoft Azure 中的节点。'
- en: '**The Chef workstation**: A Chef workstation is a system where we can manage cookbooks
    and other changes. We can perform all the administrative tasks from the Chef workstation.
    Knife is used to upload cookbooks to the Chef server and execute plugin commands.
    Knife plugins can be used to perform various operations in AWS and Microsoft Azure
    Cloud.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Chef 工作站**：Chef 工作站是我们可以管理 cookbook 和其他更改的系统。我们可以在 Chef 工作站上执行所有管理任务。使用 Knife
    上传 cookbooks 到 Chef 服务器，并执行插件命令。Knife 插件可以在 AWS 和 Microsoft Azure 云中执行各种操作。'
- en: '**Node**: A node is a physical or virtual machine. This virtual machine can
    be in a virtualized environment, a private cloud empowered by Openstack or VMware,
    or in a public cloud such as AWS or Microsoft Azure:'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**节点**：节点是物理机或虚拟机。该虚拟机可以位于虚拟化环境、由 Openstack 或 VMware 提供支持的私有云中，或位于 AWS 或 Microsoft
    Azure 等公共云中：'
- en: The node communicates with the open source or hosted Chef server
  id: totrans-25
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 节点与开源或托管的 Chef 服务器进行通信。
- en: Node gets the configuration details related to itself, and then starts executing
    the steps based on these to maintain itself in compliance with what the administrator
    has decided
  id: totrans-26
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 节点获取与自身相关的配置详细信息，然后基于这些信息开始执行步骤，以保持与管理员所决定的内容一致。
- en: 'Go to the official Chef website at [https://chef.io](https://chef.io) and visit
    the Chef homepage. We can use the on-premise Chef server by installing and managing
    it on our own or we can use the hosted Chef:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 访问官方 Chef 网站 [https://chef.io](https://chef.io)，并访问 Chef 首页。我们可以通过安装和管理本地 Chef
    服务器使用它，也可以使用托管 Chef：
- en: '![](img/00147.jpeg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00147.jpeg)'
- en: Click on MANAGEMENT CONSOLE on [https://chef.io](https://chef.io)  or navigate
    to [https://manage.chef.io/login.](https://manage.chef.io/login)
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 [https://chef.io](https://chef.io) 上的“管理控制台”或前往 [https://manage.chef.io/login](https://manage.chef.io/login)。
- en: On [https://manage.chef.io/login](https://manage.chef.io/login)  click on Click
    here to get started!.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 [https://manage.chef.io/login](https://manage.chef.io/login) 上点击“点击这里开始！”。
- en: Provide the Full Name, Company name, Email ID, and Username.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提供完整名称、公司名称、电子邮件 ID 和用户名。
- en: Check the box that says I agree to the Terms of Service and the Master License
    and Services Agreement.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 勾选“我同意服务条款和主许可及服务协议”框。
- en: Click on the Get Started button.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“开始使用”按钮。
- en: 'Refer to the following screenshot:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考以下截图：
- en: '![](img/00014.jpeg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00014.jpeg)'
- en: 'So the obvious next step is to go to the mailbox and verify the e-mail ID to
    complete the registration process. We will get an e-mail verification successful
    message:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 所以显而易见的下一步是前往邮箱并验证电子邮件 ID 以完成注册过程。我们将收到电子邮件验证成功的消息：
- en: Provide the password and click on the Create User button.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提供密码并点击“创建用户”按钮。
- en: Now create an organization.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在创建一个组织。
- en: Click on Create New Organization.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“创建新组织”。
- en: Provide the Full Name and Short Name of the organization.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提供组织的完整名称和简称。
- en: Click on the Create Organization button.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“创建组织”按钮。
- en: 'Refer to the following screenshot:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考以下截图：
- en: '![](img/00151.jpeg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00151.jpeg)'
- en: 'Now, download a starter kit:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，下载一个入门套件：
- en: '![](img/00025.jpeg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00025.jpeg)'
- en: Click on Download Starter Kit.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“下载入门套件”。
- en: We will get confirmation dialog; click on Proceed.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将收到确认对话框；点击“继续”。
- en: Let's verify the operations available on the hosted Chef.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们验证托管 Chef 上可用的操作。
- en: We haven't configured any node, so the node list is empty. Click on Nodes. Once
    we create the node and register it, we will get all the details about that node
    in the Chef server or on the hosted Chef.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们还没有配置任何节点，所以节点列表为空。点击“节点”。一旦我们创建并注册节点，我们将能在 Chef 服务器或托管的 Chef 上获取该节点的所有详细信息。
- en: Go to the Administration menu and click on Users in the sidebar.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往“管理”菜单，并点击侧边栏中的“用户”。
- en: 'Verify the User Name, Full Name, and Email ID created at the time of registration:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证在注册时创建的用户名、完整名称和电子邮件 ID：
- en: '![](img/00156.jpeg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00156.jpeg)'
- en: Check the Reports tab and we won't find any data. The reason for this is that
    the process of convergence, where nodes become compliant based on the configuration
    available on the Chef server, has not taken place and hence there is no data.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 检查“报告”标签，我们将找不到任何数据。原因是节点汇聚的过程（即节点根据 Chef 服务器上可用的配置变得符合要求）尚未发生，因此没有数据。
- en: At this stage, we have a hosted Chef account available.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，我们已有一个托管 Chef 账户。
- en: 'Now, let''s configure a Chef workstation so that we can communicate with the
    hosted Chef and converge the nodes in AWS and Microsoft Azure Cloud:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们配置一个 Chef 工作站，以便我们可以与托管的 Chef 通信，并汇聚 AWS 和 Microsoft Azure 云中的节点：
- en: Based on the operating system, download the Chef client installable file. In
    our case, we are using CentOS; therefore, we will download the Red Hat version
    of the Chef client from [https://downloads.chef.io/chef-client/redhat/](https://downloads.chef.io/chef-client/redhat/).
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据操作系统，下载 Chef 客户端可安装文件。在我们的案例中，我们使用 CentOS；因此，我们将从 [https://downloads.chef.io/chef-client/redhat/](https://downloads.chef.io/chef-client/redhat/)
    下载 Chef 客户端的 Red Hat 版本。
- en: Select the operating system type.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择操作系统类型。
- en: Select the Chef client version.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择 Chef 客户端版本。
- en: Download the installation files.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载安装文件。
- en: The Chef-dk or Chef development kit is used for installing development tools,
    and it can also be used to install knife plugins for AWS and Microsoft Azure.
    Download it from [https://downloads.chef.io/chef-dk/](https://downloads.chef.io/chef-dk/).
    This will help us to install `knife-ec2` and `knife-azure` plugins so that we
    can create and manage virtual machines in the cloud environment.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: Chef-dk 或 Chef 开发工具包用于安装开发工具，也可用于安装 AWS 和 Microsoft Azure 的 knife 插件。请从 [https://downloads.chef.io/chef-dk/](https://downloads.chef.io/chef-dk/)
    下载。这将帮助我们安装 `knife-ec2` 和 `knife-azure` 插件，以便在云环境中创建和管理虚拟机。
- en: Once we have installable files ready for the Chef client and Chef development
    kit and the hosted Chef account is also available, it is time to install and configure
    the Chef workstation. Let's do it in the next section.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦 Chef 客户端和 Chef 开发工具包的可安装文件准备好，并且托管 Chef 帐户也可用，就可以开始安装和配置 Chef 工作站。让我们在下一节中进行。
- en: Installing and configuring a Chef workstation
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装并配置 Chef 工作站
- en: 'Let''s verify whether the Chef client has been installed on the system or virtual
    machine where we want to configure the Chef workstation:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们验证是否在我们希望配置 Chef 工作站的系统或虚拟机上安装了 Chef 客户端：
- en: 'Execute the `chef-client -version` command; if we get the command not found
    error, then it means that the Chef client is not installed. If the Chef client
    is installed, then it will give the version number:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行 `chef-client -version` 命令；如果出现命令未找到的错误，说明 Chef 客户端没有安装。如果 Chef 客户端已安装，它将显示版本号：
- en: '[PRE0]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Go to the directory where the Chef client installable is downloaded:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到下载 Chef 客户端安装包的目录：
- en: '[PRE1]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Run the Chef client RPM using `rpm -ivh chef-<version>.rpm`:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `rpm -ivh chef-<version>.rpm` 来运行 Chef 客户端 RPM：
- en: '[PRE2]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'If the permission is denied while installing the Chef RPM, then use `sudo`
    to run the command:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果在安装 Chef RPM 时权限被拒绝，请使用 `sudo` 来运行命令：
- en: '[PRE3]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'After successful installation, verify the Chef client version and this time
    we will get the version number of the Chef client:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装成功后，验证 Chef 客户端版本，这时我们将获得 Chef 客户端的版本号：
- en: '[PRE4]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Now we will use the Chef starter kit that we downloaded while creating an account
    in the hosted Chef:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将使用在托管 Chef 创建帐户时下载的 Chef 启动工具包：
- en: 'Extract `chef-repo`. Copy the `.chef` directory into the root or user folder:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 解压 `chef-repo`。将 `.chef` 目录复制到根目录或用户文件夹：
- en: '![](img/00051.jpeg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00051.jpeg)'
- en: 'Verify the `cookbooks` folder available in the `chef-repo` directory:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证 `chef-repo` 目录下是否有 `cookbooks` 文件夹：
- en: '![](img/00221.jpeg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00221.jpeg)'
- en: 'In the `.chef` folder, open the `knife.rb` file in the editor, which contains
    various configurations. Modify the path of the cookbooks directory if required:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `.chef` 文件夹中，用编辑器打开 `knife.rb` 文件，该文件包含各种配置。如果需要，修改 cookbooks 目录的路径：
- en: '[PRE5]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: With that, we've finished configuring our Chef workstation. The next step is
    using it to converge the node.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，我们已经配置好了 Chef 工作站。下一步是使用它来合并节点。
- en: Converging a Chef node using a Chef workstation
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Chef 工作站合并 Chef 节点
- en: In this section, we will set up the runtime environment in the node (physical/virtual
    machine) using the Chef workstation.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将使用 Chef 工作站在节点（物理/虚拟机）上设置运行时环境。
- en: 'Log in to the Chef workstation:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 登录到 Chef 工作站：
- en: 'Open the terminal and verify the IP address by executing the `ifconfig` command:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端并通过执行 `ifconfig` 命令来验证 IP 地址：
- en: '[PRE6]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Verify the knife version installed on the Chef workstation with `knife --version`:'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `knife --version` 验证在 Chef 工作站上安装的 knife 版本：
- en: '[PRE7]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The `knife node list` command is used to obtain the list of nodes served by
    the Chef server in our case, the hosted Chef. As we haven''t converged any nodes,
    the list will be empty:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`knife node list` 命令用于获取由 Chef 服务器（在我们的情况下是托管 Chef）提供的节点列表。由于我们还没有合并任何节点，列表将为空：'
- en: '[PRE8]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Create a virtual machine using VMware Workstation or VirtualBox. Install CentOS.
    Once the VM is ready, find its IP address and note it down.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 VMware Workstation 或 VirtualBox 创建虚拟机。安装 CentOS。一旦虚拟机准备就绪，找到其 IP 地址并记录下来。
- en: 'On our Chef workstation, open a terminal and, using the `ssh` command, try
    to connect to the node or VM we just created:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Chef工作站上，打开终端，并使用`ssh`命令尝试连接到我们刚刚创建的节点或虚拟机：
- en: '[PRE9]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'We now have an SSH session on the node from the Chef workstation. If you verify
    the IP address, you''ll know that you are accessing a different machine by remote
    (SSH) access:'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们已经通过Chef工作站在节点上建立了SSH会话。如果你验证IP地址，你会知道你正在通过远程（SSH）访问不同的机器：
- en: '[PRE10]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Use knife to converge the node. Provide the IP address/DNS name, user, password,
    and name of the node.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用knife收敛节点。提供IP地址/DNS名称、用户、密码和节点名称。
- en: 'Verify the output:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证输出：
- en: '[PRE11]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The node convergence is successful:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 节点收敛成功：
- en: Verify the first Chef client run in the log.
  id: totrans-100
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在日志中验证第一次Chef客户端运行。
- en: Verify the Chef client version that is installed.
  id: totrans-101
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证已安装的Chef客户端版本。
- en: Verify the empty run list message in the log.
  id: totrans-102
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在日志中验证空运行列表消息。
- en: Verify converging 0 resource messages.
  id: totrans-103
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证0资源消息的收敛。
- en: We can check whether the preceding process is successful or not by navigating
    to the hosted Chef account and verifying whether Node Name and IP Address in the
    Nodes section is available or not.
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以通过访问托管的Chef帐户并验证“节点名称”和“IP地址”是否在“节点”部分中可用，来检查前面的过程是否成功。
- en: 'In the dashboard, go to the Details tab to get more information about the node;
    verify Attributes associated with the node and also Permissions:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在仪表板中，转到“详细信息”标签以获取有关节点的更多信息；验证与节点相关的属性以及权限：
- en: '![](img/00290.jpeg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00290.jpeg)'
- en: In the bottom section of the hosted Chef Dashboard, verify the CPU attributes
    and other details of the node.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在托管的Chef仪表板的底部部分，验证节点的CPU属性和其他详细信息。
- en: 'The report section provides details on Runs Summary, Run Durations, and Run
    Counts:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 报告部分提供了关于运行摘要、运行持续时间和运行计数的详细信息：
- en: '![](img/00309.jpeg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00309.jpeg)'
- en: In the next section, we will try to install Tomcat using Chef.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一部分，我们将尝试使用Chef安装Tomcat。
- en: Installing software packages using cookbooks
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用食谱安装软件包
- en: 'Until now, we''ve performed the following tasks:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经完成了以下任务：
- en: Creating a hosted Chef account
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建托管的Chef帐户
- en: Configuring a Chef workstation
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置Chef工作站
- en: Converging a node using a Chef workstation
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Chef工作站收敛节点
- en: Now we will install application packages using community cookbooks.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将使用社区食谱安装应用程序包。
- en: 'To set up the runtime environment automatically, it''s best to use the Chef
    community cookbooks:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 为了自动设置运行时环境，最好使用Chef社区的食谱：
- en: Visit [https://github.com/chef-cookbooks](https://github.com/chef-cookbooks) 
    and find all the community cookbooks required to set up a runtime environment.
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问[https://github.com/chef-cookbooks](https://github.com/chef-cookbooks)，并查找设置运行时环境所需的所有社区食谱。
- en: We are using a sample Spring application, namely, PetClinic. We need to install
    Java and Tomcat to run Java EE applications such as this.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们使用的是一个示例Spring应用程序，即PetClinic。我们需要安装Java和Tomcat来运行像这样的Java EE应用程序。
- en: Download the Tomcat cookbook from [https://supermarket.chef.io/cookbooks/tomcat](https://supermarket.chef.io/cookbooks/tomcat) 
    and navigate to the Dependencies section on that page. Without the dependencies
    uploaded to our Chef server, we can't upload the Tomcat cookbook to use it.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从[https://supermarket.chef.io/cookbooks/tomcat](https://supermarket.chef.io/cookbooks/tomcat)下载Tomcat食谱，并导航到该页面的依赖项部分。如果依赖项没有上传到Chef服务器，我们就无法上传Tomcat食谱并使用它。
- en: Download OpenSSL and Chef sugar from [https://supermarket.chef.io/cookbooks/openssl](https://supermarket.chef.io/cookbooks/openssl) and
    [https://supermarket.chef.io/cookbooks/chef-sugar](https://supermarket.chef.io/cookbooks/chef-sugar)
    respectively.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从[https://supermarket.chef.io/cookbooks/openssl](https://supermarket.chef.io/cookbooks/openssl)和[https://supermarket.chef.io/cookbooks/chef-sugar](https://supermarket.chef.io/cookbooks/chef-sugar)下载OpenSSL和Chef
    sugar。
- en: 'To install Java, download the cookbook from [https://supermarket.chef.io/cookbooks/java](https://supermarket.chef.io/cookbooks/java) 
    and its dependency as well from [https://supermarket.chef.io/cookbooks/apt](https://supermarket.chef.io/cookbooks/apt).
    Extract all the compressed files to the cookbook''s directory:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要安装Java，下载[https://supermarket.chef.io/cookbooks/java](https://supermarket.chef.io/cookbooks/java)上的食谱及其依赖项，还需要从[https://supermarket.chef.io/cookbooks/apt](https://supermarket.chef.io/cookbooks/apt)下载。将所有压缩文件解压到食谱的目录中：
- en: '![](img/00019.jpeg)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00019.jpeg)'
- en: 'Go to cookbooks in the terminal and execute the `ls` command to verify the
    subdirectories of the community cookbooks which we downloaded earlier:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到终端中的食谱目录并执行`ls`命令，验证我们之前下载的社区食谱的子目录：
- en: '[PRE12]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Let''s upload one of the cookbooks and verify whether it is uploaded on the
    hosted Chef or not. Upload the apt cookbook with the `knife cookbook upload apt`
    command as shown here:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们上传其中一个食谱并验证它是否已上传到托管Chef上。使用`knife cookbook upload apt`命令上传apt食谱，如下所示：
- en: '[PRE13]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Go to the hosted the Dashboard and click on Policy. Go to the Cookbook section
    on the hosted Chef instance and see if the apt Cookbook has been uploaded:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入托管Chef仪表板并点击“策略”。进入托管Chef实例中的“食谱”部分，查看apt食谱是否已上传：
- en: '![](img/00022.jpeg)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00022.jpeg)'
- en: 'We need to upload all dependencies in terms of cookbooks for the Tomcat cookbook
    to be uploaded, otherwise it will give us an error. Upload all other cookbooks
    in order:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要上传所有依赖项的食谱，以便Tomcat食谱能够上传，否则它会给我们报错。按顺序上传所有其他食谱：
- en: '[PRE14]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Go to the hosted Chef Dashboard and verify all the Cookbooks:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入托管Chef仪表板并验证所有食谱：
- en: '![](img/00024.jpeg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00024.jpeg)'
- en: Once we have uploaded all the cookbooks to the hosted Chef, let's create a role.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们将所有食谱上传到托管Chef，让我们创建一个角色。
- en: Creating a role
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建角色
- en: At this stage, all the required cookbooks are uploaded on the hosted Chef. Now,
    let's create a role on the hosted Chef.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个阶段，所有必需的食谱已上传到托管Chef。现在，让我们在托管Chef上创建一个角色。
- en: Before creating a role, let's understand what it means.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建角色之前，让我们了解一下它的含义。
- en: A role is created for a specific function. It provides a path for various patterns
    and workflow processes.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 角色是为特定功能创建的。它为各种模式和工作流过程提供了一条路径。
- en: 'For example, the web server role can consist of Tomcat server recipes and any
    custom attributes:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，Web服务器角色可以包含Tomcat服务器食谱和任何自定义属性：
- en: Go to Policy in the hosted Chef Dashboard and click on Roles in the sidebar
    menu. Click on Create Role to create a role.
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入托管Chef仪表板中的“策略”并点击侧边菜单中的“角色”。点击“创建角色”以创建一个角色。
- en: In the Create Role window, provide a Name and `Description`.
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在创建角色窗口中，提供一个名称和`描述`。
- en: Click on Next.
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“下一步”。
- en: 'Refer to the following screenshot:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考以下截图：
- en: '![](img/00269.jpeg)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00269.jpeg)'
- en: A Run List keeps roles/recipes in a specific manner and order. It can be considered
    as the specifications of a node.
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行列表以特定的方式和顺序保存角色/食谱。它可以被认为是节点的规范。
- en: Select Tomcat from the Available Recipes list.
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从“可用食谱”列表中选择Tomcat。
- en: Drag the Tomcat recipe to the Current Run List.
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将Tomcat食谱拖到当前运行列表中。
- en: Click on Create Role.
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“创建角色”。
- en: 'Refer to the following screenshot:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考以下截图：
- en: '![](img/00027.jpeg)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00027.jpeg)'
- en: 'Check the newly added role in the hosted Chef Dashboard in the Policy tab:'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在托管Chef仪表板的“策略”选项卡中检查新添加的角色：
- en: '![](img/00029.jpeg)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00029.jpeg)'
- en: 'Now, let''s specify a role while converging the node in the terminal. Add the
    role to the node with `knife node run_list add tomcatserver "role[v-tomcat]"`:'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们在终端中合并节点时指定一个角色。使用`knife node run_list add tomcatserver "role[v-tomcat]"`将角色添加到节点：
- en: '[PRE15]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: The `v-tomcat` role is now being associated with the `tomcatserver` node.
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`v-tomcat`角色现在与`tomcatserver`节点相关联。'
- en: 'Go to node and execute `chef-client`; it will execute the steps to bring the
    node status in compliance with the role assigned:'
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入节点并执行`chef-client`；它将执行步骤，使节点状态与分配的角色保持一致：
- en: '[PRE16]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Go to the node and check whether Tomcat is available or not:'
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入节点并检查Tomcat是否可用：
- en: '[PRE17]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Go to the Reports tab in the hosted Chef account to get the latest details
    about the node convergence:'
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入托管Chef账户中的“报告”选项卡，获取节点合并的最新详情：
- en: '![](img/00031.jpeg)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00031.jpeg)'
- en: At this stage, we are ready with a hosted Chef account, configured workstation,
    and converged node.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个阶段，我们已经准备好了一个托管的Chef账户、配置好的工作站和已合并的节点。
- en: In the next section, we will install knife plugins for some popular cloud platforms.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分中，我们将为一些流行的云平台安装knife插件。
- en: Installing knife plugins for Amazon Web Services and Microsoft Azure
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为Amazon Web Services和Microsoft Azure安装knife插件
- en: Our objective is to install application packages to provide the runtime environment
    for our Java-based Petclinic application. In the traditional environment, we raise
    the acquisition request for the physical server and then the infrastructure team
    helps us to install different software on it to provide the runtime environment
    for our application. With Chef, we can install these packages using community
    cookbooks and hence we can automate it easily.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的目标是安装应用程序包，以为我们的基于Java的Petclinic应用程序提供运行时环境。在传统环境中，我们需要提出物理服务器的获取请求，然后基础设施团队帮助我们在其上安装不同的软件，提供应用程序的运行时环境。通过Chef，我们可以使用社区食谱安装这些包，从而轻松实现自动化。
- en: 'In this section, we will use cloud resources. Amazon EC2 and Microsoft Azure
    are two very popular public cloud resource providers. We will create virtual machines
    in the cloud environment and then install different application packages using
    the Chef configuration management tool:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将使用云资源。Amazon EC2和Microsoft Azure是两个非常受欢迎的公共云资源提供商。我们将在云环境中创建虚拟机，然后使用Chef配置管理工具安装不同的应用程序包：
- en: '![](img/00033.jpeg)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00033.jpeg)'
- en: First, we will provision virtual machines in Amazon EC2 and Microsoft Azure using
    knife plugins using a Chef workstation.
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们将使用Chef工作站和knife插件在Amazon EC2和Microsoft Azure中配置虚拟机。
- en: Go to the Chef workstation.
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进入Chef工作站。
- en: Execute `knife` commands to create instances (Chef nodes) in Amazon EC2 and
    Microsoft Azure.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行`knife`命令在Amazon EC2和Microsoft Azure中创建实例（Chef节点）。
- en: 'The following is how the process will work:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是该过程的工作流程：
- en: Execute the command on the Chef workstation to create a new instance in your
    cloud environment.
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Chef工作站上执行命令，以在云环境中创建新实例。
- en: A new instance is created in Amazon EC2 and Microsoft Azure and it is up and
    running (the Chef node is available).
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Amazon EC2和Microsoft Azure中创建了一个新实例，并且它已经启动并运行（Chef节点可用）。
- en: The Chef node communicates with the Chef server.
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Chef节点与Chef服务器进行通信。
- en: The Chef server instructs the Chef node to execute a list of tasks and download
    the Chef client.
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Chef服务器指示Chef节点执行任务列表并下载Chef客户端。
- en: A secure handshake takes place between the Chef server and the Chef node; the
    Chef server generates a security certificate that is used to authenticate the
    new node's upcoming queries.
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Chef服务器和Chef节点之间会进行安全握手；Chef服务器生成安全证书，用于验证新节点即将发出的查询。
- en: The Chef node executes tasks and informs the Chef server regarding its compliance.
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Chef节点执行任务并向Chef服务器报告其合规性。
- en: 'The following are the major benefits of using the Chef configuration management
    tool with different public cloud service providers as follows:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Chef配置管理工具与不同公共云服务提供商的主要好处如下：
- en: Faster time to market
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更快的市场推出时间
- en: Centralized control
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集中控制
- en: Standard policies
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标准策略
- en: Consistent environment to deploy the application
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 部署应用程序的一致环境
- en: Less or no manual effort and errors due to manual limitations
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更少或没有手动操作和由于手动限制产生的错误
- en: Rapid application development
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 快速应用开发
- en: Easy rollback
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 轻松回滚
- en: High availability and disaster recovery for business continuity that is essential
    in today's day and age
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高可用性和灾难恢复，确保在当今时代的商业连续性
- en: Community cookbooks accessible to all
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可供所有人访问的社区食谱
- en: The **Chef Development Kit** (**ChefDK**) provides development tools built by
    the Chef community that makes installing knife plugins easier.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '**Chef开发工具包**（**ChefDK**）提供了由Chef社区构建的开发工具，简化了knife插件的安装。'
- en: Go to [https://downloads.chef.io/chef-dk/](https://downloads.chef.io/chef-dk/)
    and download ChefDK based on the operating system we use.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 访问[https://downloads.chef.io/chef-dk/](https://downloads.chef.io/chef-dk/)并根据我们使用的操作系统下载ChefDK。
- en: 'In our case, select Red Hat Enterprise Linux and select the ChefDK version.
    Click on Red Hat Enterprise Linux 6 and download it, as it works on 64-bit (`x86_64`)
    versions of Red Hat Enterprise Linux and CentOS 6:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的案例中，选择Red Hat Enterprise Linux并选择ChefDK版本。点击Red Hat Enterprise Linux 6并下载，因为它适用于64位（`x86_64`）版本的Red
    Hat Enterprise Linux和CentOS 6：
- en: '[PRE18]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Execute the `chef gem install knife-ec2` command to create, bootstrap, and
    manage Amazon EC2 instances. More details are available at [https://github.com/chef/knife-ec2](https://github.com/chef/knife-ec2):'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 执行`chef gem install knife-ec2`命令来创建、启动和管理Amazon EC2实例。更多详情请访问[https://github.com/chef/knife-ec2](https://github.com/chef/knife-ec2)：
- en: '[PRE19]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Execute the `knife ec2 --help` command to check the available Amazon EC2 commands:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 执行`knife ec2 --help`命令查看可用的Amazon EC2命令：
- en: '[PRE20]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Configure Amazon EC2 credentials for the `knife` plugin in the `knife.rb` file.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 在`knife.rb`文件中配置Amazon EC2凭证以供`knife`插件使用。
- en: 'Use `knife[:aws_access_key_id]` and `knife[:aws_secret_access_key]` as shown
    here:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`knife[:aws_access_key_id]`和`knife[:aws_secret_access_key]`，如示例所示：
- en: '[PRE21]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Execute the `chef gem install knife-azure` command to create, bootstrap, and
    manage Microsoft Azure virtual machines. More details are available at [https://github.com/chef/knife-ec2](https://github.com/chef/knife-ec2):'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 执行`chef gem install knife-azure`命令来创建、启动和管理Microsoft Azure虚拟机。更多详情请访问[https://github.com/chef/knife-ec2](https://github.com/chef/knife-ec2)：
- en: '[PRE22]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Verify the available Azure commands using `knife azure --help`:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`knife azure --help`验证可用的Azure命令：
- en: '[PRE23]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Creating and configuring a virtual machine in Amazon EC2
  id: totrans-203
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Amazon EC2中创建和配置虚拟机
- en: 'Use the `knife node list` command to get the list of nodes to get clarity on
    how many nodes are already configured using Chef:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`knife node list`命令获取节点列表，以便了解通过 Chef 已配置了多少个节点：
- en: '[PRE24]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Use the `knife ec2 server create` command with the following parameters to
    create a new virtual machine:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`knife ec2 server create`命令并带上以下参数来创建新的虚拟机：
- en: '| **Parameter** | **Value** | **Description** |'
  id: totrans-207
  prefs: []
  type: TYPE_TB
  zh: '| **参数** | **值** | **描述** |'
- en: '| `-I` | `ami-1ecae776` | This is the ID of the Amazon machine image |'
  id: totrans-208
  prefs: []
  type: TYPE_TB
  zh: '| `-I` | `ami-1ecae776` | 这是 Amazon 镜像 ID |'
- en: '| `-f` | `t2.micro` | This is the type of the virtual machine |'
  id: totrans-209
  prefs: []
  type: TYPE_TB
  zh: '| `-f` | `t2.micro` | 这是虚拟机的类型 |'
- en: '| `-N` | DevOpsVMonAWS | This is the name of the Chef node |'
  id: totrans-210
  prefs: []
  type: TYPE_TB
  zh: '| `-N` | DevOpsVMonAWS | 这是 Chef 节点的名称 |'
- en: '| `--aws-access-key-id` | Your access key ID | This is the access key ID of
    the AWS account |'
  id: totrans-211
  prefs: []
  type: TYPE_TB
  zh: '| `--aws-access-key-id` | 您的访问密钥 ID | 这是 AWS 账户的访问密钥 ID |'
- en: '| `--aws-secret-access-key` | Your secret access key | This is the secret access
    key of the AWS account |'
  id: totrans-212
  prefs: []
  type: TYPE_TB
  zh: '| `--aws-secret-access-key` | 您的秘密访问密钥 | 这是 AWS 账户的秘密访问密钥 |'
- en: '| `-S` | Book | This is the SSH key |'
  id: totrans-213
  prefs: []
  type: TYPE_TB
  zh: '| `-S` | Book | 这是 SSH 密钥 |'
- en: '| `--identity-file` | `book.pem` | This is the PEM file |'
  id: totrans-214
  prefs: []
  type: TYPE_TB
  zh: '| `--identity-file` | `book.pem` | 这是 PEM 文件 |'
- en: '| `--ssh-user` | `ec2-user` | This is the user for the AWS instance |'
  id: totrans-215
  prefs: []
  type: TYPE_TB
  zh: '| `--ssh-user` | `ec2-user` | 这是 AWS 实例的用户 |'
- en: '| `-r` | `role[v-tomcat]` | This is the Chef role |'
  id: totrans-216
  prefs: []
  type: TYPE_TB
  zh: '| `-r` | `role[v-tomcat]` | 这是 Chef 角色 |'
- en: 'Let''s create an EC2 instance using the `knife` plugin:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们使用 `knife` 插件创建一个 EC2 实例：
- en: '[PRE25]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'At this stage, the AWS EC2 instance has been created and is `Waiting for sshd
    access to become available`:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，AWS EC2 实例已经创建，并处于 `等待 sshd 访问变为可用` 状态：
- en: '[PRE26]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Now, the Chef client has been installed on the AWS instance. It is ready for
    the initial `Chef Client run` with `version 12.9.41`:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，Chef 客户端已经安装在 AWS 实例上，准备进行第一次 `Chef Client run`，版本为 `12.9.41`：
- en: '[PRE27]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'It is now ready to resolve cookbooks based on the role and install runtime
    environments:'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 它现在准备好根据角色解析 cookbook 并安装运行时环境：
- en: '[PRE28]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'The runtime environment is available now and it is time to start Tomcat services
    in the AWS instance; verify the logs:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 现在运行环境已准备好，可以在 AWS 实例中启动 Tomcat 服务；请验证日志：
- en: '[PRE29]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Here are the details of the newly created AWS instance:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是新创建的 AWS 实例的详细信息：
- en: '[PRE30]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Go to [https://aws.amazon.com/](https://aws.amazon.com/) and sign in.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 访问 [https://aws.amazon.com/](https://aws.amazon.com/) 并登录。
- en: Go to the Amazon EC2 section and click on Instances in the left-hand sidebar
    or on Running Instances on the Resources page get to the details about AWS instances.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 转到 Amazon EC2 部分，在左侧边栏点击“实例”，或在资源页面的“正在运行的实例”部分查看 AWS 实例的详细信息。
- en: 'Verify the Name, Tags, Public DNS, and other details that we get in the Chef
    client run with the details available on the Amazon Dashboard:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 验证在 Chef 客户端运行中获得的名称、标签、公共 DNS 以及其他详细信息，和 Amazon 仪表盘上的信息是否一致：
- en: '![](img/00035.jpeg)'
  id: totrans-232
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00035.jpeg)'
- en: 'Now, let''s go to the hosted Chef Dashboard and click on Nodes to verify the
    newly created/converged node in Amazon EC2:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们进入托管的 Chef 仪表盘，点击“节点”来验证在 Amazon EC2 中新创建/合并的节点：
- en: '![](img/00036.jpeg)'
  id: totrans-234
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00036.jpeg)'
- en: 'Verify the instance Details and Run List:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 验证实例详细信息和运行列表：
- en: '![](img/00038.jpeg)'
  id: totrans-236
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00038.jpeg)'
- en: An instance is created in Amazon EC2 and Tomcat is also installed and its service
    is also started, we can verify whether it is actually running or not.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Amazon EC2 中创建了一个实例并安装了 Tomcat，且其服务也已启动，我们可以验证它是否真的在运行。
- en: 'Let''s try to access the Tomcat server installed on the AWS instance using
    the public domain name of the instance:'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试通过实例的公共域名访问安装在 AWS 实例上的 Tomcat 服务器：
- en: 'If it gives the connection has timed out error, then the reason for this is
    the restriction of security groups in AWS. Go to the Security Group in the AWS
    instance:'
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果出现连接超时错误，那么原因可能是 AWS 安全组的限制。请进入 AWS 实例中的安全组：
- en: '![](img/00040.jpeg)'
  id: totrans-240
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00040.jpeg)'
- en: 'In the AWS portal, go to the Security Group section. Select the default security
    group to verify the inbound rules. We can see only the SSH rule available; we
    need to allow port `8080` so that we can access it:'
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 AWS 门户中，转到安全组部分，选择默认安全组，验证入站规则。我们可以看到只有 SSH 规则可用；我们需要允许端口 `8080` 以便访问：
- en: '![](img/00043.jpeg)'
  id: totrans-242
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00043.jpeg)'
- en: 'Let''s create a new custom rule with port 8080:'
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们创建一个新的自定义规则，开放 8080 端口：
- en: '![](img/00047.jpeg)'
  id: totrans-244
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00047.jpeg)'
- en: Now, try to access the public domain URL, and we will get the Tomcat page on
    our AWS instance.
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，尝试访问公共域名 URL，我们将在 AWS 实例上看到 Tomcat 页面。
- en: In the next section, we will create and configure a virtual machine in Microsoft
    Azure.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分中，我们将创建并配置一个 Microsoft Azure 的虚拟机。
- en: Creating and configuring a virtual machine in Microsoft Azure
  id: totrans-247
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Microsoft Azure 中创建和配置虚拟机
- en: 'To create and configure Chef and Microsoft Azure integration, we need to provide
    the Microsoft Azure account and credentials. To get Microsoft Azure credentials,
    download the `publishsettings` file and perform the following steps:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建和配置 Chef 与 Microsoft Azure 的集成，我们需要提供 Microsoft Azure 账户和凭证。要获取 Microsoft
    Azure 凭证，请下载 `publishsettings` 文件并执行以下步骤：
- en: Login to the Microsoft Azure portal using the login name and password and download
    a `publishsettings` file from [https://manage.windowsazure.com/publishsettings/index?client=xplat](https://manage.windowsazure.com/publishsettings/index?client=xplat).
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用登录名和密码登录 Microsoft Azure 门户，并从 [https://manage.windowsazure.com/publishsettings/index?client=xplat](https://manage.windowsazure.com/publishsettings/index?client=xplat)
    下载 `publishsettings` 文件。
- en: 'Copy it on a Chef workstation and refer to this local file by creating an entry
    in the `knife.rb` file:'
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其复制到 Chef 工作站，并通过在 `knife.rb` 文件中创建条目来引用该本地文件：
- en: '[PRE31]'
  id: totrans-251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'The following are the parameters to create a virtual machine in the Microsoft
    Azure public cloud:'
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下是创建 Microsoft Azure 公共云中虚拟机的参数：
- en: '| **Parameter** | **Value** | **Description** |'
  id: totrans-253
  prefs: []
  type: TYPE_TB
  zh: '| **参数** | **值** | **描述** |'
- en: '| `--azure-dns-name` | `distechnodemo` | This is the DNS name |'
  id: totrans-254
  prefs: []
  type: TYPE_TB
  zh: '| `--azure-dns-name` | `distechnodemo` | 这是 DNS 名称 |'
- en: '| `--azure-vm-name` | `dtserver02` | This is the name of the virtual machine
    |'
  id: totrans-255
  prefs: []
  type: TYPE_TB
  zh: '| `--azure-vm-name` | `dtserver02` | 这是虚拟机的名称 |'
- en: '| `--azure-vm-size` | `Small` | This is the size of the virtual machine |'
  id: totrans-256
  prefs: []
  type: TYPE_TB
  zh: '| `--azure-vm-size` | `Small` | 这是虚拟机的大小 |'
- en: '| `-N` | `DevOpsVMonAzure2` | This is the name of the Chef node |'
  id: totrans-257
  prefs: []
  type: TYPE_TB
  zh: '| `-N` | `DevOpsVMonAzure2` | 这是 Chef 节点的名称 |'
- en: '| `--azure-storage-account` | `classicstorage9883` | This is Azure''s storage
    account |'
  id: totrans-258
  prefs: []
  type: TYPE_TB
  zh: '| `--azure-storage-account` | `classicstorage9883` | 这是 Azure 的存储账户 |'
- en: '| `--bootstrap-protocol` | `cloud-api` | This is the Bootstrap protocol |'
  id: totrans-259
  prefs: []
  type: TYPE_TB
  zh: '| `--bootstrap-protocol` | `cloud-api` | 这是启动协议 |'
- en: '| `--azure-source-image` | `5112500ae3b842c8b9c604889f8753c3__OpenLogic-CentOS-67-20160310`
    | This is the name of the Azure source image |'
  id: totrans-260
  prefs: []
  type: TYPE_TB
  zh: '| `--azure-source-image` | `5112500ae3b842c8b9c604889f8753c3__OpenLogic-CentOS-67-20160310`
    | 这是 Azure 源镜像的名称 |'
- en: '| `--azure-service-location` | `Central US` | This is the Azure location to
    host the virtual machine |'
  id: totrans-261
  prefs: []
  type: TYPE_TB
  zh: '| `--azure-service-location` | `Central US` | 这是虚拟机托管的 Azure 地理位置 |'
- en: '| `--ssh-user` | `dtechno` | This is the SSH user |'
  id: totrans-262
  prefs: []
  type: TYPE_TB
  zh: '| `--ssh-user` | `dtechno` | 这是 SSH 用户 |'
- en: '| `--ssh-password` | `<YOUR PASSWORD>` | This is the SSH password |'
  id: totrans-263
  prefs: []
  type: TYPE_TB
  zh: '| `--ssh-password` | `<YOUR PASSWORD>` | 这是 SSH 密码 |'
- en: '| `-r` | `role[v-tomcat]` | This is the role |'
  id: totrans-264
  prefs: []
  type: TYPE_TB
  zh: '| `-r` | `role[v-tomcat]` | 这是角色 |'
- en: '| `--ssh-port` | `22` | This is the SSH port |'
  id: totrans-265
  prefs: []
  type: TYPE_TB
  zh: '| `--ssh-port` | `22` | 这是 SSH 端口 |'
- en: 'We have installed the `knife azure` plugin successfully. Now we can create
    the virtual machine in Microsoft Azure Cloud by executing the `knife azure server
    create` command as follows:'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经成功安装了 `knife azure` 插件。现在，我们可以通过执行以下命令来创建 Microsoft Azure Cloud 中的虚拟机：`knife
    azure server create`：
- en: '[PRE32]'
  id: totrans-267
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Now we will start with resource provisioning in Microsoft Azure Public Cloud:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将从 Microsoft Azure 公共云的资源配置开始：
- en: '[PRE33]'
  id: totrans-269
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: Go to the hosted Chef account in the browser and click on the Nodes tab.
  id: totrans-270
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在浏览器中打开托管的 Chef 账户，并点击 Nodes 标签。
- en: Verify that the new node we created on Microsoft Azure Public Cloud has been
    registered on the hosted Chef server.
  id: totrans-271
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 验证我们在 Microsoft Azure 公共云上创建的新节点是否已在托管的 Chef 服务器上注册。
- en: 'We can see the `DevOpsVMonAzure2` Node Name:'
  id: totrans-272
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以看到 `DevOpsVMonAzure2` 节点名称：
- en: '![](img/00007.jpeg)'
  id: totrans-273
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00007.jpeg)'
- en: 'Go to the Microsoft Azure portal and click on the VIRTUAL MACHINES section
    to verify the newly created virtual machine using the Chef configuration management
    tool:'
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到 Microsoft Azure 门户并点击虚拟机（VIRTUAL MACHINES）部分，验证使用 Chef 配置管理工具创建的新虚拟机：
- en: '![](img/00012.jpeg)'
  id: totrans-275
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00012.jpeg)'
- en: 'Click on VIRTUAL MACHINES in the Microsoft Azure Dashboard, and verify the
    details of virtual machines:'
  id: totrans-276
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 Microsoft Azure 仪表板中的虚拟机（VIRTUAL MACHINES），并验证虚拟机的详细信息：
- en: '![](img/00053.jpeg)'
  id: totrans-277
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00053.jpeg)'
- en: Go to the bottom of the virtual machines page, and verify the extensions section.
  id: totrans-278
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 滚动到虚拟机页面底部，验证扩展部分。
- en: 'Check whether it shows chef-service enabled:'
  id: totrans-279
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查是否显示启用了 chef-service：
- en: '![](img/00054.jpeg)'
  id: totrans-280
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00054.jpeg)'
- en: We have now created virtual machines in Amazon EC2 and Microsoft Azure using
    `knife` plugins with installed runtime environment using role.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经使用安装的运行时环境和角色，通过 `knife` 插件在 Amazon EC2 和 Microsoft Azure 中创建了虚拟机。
- en: Summary
  id: totrans-282
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we installed and configured a Chef workstation, we converged
    the node, created a role, and installed the runtime environment for Java-based
    web applications. We also used `knife` plugins to create virtual machines in Microsoft
    Azure and Amazon EC2 and used a role to install a runtime environment.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们安装并配置了 Chef 工作站，合并了节点，创建了角色，并安装了基于 Java 的 Web 应用程序的运行时环境。我们还使用了 `knife`
    插件在 Microsoft Azure 和 Amazon EC2 上创建虚拟机，并使用角色安装运行时环境。
- en: In the next chapter, we will see how to deploy Java-based web applications into
    the web server in an automated way using scripts or plugins.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章，我们将看到如何使用脚本或插件以自动化的方式将基于 Java 的 Web 应用程序部署到 Web 服务器中。
- en: We will deploy our WAR file into the local or remote Tomcat. The remote Tomcat
    will be on Amazon EC2, Microsoft Azure Virtual Machine, AWS Elastic Beanstalk,
    or Microsoft Azure Web Apps.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将把我们的 WAR 文件部署到本地或远程的 Tomcat。远程 Tomcat 将部署在 Amazon EC2、Microsoft Azure 虚拟机、AWS
    Elastic Beanstalk 或 Microsoft Azure Web Apps 上。
