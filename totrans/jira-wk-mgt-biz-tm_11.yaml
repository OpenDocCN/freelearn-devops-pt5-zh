- en: '*Chapter 8*: Configuring Permissions and Simple Administration'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that we have our project up and running and have added new custom fields
    to provide more insight into our issues, we need to be able to share access to
    the project and the issues. This will include creating or inviting new users and
    placing them in the appropriate groups. You can then assign project permissions
    to the user based on their user account or the group in which they reside.
  prefs: []
  type: TYPE_NORMAL
- en: This chapter covers the nuances of configuring permissions for both free and
    paid accounts and how to apply additional security within the project. Then, we
    will cap it off with a brief discussion of some simple project administration
    functions that we have not learned yet.
  prefs: []
  type: TYPE_NORMAL
- en: '**Jira Work Management** approaches permissions and access to the information
    differently based on whether your account is a free account or a paid one. Also,
    we will see some slight differences in simple project administration based on
    free and paid accounts and what is available to manage at the higher system or
    global level for Jira.'
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we are going to cover the following main topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Adding users and creating groups
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Project roles and permission
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring the permission scheme
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Applying issue-level security
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JWM project administrator capabilities
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jira administrators versus project administrators
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: By the completion of this chapter, you will learn how to invite new users and
    add project roles and users to the roles. Once those are in place, you will be
    able to access and modify the **Permission Scheme** to use those roles and users,
    and then learn how to create and apply issue security levels.
  prefs: []
  type: TYPE_NORMAL
- en: To be able to manage your project more fully, you will learn the capabilities
    available to project administrators and the differences between Jira administrator
    and project administrator permissions.
  prefs: []
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'As Jira Work Management is only available in the Jira Cloud environment, the
    requirement for this chapter is simple: *access to a Jira Cloud environment*.'
  prefs: []
  type: TYPE_NORMAL
- en: Atlassian provides a free Jira Work Management account for up to 10 users. You
    can create your account by going to [https://www.atlassian.com/try/cloud/signup?bundle=jira-core&edition=free](https://www.atlassian.com/try/cloud/signup?bundle=jira-core&edition=free)
    and following the instructions.
  prefs: []
  type: TYPE_NORMAL
- en: User management
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'When you first set up a new instance/site for Jira – in this case, a new instance
    of Jira Work Management – the email address used during the signup will create
    a user that is a Jira administrator, an organization administrator, and a site
    administrator. A very brief description of each follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Jira administrator**: The Jira Administrator can make all changes at the
    system and project level within your Jira instance for the products the user has
    been granted access to. These are often referred to as **global permissions**.
    However, they cannot grant access to users to join your instance.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Organization administrator**: When you create a new instance/site, an organization
    is automatically created as well. Initially, it will be named the same as your
    site. The organization administrator will be able to add other organization administrators,
    create system-level **API keys**, verify **domains** for your site, implement
    **Atlassian Access**, and control the **directory** of managed users for your
    domain.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Site administrator**: The site administrator can grant users access to products
    in your instance by inviting them to the instance. Consequently, they can also
    deactivate user access to the products. They can also create **groups** and assign
    users to those groups.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To access the user management function of Jira, you must be a site administrator.
    You can only become a site administrator by being granted that permission by another
    site administrator. To make a user a site administrator, you simply place that
    user in the **site-admin** group under **User management**.
  prefs: []
  type: TYPE_NORMAL
- en: 'To gain access to the user management function, click on the **Settings** gear
    icon in the top navigation bar and select **User management**, as shown in *Figure
    8.1*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.1 – User management'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_8.1_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8.1 – User management
  prefs: []
  type: TYPE_NORMAL
- en: The result will bring you to a list of current users at the bottom of the screen
    and a section at the top of the screen where you can invite new users. As seen
    in *Figure 8.2*, there are two different ways to initially invite a user.
  prefs: []
  type: TYPE_NORMAL
- en: 'One option is to simply begin adding the email addresses of the invitees in
    the center section of the display with one email address per box. The invitees
    will get an email that will be needed to verify the account and accept the invitation.
    You cannot create accounts for users without the email being validated by the
    recipient of the email address. To send the emails, click on the **Invite team
    members** button at the bottom of the section:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.2 – Invite users'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_8.2_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8.2 – Invite users
  prefs: []
  type: TYPE_NORMAL
- en: The second way to invite users begins by clicking on the **Invite users** button
    at the top of the screen. This will open the dialog box seen in *Figure 8.3*.
  prefs: []
  type: TYPE_NORMAL
- en: This option gives you more flexibility as to which groups and permissions you
    can automatically assign to the user when the invitation is accepted. Just enter
    the email address of the future user, choose the role and products the user can
    access, and include any groups.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can pick from one of three roles. The following descriptions will be displayed
    for each role on the screen:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Basic**: Can access the products you specify only'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Trusted**: Can update product settings, add new products, and invite basic
    users to products'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Site Administrator**: Can administer your site, determine user access, and
    update billing details (like you)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Figure 8.3* shows how to invite new users to your instance. You can invite
    one user or multiple ones:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.3 – User information'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_8.3_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8.3 – User information
  prefs: []
  type: TYPE_NORMAL
- en: 'If you have not created any additional groups yet (we will do that later in
    this section), your initial options for adding groups will be:'
  prefs: []
  type: TYPE_NORMAL
- en: '**jira-software-users**: This is the most basic level of access needed to perform
    functions in Jira Work Management. Users will have no product access without being
    in this group.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**jira-administrators**: This grants the user the ability to administer the
    features within your Jira instance, such as screens, custom fields, issue types,
    and workflows.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**site-admins**: As mentioned above, this grants the user the ability to add/remove
    other users and create groups and maintain their memberships.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Administrators**: This is basically a combination of the jira-administrators
    and site-admins roles, giving the user full access to the system. This is sometimes
    referred to as a *super user*.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Once you have added an email address (or more), a statement will appear, as
    shown previously in *Figure 8.3*, that states, **Allow any accounts using these
    email domains to join your site, you can edit these settings any time**. It will
    then list each domain from the email addresses listed in the top box.
  prefs: []
  type: TYPE_NORMAL
- en: You should not select any domains that you do not have control over, for example,
    gmail.com. Clicking on one of the email domain boxes will allow any person with
    an email address under that domain to gain access to the system without needing
    an invite first.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, you can personalize the invitational email that is sent to the email
    address(es) entered at the top by clicking on the **Personalize email invite**
    link. When you are ready to send the email, click the **Invite 1 user** button.
    The number will change based on the number of emails entered above.
  prefs: []
  type: TYPE_NORMAL
- en: Once you have invited users, they will be added as users in your system. The
    new users will show up at the bottom of the screen, as shown previously in *Figure
    8.2*. A screenshot of that bottom section is shown in *Figure 8.4*.
  prefs: []
  type: TYPE_NORMAL
- en: User list
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The list of users has some excellent information, including the **Last activity**
    date of the user (basically meaning the last time the user logged in), the **Status**
    of the user (or whether the user is active or inactive), and finally, under **Actions**,
    whether the user has accepted the invite:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.4 – User list'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_8.4_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8.4 – User list
  prefs: []
  type: TYPE_NORMAL
- en: Also, you can click on **Show details** for active users to see more personal
    information, such as what groups each user belongs to and their current role in
    the system (the same **Role** shown in *Figure 8.3*). You can add users to a group
    on that user detail page, or you can click on the ellipsis menu (three dots) and
    add at that point.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, we will follow the process to create new groups. While on the left-hand
    menu, click **Groups**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.5 – Groups'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_8.5_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8.5 – Groups
  prefs: []
  type: TYPE_NORMAL
- en: 'The result will land you on the **Groups** page, showing a list of all current
    groups in your system. Again, when you first set up your Jira instance, there
    will be just a handful of groups created with the system. To add a new group,
    click on the **Create group** button in the top right of the screen:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.6 – Create group'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_8.6_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8.6 – Create group
  prefs: []
  type: TYPE_NORMAL
- en: 'As you arrive on the screen displayed in *Figure 8.7*, you will have the ability
    to enter the `Staff Meeting Access`, which we will later use for issue-level security.
    This group will represent the users who will have access to all issues on the
    staff meeting project:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.7 – Group name'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_8.7_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8.7 – Group name
  prefs: []
  type: TYPE_NORMAL
- en: You can check the box for **Add members in the next step** to associate users
    with the group or you can return to the group later to add the names. When ready,
    click the **Create group** button to finalize your group. Next, we will discuss
    project roles and permissions.
  prefs: []
  type: TYPE_NORMAL
- en: Important Note
  prefs: []
  type: TYPE_NORMAL
- en: Currently, you cannot change the name of the group once it is created, so be
    thoughtful when adding the group name. This bug is on Atlassian's list to fix
    in the future.
  prefs: []
  type: TYPE_NORMAL
- en: Project roles and permissions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As with any system, you need some basic authentication and permission capability
    for the first level of security of your information. Jira Cloud provides you with
    authentication of users when you create your initial instance of Jira/Jira Work
    Management. Authentication is simply the process of validating that a user is
    who they really are when they log into the system.
  prefs: []
  type: TYPE_NORMAL
- en: As your organization grows, you can extend this capability using the Atlassian
    Access tool to provide more control of the user setup and authentication process.
    See [https://www.atlassian.com/software/access](https://www.atlassian.com/software/access)
    for more information.
  prefs: []
  type: TYPE_NORMAL
- en: There are two ways to control access to your project, both of which involve
    the **permission scheme**. One route would be to handle all the permissions directly
    in the permission scheme by granting permissions directly to individual users
    or groups.
  prefs: []
  type: TYPE_NORMAL
- en: 'But this is the least advised method, as it hampers the sharing of the scheme
    with projects that have different users. If you modify the permission scheme to
    use project roles instead, that gives you more flexibility with sharing the scheme.
    Let''s look at that second option now:'
  prefs: []
  type: TYPE_NORMAL
- en: To modify who is linked to roles on your project, you must be a project administrator.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Next, you will click on **Project settings**, as shown in *Figure 8.8*:![Figure
    8.8 – Project settings
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_8.8_B17952.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 8.8 – Project settings
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: As you enter **Project settings**, select the **People** option. If you are
    on a **free** plan, you will not be able to modify permissions or change the role
    assignment of persons on any of your projects:![Figure 8.9 – People – free plan
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_8.9_B17952.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 8.9 – People – free plan
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: If you are on a **paid** plan of any level, you will be able to adjust permissions
    across your instance, including for all projects. As you enter the **People**
    screen, you will see a list of all groups and/or individual users who have access
    to the project and the project roles to which they are attached:![Figure 8.10
    – People – paid plan and roles
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_8.10_B17952.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 8.10 – People – paid plan and roles
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Click on the **Roles** dropdown to show all project roles that have been created
    in your instance. Project roles are created at a global level. To add a new project
    role, you must be a Jira administrator. Then, go to **Settings** | **System**
    | **Project roles**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The search box allows you to search for groups and users if you have a long
    list of people who appear on your screen. Or you can click on the `Staff Meeting
    Access` group that we created earlier to the **Team** role:![Figure 8.11 – Adding
    people
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/Figure_8.11_B17952.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Figure 8.11 – Adding people
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: In the **Add people** dialogue box, simply add a group or username in the top
    box and then select the role for the user.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Important Note
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: You can only select a single role when adding a new person or group.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Once a new person or group has been added with a role, you can then update
    that person/group to associate additional roles, including adding multiple roles
    at one time:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 8.12 – Adding roles to a user'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_8.12_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8.12 – Adding roles to a user
  prefs: []
  type: TYPE_NORMAL
- en: Adding users or groups to project roles is the preferred method to control access
    to your project. In this manner, project administrators have direct control of
    granting access to users. Conversely, modifying the permission scheme requires
    the higher role level of the Jira administrator to make any changes.
  prefs: []
  type: TYPE_NORMAL
- en: Speaking of which, let's turn our attention to *configuring the permissions
    scheme*.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring the permission scheme
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can access the permission scheme in two different ways. Both begin by entering
    **Project settings**, as shown in *Figure 8.13*.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.13 – Configuring the permission scheme'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_8.13_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8.13 – Configuring the permission scheme
  prefs: []
  type: TYPE_NORMAL
- en: Once in the project settings, you can click on the **Summary** option in the
    left-hand menu and then select the permission scheme name under the **Permissions**
    section of **Summary**.
  prefs: []
  type: TYPE_NORMAL
- en: Alternatively, you can select the **Permissions** option from the left-hand
    menu to directly enter the scheme. See *Figure 8.13* for clarity on selecting
    either of these options.
  prefs: []
  type: TYPE_NORMAL
- en: Important Note
  prefs: []
  type: TYPE_NORMAL
- en: Remember that if you are on the free plan, you are not able to modify the permission
    scheme. All users under the free plan are automatically project administrators
    on all projects. Only paid plans allow the permission scheme to be modified. The
    following sections assume a paid plan.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you enter the permission scheme, you can peruse all permissions for the
    project and which users, groups, or project roles have been granted those permissions.
    You have two options at this time – the first is to **edit the permissions** in
    the scheme, meaning modifying which users, groups, or project roles are linked
    to the permission. Secondly, you can **link the project** to a different permission
    scheme. The latter means that the new permission scheme would be a shared scheme:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.14 – Editing the permission scheme'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_8.14_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8.14 – Editing the permission scheme
  prefs: []
  type: TYPE_NORMAL
- en: 'Note that if you have any marketplace apps in your instance, there will be
    a project role added to all permission schemes for the project role of **Atlassian-addons-project-access**.
    This is necessary for the app to function properly and make the needed issue changes
    on your project:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.15 – Granting permissions'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_8.15_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8.15 – Granting permissions
  prefs: []
  type: TYPE_NORMAL
- en: Clicking on the **Edit permissions** option will take you to the dialogue box
    in *Figure 8.15*. To remove any current permissions, simply click the **Remove**
    link and select the permission to remove. To add a new permission, click the **Edit**
    option, which will display the **Grant permission** popup screen.
  prefs: []
  type: TYPE_NORMAL
- en: There are several options that can be granted, as also shown in *Figure 8.15*.
    Once you have made the selection, click the **Grant** button at the bottom of
    the screen.
  prefs: []
  type: TYPE_NORMAL
- en: Permission helper
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Once your permissions are all in place as desired, you might still have problems
    that arise with individual users not having permissions to issues on your project.
  prefs: []
  type: TYPE_NORMAL
- en: Important Note
  prefs: []
  type: TYPE_NORMAL
- en: It would not be over-exaggerating that Atlassian has provided a very supportive
    function for tracking down the problem.
  prefs: []
  type: TYPE_NORMAL
- en: 'To use the function, click on the **Permission helper** option, as shown previously
    in *Figure 8.14*. When the **Permission helper** screen is displayed, simply populate
    the **User**, **Issue**, and **Permission** fields, and click the **Submit** button
    at the bottom of the screen:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.16 – Permission helper'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_8.16_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8.16 – Permission helper
  prefs: []
  type: TYPE_NORMAL
- en: The bottom of the screen will then display a verification that the user already
    has access or will show the recommendations on how to remedy the problem. **Permission
    helper** is available for both free and paid plans.
  prefs: []
  type: TYPE_NORMAL
- en: In our final section, we will explore how to apply security down to the issue
    level that will allow different users to have access to different issues on the
    same project.
  prefs: []
  type: TYPE_NORMAL
- en: Applying issue-level security
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are times when you want to have a little more granular security applied
    to your project. Some examples of this include the desire that reporters of issues
    can only see the issues that they have created and no other issues, that assignees
    of an issue can only see their issues, or only certain groups of users can see
    issues based on labels or components.
  prefs: []
  type: TYPE_NORMAL
- en: 'This can all be implemented using **issue security**. To access this function,
    enter **Project settings** and then select **Issue Security** on the left-hand
    menu, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.17 – Issue Security'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_8.17_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8.17 – Issue Security
  prefs: []
  type: TYPE_NORMAL
- en: 'For free plan users, this is how the screen would look:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.18 – Issue Security for free plan users'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_8.18_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8.18 – Issue Security for free plan users
  prefs: []
  type: TYPE_NORMAL
- en: Note for Figure 8.16
  prefs: []
  type: TYPE_NORMAL
- en: Free plans do not have the ability to alter permissions within your instance,
    including issue security.
  prefs: []
  type: TYPE_NORMAL
- en: 'For the paid version, when you desire to add an issue security scheme to your
    project, you must first create the scheme through the global permissions path,
    meaning you must be a Jira administrator to create the scheme. Go to **Settings**
    | **Issues** | **Issue security schemes**. Once there, you will see a list of
    existing security schemes (if any exist), and at the bottom of the list will be
    an **Add issue security scheme** button:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.19 – Add issue security scheme'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_8.19_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8.19 – Add issue security scheme
  prefs: []
  type: TYPE_NORMAL
- en: 'At this point, you can insert the name of your new scheme and add a description
    if you like. When complete, click the **Add** button to create the scheme, as
    shown in *Figure 8.20*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.20 – Issue security scheme name'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_8.20_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8.20 – Issue security scheme name
  prefs: []
  type: TYPE_NORMAL
- en: 'After the new issue security scheme has been created, you will need to return
    to **Project settings** for the project and select **Issue security** on the left-hand
    menu, as shown previously in *Figure 8.21*. Once on the **Issue security** screen,
    click the **Actions** menu and choose the **Select a scheme** option to link your
    new scheme to the project:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.21 – Linking a security scheme to the project'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_8.21_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8.21 – Linking a security scheme to the project
  prefs: []
  type: TYPE_NORMAL
- en: After linking the scheme to the project, the options under the **Actions** menu
    look very similar to the options that were available for the permission scheme.
    You can connect this project to a different-issue security scheme, which might
    be already connected to another project. Thus, you would be sharing the scheme.
  prefs: []
  type: TYPE_NORMAL
- en: 'Sharing a scheme helps with the maintenance of your system in that you can
    make the change in one place instead of two (or three or four, or more!). In our
    company, we have dozens of product team projects linked to the same shared scheme.
    If you decide to share a scheme across projects, this would be the place to make
    that change. Your other option is to edit the current issue security scheme, as
    shown in *Figure 8.22*:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.22 – Editing issue security'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_8.22_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8.22 – Editing issue security
  prefs: []
  type: TYPE_NORMAL
- en: After clicking on the **Edit issue security** option, you will need to create
    a new security level for the new scheme. You can have multiple security levels
    within each scheme, which gives you the ability to have different security policies
    for different issues on your project.
  prefs: []
  type: TYPE_NORMAL
- en: 'Give your security level a name and add a description if you like. When ready,
    click the **Add Security Level** button to create the security level:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.23 – Adding a security level'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_8.23_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8.23 – Adding a security level
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the new level has been created, you will need to click the **Add** button
    to identify who has access to this security level:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.24 – Issue security options'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_8.24_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8.24 – Issue security options
  prefs: []
  type: TYPE_NORMAL
- en: The result will be a dialogue box that allows you to add persons to the security
    level by including a single user, groups, values in custom fields, project roles,
    and so on. For example, clicking on **Group** and adding the value of administrators
    gives all persons with Jira administrator permissions access to the issues attached
    to that level.
  prefs: []
  type: TYPE_NORMAL
- en: 'Other examples would be selecting **Reporter** or **Assignee**, which would
    allow whichever user is currently in those fields to see and access the issue.
    In other words, if the user is not the reporter or the assignee, they will not
    be able to even see the issue:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.25 – Editing the issue security'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_8.25_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8.25 – Editing the issue security
  prefs: []
  type: TYPE_NORMAL
- en: It is suggested that you add at least one security level as the default for
    the scheme if using issue security. This will ensure that all newly created issues
    will be attached to a security level. See *Figure 8.24* for the location of the
    link to the default value.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we can secure our project and provide access to select persons, let's
    look at some other functions that can be done as a project administrator.
  prefs: []
  type: TYPE_NORMAL
- en: JWM project administrator capabilities
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Possessing project administration permissions sounds impressive, but there are
    not actually many functions that the administrator can perform. In fact, the list
    is rather small. Or course, most permission schemes will grant special permissions
    to project administrators that other users or project roles will not have.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following highlights the most used or known aspects of the capabilities
    of a project administrator but is not intended to be an exhaustive list. You can
    find more information by searching in Atlassian''s own documentation, but this
    will help get you started:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Project roles**: As discussed earlier in this chapter in the *Project roles
    and permissions* section, project administrators can add users to a project and
    place them in different roles.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Components**: Components are unique to each project and help to categorize
    work being done on the project. Project administrators can create and delete components
    on their projects.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Versions and releases**: As with components, versions and releases are unique
    to a project and can be added and deleted by project administrators.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Issue layout and screens**: If the screen is exclusively used on a single
    project, the project administrator will be able to make a few changes. However,
    the project administrator will have the ability to make changes directly in the
    issue layout, as discussed previously in [*Chapter 7*](B17952_07_ePub.xhtml#_idTextAnchor121),
    *Managing Fields, Screens, and Issue Layouts*.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Workflows**: Similar to screens, project administrators can make changes
    to workflows if the workflow is uniquely associated with one project.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: And now we wrap up this chapter with a brief look and recap of functions that
    are available to Jira administrators and project administrators.
  prefs: []
  type: TYPE_NORMAL
- en: Jira administrators versus project administrators
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Again, this is not intended to be an exhaustive list, and you can search Atlassian's
    documentation for more details. However, you can relate Jira administrator functions
    to be more global in nature, meaning they affect the entire Jira instance/site.
  prefs: []
  type: TYPE_NORMAL
- en: Jira administrators can make changes to shared schemes (workflows, screens,
    and issue types), create custom fields, edit the permission scheme, change ownership
    of shared dashboards and filters, and other system-level functions.
  prefs: []
  type: TYPE_NORMAL
- en: 'For JWM, project administrators can make changes to non-shared objects and
    project roles on the project, but not the permission scheme used by the project.
    *Figure 8.26* shows a very brief table of permissions available for Jira administrators
    and project administrators. In a nutshell, Jira administrators can make changes
    globally within your Jira instance and project administrators can only make changes
    on the projects where they have the project administrator role:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 8.26 – Jira administrator versus project administrator permissions'
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Table_8.1_B17952.jpg)'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 8.26 – Jira administrator versus project administrator permissions
  prefs: []
  type: TYPE_NORMAL
- en: All of these come with a caveat for free subscriptions in that all users in
    the instance are project administrators.
  prefs: []
  type: TYPE_NORMAL
- en: New terms learned in this chapter
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let''s conclude the chapter by going through the list of new terms learned
    in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Jira administrator**: The Jira administrator can make all changes at the
    system and project level within your Jira instance for the products the user has
    been granted access to.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Organization administrator**: The organization administrator can add other
    organization administrators, create system-level API keys, verify domains for
    your site, implement Atlassian Access, and control the directory of managed users
    for your domain.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Site administrator**: The site administrator can activate or deactivate users''
    access to products in your instance by inviting them to the instance. He/she can
    also create groups and assign users to those groups.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Free plan**: A no-cost JWM plan that is limited to 10 active users and does
    not have configurable permissions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Paid plan**: There are various plans available for JWM for different levels
    of users. All come with the most flexible options for the administrator of your
    JWM product.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Issue security**: Security that can be applied at the issue level to completely
    grant access to or hide issues from users.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Project roles**: Project administrators can add users to a project and place
    them in different roles.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Components**: Components are unique to each project and help to categorize
    work being done on the project.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Versions and releases**: Versions and releases are unique to a project and
    can be added and deleted by project administrators. They group issues by release
    and can be used to remove issues from boards.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we have learned how site administrators can invite new users
    to your Jira organization and how project administrators can add users to a project
    and associate them with roles to grant them permissions to the project. We also
    learned about the permission scheme and how it relates to project roles, groups,
    and users.
  prefs: []
  type: TYPE_NORMAL
- en: Then, we delved into additional security capabilities using issue-level security
    as a layer on top of the permission scheme. And, finally, we learned some of the
    different functions that Jira administrators and project administrators can perform
    and what is unique to each role.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will learn how to migrate existing Jira projects to
    JWM projects, use shared schemes, and work with external functions.
  prefs: []
  type: TYPE_NORMAL
