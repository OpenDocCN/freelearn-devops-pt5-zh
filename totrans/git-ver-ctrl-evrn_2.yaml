- en: Chapter 2. Welcome Aboard – Installing Git
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*In the previous chapter we got enlightened on how a version control system
    can change the way we face everyday situations when it comes to digitized files,
    followed by the evolution of version control systems.*'
  prefs: []
  type: TYPE_NORMAL
- en: '*We also understood why Git is considered the best in class and how it can
    serve our purposes.*'
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter we will get to know how you can install and configure Git.
    We shall cover the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Choosing the Git type that suits your environment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing Git
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Choosing your type – download your OS specific package
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Like many other tools, Git can be downloaded from the Internet and the best
    part is it''s free, thanks to the open source community. Git can be installed
    on a variety of operating systems such as Mac OS X, Windows, Linux, and Solaris.
    We will consider the top three operating systems in terms of user base in discussing
    our concepts:'
  prefs: []
  type: TYPE_NORMAL
- en: Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mac OS X
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To start, you need to download your operating system specific Git package;
    we can get the list of downloadable packages from [http://git-scm.com/downloads](http://git-scm.com/downloads).
    Go ahead and download the latest stable release relevant to your OS, which you
    can find on the website, as shown in the following screenshot (Version 1.8.0.2
    was the latest stable release at the time of writing this chapter):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Choosing your type – download your OS specific package](img/7522_02_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For those of you Linux and Mac users who enjoy using a **command-line interface**
    (**CLI**) mode to get things done, there's no need to go through the following
    procedures of downloading and installing via GUI. You can use your OS specific
    installer to get things done. For example, if you are using a Debian based Linux
    OS, `apt-get install git-core` is enough for installing Git on your system, whereas
    if you are using a Mac you can either use Apple's Xcode IDE, which is an Apple
    approved method to install things, or Macports or Fink to install Git for you.
  prefs: []
  type: TYPE_NORMAL
- en: Windows
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you are trying to download from a Windows machine, the website detects that
    and automatically provides the **Download for Windows** button. Upon clicking
    that, you will be prompted to save the setup file. Choose your preferred location
    to save the file and you are good to go.
  prefs: []
  type: TYPE_NORMAL
- en: Linux
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There are always multiple ways of doing things in Unix operating systems. We
    will take the easiest possible route which everybody can follow. So unless you
    are a person who loves installing packages through compiling, there is no need
    for downloading them from this website. You can move to the *Installation* section
    directly from here.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'For people who want to install Git by getting the source code and compiling
    it, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Click on the **Git source repository** link; you will be taken to a page that
    lists the contents of the source code package. Click on the button called **Zip**,
    which will prompt you with the file download. Save it in your preferred location.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can then go through the regular `unzip, configure`, `make`, and `make install`
    commands, which we won't discuss here.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mac
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you are trying to download from a Mac machine, the website detects that and
    automatically provides the **Download for Mac** button. Upon clicking that, you
    will be prompted to save the setup file. Choose your preferred location to save
    the file and you are good to go.
  prefs: []
  type: TYPE_NORMAL
- en: The download file usually follows a naming convention like Git-latest.stable_release_version_here-min-required-os-info.dmg,
    for example, **git-1.8.0.2-3-intel-universal-snow-leopard.dmg**.
  prefs: []
  type: TYPE_NORMAL
- en: You can use the same 1.8.0.2 installer for any version of Mac OS on or above
    Snow Leopard. For Leopard users there are lower versions of Git available, which
    you can get from [http://code.google.com/p/git-osx-installer/downloads/list](http://code.google.com/p/git-osx-installer/downloads/list).
  prefs: []
  type: TYPE_NORMAL
- en: Installation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now that you have got your own copy of Git, let's proceed to the installation
    phase. Let's go over the installation process for different operating systems
    one at a time.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As with any other installation, you need administrative rights to install this
    software.
  prefs: []
  type: TYPE_NORMAL
- en: Time for action – installing Git on Windows
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Double-click on the downloaded setup file to get started with the installation.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The first and second steps of the installation process are self-explanatory.
    It first greets you with a welcome message and informs you about the "safe to
    follow" procedures before installation, that is, to close all other opened applications
    before continuing (just to avoid the remote chance of any shared dll/exe being
    overridden or a simple case of your system running out of memory, which is required
    in large amounts whenever you perform an installation). Then it shows you the
    details about the GNU public license Version 2 by which our Git is governed.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: To get to know more about what you can and cannot do with the software package,
    go ahead and read it.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Clicking on the **Next** button on the screen brings us to the following screen,
    which gets your preferred location for the installation:![Time for action – installing
    Git on Windows](img/7522_02_02.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The default location is inside the **Program Files** directory of your Windows
    installation. If you group all custom software installations in a separate partition
    to safeguard your data in case of an OS crash, you can go ahead and select your
    preferred path by clicking on the **Browse…** button.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: After clicking on **Next** you will be facing a component configuration screen
    in which you need to select **Git Bash Here** and **Git GUI Here** options under
    the **Context menu entries** section, as shown in the following screenshot:![Time
    for action – installing Git on Windows](img/7522_02_03.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: These options are going to provide us quick access to interfaces that we can
    use to command Git. We will see more about them in the oncoming chapters.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Next we are prompted to select a group name under which shortcuts are placed
    in the start menu for easy and quick access. Let us leave it to the default value
    `Git` and click on **Next**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This brings us to the following screen, in which we select the second option,
    which says **Run Git from the Windows Command Prompt**:![Time for action – installing
    Git on Windows](img/7522_02_04.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This setting is basically for people who will be using command lines to control
    Git and its activities. This option is going to allow us to command Git additionally
    from the native Windows command-line interface DOS.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: After making the selection, click on the **Next** button.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The remaining two main steps are configurations that we will need while working
    remotely and/or collaboratively across operating systems.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'If and only if you have any SSH sessions in your registry will the installation
    file detect that and prompt you with the following screen:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Time for action – installing Git on Windows](img/7522_02_05.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: If you are a user to whom the very term SSH is new but happen to have SSH sessions
    in your system through other means, or an experienced user who wants to switch
    to OpenSSH, go ahead and select the **Use OpenSSH** option.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: If you are comfortable using other SSH applications to connect to remote systems,
    select the **Use (Tortoise)Plink** option. Make a selection on the **Choosing
    the SSH executable** screenand click on **Next**.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: OpenSSH keys are created with ssh-keygen and cached with ssh-agent. With the
    putty suite, keys are created with the graphical program puttygen and loaded/cached
    with pageant, and SSH is done using putty.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Anybody who has worked with files across different types of operating systems
    will definitely know about the problem with different styles of line endings.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now you need to tell Git how it has to treat those line endings. In the following
    screen select **Checkout Windows-style, commit Unix-style line endings** so as
    to ensure that there is no clash between **carriage return line feed** (**CRLF**)
    and **line feed** (**LF**) when working across platforms:![Time for action – installing
    Git on Windows](img/7522_02_06.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: That's about it. Your installer should finish the installation now.
  prefs: []
  type: TYPE_NORMAL
- en: '*What just happened?*'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Congratulations! Your Windows machine is now ready to control the versions of
    any content with Git.
  prefs: []
  type: TYPE_NORMAL
- en: Time for action – installing Git on Mac
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Double-click on the `.dmg` file to get started with the installation. The following
    screen should appear:![Time for action – installing Git on Mac](img/7522_02_07.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Double-click on the `.pkg` file to start the installation process. The window
    appearing in front of you welcomes you by providing information on what's going
    to happen henceforth.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On clicking the **Continue** button, you will be provided with information about
    how much space the software is going to occupy on your disk, along with access
    level of this software for other users of your computer, as shown in the following
    screenshot:![Time for action – installing Git on Mac](img/7522_02_08.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can customize this as per your needs, but as of now let's go ahead with
    the defaults and install it for all users by clicking on the **Install** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You will be asked to provide your administrative password for continuing the
    installation.![Time for action – installing Git on Mac](img/7522_02_09.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If the authentication is successful your installation will be finished, which
    is indicated by a success message, as shown in the following screenshot:![Time
    for action – installing Git on Mac](img/7522_02_10.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*What just happened?*'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Congratulations! Your Mac machine is now ready to control the versions of any
    content with the help of Git.
  prefs: []
  type: TYPE_NORMAL
- en: Time for action – installing Git on Linux
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As we discussed earlier, we are going to perform a Git installation on a Linux
    operating system with the help of your distribution's inbuilt **graphical software
    management system**. In this tutorial I have used a distribution called Ubuntu,
    which is based (downstream) on the famous Debian operating system.
  prefs: []
  type: TYPE_NORMAL
- en: 'In here the software management system is called synaptic. Perform the following
    steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Open up the **run utility** prompt by pressing *Alt* + *F2* and type `synaptic`.![Time
    for action – installing Git on Linux](img/7522_02_11.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Matching tools automatically get displayed below; let's click on the first one,
    which says **synaptic-pkexec**. This pops up an authentication dialog box, since
    the installation requires elevated privileges, as stated earlier. So give it your
    password that has administrative access and click on **Authenticate**.![Time for
    action – installing Git on Linux](img/7522_02_12.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This should open up the **Synaptic Package Manager** window, which shows you
    the available packages on the centre pane and available repository sources on
    the left. Let's type the name of the package that we want to install now which
    is `git` in the **Quick filter** text box. It automatically populates the matching
    packages on the content pane below it.![Time for action – installing Git on Linux](img/7522_02_13.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now we can see a package named **git** whose version, which is shipped by default,
    is **1.7.5.4** (don't worry about the version mismatch; the concepts we are going
    to learn henceforth are the same for all) and its description says **fast, scalable,
    distributed revision control system**. This is the package that we want to install,
    so let's right-click on it and select **Mark for Installation**.![Time for action
    – installing Git on Linux](img/7522_02_14.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now the checkbox next to the package name will have a tick option indicating
    that you have selected that particular package for installation. To handle things
    much more easily we are going to need two more packages associated with Git, namely
    **Git GUI** and **Gitk.** Solet's right-click on the same package again and select
    the option **Mark Suggested for Installation** and select **git-gui** from it.![Time
    for action – installing Git on Linux](img/7522_02_15.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The package manager will prompt you, asking about the required package changes,
    that is, adding **gitk** to the installable list; so click on **Mark**. Now that
    you have marked your packages to be installed let's go ahead! Wait, we did not
    select the gitk package which we said we would need! Yes that's right, we didn't.
    But that will be automatically installed, as it is a dependent package. You will
    see that in the oncoming steps.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now go ahead and click on the green **Apply** button on the shortcut bar below
    the menu bar. You will be prompted with a confirmation dialog box as follows:![Time
    for action – installing Git on Linux](img/7522_02_16.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On clicking on **Mark** you will be given a summary of the packages that are
    going to be installed and asked for confirmation.![Time for action – installing
    Git on Linux](img/7522_02_17.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Upon confirmation the installation gets started and when done you get to see
    a success page as follows:![Time for action – installing Git on Linux](img/7522_02_18.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '*What just happened?*'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Congratulations! Your Linux machine is now ready to control the versions of
    any content with the help of Git.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Having learned about the power of Git in the previous chapter, in this chapter
    we got a copy of Git and made it your own.
  prefs: []
  type: TYPE_NORMAL
- en: Then we successfully installed Git on your operating system, making it usage
    ready.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we've got Git installed, our next step will be to personalize it, after
    which we will see various magic words that will make the tool help us to increase
    our productivity. This is the topic of the next chapter.
  prefs: []
  type: TYPE_NORMAL
