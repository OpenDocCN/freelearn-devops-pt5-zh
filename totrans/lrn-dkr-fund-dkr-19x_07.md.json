["```\n$ docker container run --name demo \\\n alpine /bin/sh -c 'echo \"This is a test\" > sample.txt'\n```", "```\n$ docker container diff demo\n```", "```\nA /sample.txt\n```", "```\n$ docker-machine ls \n```", "```\n$ docker-machine create --driver virtualbox node-1 \n```", "```\n$ docker-machine start node-1\n```", "```\n$ docker-machine ssh node-1\n```", "```\n$ docker volume create sample \n```", "```\n$ docker volume inspect sample [ \n    { \n        \"CreatedAt\": \"2019-08-02T06:59:13Z\",\n        \"Driver\": \"local\",\n        \"Labels\": {},\n        \"Mountpoint\": \"/mnt/sda1/var/lib/docker/volumes/sample/_data\",\n        \"Name\": \"my-data\",\n        \"Options\": {},\n        \"Scope\": \"local\"\n    } \n] \n```", "```\n$ docker run -it --rm --privileged --pid=host \\\n fundamentalsofdocker/nsenter / #\n```", "```\n/ # cd /mnt/sda1/var/lib/docker/volumes/sample/_data\n/ # ls -l total 0\n```", "```\n$ docker container run --name test -it \\\n -v sample:/data \\\n    alpine /bin/sh Unable to find image 'alpine:latest' locally\nlatest: Pulling from library/alpine\n050382585609: Pull complete\nDigest: sha256:6a92cd1fcdc8d8cdec60f33dda4db2cb1fcdcacf3410a8e05b3741f44a9b5998\nStatus: Downloaded newer image for alpine:latest\n/ #\n```", "```\n/ # cd /data / # echo \"Some data\" > data.txt \n/ # echo \"Some more data\" > data2.txt \n/ # exit\n```", "```\n$ docker run -it --rm --privileged --pid=host \\\n fundamentalsofdocker/nsenter\n/ # cd /mnt/sda1/var/lib/docker/volumes/sample/_data\n/ # ls -l \ntotal 8 \n-rw-r--r-- 1 root root 10 Jan 28 22:23 data.txt\n-rw-r--r-- 1 root root 15 Jan 28 22:23 data2.txt\n```", "```\n/ # cat data2.txt\n```", "```\n/ # echo \"This file we create on the host\" > host-data.txt \n```", "```\n$ docker container rm test\n$ docker container run --name test2 -it \\\n -v my-data:/app/data \\\n centos:7 /bin/bash Unable to find image 'centos:7' locally\n7: Pulling from library/centos\n8ba884070f61: Pull complete\nDigest: sha256:a799dd8a2ded4a83484bbae769d97655392b3f86533ceb7dd96bbac929809f3c\nStatus: Downloaded newer image for centos:7\n[root@275c1fe31ec0 /]#\n```", "```\n[root@275c1fe31ec0 /]# cd /app/data \n[root@275c1fe31ec0 /]# ls -l \n```", "```\n-rw-r--r-- 1 root root 10 Aug 2 22:23 data.txt\n-rw-r--r-- 1 root root 15 Aug 2 22:23 data2.txt\n-rw-r--r-- 1 root root 32 Aug 2 22:31 host-data.txt\n```", "```\n$ docker volume rm sample \n```", "```\n$ docker container rm -f $(docker container ls -aq)  \n```", "```\n$ docker volume create sample\n$ docker volume inspect sample\n[\n {\n \"CreatedAt\": \"2019-08-02T07:44:08Z\",\n \"Driver\": \"local\",\n \"Labels\": {},\n \"Mountpoint\": \"/var/lib/docker/volumes/sample/_data\",\n \"Name\": \"sample\",\n \"Options\": {},\n \"Scope\": \"local\"\n }\n]\n```", "```\n$ docker container run --rm -it -v sample:/data alpine /bin/sh\n```", "```\n/ # echo \"Hello world\" > /data/sample.txt\n/ # echo \"Other message\" > /data/other.txt\n```", "```\n$ docker run -it --rm --privileged --pid=host fundamentalsofdocker/nsenter / #\n```", "```\n/ # cd /var/lib/docker/volumes/sample/_data\n```", "```\n/ # ls -l \ntotal 8\n-rw-r--r-- 1 root root 14 Aug 2 08:07 other.txt\n-rw-r--r-- 1 root root 12 Aug 2 08:07 sample.txt\n```", "```\n/ # echo \"I love Docker\" > docker.txt\n/ # ls -l total 12\n-rw-r--r-- 1 root root 14 Aug 2 08:08 docker.txt\n-rw-r--r-- 1 root root 14 Aug 2 08:07 other.txt\n-rw-r--r-- 1 root root 12 Aug 2 08:07 sample.txt\n```", "```\n$ screen ~/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/tty\n```", "```\ndocker-desktop:~# cd /var/lib/docker/volumes/sample/_data\n```", "```\ndocker-desktop:~# echo \"Some other test\" > test.txt \ndocker-desktop:~# ls -l\ntotal 16 -rw-r--r-- 1 root root 14 Aug 2 08:08 docker.txt\n-rw-r--r-- 1 root root 14 Aug 2 08:07 other.txt\n-rw-r--r-- 1 root root 12 Aug 2 08:07 sample.txt\n-rw-r--r-- 1 root root 16 Aug 2 08:10 test.txt\n```", "```\n$ docker container run -it --name writer \\\n -v shared-data:/data \\\n alpine /bin/sh\n```", "```\n# / echo \"I can create a file\" > /data/sample.txt \n```", "```\n$ docker container run -it --name reader \\\n -v shared-data:/app/data:ro \\\n ubuntu:19.04 /bin/bash\n```", "```\n$ ls -l /app/data \ntotal 4\n-rw-r--r-- 1 root root 20 Jan 28 22:55 sample.txt\n```", "```\n# / echo \"Try to break read/only\" > /app/data/data.txt\n```", "```\nbash: /app/data/data.txt: Read-only file system\n```", "```\n$ docker container rm -f $(docker container ls -aq) \n$ docker volume rm $(docker volume ls -q) \n```", "```\n$ docker-machine stop node-1 \n```", "```\n$ docker container run --rm -it \\\n -v $(pwd)/src:/app/src \\\n alpine:latest /bin/sh\n```", "```\n$ mkdir ~/my-web \n$ cd ~/my-web \n```", "```\n$ echo \"<h1>Personal Website</h1>\" > index.html \n```", "```\nFROM nginx:alpine\nCOPY . /usr/share/nginx/html\n```", "```\n$ docker image build -t my-website:1.0 . \n```", "```\n$ docker container run -d \\\n --name my-site \\\n -p 8080:80 \\\n my-website:1.0\n```", "```\n<h1>Personal Website</h1> \n<p>This is some text</p> \n```", "```\n$ docker container rm -f my-site\n$ docker image build -t my-website:1.0 .\n$ docker container run -d \\\n --name my-site \\\n   -p 8080:80 \\\n my-website:1.0\n```", "```\n$ docker container rm -f my-site\n$ docker container run -d \\\n --name my-site \\\n   -v $(pwd):/usr/share/nginx/html \\\n -p 8080:80 \\\n my-website:1.0\n```", "```\nVOLUME /app/data \nVOLUME /app/data, /app/profiles, /app/config \nVOLUME [\"/app/data\", \"/app/profiles\", \"/app/config\"] \n```", "```\n$ docker image pull mongo:3.7\n```", "```\n $ docker image inspect \\\n    --format='{{json .ContainerConfig.Volumes}}' \\\n    mongo:3.7 | jq . \n```", "```\n{\n \"/data/configdb\": {},\n \"/data/db\": {}\n}\n```", "```\n$ docker run --name my-mongo -d mongo:3.7\n```", "```\n$ docker inspect --format '{{json .Mounts}}' my-mongo | jq .\n```", "```\n[\n  {\n    \"Type\": \"volume\",\n    \"Name\": \"b9ea0158b5...\",\n    \"Source\": \"/var/lib/docker/volumes/b9ea0158b.../_data\",\n    \"Destination\": \"/data/configdb\",\n    \"Driver\": \"local\",\n    ...\n  },\n  {\n    \"Type\": \"volume\",\n    \"Name\": \"5becf84b1e...\",\n    \"Source\": \"/var/lib/docker/volumes/5becf84b1.../_data\",\n    \"Destination\": \"/data/db\",\n    ...\n  }\n]\n```", "```\n$ export\n```", "```\n...\nCOLORFGBG '7;0'\nCOLORTERM truecolor\nHOME /Users/gabriel\nITERM_PROFILE Default\nITERM_SESSION_ID w0t1p0:47EFAEFE-BA29-4CC0-B2E7-8C5C2EA619A8\nLC_CTYPE UTF-8\nLOGNAME gabriel\n...\n```", "```\n$ docker container run --rm -it alpine /bin/sh\n/ # export \nexport HOME='/root'\nexport HOSTNAME='91250b722bc3'\nexport PATH='/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\nexport PWD='/'\nexport SHLVL='1'\nexport TERM='xterm'\n```", "```\n$ docker container run --rm -it \\\n --env LOG_DIR=/var/log/my-log \\\n alpine /bin/sh\n/ #\n```", "```\n/ # export | grep LOG_DIR \nexport LOG_DIR='/var/log/my-log'\n```", "```\n$ docker container run --rm -it \\\n --env LOG_DIR=/var/log/my-log \\    --env MAX_LOG_FILES=5 \\\n --env MAX_LOG_SIZE=1G \\\n alpine /bin/sh\n/ #\n```", "```\n/ # export | grep LOG \nexport LOG_DIR='/var/log/my-log'\nexport MAX_LOG_FILES='5'\nexport MAX_LOG_SIZE='1G'\n```", "```\n$ mkdir -p ~/fod/05 && cd ~/fod/05\n```", "```\nLOG_DIR=/var/log/my-log\nMAX_LOG_FILES=5\nMAX_LOG_SIZE=1G\n```", "```\n$ docker container run --rm -it \\\n --env-file ./development.config \\\n alpine sh -c \"export\"\n```", "```\nexport HOME='/root'\nexport HOSTNAME='30ad92415f87'\nexport LOG_DIR='/var/log/my-log'\nexport MAX_LOG_FILES='5'\nexport MAX_LOG_SIZE='1G'\nexport PATH='/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\nexport PWD='/'\nexport SHLVL='1'\nexport TERM='xterm'\n```", "```\nFROM alpine:latest\nENV LOG_DIR=/var/log/my-log\nENV  MAX_LOG_FILES=5\nENV MAX_LOG_SIZE=1G\n```", "```\n$ docker image build -t my-alpine .\n```", "```\n$ docker container run --rm -it \\\n    my-alpine sh -c \"export | grep LOG\" \nexport LOG_DIR='/var/log/my-log'\nexport MAX_LOG_FILES='5'\nexport MAX_LOG_SIZE='1G'\n```", "```\n$ docker container run --rm -it \\\n    --env MAX_LOG_SIZE=2G \\\n    --env MAX_LOG_FILES=10 \\\n    my-alpine sh -c \"export | grep LOG\" \nexport LOG_DIR='/var/log/my-log'\nexport MAX_LOG_FILES='10'\nexport MAX_LOG_SIZE='2G'\n```", "```\nARG BASE_IMAGE_VERSION=12.7-stretch\nFROM node:${BASE_IMAGE_VERSION}\nWORKDIR /app\nCOPY packages.json .\nRUN npm install\nCOPY . .\nCMD npm start\n```", "```\n$ docker image build \\\n --build-arg BASE_IMAGE_VERSION=12.7-alpine \\\n -t my-node-app-test .\n```"]