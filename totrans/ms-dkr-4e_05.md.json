["```\n$ docker image pull redis:alpine\n$ docker image pull russmckendrick/moby-counter\n$ docker network create moby-counter\n$ docker container run -d --name redis --network moby-counter redis:alpine\n$ docker container run -d --name moby-counter --network moby-counter -p 8080:80 russmckendrick/moby-counter\n```", "```\n$ orchard hosts create\n$ orchard docker run -p 6379:6379 -d orchardup/redis\n```", "```\nweb:\n  image: web\n  links:\n   - db\n  ports:\n   - \"8000:8000\"\n   - \"49100:22\"\ndb:\n  image: postgres\n```", "```\n$ fig up\n```", "```\nversion: \"3.7\"\nservices:\n    redis:\n        image: redis:alpine\n        volumes:\n           - redis_data:/data\n        restart: always\n    mobycounter:\n        depends_on: \n            - redis\n        image: russmckendrick/moby-counter\n        ports:\n            - \"8080:80\"\n        restart: always\n\nvolumes:\n    redis_data:\n```", "```\n$ docker-compose up\n```", "```\nversion: \"3.7\"\n```", "```\nservices:\n----> container name:\n--------> container options\n------------> sub options\n----> container name:\n--------> container options\n------------> sub options\n```", "```\nservices:\n    redis:\n        image: redis:alpine\n        volumes:\n           - redis_data:/data\n        restart: always\n    mobycounter:\n        depends_on: \n            - redis\n        image: russmckendrick/moby-counter\n        ports:\n            - \"8080:80\"\n        restart: always\n```", "```\nvolumes:\n    redis_data:\n```", "```\nversion: \"3\"\nservices:\n```", "```\n    vote:\n        build: ./vote\n        command: python app.py\n        volumes:\n            - ./vote:/app\n        ports:\n            - \"5000:80\"\n        networks:\n            - front-tier\n            - back-tier\n```", "```\n    result:\n        build: ./result\n        command: nodemon server.js\n        volumes:\n            - ./result:/app\n        ports:\n            - \"5001:80\"\n            - \"5858:5858\"\n         networks:\n            - front-tier\n            - back-tier\n```", "```\n    worker:\n        build:\n            context: ./worker\n        depends_on:\n            - \"redis\"\n            - \"db\"\n        networks:\n            - back-tier\n```", "```\n    redis:\n        image: redis:alpine\n        container_name: redis\n        ports: [\"6379\"]\n        networks:\n            - back-tier\n```", "```\n     db:\n        image: postgres:9.4\n        container_name: db\n        volumes:\n            - \"db-data:/var/lib/postgresql/data\"\n        networks:\n            - back-tier\n```", "```\nvolumes:\n    db-data:\n```", "```\nnetworks:\n    front-tier:\n    back-tier:\n```", "```\nCreating network \"example-voting-app_front-tier\" with the default driver\nCreating network \"example-voting-app_back-tier\" with the default driver\nCreating volume \"example-voting-app_db-data\" with default driver\n```", "```\nBuilding vote\nStep 1/7 : FROM python:2.7-alpine\n2.7-alpine: Pulling from library/python\nc9b1b535fdd9: Already exists\nfea5c17ab132: Pull complete\n5dbe995357bf: Pull complete\nb6d238951af6: Pull complete\nDigest: sha256:5217b150a5f7eecea55f6224440f3b5 c5f975edc32de7c0bfdf98280ed11d76c\nStatus: Downloaded newer image for python:2.7-alpine\n```", "```\n ---> 7ec8514e7bc5\nStep 2/7 : WORKDIR /app\n ---> Running in 7d26310faa98\nRemoving intermediate container 7d26310faa98\n ---> 8930ad501196\nStep 3/7 : ADD requirements.txt /app/requirements.txt\n ---> 33ff980bd133\nStep 4/7 : RUN pip install -r requirements.txt\n ---> Running in 999e575570ef\n[lots of python build output here]\nRemoving intermediate container 999e575570ef\n ---> 72637119e7df\nStep 5/7 : ADD . /app\n ---> 81adb9e92ce4\nStep 6/7 : EXPOSE 80\n ---> Running in a5aaf5b9ed1b\nRemoving intermediate container a5aaf5b9ed1b\n ---> 366d2e32ceb4\nStep 7/7 : CMD [\"gunicorn\", \"app:app\", \"-b\", \"0.0.0.0:80\", \"--log-file\", \"-\", \"--access-logfile\", \"-\", \"--workers\", \"4\", \"--keep-alive\", \"0\"]\n ---> Running in 212e82c06cf3\nRemoving intermediate container 212e82c06cf3\n ---> 4553ffa35ea4\nSuccessfully built 4553ffa35ea4\n```", "```\nSuccessfully tagged example-voting-app_vote:latest\nWARNING: Image for service vote was built because it did not already exist. To rebuild this image you must use `docker-compose build` or `docker-compose up --build`.\n```", "```\nBuilding result\nStep 1/9 : FROM node:10-slim\n10-slim: Pulling from library/node\n619014d83c02: Pull complete\n8c5d9aed65fb: Pull complete\nec6ca7c6739a: Pull complete\n6da8fc40e075: Pull complete\n6161f60894b2: Pull complete\nDigest: sha256:10c4d19a2a2fa5ad416bddb3a4b208e 34b0d4263c3978df6aa06d9ba9687bbe8\nStatus: Downloaded newer image for node:10-slim\n ---> ad4ea09bf0f3\nAgain, now the images have been downloaded the build of the image containing the application can start:\nStep 2/9 : WORKDIR /app\n ---> Running in 040efda3a918\nRemoving intermediate container 040efda3a918\n ---> 3d3326950331\nStep 3/9 : RUN npm install -g nodemon\n ---> Running in a0ce3043aba5\n[lots of nodejs build output here]\nRemoving intermediate container a0ce3043aba5\n ---> 925a30942e5f\nStep 4/9 : COPY package*.json ./\n ---> 9fd59fddc0e8\nStep 5/9 : RUN npm ci  && npm cache clean --force  && mv /app/node_modules /node_modules\n ---> Running in 3c0871538d04\n[lots of nodejs build output here]\nRemoving intermediate container 3c0871538d04\n ---> 8db74baa1959\nStep 6/9 : COPY . .\n ---> a47af934177b\nStep 7/9 : ENV PORT 80\n ---> Running in 57f80f86faf0\nRemoving intermediate container 57f80f86faf0\n ---> e5a01939876b\nStep 8/9 : EXPOSE 80\n ---> Running in 614bd7bd4ab3\nRemoving intermediate container 614bd7bd4ab3\n ---> 461355b7e66e\nStep 9/9 : CMD [\"node\", \"server.js\"]\n ---> Running in 4c64da5f054c\nRemoving intermediate container 4c64da5f054c\n ---> 65c854a0b292\nSuccessfully built 65c854a0b292\nSuccessfully tagged example-voting-app_result:latest\nWARNING: Image for service result was built because it did not already exist. To rebuild this image you must use `docker-compose build` or `docker-compose up --build`.\n```", "```\nPulling db (postgres:9.4)...\n9.4: Pulling from library/postgres\n619014d83c02: Already exists\n7ec0fe6664f6: Pull complete\n9ca7ba8f7764: Pull complete\n9e1155d037e2: Pull complete\nfebcfb7f8870: Pull complete\n8c78c79412b5: Pull complete\n5a35744405c5: Pull complete\n27717922e067: Pull complete\n8e8ebde0a697: Pull complete\nf6d85e336541: Pull complete\nc802081bbe1e: Pull complete\nf35abd4ea98b: Pull complete\n50335e437328: Pull complete\na1c34d9ddebb: Pull complete\nDigest: sha256:d6bc1739199cc52f038f54e1ab 671f5229d114fb667e9ad08add6cd66e8a9b28\nStatus: Downloaded newer image for postgres:9.4\n```", "```\nBuilding worker\nStep 1/5 : FROM microsoft/dotnet:2.0.0-sdk\n2.0.0-sdk: Pulling from microsoft/dotnet\n3e17c6eae66c: Pull complete\n74d44b20f851: Pull complete\na156217f3fa4: Pull complete\n4a1ed13b6faa: Pull complete\n18842ff6b0bf: Pull complete\ne857bd06f538: Pull complete\nb800e4c6f9e9: Pull complete\nDigest: sha256:f4ea9cdf980bb9512523a3fb88e 30f2b83cce4b0cddd2972bc36685461081e2f\nStatus: Downloaded newer image for microsoft/dotnet:2.0.0-sdk\nNow that the SDK images have been downloaded Docker Compose can build the application:\n ---> fde8197d13f4\nStep 2/5 : WORKDIR /code\n ---> Running in ac782e4c8cb2\nRemoving intermediate container ac782e4c8cb2\n ---> 3881e09f0d22\nStep 3/5 : ADD src/Worker /code/src/Worker\n ---> cf0468608709\nStep 4/5 : RUN dotnet restore -v minimal src/Worker     && dotnet publish -c Release -o \"./\" \"src/Worker/\"\n ---> Running in ca04867b0e86\n[lots of .net build output here]\n  Worker -> /code/src/Worker/bin/Release/netcoreapp2.0/Worker.dll\n  Worker -> /code/src/Worker/\nRemoving intermediate container ca04867b0e86\n ---> 190aee9b4b98\nStep 5/5 : CMD dotnet src/Worker/Worker.dll\n ---> Running in 069b5806b25e\nRemoving intermediate container 069b5806b25e\n ---> 56c488a158bb\nSuccessfully built 56c488a158bb\nSuccessfully tagged example-voting-app_worker:latest\nWARNING: Image for service worker was built because it did not already exist. To rebuild this image you must use `docker-compose build` or `docker-compose up --build`.\n```", "```\nCreating redis                       ... done\nCreating db                          ... done\nCreating example-voting-app_vote_1   ... done\nCreating example-voting-app_result_1 ... done\nCreating example-voting-app_worker_1 ... done\nAttaching to db, redis, example-voting-app_worker_1, example-voting-app_vote_1, example-voting-app_result_1\n```", "```\n$ docker-compose up -d\n```", "```\n$ docker-compose ps\n```", "```\n$ docker-compose config\n```", "```\n$ docker-compose config -q\n```", "```\nERROR: yaml.parser.ParserError: while parsing a block mapping in \"./docker- compose.yml\", line 1, column 1 expected <block end>, but found '<block mapping start>' in \"./docker-compose.yml\", line 27, column 3\n```", "```\n$ docker-compose pull\n```", "```\n$ docker-compose build\n```", "```\n$ docker-compose create\n```", "```\n$ docker-compose start\n$ docker-compose stop\n$ docker-compose restart\n$ docker-compose pause\n$ docker-compose unpause\n```", "```\n$ docker-compose pause db\n$ docker-compose unpause db\n```", "```\n$ docker-compose top\n```", "```\n$ docker-compose top db\n```", "```\n$ docker-compose logs\n```", "```\n$ docker-compose events\n```", "```\n$ docker-compose exec worker ping -c 3 db\n```", "```\n$ docker-compose run --volume data_volume:/app composer install\n```", "```\n$ docker-compose scale worker=3\n```", "```\nWARNING: The scale command is deprecated. Use the up command with the - scale flag instead.\n```", "```\n$ docker-compose up -d --scale worker=3\n```", "```\n$ docker-compose up -d --scale vote=3\n```", "```\n$ docker-compose kill\n```", "```\n$ docker-compose rm\n```", "```\n$ docker-compose down\n```", "```\n$ docker-compose down --rmi all --volumes\n```", "```\n    mobycounterapp.dockerapp. In that folder, there are three files, as can be seen in the following screenshot:![Figure 5.18 – Output of ls -lhat mobycounterapp.dockerapp\n    ](img/Figure_5.18_B15659.jpg)\n\n    ```", "```\n\n    ```", "```\n    # Version of the application\n    version: 0.1.0\n    # Name of the application\n    name: mobycounterapp\n    # A short description of the application\n    description: Places whales on screen wherever you click !!!\n    # List of application maintainers with name and email for each\n    maintainers:\n      - name: Russ McKendrick\n        email: russ@mckendrick.io\n    ```", "```\n    {\n        \"port\": \"8080\"\n    }\n    ```", "```\n    version: \"3.7\"\n    services:\n        redis:\n            image: redis:alpine\n            volumes:\n               - redis_data:/data\n            restart: always\n        mobycounter:\n            depends_on: \n                - redis\n            image: russmckendrick/moby-counter\n            ports:\n                - \"${port}:80\"\n            restart: always\n\n    volumes:\n        redis_data:\n    ```", "```\n$ docker app validate mobycounterapp.dockerapp\n$ docker app inspect mobycounterapp.dockerapp\n```", "```\n    $ docker swarm init\n    ```", "```\n    $ docker app install mobycounterapp.dockerapp --name mobycounterapp\n    ```", "```\n    $ docker app list\n    ```", "```\n    $ docker login\n    ```", "```\n    $ docker app push mobycounterapp --platform=\"linux/amd64\" --tag russmckendrick/mobycounterapp:0.1.0\n    ```", "```\n$ mkdir /tmp/testing\n$ cd /tmp/testing\n$ docker app uninstall mobycounterapp\n$ docker app ls\n```", "```\n$ docker app inspect russmckendrick/mobycounterapp:0.1.0\n```", "```\n$ docker app render --output docker-compose.yml russmckendrick/mobycounterapp:0.1.0\n```", "```\n$ docker-compose up -d\n$ docker-compose ps\n```", "```\n$ docker app install russmckendrick/mobycounterapp:0.1.0 --set port=8181 --name mobycounterapp8181 \n```"]