- en: DevSecOps Drivers and Challenges
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Due to the rapid release of cloud services, law enforcement, security incidents,
    and tenants' data protection, the security is indispensable to cloud/internet
    services. Moving security activities from right to left during the development
    lifecycle and having built-in security practices in the continuous integration
    pipeline are the goals of DevSecOps.
  prefs: []
  type: TYPE_NORMAL
- en: The business environment, culture, law compliance, and external market drive
    relate to how the DevSecOps security assurance program rolls out in an organization.
    The DevSecOps or security assurance program management involved with the whole
    organization across all business units and the key success to DevSecOps will require
    all stakeholders to agree with the goal and approaches.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will cover the following topics in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Security compliance (ISO 2700x, FIPS, CSA-CCM)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Legal/law compliance—**General Data Protection Regulation** (**GDPR**)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: New technology (third-party, cloud, containers, and virtualization)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cloud service hacks/abuse
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rapid release
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'As shown in the following diagram, this is how external drivers and challenges
    impact on a team when delivering secure cloud services:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00005.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Security compliance
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For cloud services, it's very important to have security compliance-ready. Security
    compliance not only shows how the security controls of the cloud service meet
    security standards but also demonstrates security trustworthiness for customers
    and partners. Security compliance provides an overview of a security assurance
    program, but it won't specifically tell us which security technical approach it
    should apply. For frequent cloud service releases, constantly monitoring and auditing
    to meet security compliance can be a big challenge.
  prefs: []
  type: TYPE_NORMAL
- en: Although most cloud service providers are security compliance ready (ISO, PCI,
    FedRAMP, SOC, and so on), it's still the cloud service customer's responsibility
    to secure data and manage their own application compliance assessment. Both cloud
    service customers and providers need to maintain system or application audit logs,
    configuration lists, and change histories for compliance assessment. The compliance
    assessment should be considered a continuous activity—not a one-time audit check.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we will introduce key cloud services security compliance as
    a reference to building a security assurance program, and how these security compliance
    standards relate to DevSecOps.
  prefs: []
  type: TYPE_NORMAL
- en: ISO 27001
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'ISO 27001 is an **information security management system** (**ISMS**). It provides
    an overview of organization-level security assurance programs. ISO 27001 won''t
    specify a technical security approach, but it provides a complete set of a security
    management programs. As the diagram shows, the segments in the upper parts may
    be more directly related to DevOps security practices, such as compliance, business
    continuity, operation security, access control, software development, cryptography,
    incident management, and communication. This will serve as a guideline to further
    developing our own DevOps security program:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00006.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'We won''t introduce ISO 27001 details, but the following table summarizes how
    ISO 27001 relates to each role and the DevOps team:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Role** | **Company/organization security policy** | **Operation or DevOps
    team** | **Development team** |'
  prefs: []
  type: TYPE_TB
- en: '| ISO 27001 chapters | 5  Information security policies6 Organization of information
    security7 Human resource security8 Assess management15 Supplier relationships 11
    Physical and environmental security  | 9 Access Control10 Cryptography12 Operation
    security13 Communication security17 Information security aspects of business continuity
    management16 Information security incident management18 Compliance; with internal
    requirements, such as policies, and external requirements, such as laws19 Cloud
    services control | 14 System development10 Cryptography9 Access control |'
  prefs: []
  type: TYPE_TB
- en: ISO 27017 and ISO 27018
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ISO 27018 is mainly for the protection of **personally identifiable information**
    (**PII**) in the cloud. It's an extended security compliance based on ISO 27001
    and ISO 27002\. On top of ISO 27001/27002, ISO 27018 additionally defines PII
    protection security requirements
  prefs: []
  type: TYPE_NORMAL
- en: ISO 27017 provides both service providers and cloud service consumers with the
    ability to implement security controls for cloud services. ISO 27017 is an extension
    to ISO 27002 to address cloud-specific security issues.
  prefs: []
  type: TYPE_NORMAL
- en: Cloud Security Alliance (CSA)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As there are many cloud security compliance methods out there, we may get frustrated
    trying to follow each of them. The **CSA (Cloud Security Alliance)**  **Cloud
    Controls Matrix** (**CCM**) consolidated most security compliance methods into
    one matrix called CCM. Take application and interface application security as
    an example—CCM includes all security compliance controls such as ISO, FedRAMP,
    and NIST 800-53 related to this area, and defines the control ID. The key benefit
    of referring to CCM is that we can simply focus on CCM and know all other security
    compliance regulations will be met as well.
  prefs: []
  type: TYPE_NORMAL
- en: In addition, CSA provides a **Consensus Assessments Initiative Questionnaire**
    (**CAIQ**). It's a yes/no questionnaire for cloud consumers or cloud provides
    to do security self-assessment and to understand the requirements of security
    controls. **Google Vendor Security Assessment Questionnaires (VSAQ)** also provide
    a security assessment questionnaire in terms of Web Application Security, Security
    and Privacy Program, Infrastructure Security and Physical and Datacenter Security.
  prefs: []
  type: TYPE_NORMAL
- en: 'Furthermore, if you are looking for the top cloud threats and security control
    mitigations, **Cloud Security Alliance** (**CSA**) cloud top threats provide guidelines.
    At the time of writing, it defines the top 12 cloud threats, mappings to threat
    analysis, CCM/Control ID, and the domains of CSA Security Guidance reference. The
    following table shows related CSA security guides and how to apply security practices
    in your organization:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **CSA security guides** | **What it is?** | **When to apply?** |'
  prefs: []
  type: TYPE_TB
- en: '| CSA Security Guidance reference | Cloud security white paper | If your organization
    needs a cloud service security guideline or white paper, this can be a good reference.
    |'
  prefs: []
  type: TYPE_TB
- en: '| Cloud top threats | Top 12 cloud threats and mappings to threat analysis,
    CCM/Control ID, and domains of CSA Security Guidance reference | It can be the
    basis for cloud threat modeling. |'
  prefs: []
  type: TYPE_TB
- en: '| CAIQ | Yes/no questionnaire | A list of yes/no questions for self-assessment
    to understand existing security control requirements. |'
  prefs: []
  type: TYPE_TB
- en: '| CSA CCM | One consolidated worldwide security standard mapping | It''s a
    great consolidated reference and includes most security compliance standards (ISO
    27001, PCI, NIST, and so on). It''s the only matrix you need to review security
    standards compliance. |'
  prefs: []
  type: TYPE_TB
- en: Federal Information Processing Standards (FIPS)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The FIPS mainly defines minimum security requirements for the use of cryptographic
    modules. Every organization that is not going to get a FIPS certificate should
    also refer to it. It's highly recommended that you refer to *Security Requirements
    for Cryptographic Modules* to understand what cryptographic modules may be considered
    safe, legacy, or weak.
  prefs: []
  type: TYPE_NORMAL
- en: For developers who would like to learn how to implement cryptographic modules
    correctly, the following resources are recommended.
  prefs: []
  type: TYPE_NORMAL
- en: OWASP Cryptographic Storage Cheat Sheet.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: OWASP Guide to Cryptography
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: OWASP Key Management Cheat Sheet
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Here is a summary of the minimum security requirements for each cryptography
    algorithm and its usage:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Usage scenario** | **Unsafe cryptography algorithm****(key length)** |
    **Legacy Systems Only** | **Recommended ****cryptography algorithm** |'
  prefs: []
  type: TYPE_TB
- en: '| Symmetric encryption | Blowfish, DES, Skipjack, RC4 | 3 DES only when(key
    1 != key 2 != key 3) | AES > 128 bits |'
  prefs: []
  type: TYPE_TB
- en: '| Asymmetric encryption | RSA (< 1024 bits) | RSA (1024 bits) | RSA (> 1024
    bits) |'
  prefs: []
  type: TYPE_TB
- en: '| Hash | MD5 | SHA1 (1024 bits) | SHA256 |'
  prefs: []
  type: TYPE_TB
- en: '| Digital signature | RSA (< 1024 bits)DSA (< 1024 bits)ECDSA (<= 160 bits)
    | DSA (1024 bits)RSA (1024 bits) | RSA (>=2048 bits)DSA (>=2048 bits)ECDSA (>=256
    bits) |'
  prefs: []
  type: TYPE_TB
- en: '| Hellman key exchange (DH) | DH ( < 1024 bits) | DH (1024-2047 bits) | DH
    (>=2048 bits)ECDH(>-256 bits) |'
  prefs: []
  type: TYPE_TB
- en: Center for Internet Security (CIS) and OpenSCAP – securing your infrastructure
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The CIS defines security benchmarks and the **National Checklist Program** (**NCP**),
    defined by the NIST SP 800-70, provides guidance on the security configurations
    of the operating system, database, virtualization, framework, and applications.
  prefs: []
  type: TYPE_NORMAL
- en: The IT and operation team are primarily responsible for ensuring the security
    of the infrastructure. However, the development team may also share some responsibilities
    for securing the infrastructure. For example, the development team may decide
    to deliver the application package in the form of a container or to apply Infrastructure
    as Code frameworks, such as **Puppet** or **Chef**. These technologies allow development
    teams to define a secure configuration, even in the development stage, and the
    operation team just needs to apply the secure configuration definition during
    application deployment.
  prefs: []
  type: TYPE_NORMAL
- en: In addition, it's also the development team's job to provide a list of configuration
    changes for every release's deployment. This will allow the operation team to
    review if the configuration changes are secure and appropriate. Due to the complexity
    and the amount of configuration that needs to be reviewed, the adoption of scanning
    tools to check if all the configurations are secure and comply with industry best
    practices is necessary. Cloud service providers may provide such scanning services
    or tools. Here, we recommend open source tools such as CIS-CAT Lite provided by
    CIS and OpenSCAP.
  prefs: []
  type: TYPE_NORMAL
- en: The journey to secure the infrastructure and platform can be completed in three
    stages. The first stage is to define a secure configuration baseline by referring
    to industry practices such as CIS or NIST NCP. Then, we may apply tools such as
    Chef or Puppet to ensure every deployment includes a secure configuration as well.
    The final stage is to do constant monitoring of frequent configuration changes
    and security compliance assessment.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00007.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Typical infrastructure components are listed in the following table. CIS provides
    secure configuration suggestions to each system component and also tools to do
    the scanning against the security best practice baseline.
  prefs: []
  type: TYPE_NORMAL
- en: CIS provides the CIS Benchmark, which defines the secure configuration of operating
    systems, server software, cloud services, networking devices, and so on. It helps
    operation teams to understand how to secure and configure an infrastructure and
    platform.
  prefs: []
  type: TYPE_NORMAL
- en: '| **Infrastructure layers** | **System** |'
  prefs: []
  type: TYPE_TB
- en: '| Web services | Apache, Nginx, IIS |'
  prefs: []
  type: TYPE_TB
- en: '| Database | MS SQL, MySQL, Oracle, MongoDB |'
  prefs: []
  type: TYPE_TB
- en: '| Virtualization/container | VMware, Docker, Kubernetes |'
  prefs: []
  type: TYPE_TB
- en: '| Networking | Cisco devices |'
  prefs: []
  type: TYPE_TB
- en: '| Operating systems | Windows, Linux, Ubuntu, CentOS, SUSE |'
  prefs: []
  type: TYPE_TB
- en: In addition to CIS Benchmark documents, CIS also provides tools to infrastructure
    or operation teams for secure configuration scanning. The CIS Security website
    provides related security configuration scanning tools to download.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00008.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Source: https://www.cisecurity.org/cybersecurity-tools/'
  prefs: []
  type: TYPE_NORMAL
- en: National Checklist Program (NCP) repository
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The NCP repository provides secure configuration for specific software components.
    For example, if you are looking for Apache security configuration or the CIS of
    Apache, you may use the NCP to do the search.  The screenshot is from the NIST
    NCP (National Checklist Program).
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00009.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Source: https://nvd.nist.gov/ncp/repository
  prefs: []
  type: TYPE_NORMAL
- en: OpenSCAP tools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'OpenSCAP is similar to CIS security benchmarks; it also provides a secure configuration
    baseline. In addition, OpenSCAP also provides different kinds of tool for operation
    or infrastructure teams to do secure configuration evaluation and scanning. Depending
    on the requirements, there are four kinds of tool provided, as shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00010.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Source: https://www.open-scap.org/tools/
  prefs: []
  type: TYPE_NORMAL
- en: Legal and security compliance
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The EU GDPR, which came into force in May 2018, protects all EU citizens from
    privacy and data breaches. According to the GDPR FAQ:'
  prefs: []
  type: TYPE_NORMAL
- en: '"The GDPR not only applies to organizations located within the EU but it also
    applies to all companies processing and holding the personal data of data subjects
    residing in the European Union, regardless of the company''s location."'
  prefs: []
  type: TYPE_NORMAL
- en: 'In other words, if a company is providing services to customers in the European
    Union, its data handling will need to comply entirely with GDPR. From a DevSecOps
    point of view, it''s related to data collection, handling, storage, backup, modification,
    transport, and removal—in a secure manner. According to GDPR Article 5, there
    are six privacy principles:'
  prefs: []
  type: TYPE_NORMAL
- en: Lawfulness, fairness, and transparency
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Purpose limitations
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data minimization
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Accuracy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Storage limitations
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Integrity and confidentiality
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'GDPR, like other security compliance policies, doesn''t define the technical
    approach to achieve it. GDPR can still be too high-level for an engineering team.
    It needs to translate into software security requirements, design, threat modeling,
    tools, and so on. The following table summarizes typical security practices for
    the engineering team:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Stage** | **Common security practices for privacy or sensitive info handing**
    |'
  prefs: []
  type: TYPE_TB
- en: '| Design | **Privacy Impact Assessment** (**PIA**) |'
  prefs: []
  type: TYPE_TB
- en: '| Coding |'
  prefs: []
  type: TYPE_TB
- en: Data masking library
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Anonymous toolbox
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: RAPPOR—privacy-preserving reporting algorithms
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Encryption storage (RSA, ASE)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Secure erasure
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Secure communication protocol (such as TLS v1.2, SSH v2, SFTP, SNMP v3)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cookie consent
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data Vault
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Key management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Testing | OWASP testing for weak cryptography, testing for error handling,
    testing for configuration, and so on |'
  prefs: []
  type: TYPE_TB
- en: '| Deployment |'
  prefs: []
  type: TYPE_TB
- en: OWASP configuration and deployment management testing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CIS secure environment configuration
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sensitive information in Git
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Monitoring |'
  prefs: []
  type: TYPE_TB
- en: ELK for log analysis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Integrity monitoring (IDS/IPS) to monitor any unauthorized changes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CIS secure configuration monitoring
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sensitive information leakage in Git
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: New technology (third-party, cloud, containers, and virtualization)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: New technologies such as virtualization, Docker, and microservices introduce
    new methods of software delivery and speeds up application deployment, but also
    brings new security threats and risks. We will briefly discuss how these new technologies
    change the practices of security and DevOps.
  prefs: []
  type: TYPE_NORMAL
- en: Virtualization
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: It's very common to install application services on top of a virtualized OS.
    Virtualization technology helps to make the most physical machine resources such
    as the CPU, memory, and disks. However, virtualization is a shared OS technology.
    It also introduces security risks such as VM escape, information leakage, and
    denial-of-service for applications running on top of virtualization.
  prefs: []
  type: TYPE_NORMAL
- en: 'Security practices in guest OS virtualization are normally involved with both
    OS and virtualization hardening. Here are some key security configurations related
    to virtualization. Refer to CIS Benchmarks for details:'
  prefs: []
  type: TYPE_NORMAL
- en: Limit informative messages from the VM to the VMX file
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Limit sharing console connections
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disconnect unauthorized devices (USB, DVD, serial devices, and so on)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disable **BIOS Boot Specification** (**BBS**)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disable guest-host interaction protocol handler
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disable host guest filesystem server
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disable VM console paste operations
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Disable virtual disk shrinking
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Do not send host information to guests
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following diagram shows the adoption of virtualization. Virtualization
    adds a hypervisor layer on top of the physical server so that the virtualized
    guest OS can run on top of it:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00011.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: In addition to the secure configuration of virtualization, applying a security
    patch to virtualization is also a must for operation or IT teams.
  prefs: []
  type: TYPE_NORMAL
- en: 'In addition, the following resources may help you to search for **Common Vulnerabilities
    and Exposures** (**CVE**) in vulnerability databases:'
  prefs: []
  type: TYPE_NORMAL
- en: Exploit Database [https://www.exploit-db.com/](https://www.exploit-db.com/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SecLists [http://seclists.org/fulldisclosure/](http://seclists.org/fulldisclosure/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vulnerability Notes Database [https://www.kb.cert.org/vuls/](https://www.kb.cert.org/vuls/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To search for the vulnerabilities of a specific product or vendor, refer to
    the URL search for VMware as following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=VMware](https://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=VMware)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://www.cvedetails.com/vendor/**252/**Vmware.html](https://www.cvedetails.com/vendor/252/Vmware.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Dockers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The introduction of Docker provides software package delivery and installation
    with new choices and can be one of the best ways to isolate different applications
    without using a whole separate OS virtual machine. Software can be packaged into
    a container by Docker. A container, like a VM image, includes everything needed
    to run application services such as runtime, system libraries, and settings. The
    key difference between a virtual machine image and a container is that the container
    doesn't actually include the whole OS. The container only includes key necessary
    system libraries and every container shares the same OS kernel during runtime.
    Therefore, Docker containers can boot up within seconds and use much less memory
    or far fewer disks than virtualization images.
  prefs: []
  type: TYPE_NORMAL
- en: The use of Docker can also greatly help operation teams to do deployment and
    secure configuration since a Docker container includes every configuration and
    the settings you need to run. To understand Docker security practices, check out
    the **CIS Docker Benchmark** and **Docker security** in the *Further reading*
    section.
  prefs: []
  type: TYPE_NORMAL
- en: 'Key secure practices and configurations of Docker are listed here:'
  prefs: []
  type: TYPE_NORMAL
- en: Separate partition for containers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Updated Linux kernel
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Only allow trusted users to control the Docker daemon
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Audit the Docker daemon, files, and directories
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Restrict network traffic between containers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: TLS authentication for the Docker daemon
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Do not bind Docker to another IP/port or a Unix socket
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Docker daemon configuration files permissions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Container runtime (Linux Kernel capabilities, SSH, ports, memory, CPU, IPC)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following diagram shows the key difference between virtualization and Docker.
    Virtualization is a guest OS level while Docker is actually an application-level
    isolation and shares the same guest OS:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00012.gif)'
  prefs: []
  type: TYPE_IMG
- en: Here is a summary of the known security vulnerabilities identified in Docker.
  prefs: []
  type: TYPE_NORMAL
- en: '| **CVE ID** | **Related CWE ID** | **Description** |'
  prefs: []
  type: TYPE_TB
- en: '| CVE-2014-5282 | 20 | Docker before 1.3 does not properly validate image IDs,
    which allows remote attackers to redirect to another image through the loading
    of untrusted images via **Docker load**. |'
  prefs: []
  type: TYPE_TB
- en: '| CVE-2017-14992 | 20 | Lack of content verification in Docker-CE (also known
    as Moby), and earlier allows a remote attacker to launch a Denial of Service attack
    via a crafted image layer payload; a.k.a Gzip bombing. |'
  prefs: []
  type: TYPE_TB
- en: '| CVE-2017-7297 | 264 | Rancher Labs rancher server 1.2.0+ is vulnerable to
    authenticated users disabling access control via an API call. This is fixed in
    versions rancher/server:v1.2.4, rancher/server:v1.3.5, rancher/server:v1.4.3,
    and rancher/server:v1.5.3. |'
  prefs: []
  type: TYPE_TB
- en: '| CVE-2016-9962 | 362 | RunC allowed additional container processes via runc
    exec to be ptraced by the pid 1 of the container. This allows the main processes
    of the container, if running as root, to gain access to file-descriptors of these
    new processes during initialization and can lead to container escapes or modification
    of runC state before the process is fully placed inside the container. |'
  prefs: []
  type: TYPE_TB
- en: '| CVE-2014-0047 | n/a | Docker before 1.5 allows local users to have an unspecified
    impact via vectors involving unsafe /tmp usage. |'
  prefs: []
  type: TYPE_TB
- en: Here is a tip to query a specific vulnerability.  Take 'CVE-2014-0047' as an
    example; just replace the CVE ID number at the end of the following URL.
  prefs: []
  type: TYPE_NORMAL
- en: '[http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0047](http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0047)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://nvd.nist.gov/vuln/detail/CVE-2014-0047](https://nvd.nist.gov/vuln/detail/CVE-2014-0047)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Infrastructure as Code (IaC)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Puppet, Chef, Ansible, and SaltStack are tools to apply IaC. The key advantage
    of using these tools is that any system configuration can be defined in a text
    file at the design stage and changes can be managed by versions. This will help
    both operation or development teams to build security configuration baselines
    such as file permissions, firewall rules, web configurations, or MySQL connections.
    Once the security configuration baseline is defined, the operation team can monitor
    any unauthorized changes or roll back the configuration to previous specific versions.
  prefs: []
  type: TYPE_NORMAL
- en: For example, we may have baseline security firewall rules for a web services
    environment to only allow ports `80` and `443`. All an operation team needs to
    do is to define the firewall rules by using one of the tools (Puppet, Chef, Ansible,
    SaltStack), and the framework will apply the rules, audit, and even correct changes
    if other ports are opened by mistake or by other service deployments.
  prefs: []
  type: TYPE_NORMAL
- en: The DevSec Hardening Framework project available at [https://github.com/dev-sec](https://github.com/dev-sec) provides
    Ansible, Chef, and Puppet secure configuration baseline template scripts.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram shows how IaC (for example, Puppet) works:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00013.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Cloud services hacks/abuse
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'A CSA survey on the top cloud security concerns has identified the following
    12 issues:'
  prefs: []
  type: TYPE_NORMAL
- en: Data breaches
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Weak identity, credentials, and access management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Insecure APIs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: System and application vulnerabilities
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Account hijacking
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Malicious insiders
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Advanced Persistent Threats** (**APTs**)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data loss
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Insufficient due diligence
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Abuse and nefarious use of cloud services
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Denial of service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shared technology issues
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In addition, service abuse has also become a headache for most e-commerce or
    shopping sites. Let's take one example to understand how hackers or misconduct
    users can benefit from it.
  prefs: []
  type: TYPE_NORMAL
- en: Case study – products on sale
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Assume that one online shopping store is going to have a 50% discount on one
    new model phone for only the first 100 customers; it will be available at 12:00
    on February 1.
  prefs: []
  type: TYPE_NORMAL
- en: What do hackers do?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For this kind of sale with 50 % profit is a great attraction for malicious users
    to do something. What underground users typically may do involves the massive
    registration of user accounts. There can be more than 10,000 users accounts registered
    in a short period of time just before the sales. At the moment of the sale, they
    will use automated scripts to trigger purchase behaviors and finish the orders
    within seconds. Once they have ordered or occupied all the phones, they may either
    sell them at higher prices or even not pay for the orders.
  prefs: []
  type: TYPE_NORMAL
- en: '*Is this illegal?* These behaviors follow the business rules for registration
    and purchases. Although the behavior may not be against the law, it may be considered
    misconduct or service abuse. Therefore, this kind of on-sale activity may require
    additional business rules and regulations. After all, it''s not purely hacking
    behavior. We will discuss this in later chapters. Here, we provide an overview
    of alleviating measures, which can be by means of business rules or technical
    approaches:'
  prefs: []
  type: TYPE_NORMAL
- en: The sale is only limited to those customers with a certain period of purchase
    history
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Apply CAPTCHA to distinguish humans from machines
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Two-factor authentication and registration via phone SMS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Detection and correlation of IP, phone number, email, account ID, physical address,
    and GeoIP location
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Unusual page browsing behavior such as skipping products and jumping to the
    purchase directly
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Unusual massive logins or registration from the same IP or devices
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Rapid release
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Rapid, frequent, and iterative releases are very common for cloud services.
    This normally drives the need for DevOps practices. This can be both an opportunity
    and a challenge to security. The challenge is that a short period of frequent
    releases may not include enough time to do a full cycle of security testing. There
    are three maturity levels of DevOps practices:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Maturity level** | **Achieved** | **Technology adoption** |'
  prefs: []
  type: TYPE_TB
- en: '| Continuous integration |'
  prefs: []
  type: TYPE_TB
- en: Source code repository and version control
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CI workflow with a daily build and unit testing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Jenkins
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Git
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Unit testing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Continuous delivery |'
  prefs: []
  type: TYPE_TB
- en: Automated deploy to the staging environment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Integration testing on the staging environment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deployment to production is done manually
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: IaC(Puppet)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Docker
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Continuous deployment |'
  prefs: []
  type: TYPE_TB
- en: Automated deployment and acceptance testing on production
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Production changes or configuration management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: IaC (puppet)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Docker
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Automated acceptance testing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuration monitoring
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: The adoption of DevOps practices means more collaboration between development,
    QA, IT, and operation teams, and more in-progress adoption of continuous integration
    or continuous delivery tools. This provides a good foundation to move to DevSecOps.
    Depending on the maturity level of the existing CI/CD, security practices or tools
    can be added on top of the existing CI/CD framework. It's the most effective and
    least learning curve to introduce security is don't change existing development,
    QA, IT, operation team the way they work. Building security tools around the existing
    CI/CD is still the best approach. We will explore this more in upcoming chapters.
  prefs: []
  type: TYPE_NORMAL
- en: The diagram below shows the security involved with development, QA, and operations
    through the whole CI/CD lifecycle.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00014.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we discussed external factors that drive the need for security
    such as security compliance, regulations, and the market. In addition, the adoption
    of new technologies also brings about new challenges such as Docker, virtualization,
    cloud services, and IaC.
  prefs: []
  type: TYPE_NORMAL
- en: For security compliance, we briefly discussed ISO 27001 and some security best
    practices/tools introduced by CSA  such as CCM, cloud security guide, CAIQ, and Cloud
    top threats. FIPS was also discussed for the correct usage of cryptography. In
    terms of infrastructure security, CIS and OpenSCAP were introduced. Finally, the EU
    GDPR law regulates and drives the security requirements of data and privacy protection.
  prefs: []
  type: TYPE_NORMAL
- en: Based on all these security challenges and compliance rules, we introduced one
    small case study for cloud services, which could be hacked and abused. Moreover,
    what security technologies may apply to DevOps practices. In upcoming chapters,
    we will further discuss how security goals, metrics, and security assurance programs
    apply to different kinds of organization and practices.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Does FIPS define the security requirements for cryptography?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Which of the following defines the security compliance is primarily focused
    on personal data privacy?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: ISO 27018
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: FIPS
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: GDPR
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: CIS
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: What can be considered cloud service abuse?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Account sharing
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Brute-force logins
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: API abuse
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: All of the above
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: What is the CIS security benchmark used for?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Anti-virus
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Defining secure configuration of the OS, platform, databases, and so on
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Firewall
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Integrity
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Which role is involved with security practices during the DevOps cycle?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: QA
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: RD
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Operations
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: All of the above
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: How does the technology Infrastructure as Code help security operation teams?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Virus detection
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Secure configuration
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Intrusion detection
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Encryption
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Which of the following is not a privacy principle?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Spoofing
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Purpose limitations
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Storage limitations
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Accuracy
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Read the following links for further readings:'
  prefs: []
  type: TYPE_NORMAL
- en: '**CSA (Cloud Security Alliance) Security White Papers:**[ ](https://cloudsecurityalliance.org/download/)[https://cloudsecurityalliance.org/download/](https://cloudsecurityalliance.org/download/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**NIST Security Considerations in the System Development Life Cycle**: [https://nvlpubs.nist.gov/nistpubs/legacy/sp/nistspecialpublication800-64r2.pdf](https://nvlpubs.nist.gov/nistpubs/legacy/sp/nistspecialpublication800-64r2.pdf)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**ISO 29100 ****information technology security techniques privacy framework**: [https://www.iso.org/standard/45123.html](https://www.iso.org/standard/45123.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**NIST National Checklist Program** [https://nvd.nist.gov/ncp/repository](https://nvd.nist.gov/ncp/repository)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**OWASP Guide to Cryptography** [https://www.owasp.org/index.php/Guide_to_Cryptography](https://www.owasp.org/index.php/Guide_to_Cryptography)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**NVD (National Vulnerability Database)** [https://nvd.nist.gov/](https://nvd.nist.gov/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**CVE details** [https://cvedetails.com/](https://cvedetails.com/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**CIS Cybersecurity Tools** [https://www.cisecurity.org/cybersecurity-tools/](https://www.cisecurity.org/cybersecurity-tools/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Security aspects of virtualization by ENISA**: [https://www.enisa.europa.eu/publications/security-aspects-of-virtualization/at_download/fullReport](https://www.enisa.europa.eu/publications/security-aspects-of-virtualization/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**CIS Benchmarks also provides a security guide for VMware, Docker, and Kubernetes**: [https://www.cisecurity.org/cis-benchmarks/](https://www.cisecurity.org/cis-benchmarks/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**OpenStack''s hardening of the virtualization layer provides a secure guide
    to building the virtualization layer**: [https://docs.openstack.org/security-guide/compute/hardening-the-virtualization-layers.html](https://docs.openstack.org/security-guide/compute/hardening-the-virtualization-layers.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Docker security** at [https://docs.docker.com/engine/security/security/](https://docs.docker.com/engine/security/security/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
