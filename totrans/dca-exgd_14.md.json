["```\n# export DOCKER_EE_URL=\"https://storebits.docker.com/ee/trial/sub-76c16081-298d-4950-8d02-7f5179771813\"\n# export DOCKER_EE_VERSION=19.03\n```", "```\n# curl -fsSL \"${DOCKER_EE_URL}/ubuntu/gpg\" | sudo apt-key add -\n# apt-key fingerprint 6D085F96\n# add-apt-repository \\ \n\"deb [arch=$(dpkg --print-architecture)] $DOCKER_EE_URL/ubuntu \\   $(lsb_release -cs) \\   stable-$DOCKER_EE_VERSION\"\n# apt-get update -qq\n```", "```\n# apt-get install -qq docker-ee docker-ee-cli containerd.io\n```", "```\n(first manager node) # docker container run --rm -it --name ucp \\\n -v /var/run/docker.sock:/var/run/docker.sock \\\n docker/ucp:3.2.5 install \\\n --host-address <MANAGEMENT_HOST_IP_ADDRESS> \\\n --san <LOAD_BALANCED_FQDN> \\\n --san <OTHER_FQDN_ALIAS_OR_IP> \\\n --admin-username <ADMIN_USER> \\\n --admin-password <ADMIN_USER_PASSWORD>\n\n INFO[0000] Your Docker daemon version 19.03.5, build 2ee0c57608 (4.4.0-116-generic) is compatible with UCP 3.2.5 (57c1024)\n  WARN[0000] None of the Subject Alternative Names we'll be using in the UCP certificates [\"<NODE_IP_ADDRESS>\" \"<NODE_NAME>\"] contain a domain component. Your generated certs may fail TLS validation unless you only use one of these short names or IP addresses to connect. You can use the --san flag to add more aliases\n INFO[0000] Checking required ports for connectivity\n INFO[0004] Checking required container images\n INFO[0007] Running install agent container ...\n INFO[0000] Loading install configuration\n INFO[0000] Running Installation Steps\n INFO[0000] Step 1 of 35: [Setup Internal Cluster CA]\n ...\n INFO[0014] Step 16 of 35: [Deploy UCP Controller Server]\n INFO[0016] Step 17 of 35: [Deploy Kubernetes API Server]\n ...\n INFO[0033] Step 24 of 35: [Install Kubernetes CNI Plugin]\n INFO[0063] Step 25 of 35: [Install KubeDNS]\n INFO[0064] Step 26 of 35: [Create UCP Controller Kubernetes Service Endpoints]\n INFO[0066] Step 27 of 35: [Install Metrics Plugin]\n INFO[0067] Step 28 of 35: [Install Kubernetes Compose Plugin]\n INFO[0073] Step 29 of 35: [Deploy Manager Node Agent Service]\n INFO[0073] Step 30 of 35: [Deploy Worker Node Agent Service]\n INFO[0073] Step 31 of 35: [Deploy Windows Worker Node Agent Service]\n INFO[0073] Step 32 of 35: [Deploy Cluster Agent Service]\n INFO[0073] Step 33 of 35: [Set License]\n INFO[0073] Step 34 of 35: [Set Registry CA Certificates]\n INFO[0073] Step 35 of 35: [Wait for All Nodes to be Ready]\n INFO[0078] All Installation Steps Completed \n```", "```\n$ AUTHTOKEN=$(curl -sk -d '{\"username\":\"<username>\",\"password\":\"<password>\"}' https://<UCP_FQDN>:<UCP_PORT>/auth/login | jq -r .auth_token)\n\n$ curl -k -H \"Authorization: Bearer $AUTHTOKEN\" https://<UCP_FQDN>:<UCP_PORT>/api/clientbundle -o ucp-bundle-admin.zip\n```", "```\n$ unzip ucp-bundle-admin.zip\n```", "```\n$ source env.sh\n Cluster \"ucp_<UCP_FQDN>:6443_admin\" set.\n User \"ucp_<UCP_FQDN>:6443_admin\" set.\n Context \"ucp_<UCP_FQDN>:6443_admin\" created.\n```", "```\n(as user dev1)$ source env.sh \nCluster \"ucp_192.168.56.11:6443_dev1\" set.\nUser \"ucp_192.168.56.11:6443_dev1\" set.\nContext \"ucp_192.168.56.11:6443_dev1\" modified.\n\n(as user dev1)$ docker service create --name nginx-dev --label com.docker.ucp.access.label=/development/projectB nginx\nk7hsizrvlc0cmy9va78bri06k\noverall progress: 1 out of 1 tasks \n1/1: running [==================================================>] \nverify: Service converged \n\n(as user dev1)$ $ docker service ls\nID NAME MODE REPLICAS IMAGE PORTS\nk7hsizrvlc0c nginx-dev replicated 1/1 nginx:latest \n```", "```\n(as user qa1)$ source env.sh \nCluster \"ucp_192.168.56.11:6443_qa1\" set.\nUser \"ucp_192.168.56.11:6443_qa1\" set.\nContext \"ucp_192.168.56.11:6443_qa1\" modified.\n\n(as user qa1)$ docker service ls\nID NAME MODE REPLICAS IMAGE PORTS\n```", "```\n(as user devops2)$ docker service ls\nID NAME MODE REPLICAS IMAGE PORTS\nk7hsizrvlc0c nginx-dev replicated 1/1 nginx:latest \n```", "```\n(as user devops2)$ docker service update --replicas 2 nginx-dev\nError response from daemon: access denied:\nno access to Service Create, Service Update, on collection 8185981a-5e15-4906-9fbf-465e9f712918\nno access to Service Create, Service Update, on collection 8185981a-5e15-4906-9fbf-465e9f712918\nno access to Service Update, on collection 8185981a-5e15-4906-9fbf-465e9f712918\n\n(as user dev2)$ docker service update --replicas 2 nginx-dev\nnginx-dev\noverall progress: 2 out of 2 tasks \n1/2: running [==================================================>] \n2/2: running [==================================================>] \nverify: Service converged \n```", "```\n(as user devops2)$ docker service create --quiet --name nginx-prod-secure \\\n--label com.docker.ucp.access.label=/production/projectB nginx\n\n4oeuld63v96ck26efype57320\n\n(as user devops2)$ docker service create --quiet --name nginx-prod-unsecure \\\n--label com.docker.ucp.access.label=/production/projectA nginx\n\ntxmuqfcr751n8cb445hqu73td\n\n(as user devops2)$ docker service ls\nID NAME MODE REPLICAS IMAGE PORTS\nk7hsizrvlc0c nginx-dev replicated 2/2 nginx:latest \n4oeuld63v96c nginx-prod-secure replicated 1/1 nginx:latest \ntxmuqfcr751n nginx-prod-unsecure replicated 1/1 nginx:latest\n```", "```\n(as user devops1)$ docker service ls\nID NAME MODE REPLICAS IMAGE PORTS\nk7hsizrvlc0c nginx-dev replicated 2/2 nginx:latest \ntxmuqfcr751n nginx-prod-unsecure replicated 1/1 nginx:latest\n```", "```\n$ kubectl get nodes\nNAME STATUS ROLES AGE VERSION\nnode1 Ready master 4d13h v1.14.8-docker-1\nnode2 Ready master 4d13h v1.14.8-docker-1\nnode3 Ready master 4d13h v1.14.8-docker-1\nnode4 Ready <none> 4d12h v1.14.8-docker-1\n```", "```\n$ kubectl get pods -n kube-system\n NAME READY STATUS RESTARTS AGE\n calico-kube-controllers-5c48d7d966-cncw2 1/1 Running 3 4d13h\n calico-node-8sxh2 2/2 Running 6 4d13h\n calico-node-k2fgh 2/2 Running 6 4d13h\n calico-node-nrk62 2/2 Running 6 4d13h\n calico-node-wgl9c 2/2 Running 6 4d13h\n compose-779494d49d-wk8m4 1/1 Running 3 4d13h\n compose-api-85c67b79bd-7sbhj 1/1 Running 4 4d13h\n kube-dns-6b8f7bdd9-g6tfq 3/3 Running 9 4d13h\n kube-dns-6b8f7bdd9-ls2z2 3/3 Running 9 4d13h\n ucp-metrics-6nfz4 3/3 Running 9 4d13h\n ucp-metrics-hnsfb 3/3 Running 9 4d13h\n ucp-metrics-xdl24 3/3 Running 9 4d13h\n```", "```\n$ kubectl get deployments -A \nNAMESPACE NAME READY UP-TO-DATE AVAILABLE AGE \nkube-system calico-kube-controllers 1/1 1 1 4d14h \nkube-system compose 1/1 1 1 4d14h \nkube-system compose-api 1/1 1 1 4d14h \nkube-system kube-dns 2/2 2 2 4d14h \n```", "```\n$ kubectl get PodSecurityPolicies\nNAME PRIV CAPS SELINUX RUNASUSER FSGROUP SUPGROUP READONLYROOTFS VOLUMES \nprivileged true * RunAsAny RunAsAny RunAsAny RunAsAny false *\nunprivileged false RunAsAny RunAsAny RunAsAny RunAsAny false *\n```", "```\n$ docker container run \\\n --rm \\\n --interactive \\\n --log-driver none \\\n --name ucp \\\n --volume /var/run/docker.sock:/var/run/docker.sock \\\n --volume <FULL_PATH_FOR_UCP_BACKUP_DIRECTORY>:/backup \\\n docker/ucp:3.2.4 backup \\\n --file <BACKUP_FILENAME>.tar \\\n --passphrase \"<PASSPHRASE>\" \\\n --include-logs=false\n```", "```\n$ docker container run \\\n --rm \\\n --interactive \\\n --name ucp \\\n --volume /var/run/docker.sock:/var/run/docker.sock \\\n docker/ucp:3.2.4 restore \\\n--passphrase \"<PASSPHRASE>\" < <FULL_PATH_FOR_UCP_BACKUP_DIRECTORY>/<BACKUP_FILENAME>.tar\n```", "```\ndocker container run --rm -it \\\n --name ucp \\\n -v /var/run/docker.sock:/var/run/docker.sock \\\n docker/ucp:3.2.X \\\n upgrade --interactive\n```", "```\n$ docker exec -it ucp-kv etcdctl \\\n --endpoint https://127.0.0.1:2379 \\\n --ca-file /etc/docker/ssl/ca.pem \\\n --cert-file /etc/docker/ssl/cert.pem \\\n --key-file /etc/docker/ssl/key.pem \\\n cluster-health\n```", "```\n$ docker container run --rm -v ucp-auth-store-certs:/tls \\\ndocker/ucp-auth:<RUNNING_VERSION> \\\n--db-addr=<HEALTHY_MANAGER_IP_ADDRESS>:12383 \\\n--debug reconfigure-db --num-replicas <NUMBER_OF_MANAGERS>\n```"]