["```\n$ cd ~/The-Ultimate-Docker-Container-Book\n```", "```\n$ mkdir ch18 & cd ch18\n```", "```\n$ brew install awscli\n```", "```\n$ choco install awscli\n```", "```\n    $ aws --version\n    ```", "```\n$ aws configure\n```", "```\n    $ aws s3 ls\n    ```", "```\n    $ kubectl version\n    ```", "```\n    $ export AWS_REGION=eu-central-1$ export AWS_STACK_NAME=animals-stack$ export AWS_CLUSTER_ROLE=animals-cluster-role\n    ```", "```\n    $ aws cloudformation create-stack --region $AWS_REGION \\    --stack-name $AWS_STACK_NAME \\    --template-url https://s3.us-west-2.amazonaws.com/amazon-eks/cloudformation/2020-10-29/amazon-eks-vpc-private-subnets.yaml\n    ```", "```\n    $ aws iam create-role \\    --role-name $AWS_CLUSTER_ROLE \\    --assume-role-policy-document file://\"eks-cluster-role-trust-policy.json\"\n    ```", "```\n    $ aws iam attach-role-policy \\    --policy-arn arn:aws:iam::aws:policy/AmazonEKSClusterPolicy \\    --role-name $AWS_CLUSTER_ROLE\n    ```", "```\n    {  \"Version\": \"2012-10-17\",  \"Statement\": [    {      \"Effect\": \"Allow\",      \"Condition\": {        \"ArnLike\": {          \"aws:SourceArn\": \"arn:aws:eks:<region-code>:<account-no>:fargateprofile/animals-cluster/*\"        }      },      \"Principal\": {        \"Service\": \"eks-fargate-pods.amazonaws.com\"      },      \"Action\": \"sts:AssumeRole\"    }  ]}\n    ```", "```\n$ aws iam create-role \\    --role-name AmazonEKSFargatePodExecutionRole \\\n    --assume-role-policy-document file://\"pod-execution-role-trust-policy.json\"\n```", "```\n$ aws iam attach-role-policy \\    --policy-arn arn:aws:iam::aws:policy/AmazonEKSFargatePodExecutionRolePolicy \\\n    --role-name AmazonEKSFargatePodExecutionRole\n```", "```\n    kubectl patch deployment coredns \\    -n kube-system \\    --type json \\    -p='[{\"op\": \"remove\", \"path\": \"/spec/template/metadata/annotations/eks.amazonaws.com~1compute-type\"}]'\n    ```", "```\n    $ aws eks update-kubeconfig --name animals-cluster\n    ```", "```\nAdded new context arn:aws:eks:eu-central-...:cluster/animals-cluster to /Users/<user-name>/.kube/config\n```", "```\n    $ kubectl config current-context\n    ```", "```\narn:aws:eks:eu-central-...:cluster/animals-cluster\n```", "```\n    $ kubectl get all\n    ```", "```\n    $ kubectl get nodes\n    ```", "```\n    $ cd ~/The-Ultimate-Docker-Container-Book/ch18$ mkdir aws-eks && cd aws-eks\n    ```", "```\n    $ kubectl apply -f deploy-nginx.yaml\n    ```", "```\n    $ kubectl get pods -w\n    ```", "```\n    $ kubectl delete -f deploy-nginx.yaml\n    ```", "```\n$ docker image pull mcr.microsoft.com/azure-cli:latest\n```", "```\nFROM mcr.microsoft.com/azure-cli:latestRUN apk update && apk add docker\n```", "```\nversion: \"2.4\"services:\n  az:\n    image: fundamentalsofdocker/azure-cli\n    build: .\n    command: tail -F anything\n    working_dir: /app\n    volumes:\n    - /var/run/docker.sock:/var/run/docker.sock\n    - .:/app\n```", "```\n$ docker compose up --build -d\n```", "```\n$ docker compose exec az /bin/bash\n```", "```\n376f1e715919:/app #\n```", "```\n# az --version\n```", "```\nazure-cli                         2.49.0core                              2.49.0\ntelemetry                          1.0.8\nDependencies:\nmsal                              1.20.0\nazure-mgmt-resource               22.0.0\nPython location '/usr/local/bin/python'\nExtensions directory '/root/.azure/cliextensions'\nPython (Linux) 3.10.11 (main, May 11 2023, 23:59:31) [GCC 12.2.1 20220924]\nLegal docs and information: aka.ms/AzureCliLegal\nYour CLI is up-to-date.\n```", "```\n# az login\n```", "```\nTo sign in, use a web browser to open the page https://microsoft.com/devicelogin and enter the code <code> to authenticate.\n```", "```\n[  {\n    \"cloudName\": \"AzureCloud\",\n    \"id\": \"<id>\",\n    \"isDefault\": true,\n    \"name\": \"<account name>\",\n    \"state\": \"Enabled\",\n    \"tenantId\": \"<tenant-it>\",\n    \"user\": {\n      \"name\": <your-email>,\n      \"type\": \"user\"\n    }\n  }\n]\n```", "```\n    # az account list-locations\n    ```", "```\n[  {\n    \"displayName\": \"East Asia\",\n    \"id\": \"/subscriptions/186760.../locations/eastasia\",\n    \"latitude\": \"22.267\",\n    \"longitude\": \"114.188\",\n    \"name\": \"eastasia\",\n    \"subscriptionId\": null\n  },\n...\n]\n```", "```\n    # az group create --name animals-rg --location westeurope{  \"id\": \"/subscriptions/186.../resourceGroups/animals-rg\",  \"location\": \"westeurope\",  \"managedBy\": null,  \"name\": \"animals-rg\",  \"properties\": {    \"provisioningState\": \"Succeeded\"  },  \"tags\": null,  \"type\": \"Microsoft.Resources/resourceGroups\"}\n    ```", "```\n    # az acr create --resource-group animals-rg \\    --name <acr-name> --sku Basic\n    ```", "```\nRegistration succeeded.{\n  \"adminUserEnabled\": false,\n  \"creationDate\": \"2023-06-04T10:31:14.848776+00:00\",\n...\n  \"id\": \"/subscriptions/186760ad...\",\n  \"location\": \"westeurope\",\n  \"loginServer\": \"gnsanimalsacr.azurecr.io\",\n  \"name\": \" gnsanimalsacr \",\n...\n  \"provisioningState\": \"Succeeded\",\n```", "```\n    # az acr login --name <acr-name>\n    ```", "```\nLogin Succeeded\n```", "```\n<acr-name>.azurecr.io\n```", "```\n# docker image tag fundamentalsofdocker/ch11-db:2.0 \\    <acr-name>.azurecr.io/db:2.0\n# docker image tag fundamentalsofdocker/ch11-web:2.0 \\\n    <acr-name>.azurecr.io/web:2.0\n```", "```\n# docker image push <acr-name>.azurecr.io/db:2.0# docker image push <acr-name>.azurecr.io/web:2.0\n```", "```\n# az acr repository list --name <acr-name> --output table\n```", "```\nResult--------\nDb\nweb\n```", "```\n# az aks create \\    --resource-group animals-rg \\\n    --name animals-cluster \\\n    --node-count 2 \\\n    --generate-ssh-keys \\\n    --attach-acr <acr-name>\n```", "```\n# az aks install-cli\n```", "```\n# az aks get-credentials --resource-group animals-rg \\    --name animals-cluster\n```", "```\nMerged \"animals-cluster\" as current context in /root/.kube/config\n```", "```\n# kubectl get nodes\n```", "```\nNAME STATUS ROLES AGE VERSIONaks-nodepool1-12528297-vmss000000 Ready agent 4m38s v1.25.68\naks-nodepool1-12528297-vmss000001 Ready agent 4m32s v1.25.68\n```", "```\n# kubectl apply -f animals.yaml\n```", "```\ndeployment.apps/web createdservice/web created\ndeployment.apps/db created\nservice/db created\n```", "```\n# kubectl get service web --watch\n```", "```\nNAME   TYPE           CLUSTER-IP    EXTERNAL-IP  PORT(S)          AGEweb    LoadBalancer   10.0.38.189   <pending>    3000:32127/TCP   5s\n```", "```\n# az group delete --name animal-rg --yes --no-wait\n```", "```\n    $ git clone https://github.com/PacktPublishing/The-Ultimate-Docker-Container-Book.git ~/src\n    ```", "```\n    $ cd ~/src/sample-solutions/ch18/gce\n    ```", "```\n    $ less animals.yaml\n    ```", "```\n    $ gcloud container clusters \\   get-credentials animals-cluster --zone <zone>\n    ```", "```\nFetching cluster endpoint and auth data.kubeconfig entry generated for animals-cluster.\n```", "```\n    $ kubectl get nodes\n    ```", "```\n    $ kubectl apply -f animals.yaml\n    ```", "```\n    $ kubectl get svc/web –watch\n    ```", "```\nNAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGEweb LoadBalancer 10.57.129.72 <pending> 3000: 32384/TCP 32s\nweb LoadBalancer 10\\. 57.129.72 35.195.160.243 3000: 32384/TCP 39s\n```", "```\n    $ gcloud container clusters delete animals-cluster\n    ```", "```\n    $ gcloud projects list\n    ```", "```\n    $ gcloud projects delete <project-id>\n    ```"]