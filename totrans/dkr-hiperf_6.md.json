["```\nvar http = require('http');\n\nvar server = http.createServer(function (request, response) {\n  response.writeHead(200, {\"Content-Type\": \"text/plain\"});\n  var version = \"1.0.0\";\n  var log = {};\n  log.header = 'mywebapp';\n  log.name = process.env.HOSTNAME;\n  log.version = version;\n  console.log(JSON.stringify(log));\n  response.end(version + \" Hello World  \"+ process.env.HOSTNAME);\n});\nserver.listen(8000);\n```", "```\nFROM node:4.0.0\n\nCOPY app.js /app/app.js\nEXPOSE 8000\nCMD [\"node\", \"/app/app.js\"]\n```", "```\ndockerhost$ docker build -t hubuser/app:1.0.0 .\ndockerhost$ docker push hubuser/app:1.0.0\n\n```", "```\ngreenhost00$ docker run -d -p 8000:8000 hubuser/app:1.0.0\ngreenhost01$ docker run -d -p 8000:8000 hubuser/app:1.0.0\ngreenhost02$ docker run -d -p 8000:8000 hubuser/app:1.0.0\n\n```", "```\nevents { }\n\nhttp {\n  upstream app_server {\n    server greenhost00:8000;\n    server greenhost01:8000;\n    server greenhost02:8000;\n  }\n  server {\n    location / {\n      proxy_pass http://app_server;\n    }\n  }\n}\n```", "```\ndockerhost$ docker run -p 80:80 -d --name=balancer \\\n --volume=/root/nginx.conf:/etc/nginx/nginx.conf:ro nginx:1.9.4\n\n```", "```\n$ while true; do curl http://dockerhost && sleep 0.1; done\n1.0.0 Hello World  56547aceb063\n1.0.0 Hello World  af272c6968f0\n1.0.0 Hello World  7791edeefb8c\n1.0.0 Hello World  56547aceb063\n1.0.0 Hello World  af272c6968f0\n1.0.0 Hello World  7791edeefb8c\n1.0.0 Hello World  56547aceb063\n1.0.0 Hello World  af272c6968f0\n1.0.0 Hello World  7791edeefb8c\n\n```", "```\ngreenhost01$ docker run -d -p 8000:8000 \\\n --log-driver syslog \\\n --log-opt syslogtag=webapp \\\n hubuser/app:1.0.0\n\n```", "```\nfilter {\n  if [program] == \"docker/webapp\" {\n    json {\n      source => \"message\"\n    }\n  }\n}\n```", "```\n    greenhost03$ docker run -d -p 8000:8000 hubuser/app:1.0.0greenhost04$ docker run -d -p 8000:8000 hubuser/app:1.0.0\n\n    ```", "```\n    events { }\n\n    http {\n      upstream app_server {\n        server greenhost00:8000;\n        server greenhost01:8000;\n        server greenhost02:8000;\n     server greenhost03:8000;\n     server greenhost04:8000;\n      }\n      server {\n        location / {\n          proxy_pass http://app_server;\n        }\n      }\n    }\n    ```", "```\n    dockerhost$ docker kill -s HUP balancer\n\n    ```", "```\n    var http = require('http');\n\n    var server = http.createServer(function (request, response) {\n      response.writeHead(200, {\"Content-Type\": \"text/plain\"});\n      var version = \"2.0.0\";\n      var log = {};\n      log.header = 'mywebapp';\n      log.name = process.env.HOSTNAME;\n      log.version = version;\n      console.log(JSON.stringify(log));\n      response.end(version + \" Hello World  \"+ process.env.HOSTNAME);\n    });\n\n    server.listen(8000);\n    ```", "```\n    dockerhost$ docker build -t hubuser/app:2.0.0 .\n    dockerhost$ docker push hubuser/app:2.0.0\n\n    ```", "```\n    bluehost00$ docker run -d -p 8000:8000 hubuser/app:2.0.0\n    bluehost01$ docker run -d -p 8000:8000 hubuser/app:2.0.0\n    bluehost02$ docker run -d -p 8000:8000 hubuser/app:2.0.0\n\n    ```", "```\nevents { }\n\nhttp {\n  upstream app_server {\n    server greenhost00:8000;\n    server greenhost01:8000;\n    server greenhost02:8000;\n    server greenhost03:8000;\n    server greenhost04:8000;\n server bluehost00:8000;\n server bluehost01:8000;\n server bluehost02:8000;\n  }\n  server {\n    location / {\n      proxy_pass http://app_server;\n    }\n  }\n}\n```", "```\ndockerhost$ docker kill -s HUP balancer\n\n```", "```\nhttp {\n  upstream app_server {\n    server bluehost00:8000;\n    server bluehost01:8000;\n    server bluehost02:8000;\n  }\n  server {\n    location / {\n      proxy_pass http://app_server;\n    }\n  }\n}\n```"]