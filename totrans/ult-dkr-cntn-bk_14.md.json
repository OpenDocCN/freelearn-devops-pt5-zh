["```\n$ docker swarm init\n```", "```\nSwarm initialized: current node (zqzxn4bur43lywp55fysnymd4) is now a manager.To add a worker to this swarm, run the following command:\n    docker swarm join --token SWMTKN-1-57ayqfyc8cdg09hi9tzuztzcg2gk2rd6abu71ennaide3r20q5-21j3wpm8scytn9u5n1jrvlbzf 192.168.0.13:2377\nTo add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.\n```", "```\n$ docker swarm join --token <join-token> <IP address>:2377\n```", "```\n$ docker node inspect node1[\n    {\n        \"ID\": \"zqzxn4bur43lywp55fysnymd4\",\n        \"Version\": {\n            \"Index\": 9\n        },\n        \"CreatedAt\": \"2023-04-21T06:48:06.434268546Z\",\n        \"UpdatedAt\": \"2023-04-21T06:48:06.955837213Z\",\n        \"Spec\": {\n            \"Labels\": {},\n            \"Role\": \"manager\",\n            \"Availability\": \"active\"\n        },\n        \"Description\": {\n            \"Hostname\": \"node1\",\n            \"Platform\": {\n                \"Architecture\": \"x86_64\",\n                \"OS\": \"linux\"\n            },\n            \"Resources\": {\n                \"NanoCPUs\": 8000000000,\n                \"MemoryBytes\": 33737699328\n            },\n            \"Engine\": {\n                \"EngineVersion\": \"20.10.17\",\n                \"Plugins\": [\n                    {\n                        \"Type\": \"Log\",\n                        \"Name\": \"awslogs\"\n                    },\n...\n    }\n]\n```", "```\n$ docker swarm leave --force\n```", "```\n$ docker swarm init --advertise-addr=eth0\n```", "```\n$ docker swarm join --token SWMTKN-1-4o1ybxxg7cv... 192.168.0.13:2377\n```", "```\n$ docker node ls\n```", "```\nID           HOSTNAME STATUS  AVAIL. MANAGER ST. ENGINE VER.Nb16ey2p... *  node1   Ready  Active   Leader     20.10.17\nKdd0yv15...    node2   Ready  Active              20.10.17\nt5iw0clx...    node3   Ready  Active              20.10.17\nNr6ngsgs...    node4   Ready  Active              20.10.17\nthbiwgft...    node5   Ready  Active              20.10.17\n```", "```\n$ docker node promote node2 node3\n```", "```\nNode node2 promoted to a manager in the swarm.Node node3 promoted to a manager in the swarm.\n```", "```\n    $ sudo apt-get update && sudo apt -y install docker.io\n    ```", "```\n    $ sudo usermod -aG docker $USER\n    ```", "```\n    $ exit\n    ```", "```\n    $ docker version\n    ```", "```\n    $ docker swarm init\n    ```", "```\n    This node joined a swarm as a worker.\n    ```", "```\n    $ docker node ls\n    ```", "```\n$ ssh -i \"aws-docker-demo.pem\" <public-dns-name-of-manager1>\n```", "```\n    version: \"3.7\"services:  whoami:    image: training/whoami:latest    networks:    - test-net    ports:    - 81:8000    deploy:      replicas: 6      update_config:        parallelism: 2        delay: 10s      labels:         app: sample-app         environment: prod-southnetworks:  test-net:    driver: overlay\n    ```", "```\n    $ docker stack deploy -c stack.yaml sample-stack\n    ```", "```\n    $ docker stack ls\n    ```", "```\nNAME                       SERVICESsample-stack            1\n```", "```\n    $ docker service ls\n    ```", "```\n$ docker service inspect sample-stack_whoami\n```", "```\n$ for i in {1..7}; do curl localhost:81; done\n```", "```\nI'm ae8a50b5b058I'm 1b6b507d900c\nI'm 83864fb80809\nI'm 161176f937cf\nI'm adf340def231\nI'm e0911d17425c\nI'm ae8a50b5b058\n```", "```\n$ docker service logs sample-stack_whoami\n```", "```\n$ docker service logs w90b8\n```", "```\nsample-stack_whoami.6.w90b8xmkdw53@ip-172-31-32-21    | Listening on :8000\n```", "```\n$ docker container rm -f sample-stack_whoami.3\\. nqxqs...\n```", "```\n$ docker stack rm sample-stack\n```", "```\nRemoving service sample-stack_whoamiRemoving network sample-stack_test-net\n```", "```\n    version: \"3.7\"services:  web:    image: fundamentalsofdocker/ch11-web:2.0    networks:    - pets-net    ports:    - 3000:3000    deploy:      replicas: 3  db:    image: fundamentalsofdocker/ch11-db:2.0    networks:    - pets-net    volumes:    - pets-data:/var/lib/postgresql/datavolumes:  pets-data:networks:  pets-net:    driver: overlay\n    ```", "```\n    $ docker stack deploy -c pets-stack.yml pets\n    ```", "```\nCreating network pets_pets-netCreating service pets_db\nCreating service pets_web\n```", "```\n$ for NODE in `seq 1 5`; do    docker-machine rm -f aws-node-${NODE}\ndone\n```"]