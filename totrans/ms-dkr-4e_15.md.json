["```\nversion: '3'\nservices:\n```", "```\n  web:\n    image: nginx:alpine\n    ports:\n      - '8080:80'\n    volumes:\n      - './wordpress/web:/var/www/html'\n      - './wordpress/nginx.conf:/etc/nginx/conf.d/default.conf'\n    depends_on:\n      - wordpress\n```", "```\n  wordpress:\n    image: wordpress:php7.2-fpm-alpine\n    volumes:\n      - './wordpress/web:/var/www/html'\n    depends_on:\n      - mysql\n```", "```\n  mysql:\n      image: mysql:5\n      environment:\n        MYSQL_ROOT_PASSWORD: 'wordpress'\n        MYSQL_USER: 'wordpress'\n        MYSQL_PASSWORD: 'wordpress'\n        MYSQL_DATABASE: 'wordpress'\n      volumes:\n        - './wordpress/mysql:/var/lib/mysql'\n```", "```\n  wp:\n    image: wordpress:cli-2-php7.2\n    volumes:\n      - './wordpress/web:/var/www/html'\n      - './wordpress/export:/export'\n```", "```\n$ docker container run --rm -it --name dcv -v $(pwd):/input \npmsipilot/docker-compose-viz render -m image docker-compose.yml\n```", "```\nserver {\n  server_name _;\n  listen 80 default_server;\n  root /var/www/html;\n  index index.php index.html;\n  access_log /dev/stdout;\n  error_log /dev/stdout info;\n  location / { \n    try_files $uri $uri/ /index.php?$args; \n  }\n  location ~ .php$ {\n    include fastcgi_params;\n    fastcgi_pass wordpress:9000;\n    fastcgi_index index.php;\n    fastcgi_param SCRIPT_FILENAME    $document_root$fastcgi_script_name;\n    fastcgi_buffers 16 16k;\n    fastcgi_buffer_size 32k; \n  }\n}\n```", "```\n$ docker-compose pull\n```", "```\n$ docker-compose up -d\n$ docker-compose ps\n```", "```\n$ docker-compose run wp core config \\\n    --dbname=wordpress \\\n    --dbuser=wordpress \\\n    --dbpass=wordpress \\\n    --dbhost=mysql \\\n    --dbprefix=wp_\n```", "```\n$ docker-compose run wp core install \\\n    --title='Blog Title' \\\n    --url='http://localhost:8080' \\\n    --admin_user='admin' \\\n    --admin_password='password' \\\n    --admin_email='email@domain.com'\n```", "```\n$ docker-compose run wp plugin install jetpack –activate\n```", "```\n$ docker-compose run wp theme install sydney --activate\n```", "```\n$ docker-compose down\n```", "```\n$ docker-compose up -d\n```", "```\necho 'Testing editing in the IDE';\n```", "```\n$ docker-compose run wp db export --add-drop-table /export/\nwordpress.sql\n```", "```\n$ docker-compose run wp db export --add-drop-table /var/www/\nhtml/wordpress.sql\n```", "```\n$ docker-compose run wp db import /export/wordpress.sql\n```", "```\ntrigger:\n- master\n```", "```\npool:\n  vmImage: 'ubuntu-latest'\n```", "```\nsteps:\n- task: 'Docker@2'\n  displayName: 'Login to Docker Hub'\n  inputs:\n    command: 'login'\n    containerRegistry: '$(targetRegistry)'\n```", "```\n- task: Docker@2\n  displayName: 'Build & Push container'\n  inputs:\n    command: 'buildAndPush'\n    containerRegistry: '$(targetRegistry)'\n    repository: '$(targetRepo)'\n    tags: |\n      latest\n```", "```\n- task: 'Docker@2'\n  displayName: 'Logout of Docker Hub'\n  inputs:\n    command: 'logout'\n    containerRegistry: '$(targetRegistry)'\n```", "```\n$ docker container run --rm -it --name dcv -v $(pwd):/input \npmsipilot/docker-compose-viz render -m image docker-compose.yml\n```", "```\n  cadvisor:\n    image: google/cadvisor:latest\n    container_name: cadvisor\n    volumes:\n      - /:/rootfs:ro\n      - /var/run:/var/run:rw\n      - /sys:/sys:ro\n      - /var/lib/docker/:/var/lib/docker:ro\n    restart: unless-stopped\n    expose:\n      - 8080\n    networks:\n      - back\n```", "```\n  prometheus:\n    image: prom/prometheus\n    container_name: prometheus\n    volumes:\n      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.\nyml\n      - prometheus_data:/prometheus\n    restart: unless-stopped\n    expose:\n      - 9090\n    depends_on:\n      - cadvisor\n    networks:\n      - back\n```", "```\nglobal:\n  scrape_interval:     15s \n  evaluation_interval: 15s\n  external_labels:\n      monitor: 'monitoring'\nrule_files:\nscrape_configs:\n  - job_name: 'prometheus'\n    static_configs:\n      - targets: ['localhost:9090']\n  - job_name: 'cadvisor'\n    static_configs:\n      - targets: ['cadvisor:8080']\n```", "```\n  grafana:\n    image: grafana/grafana\n    container_name: grafana\n    volumes:\n      - grafana_data:/var/lib/grafana\n      - ./grafana/provisioning/:/etc/grafana/provisioning/\n    env_file:\n      - ./grafana/grafana.config\n    restart: unless-stopped\n    ports:\n      - 3000:3000\n    depends_on:\n      - prometheus\n    networks:\n      - front\n      - back\n```", "```\nGF_SECURITY_ADMIN_USER=admin\nGF_SECURITY_ADMIN_PASSWORD=password\nGF_USERS_ALLOW_SIGN_UP=false\n```", "```\n$ docker-compose pull\n$ docker-compose up -d\n```", "```\n$ docker-compose logs -f grafana\n```"]