- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In today’s fast-paced world, developers are under constant pressure to build,
    modify, test, and deploy highly distributed applications quickly and efficiently.
    Operations engineers need a consistent deployment strategy that can handle their
    growing portfolio of applications, while stakeholders want to keep costs low.
    Docker containers, combined with a container orchestrator such as Kubernetes,
    provide a powerful solution to these challenges.
  prefs: []
  type: TYPE_NORMAL
- en: Docker containers streamline the process of building, shipping, and running
    highly distributed applications. They supercharge CI/CD pipelines and allow companies
    to standardize on a single deployment platform, such as Kubernetes. Containerized
    applications are more secure and can be run on any platform capable of running
    containers, whether on-premises or in the cloud. With Docker containers, developers,
    operations engineers, and stakeholders can achieve their goals and stay ahead
    of the curve.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is designed for anyone who wants to learn about Docker and its capabilities.
    Whether you’re a system administrator, operations engineer, DevOps engineer, developer,
    or business stakeholder, this book will guide you through the process of getting
    started with Docker from scratch.
  prefs: []
  type: TYPE_NORMAL
- en: With clear explanations and practical examples, you’ll explore all the capabilities
    that this technology offers, ultimately providing you with the ability to deploy
    and run highly distributed applications in the cloud. If you’re looking to take
    your skills to the next level and harness the power of Docker, then this book
    is for you.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[*Chapter 1*](B19199_01.xhtml#_idTextAnchor012), *What Are Containers and Why
    Should I Use Them?* focuses on the software supply chain and the friction within
    it. It then presents containers as a means to reduce this friction and add enterprise-grade
    security on top of it. In this chapter, we also look into how containers and the
    ecosystem around them are assembled. We specifically point out the distinction
    between the upstream OSS components (Moby) that form the building blocks of the
    downstream products of Docker and other vendors.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 2*](B19199_02.xhtml#_idTextAnchor027), *Setting Up a Working Environment*,
    discusses in detail how to set up an ideal environment for developers, DevOps,
    and operators that can be used when working with Docker containers.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 3*](B19199_03.xhtml#_idTextAnchor057), *Mastering Containers*, teaches
    you how to start, stop, and remove containers. This chapter also teaches you how
    to inspect containers to retrieve additional metadata from them. Furthermore,
    it explains how to run additional processes and how to attach to the main process
    in an already-running container. It also shows how to retrieve logging information
    from a container that is produced by the processes running inside it. Finally,
    the chapter introduces the inner workings of a container including such things
    as Linux namespaces and groups.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 4*](B19199_04.xhtml#_idTextAnchor083), *Creating and Managing Container
    Images*, presents different ways to create container images, which serve as templates
    for containers. It introduces the inner structure of an image and how it is built.
    This chapter also shows how to “lift and shift” an existing legacy application
    such that it runs in containers.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 5*](B19199_05.xhtml#_idTextAnchor109), *Data Volumes and Configuration**,*
    discusses data volumes, which can be used by stateful components running in containers.
    This chapter also shows how you can define individual environment variables for
    the application running inside the container, as well as how to use files containing
    whole sets of configuration settings.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 6*](B19199_06.xhtml#_idTextAnchor130), *Debugging Code Running in
    Containers*, introduces techniques commonly used to allow you to evolve, modify,
    debug, and test your code while running in a container. With these techniques
    at hand, you will enjoy a frictionless development process for applications running
    in a container, similar to what you experience when developing applications that
    run natively.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 7*](B19199_07.xhtml#_idTextAnchor150), *Testing* *Applications* *Running
    in Containers*, discusses software testing for applications and application services
    running in containers. You will be introduced to the various test types that exist
    and understand how they can be optimally implemented and executed when using containers.
    The chapter explains how all tests can be run locally on a developer’s machine
    or as individual quality gates of a fully automated CI/CD pipeline.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 8*](B19199_08.xhtml#_idTextAnchor174), *Increasing Productivity with
    Docker Tips and Tricks*, shows miscellaneous tips, tricks, and concepts that are
    useful when containerizing complex distributed applications, or when using Docker
    to automate sophisticated tasks. You will also learn how to leverage containers
    to run your whole development environment in them.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 9*](B19199_09.xhtml#_idTextAnchor194), *Learning about Distributed
    Application Architecture*, introduces the concept of a distributed application
    architecture and discusses the various patterns and best practices that are required
    to run a distributed application successfully. Finally, it discusses the additional
    requirements that need to be fulfilled to run such an application in production.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 10*](B19199_10.xhtml#_idTextAnchor218), *Using Singl**e-H**ost Networking*,
    presents the Docker container networking model and its single host implementation
    in the form of the bridge network. The chapter introduces the concept of **Software-Defined
    Networks** (**SDNs**) and how they are used to secure containerized applications.
    It also covers how container ports can be opened to the public and thus make containerized
    components accessible from the outside world. Finally, it introduces Traefik,
    a reverse proxy, to enable sophisticated HTTP application-level routing between
    containers.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 11*](B19199_11.xhtml#_idTextAnchor237), *Managing Containers with
    Docker Compose*, introduces the concept of an application consisting of multiple
    services, each running in a container, and explains how Docker Compose allows
    us to easily build, run, and scale such an application using a declarative approach.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 12*](B19199_12.xhtml#_idTextAnchor251), *Shipping Logs and Monitoring
    Containers*, shows how the container logs can be collected and shipped to a central
    location where the aggregated log can then be parsed for useful information. You
    will also learn how to instrument an application so that it exposes metrics and
    how those metrics can be scraped and shipped again to a central location. Finally,
    the chapter teaches you how to convert those collected metrics into graphical
    dashboards that can be used to monitor a containerized application.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 13*](B19199_13.xhtml#_idTextAnchor276), *Introducing Container Orchestration*,
    elaborates on the concept of container orchestrators. It explains why orchestrators
    are needed and how they conceptually work. The chapter will also provide an overview
    of the most popular orchestrators and name a few of their respective pros and
    cons.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 14*](B19199_14.xhtml#_idTextAnchor303), *Introducing* *Docker Swarm*,
    introduces Docker’s native orchestrator called SwarmKit. It elaborates on all
    the concepts and objects SwarmKit uses to deploy and run a distributed, resilient,
    robust, and highly available application in a cluster on-premises or in the cloud.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 15*](B19199_15.xhtml#_idTextAnchor328), *Deploying and Running a
    Distributed Application on Docker Swarm*, introduces routing mesh and demonstrates
    how to deploy a first application consisting of multiple services onto the Swarm.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 16*](B19199_16.xhtml#_idTextAnchor349), *Introducing Kubernetes*,
    presents the currently most popular container orchestrator, Kubernetes. It introduces
    the core Kubernetes objects that are used to define and run a distributed, resilient,
    robust, and highly available application in a cluster. Finally, it introduces
    minikube as a way to locally deploy a Kubernetes application and also covers the
    integration of Kubernetes with Docker Desktop.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 17*](B19199_17.xhtml#_idTextAnchor374), *Deploying, Updating, and
    Securing an Application with Kubernetes*,teaches you how to deploy, update, and
    scale applications into a Kubernetes cluster. It also shows you how to instrument
    your application services with liveness and readiness probes, to support Kubernetes
    in its health and availability checking. Furthermore, the chapter explains how
    zero downtime deployments are achieved to enable disruption-free updates and rollbacks
    of mission-critical applications. Finally, it introduces Kubernetes Secrets as
    a means to configure services and protect sensitive data.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 18*](B19199_18.xhtml#_idTextAnchor396), *Running a Containerized
    Application in the Cloud*, gives an overview of some of the most popular ways
    of running containerized applications in the cloud. Fully managed offerings on
    Microsoft Azure, Amazon AWS, and Google Cloud Engine are discussed. We will create
    a hosted Kubernetes cluster on each cloud and deploy a simple distributed application
    to each of those clusters. We will also compare the ease of setup and use of the
    three offerings.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 19*](B19199_19.xhtml#_idTextAnchor412), *Monitoring and Troubleshooting
    an Application Running in Production*, covers different techniques used to instrument
    and monitor an individual service or a whole distributed application running on
    a Kubernetes cluster. You will be introduced to the concept of alerting based
    on key metrics. The chapter also shows how you can troubleshoot an application
    service that is running in production without altering the cluster or the cluster
    nodes on which the service is running.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '| **Software/hardware covered in** **the book** | **Operating** **system requirements**
    |'
  prefs: []
  type: TYPE_TB
- en: '| Docker v23.x | Windows, macOS, or Linux |'
  prefs: []
  type: TYPE_TB
- en: '| Docker Desktop |  |'
  prefs: []
  type: TYPE_TB
- en: '| Kubernetes |  |'
  prefs: []
  type: TYPE_TB
- en: '| Docker SwarmKit |  |'
  prefs: []
  type: TYPE_TB
- en: '**If you are using the digital version of this book, we advise you to type
    the code yourself or access the code from the book’s GitHub repository (a link
    is available in the next section). Doing so will help you avoid any potential
    errors related to the copying and pasting** **of code.**'
  prefs: []
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from GitHub at https://github.com/PacktPublishing/The-Ultimate-Docker-Container-Book/.
    If there’s an update to the code, it will be updated in the GitHub repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at https://github.com/PacktPublishing/. Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`Code in text`: Indicates code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles. Here is an example: “Once Chocolatey has been installed, test it with
    the `choco` `--``version` command.”'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For instance, words in menus or dialog boxes appear in **bold**. Here is an example:
    “From the menu, select **Dashboard**.”'
  prefs: []
  type: TYPE_NORMAL
- en: Tips or important notes
  prefs: []
  type: TYPE_NORMAL
- en: Appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '**General feedback**: If you have questions about any aspect of this book,
    email us at customercare@packtpub.com and mention the book title in the subject
    of your message.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit www.packtpub.com/support/errata
    and fill in the form.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at copyright@packt.com with a link
    to the material.'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit authors.packtpub.com.'
  prefs: []
  type: TYPE_NORMAL
- en: Share Your Thoughts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Once you’ve read *The Ultimate Docker Container Book*, we’d love to hear your
    thoughts! Please click here to go straight to the Amazon review page for this
    book and share your feedback.
  prefs: []
  type: TYPE_NORMAL
- en: Your review is important to us and the tech community and will help us make
    sure we’re delivering excellent quality content.
  prefs: []
  type: TYPE_NORMAL
- en: Download a free PDF copy of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Thanks for purchasing this book!
  prefs: []
  type: TYPE_NORMAL
- en: Do you like to read on the go but are unable to carry your print books everywhere?
    Is your eBook purchase not compatible with the device of your choice?
  prefs: []
  type: TYPE_NORMAL
- en: Don’t worry, now with every Packt book you get a DRM-free PDF version of that
    book at no cost.
  prefs: []
  type: TYPE_NORMAL
- en: Read anywhere, any place, on any device. Search, copy, and paste code from your
    favorite technical books directly into your application.
  prefs: []
  type: TYPE_NORMAL
- en: The perks don’t stop there, you can get exclusive access to discounts, newsletters,
    and great free content in your inbox daily
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow these simple steps to get the benefits:'
  prefs: []
  type: TYPE_NORMAL
- en: Scan the QR code or visit the link below
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B19199_QR_Free_PDF.jpg)'
  prefs: []
  type: TYPE_IMG
- en: https://packt.link/free-ebook/9781804613986
  prefs: []
  type: TYPE_NORMAL
- en: Submit your proof of purchase
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: That’s it! We’ll send your free PDF and other benefits to your email directly
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Part 1:Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The objective of *Part 1* is to introduce you to the concept of containers and
    explain why they are so extremely useful in the software industry. You will also
    be shown how to prepare your working environment for the use of Docker.
  prefs: []
  type: TYPE_NORMAL
- en: 'This section has the following chapters:'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 1*](B19199_01.xhtml#_idTextAnchor012), *What Are Containers and Why
    Should I Use Them?*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 2*](B19199_02.xhtml#_idTextAnchor027), *Setting Up a Working Environment*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
