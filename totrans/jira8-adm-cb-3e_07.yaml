- en: Integrations with Jira
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Organizations are adopting more and more IT applications, both on-premises and
    through cloud-based applications, in order to support their various business functions.
    As today's world is becoming more and more interconnected, these applications
    need to be similarly interlinked. Business functions often need to work together
    in order to achieve the desired outcome more efficiently. For this reason, the
    ability to integrate Jira with other applications has become ever more important.
  prefs: []
  type: TYPE_NORMAL
- en: You can integrate applications with Jira in many ways, both when reaching out
    to obtain data from other systems and when allowing other systems to access Jira's
    own data. Jira comes with support to integrate with other Atlassian applications
    and a number of other popular cloud applications, such as GitHub. Other than the
    integration supported out of the box, there are also many third-party apps that
    provide integration with applications and platforms such as Google Drive, Slack,
    and more. Lastly, there is **webhook**, a relatively new approach that allows
    any other application to register with Jira for callbacks when certain events
    occur.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following recipes:'
  prefs: []
  type: TYPE_NORMAL
- en: Integrating Jira with Confluence
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Integrating Jira with other Jira instances
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Integrating Jira with Bamboo for build management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Integrating Jira with Bitbucket Server
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Integrating Jira with Bitbucket Cloud and GitHub
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Integrating Jira with Slack
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Integrating Jira with Google Drive
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using Jira webhooks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using the Jira REST API
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Integrating Jira with Confluence
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You will often use Jira to track the progress of your engineering projects,
    using another application to keep the documentation for these projects. In this
    recipe, we will look at how to integrate Jira with Confluence, which is another
    popular application from Atlassian that is commonly used for documentation.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Since we will be using Confluence in this recipe, you will need to have an instance
    of Confluence running on your system. If you do not have one, you can download
    a free Confluence trial from [https://www.atlassian.com/software/confluence](https://www.atlassian.com/software/confluence).
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The first step is to establish the link between Jira and Confluence:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to Administration > Applications > Application links in Jira.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Enter your Confluence URL into the Application textbox and click the **Create
    new link** button. Jira should automatically detect the target application as
    Confluence. If, for some reason, it does not, make sure you select Confluence as
    the Application type when prompted, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/2b8da0fc-ef2d-45ef-a444-9356eb6844ab.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We also need to enable the Remote access API (disabled by default) in Confluence:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to Confluence as a Confluence administrator.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Navigate to Administration > Further Configuration.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Edit, scroll down, and check the Remote API (XML-RPC & SOAP) option.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on Save to apply the change:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/882b5df3-8ecd-4750-af84-83c2149781dd.png)'
  prefs: []
  type: TYPE_IMG
- en: The remote access API is now enabled.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Once we have linked Jira with Confluence, there will be a new option called Confluence
    Page, which appears when you select the Link option in the More issue menu, as
    shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/861d8387-0554-46c2-8e13-cb0a12ed062c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'If you know the exact URL of the Confluence page, you can enter it in the Page
    URL field, or click on the search for a page link and search for the page you
    want to link to:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/04dbc3de-6d49-472c-96d2-7cd886e42d48.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Once you have found the page you want, simply click on it, and then click on
    the Link button. You will see a page similar to the one shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/2fdd06bd-843c-4a56-94af-808f77e7f3d7.png)'
  prefs: []
  type: TYPE_IMG
- en: As you can see, the linked pages will be shown under the Issue Links section
    in the Wiki Page category.
  prefs: []
  type: TYPE_NORMAL
- en: Integrating Jira with other Jira instances
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you have multiple Jira instances in your organization, it is sometimes useful
    to integrate them with each other, especially when teams from different projects
    need to collaborate and work together. In this recipe, we will integrate two Jira
    instances with each other so that we can link issues across systems.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Go through the following steps to link two Jira instances together:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to Administration > Applications > Application links.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Enter the other Jira instance''s URL and create the application link. Jira
    should automatically detect the target application as Jira, as shown in the following
    screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/7f7e20b2-be26-4f21-ae19-e95f24db00a7.png)'
  prefs: []
  type: TYPE_IMG
- en: If, for some reason, Jira does not detect this, make sure you select Jira as
    the Application type when prompted
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Once you have integrated two Jira instances with each other using an application
    link, you will be able to search for and link issues from the remote Jira instance
    to issues in the local Jira instance. Look at the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/e87e8dd4-90eb-40fc-bba9-54b13f569019.png)'
  prefs: []
  type: TYPE_IMG
- en: As you can see, when you use the link feature, Jira will prompt you to select
    the Jira instance that you want to search for issues to link with.
  prefs: []
  type: TYPE_NORMAL
- en: Integrating Jira with Bamboo for build management
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Bamboo is the continuous integration and build server from Atlassian. If your
    development team is using Jira, then it makes perfect sense to also use Bamboo
    and integrate the two together.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Since we will be using Bamboo in this recipe, you will need to have a Bamboo
    instance running. If you do not have one, you can download a free Bamboo trial
    from [https://www.atlassian.com/software/bamboo](https://www.atlassian.com/software/bamboo).
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Since we are connecting to another Atlassian application here, we should take
    advantage of the application links:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to Administration > Applications > Application links.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Enter your Bamboo URL and create the application link. Jira should automatically
    detect the target application as Bamboo, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/ce83b312-b509-4ace-a7d7-1bd2f604bddd.png)'
  prefs: []
  type: TYPE_IMG
- en: If, for some reason, Jira does not detect this, make sure you select Bamboo
    as the Application type when prompted.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Once you have integrated Jira and Bamboo, you will be able to run and release
    build plans directly from Jira. All you have to do is select the version to release
    and select the new Build and Release option, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a63c406d-48ab-481f-b711-e4e4ac781836.png)'
  prefs: []
  type: TYPE_IMG
- en: 'From the release dialog shown in the following screenshot, you can select which
    build plan to use and run the build by clicking on the Release button. If the
    build is successful, Jira will automatically mark the version as released once
    the build is completed:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4580b371-2ed9-4558-9efd-703eef3c9e4d.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Another feature that you get from integration is that you will be able to see
    a list of builds that are related to a given Jira issue from the Development issue
    panel:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/3cd23ba7-bc0f-438a-991f-d5f3078921ed.png)'
  prefs: []
  type: TYPE_IMG
- en: As you can see, all the build are now listed.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Apart from Bamboo, Jira also supports other build server systems, such as Jenkins
    and Hudson, via third-party apps. You can get the app for Jenkins and Hudson from
    [https://marketplace.atlassian.com/plugins/com.marvelution.jira.plugins.jenkins](https://marketplace.atlassian.com/plugins/com.marvelution.jira.plugins.jenkins).
  prefs: []
  type: TYPE_NORMAL
- en: After you have installed the app, there will be two new application types to
    choose from while creating new application links—namely, Jenkins and Hudson.
  prefs: []
  type: TYPE_NORMAL
- en: Integrating Jira with Bitbucket Server
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Bitbucket is the on-premises enterprise Git source code management tool. It
    is another application from Atlassian that provides you with all the great **distributed
    version control system** (**DVCS**) features and benefits. If you are using Jira
    for software development projects, then you should consider Bitbucket for your
    version control needs.
  prefs: []
  type: TYPE_NORMAL
- en: In this recipe, we will integrate Jira with Bitbucket Server so that developers
    can see what changes are made to a given issue.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Since we will be using Bitbucket Server in this recipe, you need to have a Bitbucket
    Server instance running on your system. If you do not have one, you can download
    a free Bitbucket Server trial from [https://www.atlassian.com/software/bitbucket](https://www.atlassian.com/software/bitbucket).
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Go through the following steps to integrate Jira with Bitbucket Server:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to Administration > Applications > Application links.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Enter your Bitbucket Server URL and create the application link. Jira should
    automatically detect the target application as Bitbucket, as shown in the following
    screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/8580b8f4-7559-408e-a886-3bc580b7f25d.png)'
  prefs: []
  type: TYPE_IMG
- en: If, for some reason, Jira does not detect it, make sure you select Bitbucket
    Server as the Application type when prompted
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Jira and Bitbucket Server integration work by looking through your *commit
    logs* for comments that start with or contain any issue keys. See the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/59b5c9da-63b9-44e4-99df-b21a05c83d15.png)'
  prefs: []
  type: TYPE_IMG
- en: If the commit comment contains an issue key, the commits will be displayed in
    the Development issue panel of the issue.
  prefs: []
  type: TYPE_NORMAL
- en: There is more...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you are using Bitbucket Cloud instead of running it on-premises, refer to
    the next recipe for information on how to integrate with it.
  prefs: []
  type: TYPE_NORMAL
- en: Integrating Jira with Bitbucket Cloud and GitHub
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Bitbucket Cloud is Atlassian's cloud-based code repository service. It provides
    public and private code repositories, with support for both Git and Mercurial.
    It is a great option for organizations that want to move to DVCS, but do not want
    to deal with the infrastructure overhead.
  prefs: []
  type: TYPE_NORMAL
- en: In this recipe, we will look at how to integrate our on-premises-hosted Jira with
    Bitbucket in the cloud.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Since we will be using Bitbucket Cloud in this recipe, you need to have a Bitbucket
    account (both Git and Mercurial repositories will work). If you do not have one,
    you can sign up for a free account at [https://bitbucket.org](https://bitbucket.org/).
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The first step is to create a new consumer in Bitbucket Cloud for Jira, which
    will generate the consumer key and secret:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to your Bitbucket account.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Navigate to Bitbucket settings > OAuth.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the Add consumer button under OAuth consumers.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter a name for the new OAuth consumer. The name you enter here will be displayed
    when Jira requests access authorization, so you should use a name that is easily
    understandable, such as `Atlassian Jira`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on Save. This will generate the consumer details we need for the next
    step:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/77b54d65-1712-40c5-842a-1ab26ac89353.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Once we have created the new consumer, the next step is to enter the consumer
    key and secret details into Jira, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to Administration > Applications > DVCS Accounts.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the Link Bitbucket Cloud or GitHub account button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select Bitbucket Cloudas the Host option.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Enter the Bitbucket account name, the OAuth Key, and the OAuth Secret details
    that are generated from the consumer we just created:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/5cc47377-ad99-4a6b-be8d-98b07a2f5fb0.png)'
  prefs: []
  type: TYPE_IMG
- en: Click on Add to link Jira to Bitbucket Cloud.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once Jira has established a connection to Bitbucket Cloud, you will be prompted
    to grant Jira access to your Bitbucket Cloud account. Make sure the consumer name
    (in bold) is the same as the consumer we created, and then click on Grant access:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/64dae8a5-40b5-4633-a28a-dc596c8b8cf9.png)'
  prefs: []
  type: TYPE_IMG
- en: Let's understand how these steps work.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Jira uses OAuth as the authorization mechanism to retrieve data from Bitbucket.
    With OAuth, the application that retrieves data is called the **consumer**, and
    the application that provides data is called the **provider**.
  prefs: []
  type: TYPE_NORMAL
- en: 'Each consumer needs to be registered with the provider, that generates a key
    or secret pair. We performed the registration in our first step by adding a new
    consumer in Bitbucket:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/dae65f87-a326-4026-938f-93191a8fd575.png)'
  prefs: []
  type: TYPE_IMG
- en: If you do not see the Development issue panel, make sure you have the View Development
    Tools project permission.
  prefs: []
  type: TYPE_NORMAL
- en: By default, members of the Developers project role have the View Development
    Tools permission.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As you might have already seen during the setup process, Jira also supports GitHub,
    both the standard cloud version and the enterprise on-premises version. To integrate
    with GitHub, you follow the same steps; however, while setting up DVCS accounts,
    you need to select GitHub instead of Bitbucket.
  prefs: []
  type: TYPE_NORMAL
- en: 'With GitHub, you will also need the consumer key and secret that is generated
    when you register a new application in GitHub. You can register the application
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to your GitHub account.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Navigate to Account settings> **Developer settings**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Select the OAuth Appstab:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/88e1f0e9-e832-4361-81a2-25674312fe26.png)'
  prefs: []
  type: TYPE_IMG
- en: Click on New OAuth Appand enter a name.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter Jira's URL for both the Homepage URLand Authorization callback URL.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Register application.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After you have registered the application, a new client key and secret pair
    will be generated for Jira to use. You then just need to go to Jira's DVCS account
    section and select GitHub as the host when linking a new DVCS account to Jira.
  prefs: []
  type: TYPE_NORMAL
- en: Integrating Jira with Slack
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Slack is the world's most popular cloud-based collaboration tool. It provides
    features such as persistent chat rooms, file sharing, direct messaging, and much
    more, with support for web, desktop, and mobile. Atlassian has formed a strategic
    partnership with Slack, committing to better integration between the two companies'
    products and services.
  prefs: []
  type: TYPE_NORMAL
- en: In this recipe, we will integrate Jira with Slack so that every time an issue
    is created or updated in Jira, a notification will be sent to the corresponding
    Slack channel.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Since we will be using Slack in this recipe, you will need to have a Slack account.
    If you do not have one, you can sign up for a free account at [https://slack.com](https://slack.com).
  prefs: []
  type: TYPE_NORMAL
- en: The integration requires the **Jira Server for Slack (Official) **app, which
    is the official app from Atlassian. You can get the app from [https://marketplace.atlassian.com/apps/1220099/jira-server-for-slack-official](https://marketplace.atlassian.com/apps/1220099/jira-server-for-slack-official).
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Go through the following steps to integrate Jira with Slack:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to **Administration **> **Applications** > **Slack**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the Connect Slack teambutton.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Choose the recommended **Basic** option and click on the Go to Slack button,
    which will take you to Slack:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/e5f48346-f5b3-4767-99bc-9ff57784eaad.png)'
  prefs: []
  type: TYPE_IMG
- en: Log in to Slack (if you are not logged in already) and install the Jira Server
    Slack app.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Authorize access when prompted:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/b54b76c6-d705-4d6d-8a4a-1d1840607da9.png)'
  prefs: []
  type: TYPE_IMG
- en: Go back to Jira and check that the credentials textbox is automatically filled
    in with your Slack's details.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the Save button and the integration will be established between Jira
    and Slack.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once you have completed the integration setup, you can connect your Jira projects
    with Slack channels, as shown in the following screenshot, where we have enabled
    notifications to be sent to the `#hummingbird` channel regarding all activities
    on issues in the `Project Hummingbirds` project:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a856c5ab-04c8-40af-9878-4e0f4bcdc27c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'After you have linked your Jira project to a Slack channel, changes to issues
    will appear in Slack. The integration also includes a number of commands you can
    run in Slack; simply type in `/jira` and Slack will prompt you with a list of
    options:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/0fbb29f9-c862-4fa2-87a1-9e5a983fe67b.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Other than the official Slack integration app from Atlassian, there are also
    other third-party apps on the Atlassian Marketplace with different features you
    can try. This is one of the strengths of Jira: there are always other options
    if the default does not fit your needs, and if all else fails, you also have the
    option to create your own.'
  prefs: []
  type: TYPE_NORMAL
- en: Integrating Jira with Google Drive
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: It is common for organizations today to use some kind of document-management
    system—either on-premises or in the cloud—such as Google Drive, Box, and Dropbox.
  prefs: []
  type: TYPE_NORMAL
- en: In this recipe, we will integrate Jira with Google Drive so that users will
    be able to search, link, preview, and download files stored in Google Drive from
    Jira.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For this recipe, we need to have Google Drive installed in the Atlassian Jira
    app. You can download it from [http://www.appfusions.com/display/GDOCSJ/Home ](http://www.appfusions.com/display/GDOCSJ/Home)and
    install it with the UPM.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Go through the following steps to set up an integration between Jira and Google
    Drive:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to [https://console.developers.google.com/project](https://console.developers.google.com/project) and
    follow the instructions from [https://developers.google.com/identity/protocols/OAuth2](https://developers.google.com/identity/protocols/OAuth2)
    to create a new OAuth client.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Copy the Google OAuth client ID and secret from the generated OAuth client.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Navigate to Administration > Manage apps > Google Configuration.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the Google OAuth client ID and secret into the Client ID and Client Secret fields,
    respectively.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click the Save button to complete the set up.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The following table shows the fields on the Google Configuration page:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Field** | **Description** |'
  prefs: []
  type: TYPE_TB
- en: '| Client ID | The Google OAuth2 client ID |'
  prefs: []
  type: TYPE_TB
- en: '| Client secret | The Google OAuth2 client secret |'
  prefs: []
  type: TYPE_TB
- en: 'The Google Configuration page is displayed in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c403dde5-3ed8-4484-8a20-56dd806835d3.png)'
  prefs: []
  type: TYPE_IMG
- en: Let's see how these steps work.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The integration of Google Drive with Jira uses OAuth, where each user needs
    to first authorize Jira to access Google Drive on their behalf. This process is
    called the **OAuth dance**.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the app is installed and configured, there will be a new Link Google Document field
    under the More menu that can be seen while viewing issues. Clicking on that option
    will present you with a dialog to either browse or search for files stored in
    Google Drive. You can then select the files you want to link with by checking
    the appropriate checkboxes:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c7736cd7-d98b-4e42-adbf-5bdb6e7f7772.png)'
  prefs: []
  type: TYPE_IMG
- en: 'After you have selected and linked the files you want, the selected files will
    be listed under the Issue Links section:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/04f01162-3ea9-47e9-9312-4c41cc1554a4.png)'
  prefs: []
  type: TYPE_IMG
- en: Depending on the file type, you will be able to view, edit, and download the
    native Google Drive files if you have the required permissions from Google Drive.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'There are many other third-party integration apps available that support popular
    cloud vendors, including the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Salesforce**: The URL is as follows: [https://marketplace.atlassian.com/plugins/com.atlassian.jira.plugin.customfield.crm](https://marketplace.atlassian.com/plugins/com.atlassian.jira.plugin.customfield.crm).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Box**: The URL is as follows: [http://www.appfusions.com/display/BOXJIRA/Home](http://www.appfusions.com/display/BOXJIRA/Home).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using Jira webhooks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In previous recipes, we looked at how to integrate Jira with specific applications
    and platforms. In this recipe, we will look at webhooks, which is a different
    way of implementing integration with Jira.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Go through the following steps to set up a webhook:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to Administration > System > Webhooks.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the Create a webhookbutton.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Enter a name for the new webhook. This should clearly explain the purpose of
    the webhook and/or the target system—for example, `WebHook for Slack #support
    channel`.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the URL of the target system for the webhook to call. The URL should be
    provided by the target system.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Check the Exclude details checkbox if adding data to `POST` will cause errors.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the JQL to define the issues that will trigger the webhook or leave it
    blank for all issues. It is recommended that you use JQL to restrict the scope.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the issue events that will trigger the webhook.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on Createto register the webhook:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/c6ff6442-910f-4eec-8326-e36161508dde.png)'
  prefs: []
  type: TYPE_IMG
- en: This completes the steps for this recipe.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Webhooks use an event-based mechanism, where the source system (in this case,
    Jira) will make an HTTP `POST` call to all the registered webhooks when a registered
    event occurs. This is very similar to Jira's internal notification system where
    emails are sent based on events.
  prefs: []
  type: TYPE_NORMAL
- en: With the event-based approach, instead of requiring the remote application to
    constantly poll Jira for changes, which is both inefficient and inadequate for
    situations where changes need to be processed in real time, the remote application
    can be registered in Jira with a webhook, and Jira will call the application when
    the event occurs.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You can also trigger webhooks from the workflow `POST` function with the `Trigger
    a Webhook` `POST` function. All you have to do is select the transition that will
    be the trigger, add the `POST` function, and select the webhook to be triggered:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/27784f83-698b-4633-b04b-1a57e8dbc1a1.png)'
  prefs: []
  type: TYPE_IMG
- en: This is particularly useful since the webhook configuration panel only lists
    some of the basic event types, but not any custom event types that are used in
    workflows.
  prefs: []
  type: TYPE_NORMAL
- en: Using the Jira REST API
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Jira exposes many of its features through a set of REST APIs, allowing other
    applications to interact with it. With these APIs, you can perform operations
    such as searching, creating, and deleting issues. In fact, several of the apps
    used throughout this book make use of these REST APIs to perform their functions.
  prefs: []
  type: TYPE_NORMAL
- en: Being a web-based standard, Jira's REST API allows you to use any technology
    with it. This means that you can write the code in Java, .NET, JavaScript, or
    even simple bash scripts.
  prefs: []
  type: TYPE_NORMAL
- en: In this recipe, we will be using the RESTClient Firefox add-on to run a search
    query against Jira to get a list of issues assigned to the currently logged in
    user. There are many other tools you can use, such as cURL and Postman for Chrome.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Go through the following steps to run a search query using Jira''s REST API:'
  prefs: []
  type: TYPE_NORMAL
- en: Open up RESTClient in the Firefox browser.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set the **Method **to GET.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter `http://localhost:8080/rest/api/2/search?jql=assignee=currentUser()` into
    the URL textbox. Make sure that you change the URL to your Jira instance.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select Basic authentication and enter your username and password.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the SEND button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You should see the result of the API call under the Response section. Select
    the Preview tab to see the result as formatted JSON, as shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/266dc5ce-34bc-438e-8762-1d2d01704f60.png)'
  prefs: []
  type: TYPE_IMG
- en: The result of the API call is now visible.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Jira's REST APIs always follow the URI structure of `http://host:port/context/rest/api-name/api-version/resource-name`.
    So, in our example, we are using version 2 of the search API. The `jql` parameter
    contains the actual JQL query we are running. Most APIs will require you to be
    logged in, so we configure the settings to use basic authentication as part of
    our API call.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There is an app called **Atlassian REST API Browser** (**RAB**) that you can
    install in Jira that allows you to interact with your Jira's REST APIs directly
    in a browser. You can get this app from [https://marketplace.atlassian.com/plugins/com.atlassian.labs.rest-api-browser/server/overview](https://marketplace.atlassian.com/plugins/com.atlassian.labs.rest-api-browser/server/overview).
  prefs: []
  type: TYPE_NORMAL
- en: 'After you have installed the app, you can open your browser and go to `http://your_jira_instance/plugins/servlet/restbrowser`.
    You should see an API browser interface similar to the one shown in the following
    screenshot. On the left-hand side, you will see a full list of the REST APIs that
    are available in your Jira instance (based on its version):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/6c980d82-a1ee-4679-8a78-aeba391fb121.png)'
  prefs: []
  type: TYPE_IMG
- en: When you click on any of the APIs, the browser will present you with all the
    parameters and options available, so you will no longer need to manually find
    out what they are. This allows you to test and experiment with the APIs quickly,
    without having to write any code upfront or use any additional tools.
  prefs: []
  type: TYPE_NORMAL
