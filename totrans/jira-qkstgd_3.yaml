- en: Using Jira Software for Development Teams
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we'll understand how Jira Software works. We'll first learn
    how to enable Jira Software in our Jira Cloud instance, then we'll quickly create
    a new Jira Software project. We'll spend some time going through an overview of
    Agile concepts before looking at the Scrum and Kanban methodologies and discussing
    the key differences between them. Finally, we'll discuss important Jira Software
    reports to analyze your progress in the project.
  prefs: []
  type: TYPE_NORMAL
- en: 'Topics covered in this chapter include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Using Jira Software for development teams
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Overview of Agile concepts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Is Jira suitable for development projects
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scrum board
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jira Software reports
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kanban board
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using Jira Software for development teams
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Jira Software is one of the most popular applications used by development teams
    to plan and track their projects. In the previous chapter, we discussed various
    aspects of Jira Core, which provides good issue tracking capabilities for business
    teams. Jira Software, when enabled in our instance, will provide additional features
    on top of what we've already seen with Jira Core.
  prefs: []
  type: TYPE_NORMAL
- en: Let's now understand how to work on Jira Software by looking at its features.
  prefs: []
  type: TYPE_NORMAL
- en: Enabling Jira Software
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Jira Software, as a separate application, needs to be purchased or evaluated
    using a trial license and enabled in our instance.
  prefs: []
  type: TYPE_NORMAL
- en: 'In the rest of this book, we''re going to refer to the Site administration
    section a lot to make configuration changes. You can access the Site administration
    section in the bottom-left corner of your instance, as shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/5c6dee93-5fe3-438e-b8b5-afa475961311.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1
  prefs: []
  type: TYPE_NORMAL
- en: 'Perform the following steps to enable a trial subscription of Jira Software:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Go to Site administration | Billing (under SUBSCRIPTIONS & BILLING) | Manage
    Subscriptions and then click on Add more Atlassian products, as shown in the following
    screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/1c1850e8-f95a-4226-a3a9-1a676529b110.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 2
  prefs: []
  type: TYPE_NORMAL
- en: 'In the Discover new products page, click on the Free trial button right next
    to Jira Software, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/770687de-cdb1-49d3-a52f-9170dffe85c2.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3
  prefs: []
  type: TYPE_NORMAL
- en: That's it! Your Jira Software trial is now enabled. Feel free to use it for
    30 days; after that, you can always sign up for a new Jira Cloud instance or you
    can purchase it.
  prefs: []
  type: TYPE_NORMAL
- en: Overview of Agile concepts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We now have Jira Software enabled in our instance. It's time to create a new
    project and get started; however, Jira Software enables your team to work using
    Agile-based methodologies and supports both Scrum and Kanban; hence, before we
    dive straight into the features of Jira Software, it makes sense to do a very
    quick walk-through of various Agile concepts.
  prefs: []
  type: TYPE_NORMAL
- en: What is Agile?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Agile is just a set of values and principles for development. It's a time-boxed,
    iterative approach to developing software incrementally instead of delivering
    it all in one go, hence making it easier to deliver it fast and efficiently. Agile
    practices are adopted by organizations mainly because the market these days is
    ever evolving and the scope of the project changes during the later stages of
    development. The model selected for  development should also incorporate changes
    in projects and still deliver quickly.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can read about the 12 Agile principles by checking out the following link:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://www.agilealliance.org/agile101/12-principles-behind-the-agile-manifesto/](https://www.agilealliance.org/agile101/12-principles-behind-the-agile-manifesto/)'
  prefs: []
  type: TYPE_NORMAL
- en: One of the key objectives of Agile practices that needs to be supported by the
    tool is continuous improvement and continuous delivery, which are part of DevOp,
    a well-known buzz word these days. Jira Software can not only support Agile-based
    methodologies but can also provide integration with other development tools.
  prefs: []
  type: TYPE_NORMAL
- en: Scrum and Kanban methodologies
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Jira Software supports both Scrum and Kanban methodologies, which are two of
    the most common and popular Agile-based practices. Let's understand what these
    are the fundamental difference between them.
  prefs: []
  type: TYPE_NORMAL
- en: '**Scrum** is a process framework for structuring your project where work is
    planned first and then executed in iterations also known as Sprints. Commitment
    is the change agent in Scrum—that is, how much work a team can deliver is the
    commitment. The main idea is to deliver small usable chunks fast. After every
    iteration (Sprint), a working usable piece of software is expected and, as new
    chunks are delivered in future Sprints, they''re also plugged into the existing
    piece of software, hence making the whole software modular. Communication within
    the team is key to making Scrum work for you. Scrum is more suitable for projects
    where planning and estimation is required, which is mostly in software projects.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Kanban** focuses on incremental improvements where **Work in Progress** (**WIP**).
    Limit is the change agent—that is, how much work a team is currently doing is
    an important criteria on. As compared to Scrum, there isn''t much focus on planning.
    A typical example of the Kanban methodology is the support desk, where work is
    done as it comes and, based on the number of people in the team, the amount of
    work a team can do needs to be visualized and improved.'
  prefs: []
  type: TYPE_NORMAL
- en: We'll create projects in our Jira instance using both Scrum and Kanban to understand
    these fundamental differences better.
  prefs: []
  type: TYPE_NORMAL
- en: Key Agile concepts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In a moment, we''ll dive into our tool again to work on an Agile-based project,
    but it''s very important to understand some key Agile concepts or terminologies
    used. Some of them are explained in the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Scrum artifacts**: These include the following:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Product backlog**: This is a list of tasks or issues pending in the project'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Sprint backlog**: A list of tasks selected for development in a specific
    Sprint'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Burndown**: This is a report that shows the progress of a Sprint'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The types of task are as follows:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Epic**: This is a very high-level task that can be broken down into further
    tasks. Epics are similar to stories but used for better organization in the project.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Story**: Again, this is a high-level task that can be broken down into further
    tasks. Individual stories are estimated.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Sub-tasks**: These are the broken-down tasks of a specific story.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Prioritization**: This is based on rank, which is the order in which the
    tasks need to be completed either in a Sprint backlog or Sprint.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Estimation**: This is based on story points, a unit of measure for expressing
    the overall effort to fully implement a story. In Jira, a story point is a numeric
    field.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Iteration**: This is referred to as a Sprint. This is the actual iteration
    containing the list of planned estimated stories that need to be delivered within
    a specific period of time. Each story in a Sprint is assigned to a specific user
    or developer.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Visualization**: The following are used:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Board**: A place where the status of a specific Sprint, such as how many
    Stories are pending, in progress, and done, can be viewed by everyone in the team.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Columns: A typical board has three columns—TO DO, IN PROGRESS, and DONE—showing
    issues based on their status, but more columns can be added if required.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Swimlanes**: This is a horizontal grouping that can be created on a board
    to assist users when the number of stories is too many. For example, the issues
    on a board can be group based on the developer working on them or based on their
    priority.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Reports**: These include the following:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Burndown**: One of the most popular and useful reports used to track the
    progress of a Sprint; on a graph, original story points are depicted versus actual
    story points that users are burning or completing, where the associated stories
    are implemented.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Velocity charts**: Velocity is the average number of story points a team
    is delivering over a period of time. It''s important to know velocity as it will
    help the Scrum master or project manager to plan the next Sprint more efficiently.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Roles in Agile
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now that we know various key Agile concepts, let''s also go through different
    types of role or people involved in a typical Agile-based project, as shown in
    the following. We mainly need to understand what these people will be doing in
    our project:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Scrum product owner (stakeholders or business analysts)**: They define the
    product backlog we discussed in the previous section and write the stories need
    to be implemented for a successful project.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Scrum master (project manager or project lead)**: They''ll organize Scrum
    meetings, define rank, estimate story points, assign work to developers, and start
    Sprints.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Scrum team (developers or testers)**: As the name suggests, these are the
    actual developers who will be either implementing the stories or testing them
    before the release.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There're certainly more roles but these three are the bare minimum you should
    be aware of, especially when working on a Jira project. We're now fully equipped
    to dive into a Jira Software project.
  prefs: []
  type: TYPE_NORMAL
- en: Is Jira suitable for development projects?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You must be wondering whether Jira Software is sufficient for your development
    project needs and we need to discuss some points to understand why Jira is probably
    the best choice for project management.
  prefs: []
  type: TYPE_NORMAL
- en: 'The advantages of Jira Software are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Jira supports standard development methodologies
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It can be used out-of-the-box
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Apart from out of box templates, custom workflows can be created to support
    the processes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Different roles such as developments and testers can be defined
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It supports integration with development tools such as Bitbucket, GitHub, Bamboo,
    and Jenkins
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Jira perfectly supports DevOps practices
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Apart from using just Jira, which is a great issue-tracking tool, in [Chapter 1](40cf5a29-0d75-4c6c-a7ae-5d0c07c2d024.xhtml),
    *Introducing Jira*, we discussed the concept of the Marketplace app to extend
    the features of Jira Software.
  prefs: []
  type: TYPE_NORMAL
- en: 'Some examples of popular apps for extending Jira features for timesheets, testing,
    and advanced reporting are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Tempo Timesheet: Provide timesheet capabilities in your project'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Zephyr and X-ray: Use Jira for test management'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'EazyBI: Create customized reports for your projects'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'BigPicture: Create Gantt charts to plan for projects'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Portfolio: Agile road mapping and scenarios'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I hope you are now eager to start using Jira straight away. So let's do that
    now.
  prefs: []
  type: TYPE_NORMAL
- en: Scrum board
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Jira Software lets you implement the Scrum technique in your project with the
    help of Scrum boards. To understand the features of these tools, we'll create
    a project using out-of-the box templates and some sample data.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a sample Scrum project
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Scrum boards can be created from any existing Jira project that contains predefined
    issues. It's possible to create a Scrum board from a new blank project as well.
    Also, if you want to understand how Jira Software works, it's possible to create
    a sample project prepopulated with sample data.
  prefs: []
  type: TYPE_NORMAL
- en: 'Perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Press the */* (forward slash); it''ll bring up the Search interface on the
    left-hand side. Type in `boards` and click on View all boards (under BOARDS),
    as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/88482027-268c-494a-8acf-f87beceae870.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4
  prefs: []
  type: TYPE_NORMAL
- en: 'In the Boards section, press the Create board button, as shown in the following
    screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/8f7eac86-5461-4c09-a32e-cf32bff56abb.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 5
  prefs: []
  type: TYPE_NORMAL
- en: 'In the Create a board popup, click on Create a Scrum board with sample data as
    shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/3d1047ed-87fb-4045-9440-8ba902a04d7c.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6
  prefs: []
  type: TYPE_NORMAL
- en: 'Complete the Project name, Project key, and Project lead fields and click on
    the Create board button, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/58afa51b-7c5d-430e-8d50-2a714c379ecc.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7
  prefs: []
  type: TYPE_NORMAL
- en: We've just created a project with sample data along with a Scrum board.
  prefs: []
  type: TYPE_NORMAL
- en: Populating, ranking, and estimating a backlog using story points
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In the newly created project, we have a Scrum board, which is displayed by
    default. You''ll now see a list of issues that''re pending and issues that aren''t
    resolved yet in the Backlog section, and a sample Sprint, as shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/b4336ce2-56a9-4701-a3f0-650578fc449a.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8
  prefs: []
  type: TYPE_NORMAL
- en: Backlog contains issues that're pending in the project or board. These issues
    are yet to be planned for execution. In the project sidebar, the first tab is
    Backlog followed by Active sprints. As soon as the sprint is started, you manage
    and work on it using the Active sprints tab.
  prefs: []
  type: TYPE_NORMAL
- en: The sample Scrum board already contains a Sprint that has certain issues in
    a specific order. A sprint is a time period during which specific planned activities
    need to be finished. The Scrum master or the project manager can define the order
    in which issues need to be completed. This order is also known as rank, and the
    team that's working on these issues needs to follow this order. Rank is important
    because there're certain tasks that need to be completed before other tasks can
    be started.
  prefs: []
  type: TYPE_NORMAL
- en: In a Scrum methodology, the estimation of individual tasks isn't only done on
    the basis of the amount of time spent, but also on the complexity of the tasks.
    For instance, there're two tasks with a time estimate of one day, but the first
    task is complex to execute because it was the first time that it was executed
    by the team or for some other reason. The complexity is measured by story points.
    The story point can be any number between 1 to 10 or any number in the Fibonacci
    sequence, that is, 1, 1, 2, 3, 5, 8, 13, and 21\. The higher the number, the more
    complex the task.
  prefs: []
  type: TYPE_NORMAL
- en: The scrum master can assign story points to issues in the Sprint; although it's
    not mandatory to have story points with each issue in the sprint, having them
    will give the team an idea about the complexity of the issue.
  prefs: []
  type: TYPE_NORMAL
- en: Planning and creating sprints
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The sample Scrum board already contains one running sprint; let's create a new
    sprint. Jira Software allows you to create another sprint even if the active sprint
    isn't completed, but the new sprint can't be started. However, it's possible to
    enable the parallel sprints feature in Jira Software that lets us run multiple
    sprints together.
  prefs: []
  type: TYPE_NORMAL
- en: 'The planning of the sprint has to be done in the Plan mode of the Scrum board.
    Perform the following steps to run multiple sprints together:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Navigate to Jira (under APPS) | Jira Settings | Applications | Jira Software
    configuration (under JIRA SOFTWARE), as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/72ccab8a-5f02-47c2-8cf7-3bfd204fb80e.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9
  prefs: []
  type: TYPE_NORMAL
- en: 'Tick the checkbox for Parallel Sprints. That''s it: now just go back to your
    board and start planning your next sprint.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Go back to the project and, in the Backlog tab, click on the Create sprint
    button just before the issue backlog, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/358bbcc2-5062-4ce8-bdc5-b8a9ce815579.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10
  prefs: []
  type: TYPE_NORMAL
- en: An empty sprint will be created.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Now, start dragging your issues from backlog to sprint, as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/78d45a3c-f443-4769-bfa2-25a33f0fe82f.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11
  prefs: []
  type: TYPE_NORMAL
- en: Once you've put all of your issues in the sprint, you can reorder them within
    the sprint and define their rank, that is, which issue needs to be performed first,
    second, and so on.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Optionally, you can also create epics to group multiple stories together. An
    epic is a large story and it''s quite easy to create. Click on the Create epic
    link on the left-hand side of the sprint, as shown here:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/739bcf79-18f8-4dd5-a26c-cba6a04616b4.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12
  prefs: []
  type: TYPE_NORMAL
- en: 'In the pop-up window, enter an Epic Name and Summary. Click on the Create button,
    as shown here, to continue:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/13d5b3f6-68ac-4fcb-bcf2-6df32cf3fc89.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 13
  prefs: []
  type: TYPE_NORMAL
- en: 'You can create more epics; finally, drag issues from your sprint to the epic.
    This will assign issues as part of these epics:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/ca7b8530-0561-4aa8-9c73-627e2c7aa0ff.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 14
  prefs: []
  type: TYPE_NORMAL
- en: 'After assigning issues to the epic, you can start the sprint. Click on the
    Start sprint button at the right corner of the newly created sprint. In the pop-up
    window, enter a Sprint name and select Duration and Start date and the End date
    will be updated automatically. You can optionally also fill in the Sprint goal.
    Finally, click on the Start button, as shown in the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/6345d06e-7547-405e-a3ba-ac589d09966d.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 15
  prefs: []
  type: TYPE_NORMAL
- en: 'Note that you should never start the sprint until you''ve planned your issues
    well, ordered them, and estimated the story points. The moment you start the sprint,
    you''ll be taken to the Active sprints tab in the Scrum board. Here, you''ll see
    a list of all of the issues in your sprints across three columns, that is, TO
    DO, IN PROGRESS, and DONE, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d96de05d-fe63-4684-8274-7ea0f2060718.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 16
  prefs: []
  type: TYPE_NORMAL
- en: With Active sprints, the individual assignee can drag the issue to any of these
    columns.
  prefs: []
  type: TYPE_NORMAL
- en: There are a lot of customizations that can be done in Active sprints to make
    this section more effective.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring swimlanes, card colors, edit card fields, and quick filters
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Active sprints is the section in the board that''s monitored by team members
    once the sprint is running. When the number of people working on the sprint is
    too high, it may get difficult for them to find the issues they''re working on.
    Let''s take a look at some of the customizations done to the Scrum board. All
    of these options are available under the Board settings of a specific board, as
    shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9f3a9180-6c8b-4869-952c-be58f85b2ace.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 17
  prefs: []
  type: TYPE_NORMAL
- en: Click on the Board settings and then look at the configurations you can do in
    your board.
  prefs: []
  type: TYPE_NORMAL
- en: Swimlanes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The issues that appear in work mode can be grouped together so that it becomes
    easy for the respective member to find that issue on the board. Also, when issues
    are dragged from one column to another, they can only be dragged within their
    group, which is known as a swimlane. The default swimlane is the story issue type.
    The swimlane can also be based on epics and it's possible to have no swimlane
    at all.
  prefs: []
  type: TYPE_NORMAL
- en: Card colors
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The individual issues that appear in the Active sprints section are displayed
    in a rectangular block called a card. The color of these cards can be changed
    based on issue types, priorities, assignees, or queries.
  prefs: []
  type: TYPE_NORMAL
- en: Card layout
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The card in the Backlog and Active sprints sections displays the Issue Id and
    Issue Summary, but it's possible to add up to three additional fields. In total,
    you can add three additional fields that can appear on the card. This provision
    is provided so that fields that provide additional information can be made visible
    for the whole team to view.
  prefs: []
  type: TYPE_NORMAL
- en: Quick filters
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We saw how you can customize swimlanes to group several issues. Imagine a situation
    when there're 20 issues in Active sprints that're assigned to you in the currently
    active sprint, but there'll be certain issues that are the highest priority. In
    such cases, it'll be nice to not only quickly filter out issues assigned to you,
    but also to filter them based on priority, such as highest. This can be achieved
    by adding a custom query called a JQL in your quick filter. Later in this book,
    we'll understand how to create JQL queries. These customizations help the team
    to work efficiently so that they don't need to spend a lot of time finding the
    relevant information.
  prefs: []
  type: TYPE_NORMAL
- en: Jira Software reports
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You've learned how to plan, estimate, and start the sprint along with various
    configurations that we can do in the board. We checked how the team can view their
    tasks in the sprint. Now, it's time to monitor the progress of the team. There're
    two reports that're of prime importance. One is the Burndown Chart. This chart
    gives a clear picture of the current status of the sprint. The second is the Velocity
    Chart. This chart helps us understand the capacity of the team in terms of how
    much work it can handle. These two reports help the Scrum master monitor the progress
    of the project. Let's take a look at both these reports.
  prefs: []
  type: TYPE_NORMAL
- en: The Burndown Chart
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: While planning the sprint, we primarily did two important things. Firstly, we
    prioritized the order in which the issues need to be completed. Secondly, we estimated
    the story points for issues. These story points, which we initially planned, give
    an idea of the complexity of the task. Now, the moment the sprint starts, a baseline
    is formed between the start date and the end date. This baseline is displayed
    with a gray line in the chart and it depicts the ideal scenario of executing the
    issues from the start date of the sprint until the end date. When the issue is
    resolved, its story points are burned and the total remaining story points of
    the whole sprint decreases.
  prefs: []
  type: TYPE_NORMAL
- en: 'On the project slidebar, navigate to Reports | Burndown Chart (under Agile)
    and select Sample Sprint 2, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/50a07e9b-5906-4017-88ff-be89bdf68406.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 18
  prefs: []
  type: TYPE_NORMAL
- en: When the team starts working on the issues, another line—this time red—starts
    following the baseline. Looking at this chart, the whole team can easily figure
    out whether they're on or off track. If the line for Remaining Values is progressing
    above the baseline guideline, then it shows that the story points are burned slowly.
    Eventually, all of the issues in the sprint won't be completed.
  prefs: []
  type: TYPE_NORMAL
- en: Just after the Burndown Chart, the details of the individual issues are displayed,
    where you can see how many issues there were at the beginning of the sprint. As
    the issues are resolved, their story points are deducted from the total story
    points of the sprint. The total story points and the remaining story points will
    be displayed to the user.
  prefs: []
  type: TYPE_NORMAL
- en: The Velocity Chart
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Every sprint has a total number of story points at the beginning. Ideally, the
    team working on the sprint should burn all of these points. In real-life cases,
    it's not always possible to complete all of the tasks by the end of the sprint.
    One of the main responsibilities of the Scrum master is to make sure that the
    team should have just enough story points to burn, not too many and not too few.
    However, at the beginning of the sprint, it's not that easy to estimate the amount
    of story points a team can burn. The Velocity Chart simply displays the number
    of story points planned versus those actually completed by the team. This comparison
    is shown for the past few sprints so that the average number of story points that
    the team can burn can be calculated. This is known as the capacity of the team.
  prefs: []
  type: TYPE_NORMAL
- en: 'Navigate Reports | Velocity Chart (under Agile) as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ce6c5ab9-71f7-46f1-bb12-71c61fe14cf8.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 19
  prefs: []
  type: TYPE_NORMAL
- en: This chart gives us a very clear indication of the story points that the team
    has been able to complete in the past sprints. If you take the average of all
    of the story points that your team has been able to burn till now, you'll get
    to know your capacity. It helps the Scrum master plan the next sprint with enough
    resources in the team.
  prefs: []
  type: TYPE_NORMAL
- en: Kanban board
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Scrum technique is applicable in any process that requires planning, but
    there're various cases where the team is continuously working on activities as
    and when required. A typical example of this use case is customer support projects,
    where a certain number of people are assigned to handle the issues that're raised
    for a particular product or project by the company. Usually, these support issues
    require an  immediate response and detailed planning isn't required.
  prefs: []
  type: TYPE_NORMAL
- en: In such scenarios, the overall visualization of pending issues is important.
    A Kanban board doesn't have any plan mode like the Scrum board. It only has work
    mode, which is similar to a Scrum board.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up a Kanban board
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'A Kanban board can be created using existing projects or filters. To understand
    how the Kanban technique works in Jira, a sample board and project can be created
    just like the Scrum-based project that we created earlier. As you can notice from
    the following screenshot, the Active sprints tab isn''t present in the Kanban
    board:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ef77bfef-acfb-4bce-bc73-1ffc881349af.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 20
  prefs: []
  type: TYPE_NORMAL
- en: The team sees the Kanban board only. This board is quite similar to the Scrum
    board; you can also configure the swimlanes based on assignees; by default, the
    swimlanes in the Kanban board are configured to use the priority = Highest query.
    This means that issues that should be resolved immediately are displayed at the
    top.
  prefs: []
  type: TYPE_NORMAL
- en: The people who have these issues assigned can move the issue from one column
    to another. These columns signify workflow states. Most of the configurations
    that we did for the Scrum board can be done on the Kanban board as well.
  prefs: []
  type: TYPE_NORMAL
- en: Column constraints
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When a team works on support issues, it's quite important to resolve the issues
    as soon as possible. Usually, companies sign SLAs—that is, Service Level Agreements—with
    their customers, where they need to agree on the resolution time. In situations
    like these, the whole team should get the overall picture of the issues that they
    need to work on. For instance, if there're fewer people available on support issues,
    then there's a limitation on the number of issues these people can work on at
    a given point in time. In the sample Kanban board, you can notice that the In
    progress column is red whenever there're more than one issue in it. You can change
    that by going to Board settings.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, you learned how to implement Scrum and Kanban Agile methodologies
    using Jira Software. We first spent some time understanding Agile concepts and
    then we understood how to use both boards in Jira along with their configurations.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we'll discuss how to implement Jira Service Desk to take
    care of IT help desks and support desks. We'll see the various features and functionality
    of this application and how you can customize them to make it work for you as
    well.
  prefs: []
  type: TYPE_NORMAL
