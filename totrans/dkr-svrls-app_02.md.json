["```\n$ curl -sSL https://get.docker.com | sudo bash\n```", "```\n$ sudo apt-get install docker-ce=17.06.2~ce-0~ubuntu\n```", "```\n\n$ docker version\n\nClient:\n Version: 17.06.2-ce\n API version: 1.30\n Go version: go1.8.3\n Git commit: cec0b72\n Built: Tue Sep 5 20:00:33 2017\n OS/Arch: linux/amd64\n\nServer:\n Version: 17.06.2-ce\n API version: 1.30 (minimum version 1.12)\n Go version: go1.8.3\n Git commit: cec0b72\n Built: Tue Sep 5 19:59:26 2017\n OS/Arch: linux/amd64\n Experimental: true\n```", "```\n$ mkdir my-nginx\n$ cd my-nginx\n\n```", "```\nFROM ubuntu\nRUN apt-get update && apt-get install -y nginx\nEXPOSE 80\nENTRYPOINT [\"nginx\", \"-g\", \"daemon off;\"]\n```", "```\n$ docker build -t my-nginx .\n```", "```\nSending build context to Docker daemon 2.048kB\nStep 1/4 : FROM ubuntu\n ---> ccc7a11d65b1\nStep 2/4 : RUN apt-get update && apt-get install -y nginx\n ---> Running in 1f95e93426d3\n...\nStep 3/4 : EXPOSE 8080\n ---> Running in 4f84a2dc1b28\n ---> 8b89cae986b0\nRemoving intermediate container 4f84a2dc1b28\nStep 4/4 : ENTRYPOINT nginx -g daemon off;\n ---> Running in d0701d02a092\n ---> 0a393c45ed34\nRemoving intermediate container d0701d02a092\nSuccessfully built 0a393c45ed34\nSuccessfully tagged my-nginx:latest\n```", "```\n$ docker image ls\nREPOSITORY  TAG     IMAGE ID      CREATED         SIZE\nmy-nginx    latest  0a393c45ed34  18 minutes ago  216MB\n```", "```\n$ docker info | grep -A3 Registries\nInsecure Registries:\n 127.0.0.0/8\nLive Restore Enabled: false\n```", "```\n$ docker container run --name=registry -d -p 5000:5000 registry:2\n6f7dc5ef89f070397b93895527ec2571f77e86b8d2beea2d8513fb30294e3d10\n```", "```\n$ docker container ls --filter name=registry\nCONTAINER ID  IMAGE       COMMAND                CREATED        STATUS\n6f7dc5ef89f0  registry:2  \"/entrypoint.sh /e..\"  8 seconds ago  Up\n```", "```\n$ docker image ls --filter reference=*nginx\nREPOSITORY  TAG     IMAGE ID      CREATED       SIZE\nmy-nginx    latest  a773a4303694  1 days ago    216MB\nnginx       latest  b8efb18f159b  2 months ago  107MB\n```", "```\n$ docker image tag my-nginx 127.0.0.1:5000/my-nginx\n```", "```\n$ docker image ls 127.0.0.1:5000/my-nginx\nREPOSITORY               TAG     IMAGE ID      CREATED     SIZE\n127.0.0.1:5000/my-nginx  latest  a773a4303694  1 days ago  216MB\n```", "```\n$ docker image push 127.0.0.1:5000/my-nginx\nThe push refers to a repository [127.0.0.1:5000/my-nginx]\nb3c96f2520ad: Pushed \na09947e71dc0: Pushed \n9c42c2077cde: Pushed \n625c7a2a783b: Pushed \n25e0901a71b8: Pushed \n8aa4fcad5eeb: Pushed \nlatest: digest: sha256:c69c400a56b43db695 ... size: 1569\n```", "```\n$ docker image tag my-nginx chanwit/my-nginx\n```", "```\n$ docker login -u chanwit\nPassword: \nLogin Succeeded\n```", "```\n$ docker container run --name=my-nginx -d -p 8080:80 my-nginx\n4382d778bcc96f70dd290e8ef9454d5a260e87366eadbd1060c7b6e087b3df26\n```", "```\n$ docker container ls\nCONTAINER ID  IMAGE       COMMAND                 CREATED         ...\n4382d778bcc9  my-nginx    \"nginx -g 'daemon ...\"  2 seconds ago   ...\n6f7dc5ef89f0  registry:2  \"/entrypoint.sh /e...\"  2 hours ago     ...\n```", "```\n$ docker container rm -f my-nginx registry\nmy-nginx\nregistry\n```", "```\n$ docker swarm init Swarm initialized: current node (jbl2cz9gkilvu5i6ahtxlkypa) is now a manager.\nTo add a worker to this swarm, run the following command:\n docker swarm join --token SWMTKN-1-470wlqyqbsxhk6gps0o9597izmsjx4xeht5cy3df5sc9nu5n6u-9vlvcxjv5jjrcps4trjcocaae 192.168.1.4:2377\nTo add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.\n```", "```\n$ sudo ls -al /var/lib/docker/swarm\n\ntotal 28\ndrwx------ 5  root root 4096 Sep 30 23:31 .\ndrwx--x--x 12 root root 4096 Sep 29 15:23 ..\ndrwxr-xr-x 2  root root 4096 Sep 30 23:31 certificates\n-rw------- 1  root root 124  Sep 30 23:31 docker-state.json\ndrwx------ 4  root root 4096 Sep 30 23:31 raft\n-rw------- 1  root root 67   Sep 30 23:31 state.json\ndrwxr-xr-x 2  root root 4096 Sep 30 23:31 worker\n```", "```\n$ docker swarm init --advertise-addr=192.168.1.4:2377\n```", "```\n$ docker swarm init --advertise-addr=eth0\n```", "```\n$ docker swarm leave --force\nNode left the swarm.\n```", "```\n# Login to each node\n$ docker swarm join --token SWMTKN-1-27uhz2azpesmsxu0tlli2e2uhdr2hudn3e2x5afilc02x1zicc-9wd3glqr5i92xmxvpnzdwz2j9 192.168.1.4:2377\n```", "```\n$ docker node ls\n\nID            HOSTNAME  STATUS  AVAILABILITY  MANAGER STATUS\nwbb8rb0xob *  mg0       Ready   Active        Leader\n```", "```\n$ docker swarm join-token manager\n\nTo add a manager to this swarm, run the following command:\n\n docker swarm join --token SWMTKN-1-2c6finlm9d97q075kpwxcn59q93vbpfaf5qp13awjin3s3jopw-5hex62dfsd3360zxds46i6s56 192.168.1.4:2377\n```", "```\n$ docker service create \\\n --replicas 3 \\\n --name web \\\n -p 80:80 \\\n --constraint node.role==worker \\\n nginx\n```", "```\n$ docker node update --availability drain mg0\n```", "```\n$ docker network ls\nNETWORK ID    NAME             DRIVER    SCOPE\nc32139129f45  bridge           bridge    local\n3315d809348e  docker_gwbridge  bridge    local\n90103ae1188f  host             host      local\nve7fj61ifakr  ingress          overlay   swarm\n489d441af28d  none             null      local\n```", "```\n$ docker network inspect ingress\n[\n {\n \"Name\": \"ingress\",\n \"Id\": \"ve7fj61ifakr8ybux1icawwbr\",\n \"Created\": \"2017-10-02T23:22:46.72494239+07:00\",\n \"Scope\": \"swarm\",\n \"Driver\": \"overlay\",\n \"EnableIPv6\": false,\n \"IPAM\": {\n \"Driver\": \"default\",\n \"Options\": null,\n \"Config\": [\n {\n \"Subnet\": \"10.255.0.0/16\",\n \"Gateway\": \"10.255.0.1\"\n }\n ]\n },\n }\n]\n```", "```\n$ docker network create  --driver overlay appnet\nlu29kfat35xph3beilupcw4m2\n\n$ docker network ls\nNETWORK ID    NAME             DRIVER    SCOPE\nlu29kfat35xp  appnet           overlay   swarm\nc32139129f45  bridge           bridge    local\n3315d809348e  docker_gwbridge  bridge    local\n90103ae1188f  host             host      local\nve7fj61ifakr  ingress          overlay   swarm\n489d441af28d  none             null      local\n```", "```\n$ docker service create --name web --network appnet -p 80:80 nginx\n```", "```\n$ docker service update --network-add appnet web\nweb\n```", "```\n$ docker inspect web\n\n...\n\n \"UpdateStatus\": {\n \"State\": \"completed\",\n \"StartedAt\": \"2017-10-09T15:45:03.413491944Z\",\n \"CompletedAt\": \"2017-10-09T15:45:21.155296293Z\",\n \"Message\": \"update completed\"\n }\n }\n]\n```", "```\n$ docker service scale web=5\n```"]