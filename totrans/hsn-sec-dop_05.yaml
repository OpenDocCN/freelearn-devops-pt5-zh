- en: Case Study - Security Assurance Program
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Since we have covered the security requirements and security assurance program
    in previous chapters, in this chapter, we will discuss two case studies looking
    at the security assurance program and security practices in the DevOps process.
    Microsoft SDL and SAMM were introduced to apply to the security assurance program.
    In addition to the process, the non-technical parts, security training, and culture
    are also critical to the success of the security program. We will also give an
    example of how security tools and web security framework can help during the whole
    DevOps process.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will learn about the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Microsoft SDL and SAMM
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Security training and awareness
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Security culture
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Baking security tools into DevOps
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Web security frameworks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Security assurance program case study
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let''s take two typical business scenarios to discuss the adoption of a security
    assurance program. One concerns services built on top of a third-party cloud service
    provider, and the other concerns building your own, complete cloud services, including
    **Software as a Service** (**SaaS**), **Platform as a Service** (**PaaS**), and
    **Infrastructure as a Service** (**IaaS**):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00024.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: '**Scenario 1: Joyce, e-commerce services on a public cloud service: **Joyce
    is a security leader at an e-commerce company. The company has an in-house software
    development, IT, and security team. They deploy an e-commerce service based on
    a third-party cloud service provider, and apply most security services provided
    by the IaaS/PaaS cloud service provider. Due to the payment and handling of credit
    card information, compliance with PCI DSS is a must for e-commerce services.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Scenario 2: John, e-commerce services on self-build cloud service: **John
    is a CSO of e-commerce services. The key difference in John''s case is that there
    is a well-established security organization team, and lots of security services,
    such as WAF, IDS, or security monitoring, were self-built and tailored to the
    business''s needs. Furthermore, the e-commerce was built on their own self-operated
    cloud services. PCI DSS compliance is also a minimum requirement in this case.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For these two scenarios, let's discuss how the adoption of a security assurance
    program might be different, by reference to Microsoft SDL and OWASP SAMM practices.
  prefs: []
  type: TYPE_NORMAL
- en: Microsoft SDL and SAMM
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The adoption of Microsoft SDL and SAMM in Joyce's case may apply security on
    top of the framework provided by the cloud service provider. It's always suggested
    we build security practices based on existing business processes, or to have the
    security tools integrated to the existing CI or CD framework.
  prefs: []
  type: TYPE_NORMAL
- en: 'Most cloud service providers provide related cloud security services. In Joyce''s
    case, familiarity with the security services provided by the cloud service provider,
    as well as how they apply to her e-commerce applications, will help to build a
    security foundation. In addition, most cloud service providers have been certified
    with security standards for IaaS and PaaS. This means that Joyce only needs to
    focus on the data and software security which were built on top of the IaaS and
    PaaS. In John''s case, he will need to self-build or purchase those security services
    to protect the IaaS, PaaS, and software applications. The following table shows
    a typical security service provided by a cloud service provider:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Security area** | **Cloud security services** |'
  prefs: []
  type: TYPE_TB
- en: '| Security management |'
  prefs: []
  type: TYPE_TB
- en: Threat intelligence
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cloud connector
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Outsourcing security services
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Content security |'
  prefs: []
  type: TYPE_TB
- en: Spam prevention
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Machine brute-force attack prevention
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Accounts abuses detection
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Infrastructure |'
  prefs: []
  type: TYPE_TB
- en: CA certificate manager
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Key management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: HTTPS service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Secure configuration monitoring and checking
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Data protection |'
  prefs: []
  type: TYPE_TB
- en: Encryption
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Database auditing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Integrity monitoring
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Granular access control
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Networking |'
  prefs: []
  type: TYPE_TB
- en: HTTPS service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Web application firewall
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Anti-DDOS services
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: 'Building software applications on top of third-party cloud services may reduce
    the effort involved in securing a cloud infrastructure and platform. Since Joyce''s
    business requires PCI DSS compliance, security practices are also recommended
    tied to be the business needs. The following are examples of security practices
    that Joyce may plan:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Security area** | **Examples of security activities in Joyce''s case**
    |'
  prefs: []
  type: TYPE_TB
- en: '| Strategy and metrics |'
  prefs: []
  type: TYPE_TB
- en: Define release gates depending on the PCI compliance levels
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Policy and compliance |'
  prefs: []
  type: TYPE_TB
- en: Compliance with PCI DSS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Education |'
  prefs: []
  type: TYPE_TB
- en: Security training and exams for the team
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Security requirements |'
  prefs: []
  type: TYPE_TB
- en: Security requirements may be based on the six categories of PCI DSS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Secure network and systems
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Protect cardholder data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vulnerability management program
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strong access control measures
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Monitor and test networks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Maintain an information security policy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Threat assessment |'
  prefs: []
  type: TYPE_TB
- en: The threat assessment focuses on software applications
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Secure architecture |'
  prefs: []
  type: TYPE_TB
- en: Assess the external dependencies used in application-level components
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Design review |'
  prefs: []
  type: TYPE_TB
- en: Secure API interface with external vendors
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Secure data storage and transmission
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Implementation review |'
  prefs: []
  type: TYPE_TB
- en: Secure coding scanning tool adoption, such as flawfinder, FindSecbugs, OWASP
    Dependency Check. .
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The web service implementation is based on the Java security framework and Apache
    Shiro, for authentication, authorization, cryptography, and session management.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Security testing |'
  prefs: []
  type: TYPE_TB
- en: Apply security scanning services provided by cloud service providers, such as
    secure configuration scanning, web service security, or vulnerability scanning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Issue management |'
  prefs: []
  type: TYPE_TB
- en: The cloud services provide security events monitoring or alerts, but Joyce still
    needs to set up a security incident handling process for the company
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Environment hardening |'
  prefs: []
  type: TYPE_TB
- en: The cloud service may provide mechanisms to secure configurations, and to apply
    the latest patches automatically
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Operation enablement |'
  prefs: []
  type: TYPE_TB
- en: Apply the service monitoring tools provided by the cloud service provider; in
    addition, keeping the operation team and development team together to handle issues
    fed back by customers is the most important thing here
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: 'In John''s case, the security assurance program coverage extends to the cloud
    platform and infrastructure. It means John will need to additionally consider
    these security controls: security testing, issue management, environment hardening,
    and operation enablement. Other aspects, such as strategy, policy, education,
    threat assessment, secure architecture, design review, and implementation review,
    will be similar to Joyce''s case.'
  prefs: []
  type: TYPE_NORMAL
- en: Self-build or buy? The question may be raised whenever we plan tools for security
    practices. One of the key advantages to using commercial products is to win the
    customer's trust. It's like the services are tested and certified by third-party
    commercial tools. On the other hand, self-build security tools enable closer integration
    with the existing framework, and can be customized to its needs. If you are in
    such a dilemma due to budget constraints, using open source tools may be a good
    alternative. Open source tools may provide built-in security rules and knowledge,
    while also giving you the flexibility to customize to your needs.
  prefs: []
  type: TYPE_NORMAL
- en: Security training and awareness
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In both John's and Joyce's cases, the theme of security awareness may be focused
    on PCI DSS compliance. There are many ways to deliver security training, such
    as posters, newsletters, e-learning or teleconferencing, in-person workshops,
    or hands-on tutorials. NIST SP 800-50 **Building an Information Technology Security
    Awareness and Training Program** and PCI DSS **Best Practices for implementing
    a Security Awareness Program** are two good references for building a security
    awareness program. Here, we discuss some of the key points to consider when delivering
    a  security awareness and training program with an organization.
  prefs: []
  type: TYPE_NORMAL
- en: Sending newsletters is considered to be one of the most cost-effective and common
    practices to target all employees across business units. What can be even more
    effective is to look at a real example or case study that relates to that role
    or the business. For example, HR may be more interested in stories or case studies
    about employment related to access control or the required security knowledge
    certificates for each job grade, rather than security technology or threat introduction.
    Try to use a case study specific to each role, such as HR, Developers, Testers,
    or the operations team to explain how security relates to and impacts their jobs. In
    addition, newsletters are no different than other emails, and may be easily ignored.
    A simple follow-up online quiz or required email-reply with comments is also suggested. For
    managers, leaders, and specific roles, the purpose of security awareness is to
    win their support. The content requires not only security awareness but also that
    you call them to action. Sometimes, it's not just a one-way message delivery;
    it can be a forum discussion or the process of seeking consensus to achieve security
    goals. Whenever possible, face-to-face communication or a forum discussion is
    recommended for this group.
  prefs: []
  type: TYPE_NORMAL
- en: For the development or operations team, the most effective way to apply security
    practices is still to have hands-on tutorials and workshops. Engineers love to
    build and to take part in hands-on exercises. In-person, hands-on exercises take
    time and require physical involvement. However, they are much more effective than
    posters, newsletters, e-learning, or teleconferencing sessions.
  prefs: []
  type: TYPE_NORMAL
- en: For a large, geographically distributed organization, it's common to have online
    self-study e-learning courses. These e-learning courses have exams with required
    passing scores. Some organizations may require you to pass a security knowledge
    certification annually. For the adoption of any new security compliance such as
    GDPR, integrating security practices into existing processes or training programs
    is still the recommended approach.
  prefs: []
  type: TYPE_NORMAL
- en: Security culture
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The organization's culture may impact security practices and execution. The
    term *culture* may be quite vague, but generally speaking, there are two kinds
    of security culture. One is the **strict process** type, and the other is **empowering
    the team**. In the strict process, there is almost no room for flexibility. Once
    the expected security baselines are defined, they are all compulsory. Detailed
    security checklists are defined for every project to follow. No violation is allowed.
    On the other hand, the empowering the team type means the organization only defines
    general security guidelines, while project teams may define their own security
    checklists based on project needs.
  prefs: []
  type: TYPE_NORMAL
- en: A strict-process culture fits an environment that requires high-level controls,
    such as the military or banking. There are defined **Standard Operating Procedures**
    (**SOPs**) and checklists for every security control. The SOP or checklist will
    greatly reduce the chances of human error. In addition, any exception or failure
    to meet the security checklist will require the team to submit a formal review.
    From a security management point of view, this may reduce the need to check with
    each project team, since the project team will need to initiate a formal review
    for any security requirements it fails to meet. There is little room for project
    teams to make any judgment call, which must be done by the security management
    team. One disadvantage is that project team members may just follow the SOP, and
    don't know the rationale behind the checklist.
  prefs: []
  type: TYPE_NORMAL
- en: In an empowering-the-team culture, security management only defines guidelines,
    while each project team may develop a checklist based on the project's needs.
    The checklists we refer to here are software security requirement features for
    a development team. It also means an organization-level security policy only defines
    a few compulsory requirements, without detailed instructions, and allows the team
    to figure out how to achieve them. It may take time for each project in the beginning
    and may suffer some trial-and-error mistakes for new start-up teams, but the project
    team will learn from mistakes, which may still be identified in the testing phase,
    instead of the design phase. After all, making mistakes and trying different methods
    of execution are the roots of innovation and creativity.
  prefs: []
  type: TYPE_NORMAL
- en: In addition, the team may decide on its training needs, instead of a compulsory
    course list defined by the security management team. Again, the security training
    decided by the team may not be comprehensive enough, but the team will learn through
    experience.
  prefs: []
  type: TYPE_NORMAL
- en: There is nothing wrong or right between these two cultures. It all depends on
    the business status, the needs for compliance, the organizational culture, existing
    processes, and so on. Some organizations may have a very strict security program, with
    specific roles, but maybe flexible with other roles. Some organizations may still
    have a detailed security checklist for every business unit, but allow each project
    team to judge whether to follow it strictly or not. In the end, fitting into the
    organizational culture and aligning with business objectives are key to the success
    of a security assurance program.
  prefs: []
  type: TYPE_NORMAL
- en: Web security frameworks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Applying a mature web security framework will help developers to reduce a lot
    of the design and coding effort required to meet security requirements, since
    the web security framework itself provides the necessary security controls, such
    as authentication, authorization, logging, validation, encryption, and session
    management. To build web services, the followings are some popular open-source
    Java security frameworks under Apache 2.0 license:'
  prefs: []
  type: TYPE_NORMAL
- en: Spring Security
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Apache Shiro
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: PicketLink
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Object Access Control** (**OACC**) Framework'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Some large organizations may prefer to build or to customize a web security
    framework for every project to use. No matter what security framework is used,
    it normally includes the following common security modules.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00025.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: An organization-level security assurance program may suggest a list of mature
    security frameworks, or even provide a common one for a project team to use. After
    all, one working security framework is always much more effective than a list
    of security requirement documents.
  prefs: []
  type: TYPE_NORMAL
- en: Baking security into DevOps
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We have discussed the culture aspect of how security fits into an organization.
    Let's now discuss the technical aspect. When it comes to fitting security into
    DevOps, we are mostly talking about integration with an existing **Continuous
    Integration** (**CI**) or  **Continuous Delivery** (**CD**) framework. There are
    various kinds of CI/CD framework. We may focus on how to integrate security with
    Jenkins, since Jenkins is the hub of the whole CI/CD ecosystem, such as code and
    commit, build, scan and test, release, and deployment. One typical CI/CD process
    with security tools integration is shown in the following diagram. Please be aware
    that security requirements, threat modeling, secure design, and architecture design
    are not in the diagram, since the security practices of these activities normally
    tie with the team process, and not directly with a tool, such as Jenkins.
  prefs: []
  type: TYPE_NORMAL
- en: 'In Joyce''s case, she may build security based on the framework provided by
    the cloud service provider. In John''s case, he builds security based on the existing
    in-house CI/CD framework. No matter which approach is used, the security in the
    CI/CD process will be similar to one of the examples in the following diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00026.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: CI/CD process with security tools
  prefs: []
  type: TYPE_NORMAL
- en: 'Avoiding reinventing the wheel, and fitting security into the existing process
    or framework, are critical success factors for a security assurance program at
    any stage. A checklist of security requirements helps us understand what is needed.
    Furthermore, a tool set and framework can help to implement the security of the
    products. The following table shows another example of how the tools and framework
    support security in DevOps:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Types of security tools** | **Key activity in DevOps** | **Example of tools
    and framework** |'
  prefs: []
  type: TYPE_TB
- en: '| Security framework | Architecture design |'
  prefs: []
  type: TYPE_TB
- en: Shiro
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Spring Security
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Secure coding | Implementation and coding |'
  prefs: []
  type: TYPE_TB
- en: FindSecBugs for Java Code scanning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Java HTML Sanitizer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Security testing | Verification |'
  prefs: []
  type: TYPE_TB
- en: Kali Linux Toolkits
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Security monitoring | Operational monitoring |'
  prefs: []
  type: TYPE_TB
- en: Security Onions (IDS/IPS, security monitoring and log analysis)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: OpenSCAP
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we discussed two typical business scenarios for security assurance
    program. One is building software on top of a third-party cloud service provider,
    and the other is building complete cloud services on top of your own cloud. Cloud
    service providers may allow security services to protect the platform and infrastructure,
    but it's still the cloud service tenant's responsibility to protect the web application
    and customer data in the cloud. Then, we discussed the adoption of Microsoft SDL
    and SAMM into security activities in different development and operations phases.
    For security training, we recommend delivering training based on roles and needs.
    How security culture impacts the security assurance program was also discussed.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, we took security tool integration with CI/CD and the adoption of a
    web security framework as examples to explain how tools and framework are critical
    to the success of any security program. In the following chapters, we will look
    further into how to build a secure architecture, common module, and design principles.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Does the cloud services provider take all the responsibility for security, including
    the software application and customer data?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What security services are provided by cloud service providers?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Data encryption
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Security monitoring
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Anti-DDOS
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: All of the above
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: What are the most cost-effective ways to raise security awareness?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Newsletter
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Workshop
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Teleconferencing
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Tutorials
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Does CI stand for Continuous integration?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Does CD stand for Continuous Delivery and Continuous Development?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Which activities are considered to be within a CI cycle?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Code
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Commit
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Build
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Testing
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: The FindSecBugs tool is used in which kinds of security practices?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Secure code scanning
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Security monitoring
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Intrusion prevention
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Authentication
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Which of the following is not a Java web security framework?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Passport
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Spring Security
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Apache Shiro
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: PicketLink
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**PCI DSS**: [https://www.pcisecuritystandards.org/pci_security/](https://www.pcisecuritystandards.org/pci_security/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Microsoft SDL**: [https://www.microsoft.com/en-us/sdl](https://www.microsoft.com/en-us/sdl)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**SAMM**: [https://www.owasp.org/index.php/OWASP_SAMM_Project](https://www.owasp.org/index.php/OWASP_SAMM_Project)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**flawfinder**: [https://www.dwheeler.com/flawfinder/](https://www.dwheeler.com/flawfinder/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**FindSecbugs**: [https://find-sec-bugs.github.io/](https://find-sec-bugs.github.io/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**OWASP dependency Check**: [https://www.owasp.org/index.php/OWASP_Dependency_Check](https://www.owasp.org/index.php/OWASP_Dependency_Check)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**NIST SP 800-50 Building an Information Technology Security Awareness and
    Training Program**: [https://nvlpubs.nist.gov/nistpubs/legacy/sp/nistspecialpublication800-50.pdf](https://nvlpubs.nist.gov/nistpubs/legacy/sp/nistspecialpublication800-50.pdf)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Best Practices for implementing a Security Awareness Program**: [https://www.pcisecuritystandards.org/documents/PCI_DSS_V1.0_Best_Practices_for_Implementing_Security_Awareness_Program.pdf](https://www.pcisecuritystandards.org/documents/PCI_DSS_V1.0_Best_Practices_for_Implementing_Security_Awareness_Program.pdf)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Spring Security**: [https://projects.spring.io/spring-security/](https://projects.spring.io/spring-security/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Apache Shiro**: [https://shiro.apache.org/](https://shiro.apache.org/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**PicketLink**: [http://picketlink.org/](http://picketlink.org/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**OACC (Object Access Control) Framework**: [http://oaccframework.org/](http://oaccframework.org/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Static Security Analysis** [https://github.com/mre/awesome-static-analysis/](https://github.com/mre/awesome-static-analysis/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
