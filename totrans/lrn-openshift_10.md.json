["```\n$ cat Vagrantfile \n$lab_idm = <<SCRIPT\ncat <<EOF >> /etc/hosts\n172.24.0.11 openshift.example.com openshift\n172.24.0.12 idm.example.com idm\nEOF\nsed -i '/^127.0.0.1.*idm.*$/d' /etc/hosts\nyum -y update\nyum -y install ipa-server\nsystemctl restart dbus\nipa-server-install -r IDM.EXAMPLE.COM -n idm.example.com -p idmsecret -a idmsecret --unattended\necho idmsecret | kinit admin\necho supersecret | ipa user-add alice --first Alice --last Springs --password\nSCRIPT\n\n$lab_openshift = <<SCRIPT\ncat <<EOF >> /etc/hosts\n172.24.0.12 idm.example.com idm\nEOF\nyum -y update\nyum install -y epel-release git docker\nyum install -y ansible\nsystemctl start docker\nsystemctl enable docker\ngit clone -b release-3.9 https://github.com/openshift/openshift-ansible /root/openshift-ansible\nssh-keygen -f /root/.ssh/id_rsa -N ''\ncp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys\nssh-keyscan 172.24.0.11 >> .ssh/known_hosts\ncp .ssh/known_hosts /root/.ssh/known_hosts\nssh-copy-id -i /root/.ssh/id_rsa root@172.24.0.11\nreboot\nSCRIPT\n\nVagrant.configure(2) do |config|\n  config.vm.define \"openshift\" do |conf|\n    conf.vm.box = \"centos/7\"\n    conf.vm.hostname = 'openshift.example.com'\n    conf.vm.network \"private_network\", ip: \"172.24.0.11\"\n    conf.vm.provider \"virtualbox\" do |v|\n       v.memory = 4096\n       v.cpus = 2\n    end\n    conf.vm.provision \"shell\", inline: $lab_openshift\n  end\n\n  config.vm.define \"idm\" do |conf|\n    conf.vm.box = \"centos/7\"\n    conf.vm.hostname = 'idm.example.com'\n    conf.vm.network \"private_network\", ip: \"172.24.0.12\"\n    conf.vm.provider \"virtualbox\" do |v|\n```", "```\n v.memory = 2048\n       v.cpus = 1\n    end\n    conf.vm.provision \"shell\", inline: $lab_idm\n  end\nend\n```", "```\n$ vagrant up\nBringing machine 'openshift' up with 'virtualbox' provider...\nBringing machine 'idm' up with 'virtualbox' provider...\n...\n<output omitted>\n...\n\n```", "```\n$ vagrant ssh openshift\n[vagrant@openshift ~]$ sudo -i\n[root@openshift ~]#\n```", "```\n# cat /etc/ansible/hosts ...\n<output omitted>\n...\n[masters]\n172.24.0.11\n\n[nodes]\n172.24.0.11 openshift_node_labels=\"{'region': 'infra', 'zone': 'default'}\" openshift_schedulable=true\n\n[etcd]\n172.24.0.11\n\n[OSEv3:vars]\nopenshift_deployment_type=origin\nopenshift_disable_check=memory_availability,disk_availability\nopenshift_ip=172.24.0.11\nansible_service_broker_install=false\nopenshift_master_cluster_hostname=172.24.0.11\nopenshift_master_cluster_public_hostname=172.24.0.11\nopenshift_hostname=172.24.0.11\nopenshift_public_hostname=172.24.0.11\nopenshift_master_identity_providers=[{'name': 'LDAP', 'challenge': 'true', 'login': 'true', 'kind': 'LDAPPasswordIdentityProvider', 'mappingMethod': 'claim', 'attributes': {'id': ['dn'], 'email': ['mail'], 'name': ['cn'], 'preferredUsername': ['uid']}, 'insecure': 'true', 'bindDN': 'uid=admin,cn=users,cn=accounts,dc=idm,dc=example,dc=com', 'bindPassword': 'idmsecret', 'url': 'ldap://idm.example.com/cn=users,cn=accounts,dc=idm,dc=example,dc=com?uid'}, {'name': 'PASSWORD_FILE', 'challenge': 'true', 'login': 'true', 'kind': 'HTPasswdPasswordIdentityProvider', 'mappingMethod': 'claim', 'filename': '/etc/origin/master/.users'}]\n\n[OSEv3:children]\nmasters\nnodes\netcd\n```", "```\n\n# cd openshift-ansible\n# ansible-playbook playbooks/prerequisites.yml\n...\n<output omitted>\n...\n# ansible-playbook playbooks/deploy_cluster.yml\n...\n<output omitted>\n...\n```", "```\n# htpasswd -c /etc/origin/master/.users alice\nNew password: `redhat123`\nRe-type new password: `redhat123`\nAdding password for user alice\n```", "```\n# oc get user\nNAME    UID      FULL NAME     IDENTITIES\nalice bf11471e-47a8-11e8-8dee-525400daa710  Alice Springs   LDAP:uid=alice,cn=users,cn=accounts,dc=idm,dc=example,dc=com\n```", "```\n# oc get identity\nNAME  IDP  NAME  IDP  USER NAME                                             USER   NAME  USER UID\nLDAP:uid=alice,cn=users,cn=accounts,dc=idm,dc=example,dc=com   LDAP            uid=alice,cn=users,cn=accounts,dc=idm,dc=example,dc=com   alice       bf11471e-47a8-11e8-8dee-525400daa710\n```", "```\n# oc delete user/alice\nuser \"alice\" deleted\n\n# oc delete \\\nidentity/LDAP:uid=alice,cn=users,cn=accounts,dc=idm,dc=example,dc=com\nidentity \"LDAP:uid=alice,cn=users,cn=accounts,dc=idm,dc=example,dc=com\" deleted\n```", "```\n# cat /etc/origin/master/master-config.yaml\n...\n<output omitted>\n...\n - challenge: true\n login: true\n mappingMethod: add\n name: PASSWORD_FILE\n...\n<output omitted>\n...\n```", "```\n# systemctl restart origin-master-api\n```", "```\n# oc get user\nNAME      UID     FULL NAME     IDENTITIES\nalice     bf11471e-47a8-11e8-8dee-525400daa710   Alice Springs   LDAP:uid=alice,cn=users,cn=accounts,dc=idm,dc=example,dc=com, PASSWORD_FILE:alice\n```", "```\n# oc get identity\nNAME IDP     NAME IDP USER NAME                                             USER  NAME   USER UID\nLDAP:uid=alice,cn=users,cn=accounts,dc=idm,dc=example,dc=com   LDAP            uid=alice,cn=users,cn=accounts,dc=idm,dc=example,dc=com   alice       bf11471e-47a8-11e8-8dee-525400daa710\nPASSWORD_FILE:alice                                            PASSWORD_FILE   alice                                                     alice       bf11471e-47a8-11e8-8dee-525400daa7\n```", "```\n# oc delete user/alice\nuser \"alice\" deleted\n # oc delete \\\nidentity/LDAP:uid=alice,cn=users,cn=accounts,dc=idm,dc=example,dc=com\nidentity \n```", "```\n\"LDAP:uid=alice,cn=users,cn=accounts,dc=idm,dc=example,dc=com\" deleted\n # oc delete identity/PASSWORD_FILE:alice\nidentity \"PASSWORD_FILE:alice\" deleted\n```", "```\n# cat /etc/origin/master/master-config.yaml\n...\n<output omitted>\n...\n - challenge: true\n login: true\n mappingMethod: lookup\n name: PASSWORD_FILE\n...\n<output omitted>\n...\n```", "```\n# systemctl restart origin-master-api\n```", "```\n# oc create identity PASSWORD_FILE:alice\nidentity \"PASSWORD_FILE:alice\" created\n```", "```\n# oc create useridentitymapping PASSWORD_FILE:alice alice\nuseridentitymapping \"PASSWORD_FILE:alice\" created\n```", "```\n# oc delete user/alice\nuser \"alice\" deleted\n# oc delete \\\nidentity/LDAP:uid=alice,cn=users,cn=accounts,dc=idm,dc=example,dc=com\nidentity \"LDAP:uid=alice,cn=users,cn=accounts,dc=idm,dc=example,dc=com\" deleted\n# oc delete identity/PASSWORD_FILE:alice\nidentity \"PASSWORD_FILE:alice\" deleted\n```", "```\n# cat /etc/origin/master/master-config.yaml\n...\n<output omitted>\n...\n  - challenge: true\n    login: true\n    mappingMethod: generate\n    name: PASSWORD_FILE\n...\n<output omitted>\n...\n```", "```\n# systemctl restart origin-master-api\n```", "```\n# oc get user\nNAME      UID       FULL NAME       IDENTITIES\nalice     97bd5ede-47b5-11e8-9f47-525400daa710   Alice Springs   LDAP:uid=alice,cn=users,cn=accounts,dc=idm,dc=example,dc=com\nalice2    a145c96e-47b5-11e8-9f47-525400daa710                   PASSWORD_FILE:alice\n```", "```\n# oc get identity\nNAME   IDP NAME IDP USER NAME  USER NAME   USER UID\nLDAP:uid=alice,cn=users,cn=accounts,dc=idm,dc=example,dc=com   LDAP            uid=alice,cn=users,cn=accounts,dc=idm,dc=example,dc=com   alice       97bd5ede-47b5-11e8-9f47-525400daa710\nPASSWORD_FILE:alice                                            PASSWORD_FILE   alice                                                     alice2      a145c96e-47b5-11e8-9f47-525400daa710\n```", "```\n# oc delete user/alice\nuser \"alice\" deleted # oc delete user/alice2 user \"alice2\" deleted\n# oc delete \\\nidentity/LDAP:uid=alice,cn=users,cn=accounts,dc=idm,dc=example,dc=com\nidentity \"LDAP:uid=alice,cn=users,cn=accounts,dc=idm,dc=example,dc=com\" deleted\n# oc delete identity/PASSWORD_FILE:alice\nidentity \"PASSWORD_FILE:alice\" deleted # exit\n$ exit\n```", "```\n$ vagrant halt\n==> idm: Attempting graceful shutdown of VM...\n==> openshift: Attempting graceful shutdown of VM...\n```", "```\n$ minishift start --openshift-version=v3.9.0 --vm-driver=virtualbox\n...\n<output omitted>\n...\n```", "```\n$ export PATH=\"/home/$USER/.minishift/cache/oc/v3.9.0/linux:$PATH\"\n```", "```\n$ eval $(minishift docker-env)\n```", "```\n$ oc login -u system:admin\n```", "```\n$ oc get serviceaccounts\nNAME               SECRETS   AGE\nbuilder            2         58s\ndefault            2         58s\ndeployer           2         58s\n```", "```\n$ oc describe serviceaccounts/default\nName: default\nNamespace: myproject\nLabels: <none>\nAnnotations: <none>\nImage pull secrets:    default-dockercfg-wggrl\nMountable secrets:     default-token-mg64x\n                       default-dockercfg-wggrl\nTokens:                default-token-7cljg\n                       default-token-mg64x\nEvents:                <none>\n```", "```\n$ oc create sa myserviceaccount\nserviceaccount \"myserviceaccount\" created\n```", "```\n$ oc delete sa/myserviceaccount\nserviceaccount \"myserviceaccount\" deleted\n```", "```\n$ oc adm policy add-role-to-group view system:serviceaccounts -n myproject\nrole \"view\" added: \"system:serviceaccounts\"\n```", "```\n$ oc adm policy remove-role-from-group view system:serviceaccounts -n myproject\nrole \"view\" removed: \"system:serviceaccounts\"\n```", "```\n...\n<output omitted>\n... \n identityProviders:\n  - challenge: true\n    login: true\n    mappingMethod: claim\n    name: anypassword\n    provider:\n      apiVersion: v1\n      kind: AllowAllPasswordIdentityProvider\n...\n<output omitted>\n... \n```", "```\n...\n<output omitted>\n... \n identityProviders:        \n  - challenge: true   \n    login: true                        \n    mappingMethod: claim       \n    name: anypassword        \n    provider:            \n      apiVersion: v1\n      kind: DenyAllPasswordIdentityProvider\n...\n<output omitted>\n... \n```", "```\n# sudo yum -y install httpd-tools\n...\n<output omitted>\n...\nComplete!\n```", "```\n# htpasswd -c /etc/origin/master/.htpasswd bob\nNew password: \nRe-type new password: \nAdding password for user bob\n# htpasswd /etc/origin/master/.htpasswd alice\nNew password: \nRe-type new password: \nAdding password for user alice\n```", "```\n...\n<output omitted>\n... \n identityProviders:        \n  - challenge: true   \n    login: true                        \n    mappingMethod: claim       \n    name: anypassword        \n    provider:            \n      apiVersion: v1\n      kind: HTPasswdPasswordIdentityProvider\n      file: /etc/origin/master/.htpasswd\n...\n<output omitted>\n...\n```", "```\n# systemctl restart origin-master-api\n```", "```\n...\n<output omitted>\n...\n  identityProviders:        \n  - challenge: true   \n    login: true                        \n    mappingMethod: claim       \n    name: ldap               \n    provider:            \n      apiVersion: v1\n      kind: LDAPPasswordIdentityProvider   \n      attributes:        \n        id:                                  \n          - dn                               \n        email:                               \n          - mail                             \n        name:                                \n          - cn                               \n        preferredUsername:                   \n          - uid                              \n     insecure: true                          \n     bindDN: 'uid=openshift_admin,cn=users,cn=accounts,dc=example,dc=com'        \n     bindPassword: 'secretpassword'          \n     url: 'ldap://idm.example.com/cn=users,cn=accounts,dc=example,dc=com?uid'\n...\n<output omitted>\n... \n```", "```\n$ oc get clusterrole\nNAME\nadmin\nbasic-user\ncluster-admin\n```", "```\n\n...\n<output omitted>\n...\nview\n```", "```\n$ oc describe clusterrole/edit\n...\n<output omitted>\n...\n```", "```\n$ oc describe clusterrole/view\n...\n<output omitted>\n...\n```", "```\n$ oc login -u aliceAuthentication required for https://192.168.99.100:8443 (openshift)\nUsername: alice\nPassword: <anypassword>\nLogin successful.\n```", "```\n$ oc new-project alice-project\nNow using project \"alice-project\" on server \"https://192.168.99.100:8443\".\n...\n<output omitted>\n...\n```", "```\n$ oc login -u bob\nUsername: bob\nPassword: <anypassword>\nLogin successful.\n\n$ oc project alice-project\nerror: You are not a member of project \"alice-project\".\nYou are not a member of any projects. You can request a project to be created with the 'new-project' command.\nTo see projects on another server, pass '--server=<server>'.\n```", "```\n$ oc login -u alice\n...\n<output omitted>\n...\nUsing project \"alice-project\".\n\n$ oc adm policy add-role-to-user edit bob\nrole \"edit\" added: \"bob\"\n```", "```\n$ oc get rolebinding\nNAME                    ROLE   USERS GROUPS  SERVICE ACCOUNTS   SUBJECTS\nadmin                   /admin                  alice\nedit                    /edit                   bob\nsystem:deployers        /system:deployer                                                         deployer\nsystem:image-builders   /system:image-builder                                                    builder\nsystem:image-pullers    /system:image-puller              system:serviceaccounts:alice-project\n```", "```\n$ oc describe rolebinding edit\nName:                          edit\nNamespace:                     alice-project\nCreated:                       17 hours ago\nLabels:                        <none>\nAnnotations:                   <none>\nRole:                          /edit\nUsers:                         bob\n...\n<output omitted>\n...\n```", "```\n$ oc login -u bob\nLogged into \"https://192.168.99.100:8443\" as \"bob\" using existing credentials.\n\nYou have one project on this server: \"alice-project\"\n\nUsing project \"alice-project\".\n```", "```\n$ oc login -u system:admin\n...\n$ oc create clusterrole alice-project-edit --verb=get,list,watch --\n```", "```\nresource=namespace,project\nclusterrole \"alice-project-edit\" created\n```", "```\n$ oc edit clusterrole/alice-project-edit\n...\n<output omitted>\n...\n- apiGroups:\n  - \"\"  # DO NOT MISS THIS LINE OR IT IS NOT GOING TO WORK  \n  attributeRestrictions: null\n  resources:\n  - pods\n  verbs:\n  - create\n  - get\n  - list\n  - watch\n\nclusterrole \"alice-project-edit\" edited\n```", "```\n$ oc adm policy remove-role-from-user edit bob\nrole \"edit\" removed: \"bob\"\n```", "```\n$ oc adm policy add-role-to-user alice-project-edit bob\nrole \"alice-project-edit\" added: \"bob\"\n```", "```\n$ oc login -u bob\n...\n```", "```\n$ cat nginx-pod.yml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx\n  labels:\n    role: web\nspec:\n  containers:\n  - name: nginx\n    image: nginx\n    resources:\n      requests:\n        cpu: 100m\n        memory: 128Mi\n\n$ oc create -f nginx-pod.yml\npod \"nginx\" created\n\n$ oc get po\nNAME  READY STATUS RESTARTS AGE\nnginx 0/1   Error  0        2h\n```", "```\n$ oc logs -f nginx \nError from server (Forbidden): pods \"nginx\" is forbidden: User \"bob\" cannot get pods/log in the namespace \"alice-project\": User \"bob\" cannot get pods/log in project \"alice-project\"\n```", "```\n$ oc login -u system:admin\n...\n<output omitted>\n...\n$ oc edit clusterrole/alice-project-edit\n...\n<output omitted>\n...\n- apiGroups:\n  - \"\"\n  attributeRestrictions: null\n  resources:\n  - pods\n  - pods/log\n  verbs:\n  - get\n```", "```\n\n$ oc login -u bob\n...\n<output omitted>\n...\n```", "```\n$ oc logs -f nginx \n2018/07/18 02:44:31 [warn] 1#1: the \"user\" directive makes sense only if the master process runs with super-user privileges, ignored in /etc/nginx/nginx.conf:2\nnginx: [warn] the \"user\" directive makes sense only if the master process runs with super-user privileges, ignored in /etc/nginx/nginx.conf:2\n2018/07/18 02:44:31 [emerg] 1#1: mkdir() \"/var/cache/nginx/client_temp\" failed (13: Permission denied)\nnginx: [emerg] mkdir() \"/var/cache/nginx/client_temp\" failed (13: Permission denied)\n```", "```\n$ oc login -u system:admin\n...\n<output omitted>\n...\n\n$ oc delete po/nginx \npod \"nginx\" deleted\n\n$ oc adm policy add-scc-to-user anyuid -z default\nscc \"anyuid\" added to: [\"system:serviceaccount:alice-project:default\"]\n\n$ oc login -u bob\n...\n<output omitted>\n...\n```", "```\n$ oc create -f nginx-pod.yml\npod \"nginx\" created $ oc get po \nNAME  READY STATUS  RESTARTS AGE\nnginx 1/1   Running 0        2h\n```", "```\n$ oc expose po/nginx --port=80\nError from server (Forbidden): User \"bob\" cannot create services in the namespace \"alice-project\": User \"bob\" cannot create services in project \"alice-project\" (post services)\n```", "```\n$ oc login -u system:admin\n... <output omitted>\n...\n$ oc delete po/nginx\npod \"nginx\" deleted\n$ oc adm policy remove-role-from-user alice-project-edit bob\nrole \"alice-project-edit\" removed: \"bob\"\n$ oc delete clusterrole alice-project-edit\nclusterrole \"alice-project-edit\" deleted\n```", "```\n$ minishift stop\n...\n```", "```\n$ vagrant up\n...\n<output omitted>\n...\n```", "```\n$ vagrant ssh openshift\n$ sudo -i\n```", "```\n# cat /etc/origin/master/master-config.yaml\n...\n<output omitted>\n...\nadmissionConfig:\n  pluginConfig:\n    BuildDefaults:\n      configuration:\n        apiVersion: v1\n        env: []\n```", "```\n\n        kind: BuildDefaultsConfig\n        resources:\n          limits: {}\n          requests: {}\n    BuildOverrides:\n      configuration:\n        apiVersion: v1\n        kind: BuildOverridesConfig\n    PodPreset:\n      configuration:\n        apiVersion: v1\n        disable: false\n        kind: DefaultAdmissionConfig\n    openshift.io/ImagePolicy:\n      configuration:\n        apiVersion: v1\n        executionRules:\n        - matchImageAnnotations:\n          - key: images.openshift.io/deny-execution\n            value: 'true'\n          name: execution-denied\n          onResources:\n          - resource: pods\n          - resource: builds\n          reject: true\n          skipOnResolutionFailure: true\n        kind: ImagePolicyConfig\n...\n<output omitted>\n...\n```", "```\nadmissionConfig:\n  pluginConfig:\n    ProjectRequestLimit:\n      configuration:\n        apiVersion: v1\n        kind: ProjectRequestLimitConfig\n        limits:\n        - selector:\n            department: ops\n          maxProjects: 2\n        - maxProjects: 3\n...\n<output omitted>\n...\n```", "```\n# systemctl restart origin-master-api\n```", "```\n$ oc login -u alice Username: alice\nPassword: supersecret\nLogin successful\n```", "```\n$ oc login -u system:admin\n```", "```\n$ oc label user/alice department=ops\nuser \"alice\" labeled\n```", "```\n$ oc login -u alice\n```", "```\n$ oc new-project alice-project-1\n...\n$ oc new-project alice-project-2\n...\n$ oc new-project alice-project-3\nError from server (Forbidden): projectrequests.project.openshift.io \"alice-project-3\" is forbidden: user alice cannot create more than 2 project(s).\n```", "```\n$ htpasswd /etc/origin/master/.users bob\nNew password: supersecret\nRe-type new password: supersecret\nAdding password for user bob\n```", "```\n$ oc login -u bob Username: bob Password: supersecret Login successful\n```", "```\n$ oc new-project bob-project-1\n...\n$ oc new-project bob-project-2\n...\n$ oc new-project bob-project-3\n...\n$ oc new-project bob-project-4\nError from server (Forbidden): projectrequests.project.openshift.io \"bob-project-4\" is forbidden: user bob cannot create more than 3 project(s).\n```", "```\n$ oc delete project bob-project-{1..3}\nproject \"bob-project-1\" deleted\nproject \"bob-project-2\" deleted\nproject \"bob-project-3\" deleted\n$ oc login -u alice\n...\n$ oc delete project alice-project-{1,2}\nproject \"alice-project-1\" deleted\nproject \"alice-project-2\" deleted\n```", "```\n# sed -i '/ProjectRequestLimit/,+8d' /etc/origin/master/master-config.yaml\n# systemctl restart origin-master-api\n# exit \n$ exit \n```", "```\n$ vagrant halt\n...\n```", "```\n$ minishift start --openshift-version 3.9.0 --vm-driver virtualbox\n...\n<output omitted>\n...\n```", "```\n$ oc login -u system:admin ...\n<output omitted>\n... $ oc get scc\nanyuid                ...\nhostaccess            ...\nhostmount-anyuid      ...\nhostnetwork           ...\nnonroot               ...\nprivileged            ...\nrestricted            ...\n```", "```\n$ docker inspect nginx\n[\n    {\n...\n<output omitted>\n...\n            \"User\": \"\",\n...\n<output omitted>\n...\n    }\n]\n```", "```\n$ oc create sa myserviceaccount\nserviceaccount \"myserviceaccount\" created\n```", "```\n$ oc adm policy add-scc-to-user anyuid -z myserviceaccount scc \"anyuid\" added to: [\"system:serviceaccount:myproject:myserviceaccount\"]\n```", "```\n$ cat nginx-pod2.yml \napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx\n  labels:\n    role: web\nspec:\n  containers:\n  - name: nginx\n    image: nginx\n    resources:\n      requests:\n        cpu: 100m\n        memory: 128Mi\n  serviceAccountName: myserviceaccount\n```", "```\n$ oc create -f nginx-pod2.yml \npod \"nginx\" created\n$ oc get po\nNAME      READY     STATUS    RESTARTS   AGE\nnginx     1/1       Running   0          15s\n```", "```\n$ oc delete po/nginx\npod \"nginx\" deleted\n```", "```\n$ oc login -u system:admin\n..\n<output omitted>\n...\n```", "```\n$ oc get secret\nNAME                               TYPE                                  DATA      AGE\nbuilder-dockercfg-2bpc7            kubernetes.io/dockercfg               1         4d\nbuilder-token-2cdj5                kubernetes.io/service-account-token   4         4d\nbuilder-token-8lhrx                kubernetes.io/service-account-token   4         4d\ndefault-dockercfg-wggrl            kubernetes.io/dockercfg               1         4d\ndefault-token-7cljg                kubernetes.io/service-account-token   4         4d\ndefault-token-mg64x                kubernetes.io/service-account-token   4         4d\ndeployer-dockercfg-kd88d           kubernetes.io/dockercfg               1         4d\ndeployer-token-5rf6f               kubernetes.io/service-account-token   4         4d\ndeployer-token-k8lwh               kubernetes.io/service-account-token   4         4d\nmyserviceaccount-dockercfg-n6lg7   kubernetes.io/dockercfg               1         4d\nmyserviceaccount-token-fxwpn       kubernetes.io/service-account-token   4         4d\nmyserviceaccount-token-k4d5g       kubernetes.io/service-account-token   4         4d\n```", "```\n$ oc edit secret/default-dockercfg-wggrl \n# Please edit the object below. Lines beginning with a '#' will be ignored,\n# and an empty file will abort the edit. If an error occurs while saving this file will be\n# reopened with the relevant failures.\n#\napiVersion: v1\ndata:\n .dockercfg: ... <output omitted> ...\nkind: Secret\n...\n<output omitted>\n...\n```", "```\n$ python -c \"import base64, json; secret_json = base64.b64decode('...<base64-encoded value of .dockercfg from the secret>...'); parsed = json.loads(secret_json); print json.dumps(parsed, indent=4, sort_keys=True)\"\n$ {\n    \"172.30.1.1:5000\": {\n        \"auth\": \"c2Vydmlj...<output omitted>...ZkFRTEE=\", \n        \"email\": \"serviceaccount@example.org\", \n        \"password\": \"eyJhbGci...<output omitted>...wVBfAQLA\", \n        \"username\": \"serviceaccount\"\n    }, \n    \"docker-registry.default.svc:5000\": {\n        \"auth\": \"c2Vydmlj...<output omitted>...ZkFRTEE=\", \n        \"email\": \"serviceaccount@example.org\", \n        \"password\": \"eyJhbGci...<output omitted>...wVBfAQLA\", \n        \"username\": \"serviceaccount\"\n    }\n}\n```", "```\n$ python -c \"import base64; print base64.b64decode('c2Vydmlj...<output omitted>...ZkFRTEE=')\"\n$ serviceaccount:eyJhbGci...<output omitted>...wVBfAQLA\n```", "```\n$ openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout ssl.key -out ssl.crt\nGenerating a 2048 bit RSA private key\n.............+++\n..............+++\nwriting new private key to 'ssl.key'\n-----\nYou are about to be asked to enter information that will be incorporated\ninto your certificate request.\nWhat you are about to enter is what is called a Distinguished Name or a DN.\nThere are quite a few fields but you can leave some blank\nFor some fields there will be a default value,\nIf you enter '.', the field will be left blank.\n-----\nCountry Name (2 letter code) [XX]:US\nState or Province Name (full name) []:AZ\nLocality Name (eg, city) [Default City]:Phoenix\nOrganization Name (eg, company) [Default Company Ltd]:ACME\nOrganizational Unit Name (eg, section) []:IT\nCommon Name (eg, your name or your server's hostname) []:localhost\nEmail Address []:\n```", "```\n$ cat nginx_custom_default.conf \nserver {\n    listen       80;\n    listen       443 ssl;\n```", "```\n\n    server_name  localhost;\n    ssl_certificate     ssl/..data/tls.crt;\n    ssl_certificate_key ssl/..data/tls.key;\n    location / {\n        root   /usr/share/nginx/html;\n        index  index.html index.htm;\n    }\n}\n```", "```\n$ oc create cm nginx --from-file nginx_custom_default.conf \nconfigmap \"nginx\" created\n```", "```\n$ oc create secret tls nginx --cert ssl.crt --key ssl.key \nsecret \"nginx\" created\n```", "```\n$ oc export secret/nginx\napiVersion: v1\ndata:\n  tls.crt: ...<base64-encoded certificate>...\n  tls.key: ...<base64-encoded key>...\nkind: Secret\nmetadata:\n  creationTimestamp: null\n  name: nginx\ntype: kubernetes.io/tls\n```", "```\n$ cat nginx-pod3.yml \napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx\n  labels:\n    role: web\nspec:\n  containers:\n  - name: nginx\n    image: nginx\n    resources:\n      requests:\n        cpu: 100m\n        memory: 128Mi\n    volumeMounts:\n      - name: conf\n        mountPath: /etc/nginx/conf.d\n      - name: tls\n        mountPath: /etc/nginx/ssl\n  volumes:\n    - name: conf\n      configMap:\n        name: nginx\n        items:\n          - key: nginx_custom_default.conf\n            path: default.conf\n    - name: tls\n      secret:\n        secretName: nginx\n  serviceAccountName: myserviceaccount\n```", "```\n$ oc create -f nginx-pod3.yml \npod \"nginx\" created\n```", "```\n$ oc get po\nNAME    READY   STATUS            RESTARTS   AGE\n```", "```\n\nnginx    0/1    ContainerCreating   0         3s\nnginx    1/1    Running   0         7s\n```", "```\n$ oc rsh nginx ls -l /etc/nginx/ssl\ntotal 0\nlrwxrwxrwx 1 root root 14 Apr 25 11:21 tls.crt -> ..data/tls.crt\nlrwxrwxrwx 1 root root 14 Apr 25 11:21 tls.key -> ..data/tls.key\n```", "```\n$ oc rsh nginx df -h\nFilesystem Size Used Avail Use% Mounted on\noverlay 19G 2.0G 17G 11% /\ntmpfs 1000M 0 1000M 0% /dev\ntmpfs 1000M 0 1000M 0% /sys/fs/cgroup\n/dev/sda1 19G 2.0G 17G 11% /etc/hosts\nshm 64M 0 64M 0% /dev/shm\ntmpfs 1000M 8.0K 1000M 1% /etc/nginx/ssl\ntmpfs 1000M 16K 1000M 1% /run/secrets/kubernetes.io/serviceaccount\ntmpfs 1000M 0 1000M 0% /proc/scsi\ntmpfs 1000M 0 1000M 0% /sys/firmware\n```", "```\n$ oc expose po/nginx --port 443\nservice \"nginx\" exposed\n```", "```\n$ oc expose svc/nginx\nroute \"nginx\" exposed\n```", "```\n$ oc get route\nNAME   HOST/PORT  PATH   SERVICES  PORT   TERMINATION  WILDCARD\nnginx     nginx-myproject.192.168.42.43.nip.io             nginx      443                     None\n```", "```\n$ oc patch route/nginx -p '{\"spec\" : {\"tls\": {\"termination\": \"passthrough\"}}}'\nroute \"nginx\" patched\n```", "```\n$ oc delete all --all\nroute \"nginx\" deleted\npod \"nginx\" deleted\nservice \"nginx\" deleted\n$ oc delete cm/nginx secret/nginx\nconfigmap \"nginx\" deleted\nsecret \"nginx\" deleted\n```"]