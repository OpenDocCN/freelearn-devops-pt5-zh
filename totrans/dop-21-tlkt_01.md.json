["```\ngit clone https://github.com/vfarcic/go-demo.git\n\ncd go-demo\n\n```", "```\ndocker-machine create -d virtualbox go-demo\n\n```", "```\ndocker-machine env go-demo\n\n```", "```\nexport DOCKER_TLS_VERIFY=\"1\"\nexport DOCKER_HOST=\"tcp://192.168.99.100:2376\"\nexport DOCKER_CERT_PATH=\"/Users/vfarcic/.docker/machine/machines/go-demo\"\nexport DOCKER_MACHINE_NAME=\"go-demo\"\n\n```", "```\neval $(docker-machine env go-demo)\n\n```", "```\ncat docker-compose-test-local.yml\n\n```", "```\nunit:\n    image: golang:1.6\n    volumes:\n      - .:/usr/src/myapp\n      - /tmp/go:/go\n    working_dir: /usr/src/myapp\n    command: bash -c \"go get -d -v -t && go test --cover -v \\\n./... && go build -v-o go-demo\"\n\n```", "```\ndocker-compose \\ \n    -f docker-compose-test-local.yml \\ \n    run --rm unit\n\n```", "```\nls -l *go-demo*\n\n```", "```\nFROM alpine:3.4\nMAINTAINER Viktor Farcic <viktor@farcic.com>\n\nRUN mkdir /lib64 && ln -s /lib/libc.musl-x86_64.so.1 /lib64/ld-linux-x86-64.so.2\n\nEXPOSE 8080\nENV DB db\nCMD [\"go-demo\"]\nHEALTHCHECK --interval=10s CMD wget -qO- localhost:8080/demo/hello\n\nCOPY go-demo /usr/local/bin/go-demo\nRUN chmod +x /usr/local/bin/go-demo\n\n```", "```\ndocker build -t go-demo .\n\n```", "```\n app:\n    build: .\n    image: go-demo\n\n```", "```\ndocker-compose \\ \n    -f docker-compose-test-local.yml \\ \n    build app\n\n```", "```\ndocker images\n\n```", "```\nREPOSITORY TAG    IMAGE ID     CREATED        SIZE\ngo-demo    latest 5e90126bebf1 49 seconds ago 23.61 MB\ngolang     1.6    08a89f0a4ee5 11 hours ago   744.2 MB\nalpine     latest 4e38e38c8ce0 9 weeks ago    4.799 MB\n\n```", "```\n staging-dep:\n    image: go-demo\n    ports:\n      - 8080:8080\n    depends_on:\n      - db\n\n  db:\n    image: mongo:3.2.10\n\n```", "```\ndocker-compose \\ \n    -f docker-compose-test-local.yml \\\n    up -d staging-dep\n\n```", "```\ndocker-compose \\ \n    -f docker-compose-test-local.yml \\\n    ps\n\n```", "```\nName                 Command               State Ports\n---------------------------------------------------------------------\ngodemo_db_1          /entrypoint.sh mongod Up    27017/tcp\ngodemo_staging-dep_1 go-demo               Up    0.0.0.0:8080->8080/tcp\n\n```", "```\n staging:\n    extends:\n      service: unit\n    environment:\n      - HOST_IP=localhost:8080\n    network_mode: host\ncommand: bash -c \"go get -d -v -t && go test --tags integration -v\"\n\n```", "```\ndocker-compose \\ \n    -f docker-compose-test-local.yml \\ \n    run --rm staging\n\n```", "```\ndocker-compose \\ \n    -f docker-compose-test-local.yml \\ \n    down\n\n```", "```\ndocker-compose \\ \n    -f docker-compose-test-local.yml \\ \n    ps\n\n```", "```\nName   Command   State   Ports\n------------------------------\n\n```", "```\n registry:\n    container_name: registry\n    image: registry:2.5.0\n    ports:\n      - 5000:5000\n    volumes:\n      - .:/var/lib/registry\n    restart: always\n\n```", "```\ndocker-compose \\ \n    -f docker-compose-local.yml \\ \n    up -d registry\n\n```", "```\ndocker pull alpine\n\ndocker tag alpine localhost:5000/alpine\n\ndocker push localhost:5000/alpine\n\n```", "```\nls -1 docker/registry/v2/repositories/alpine/\n\n```", "```\n_layers\n_manifests\n_uploads\n\n```", "```\ndocker tag go-demo localhost:5000/go-demo:1.0\n\ndocker push localhost:5000/go-demo:1.0\n\n```", "```\ndocker-machine rm -f go-demo\n\n```"]