- en: Jira Security
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Security is one of the most important aspects of any information system. With
    Jira, this includes managing different levels of access and ensuring that information
    is accessible only to authorized users.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we will cover the different levels of access control in Jira.
    We will also cover other security-related topics, including enforcing password
    strength and capturing and auditing changes in Jira for regulatory compliance.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following recipes:'
  prefs: []
  type: TYPE_NORMAL
- en: Granting access to Jira
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Granting Jira System Administrator access
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Controlling access to a project
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Controlling access to Jira issue operations
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Allowing users to control permissions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Delegating administrator permissions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Restricting access to projects based on reporter permissions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up password policies
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Capturing electronic signatures for changes
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changing the duration of the 'remember me' cookies
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changing the default session timeout
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Granting access to Jira
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Since Jira is now a platform that includes Jira Core, Jira Software, Jira Service
    Desk, and other third-party applications, you can have multiple applications running
    on the same platform instance. This is because user access is granted on a per-application
    level. In this recipe, we will look at managing access to applications in Jira.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To grant Jira access to a group, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in to Jira as a Jira Administrator.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Navigate to Administration> Applications > Application access.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Select and add the group to gain access to the application:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/96427a6f-a713-4916-ba5e-9d8d00890870.png)'
  prefs: []
  type: TYPE_IMG
- en: It's time to look at how the steps work.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Starting with JIRA 7, Atlassian introduced the new concept of **applications**.
    This turns Jira into a platform, and major features, such as JIRA Agile (now called
    Jira Software) and Jira Service Desk, are now separate applications that run on
    the Jira platform. These changes mean that you can now control user access to
    each of the applications individually. Instead of using permissions to control
    who can access Jira, you can assign access rights based on the application.
  prefs: []
  type: TYPE_NORMAL
- en: When it comes to granting access to applications, you can only do that through groups.
    So, you need to ensure that you have designed your groups appropriately in order
    for users to have access to the correct applications.
  prefs: []
  type: TYPE_NORMAL
- en: If you are in a group with Jira Administrators global permission (refer to the
    next recipe), such as `jira-administrators`, but the group does not have access
    to the Jira Software application, then you will still be able to log in to Jira
    and perform administrative tasks, but you will not have access to any projects
    and issues.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you have assigned more than one group to an application from the application
    access page, you can select one or more groups as the default group. This means
    that, when new users are added to the system, they will be automatically added
    to the default group, so they can start using Jira right away.
  prefs: []
  type: TYPE_NORMAL
- en: Granting Jira System Administrator access
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous recipe, we demonstrated how to grant access to applications
    in Jira to users. In this recipe, we will take a look at how to grant administrative
    access to users. In the same way as granting user access, you can only grant administrative
    access to a group of users.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To grant administrative access to a group in Jira, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to Administration > System > Global permissions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Select the Jira System Administratorsoption from the **Permissions** list,
    and select the group you want to grant access to, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/e9f30c90-303c-4815-a5a7-b290493ed092.png)'
  prefs: []
  type: TYPE_IMG
- en: Let's understand the working now.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are two levels of administrative access in Jira: **Jira Administrator** and **Jira
    System Administrator**. For the most part, they have identical functions when
    it comes to Jira configurations, such as custom fields and workflows. Jira System
    Administrators have additional access to system-wide application configurations,
    such as the SMTP mail server configuration, installing apps, and updating Jira
    licenses.
  prefs: []
  type: TYPE_NORMAL
- en: Out of the box, the `jira-administrators` group has the global permissions of
    both Jira Administrator and Jira System Administrator. If you want to distinguish
    between the two different levels of administration, you can create two separate
    groups and grant them different permissions.
  prefs: []
  type: TYPE_NORMAL
- en: Controlling access to a project
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous recipes, we looked at how to use global permissions to control
    Jira access and administrator-level access. In this recipe, we will demonstrate
    how to control project-level permissions, starting with access to projects.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To control project-level access, we use permission schemes. Jira comes with
    a default permission scheme, which is applied automatically to all projects. You
    can use this scheme and update its permission settings directly. For this recipe,
    we will start by creating a new permission scheme to illustrate the whole process.
    If you want to just use the default scheme, you can skip the first three steps.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'First, we need to create a new permission scheme, which can be done through
    the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to Administration > Issues > Permission schemes.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Add Permission Scheme **button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the new scheme's name and click on Add.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: With the permission scheme created, we then need to grant permissions to users
    and groups, namely, the Browse Projectspermission, which controls access to projects.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the Permissions link for the new permission scheme.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the Edit link for the Browse Projects permission.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Select who to grant the permission to. For example, if you want to limit access
    to only members of a group, you can select the Group option, choose the target
    group, and click on Grant:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/1bc6f798-065a-4831-815a-98288575b93f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We can grant permissions to multiple users and groups, and, once finished,
    we can apply the permission scheme to the project that we want:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to the project that you want to apply the permission scheme to and click
    on the Administration tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Select the Permissions option on the left-hand side, and click on the Use a
    different scheme option from the Actions menu:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/171b6c35-fc0e-4970-a5da-222033b8d9a8.png)'
  prefs: []
  type: TYPE_IMG
- en: Select the new permission scheme and click on Associate.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Permission schemes define project-level permissions. Unlike global permissions,
    which can only be granted to groups, these can be granted to specific users, groups,
    project roles, and more. The option you choose here will depend on your use case.
    Generally speaking, groups will be the most straightforward option, as users often
    belong to one or more groups and you can easily model your permission requirements
    based on groups. Other options are useful when you have special or edge cases
    where you need to accommodate users that do not fit into your group setup. Once
    the permission scheme is configured, you can apply the scheme to individual projects.
    In this way, different projects can have different permission schemes to suit
    their needs.
  prefs: []
  type: TYPE_NORMAL
- en: Controlling access to Jira issue operations
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this recipe, we will take a look at permissions that control issue operations.
    These are the operations that your end users will perform on a daily basis, including
    create, edit, delete, comment, and more.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Just as we saw in the previous recipe, you can either use an existing permission
    scheme or create a new permission scheme. For this recipe, we will continue working
    with the permission scheme that we created previously.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To set up permission schemes for issue operations, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to the project that you want to apply the permission scheme to and click
    on the Administration tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Select the Permissions option on the left-hand side and click on the Edit Permissions option
    from the Actions menu:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/0905733a-bc6e-43e3-951e-08a875b67db2.png)'
  prefs: []
  type: TYPE_IMG
- en: Click on the Edit link for the permissions that you want to update, such as Create
    Issue and Edit Issue. Note that issue-related permissions are grouped under the Issue
    permissions heading.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the target to grant the permission to and click on Grant.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If in doubt, or if you have users reporting permission-related issues, you
    can always use the Permission helper tool (shown in the following screenshot)
    to check your configurations. All you have to do is enter the user''s username,
    select an issue that is in the project, choose the type of permission, and click
    on Submit. The tool will go through your permission configurations and display
    a report that explains what is required for the selected permission so that you
    can work out why the user does or does not have the selected permission:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f9f3416a-5a7c-4108-89c0-030608597a8f.png)'
  prefs: []
  type: TYPE_IMG
- en: You will always be asked to select an issue when using the Permission helper
    tool, even if you want to check a project-level permission, such as administer
    projects. In this case, simply select an issue that belongs to the project, and
    the tool will verify the permission for you.
  prefs: []
  type: TYPE_NORMAL
- en: Allowing users to control permissions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When you have a mixed group of users (such as internal employees and outside
    consultants) working on the same Jira project, there will be instances regarding
    sensitive information that should only be viewed by internal employees. In these
    cases, you will want to mark those instances as internal only, so that other people
    cannot see them.
  prefs: []
  type: TYPE_NORMAL
- en: In this recipe, we will demonstrate how to set up permissions to control access
    at the issue level with issue security schemes.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The steps for setting up issue-level permissions are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Since Jira does not come with any default issue security schemes, the first
    step is to create a new one from scratch:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Navigate to Administration > Issues > Issue security schemes.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the Add issue security schemelink.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter a name for the new scheme and then click on Add.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The second step is to set up the security levels that you can choose from,
    such as Internal Users Only:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the Security Levelslink for our new issue security scheme.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name for each security level and click on the Add Security Level button.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: You can also click on the Default link to make a security level the default
    choice. This will pre-select the default security level while creating new issues
    in projects that are using the issue security scheme.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows the three existing security levels:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/3cbf1d13-7c76-454e-af81-10ed21376833.png)'
  prefs: []
  type: TYPE_IMG
- en: 'After we have set up the security levels, the third step is to grant users
    access to each of the security levels that you have defined:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Add **link for the security level you want to set up the user
    access for.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the permission option and click on the **Add **button.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The following screenshot displays the different options you have while granting
    security levels:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/609f3b13-9510-4b10-8863-7899983f06af.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now that we have all of the security levels set up, the last step is to apply
    the issue security scheme to our project:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Go to the project you want to apply the issue security scheme to and click on
    the Administration tab.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the **Issue Security **option on the left-hand side and click on the Select
    a scheme option from the Actions menu.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the new issue security scheme and click on Next.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: If the project is not empty, Jira asks you to select a default security level
    for all of the issues. You can select the None option so that all issues remain
    as they are, or you can select a security level that is applied to all issues.
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on the Associate button:'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/5b29a0f5-0f6b-4bb7-a746-e26ccc9e4b76.png)'
  prefs: []
  type: TYPE_IMG
- en: As you can see in the preceding screenshot, the issue security scheme is now
    applied to the project.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The issue security scheme allows you, as an end user, to control who can access
    individual issues, based on the security levels set. Issues with the security
    level can only be viewed by those who meet the criteria. Note that the subtasks
    inherit security levels from their parent issues.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once we have applied the issue security scheme to a project, users with the Set
    Issue Security permission are able to select a security level while creating and
    editing issues, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/f093045c-aad1-4f86-925e-9e89d19ff833.png)'
  prefs: []
  type: TYPE_IMG
- en: If you do not see the Security Level field, make sure the field is added to
    the screen and that you have the Set Issue Security permission. You can use the
    Permission helper feature covered in the previous recipe to verify this.
  prefs: []
  type: TYPE_NORMAL
- en: It is also worth mentioning that you can only select security levels that you
    belong to. For example, if there are two security levels, *A* and *B*, then security
    level *A* is granted to the `jira-administrators` group, and security level *B*
    is granted to the `jira-users` group. Now, as a member of the `jira-users` group,
    you will only be able to select security level *B*. This is to prevent users from
    accidentally locking themselves out of an issue by selecting the wrong security
    level.
  prefs: []
  type: TYPE_NORMAL
- en: 'A user who meets the criteria for the selected security level is able to view
    the issue normally. However, if a user who does not meet the criteria tries to
    view the issue, they get a permission violation error, as shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/754ab64b-05be-44da-8ea4-6844b987a06e.png)'
  prefs: []
  type: TYPE_IMG
- en: This message also informs users that the may have been deleted.
  prefs: []
  type: TYPE_NORMAL
- en: Delegating administrator permissions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Most customization and configuration options, such as workflows and screens,
    are managed by Jira Administrators. While this model may work well for a small
    organization, it often causes a bottleneck for larger organizations, where many
    customizations to these core Jira functions are required and there are only a
    few Jira Administrators who can actually make the necessary changes.
  prefs: []
  type: TYPE_NORMAL
- en: In this recipe, we will look at how you can enable project administrators to
    make some of these customizations themselves without having to rely entirely on
    Jira Administrators.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To allow project administrators to make customization changes, perform the
    following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to Administration > Issues > Permission schemes.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Permissions** link for the permission scheme used by the project.
    If there is no permission scheme specifically for the project, create a new permission
    scheme by first cloning the current scheme used by clicking on the **Copy** link.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Check the **Extended project administration** option under the **Administer
    Projects** permission:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/e25bcd7e-e337-43b8-9f50-acbf1ba2f5ee.png)'
  prefs: []
  type: TYPE_IMG
- en: Once the permission scheme has the Extended project administration option enabled,
    administrators of projects using that permission scheme will be allowed to make
    changes to the project's workflows and screens.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Extended project administration option allows project administrators to
    make changes to workflows and screens with certain limitations:'
  prefs: []
  type: TYPE_NORMAL
- en: Workflows cannot be used by other projects.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Only statuses that already exist in Jira can be added to workflows. Project
    administrators cannot create new statuses.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The existing status in a workflow can be deleted only if no issues in the project
    are currently in the status.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Workflow transitions can be deleted from the workflow, but details such as properties,
    validators, conditions, post-functions, and screens cannot be changed.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Only non-system screens, that is, screens created by Jira Administrators, can
    be updated.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Screens cannot be used by other projects.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Only existing fields, both custom and system, can be added to screens.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Restricting access to projects based on reporter permissions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As you have seen in one of the previous recipes, the Browse Projects permission
    controls who can access a project in Jira. In this recipe, we will set up permissions
    so that users can only see projects they can create issues in and not the projects
    in which they cannot.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Since we will be making direct changes to a Jira system file, make sure you
    create backups for any modified files. This recipe will also require a restart
    of Jira, so plan this during a time slot that will not affect your users.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To restrict access to projects based on who can or cannot report criterion,
    you first need to enable a special permission type, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Open the `permission-types.xml` file from the `JIRA_INSTALL/atlassian-jira/WEB-INF/classes` directory
    in a text editor.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Locate the following lines, and uncomment the `reportercreate` permission type,
    as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Restart Jira for the changes to apply.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the `reportercreate` permission type is enabled, a new Reporter option
    (which shows only projects with create permissions) is displayed while working
    with permission schemes, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/76ca3e85-46c4-452e-a1b9-c67cd0db0824.png)'
  prefs: []
  type: TYPE_IMG
- en: Projects with permission schemes that use this option for the Browse Projects permission
    are viewable only by users who can create issues in them.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The `reportercreate` permission type checks whether the current user has permission
    to create issues in a given project. This is different than the default reporter
    or the current reporter permission type, which make the project visible to all
    users.
  prefs: []
  type: TYPE_NORMAL
- en: Additionally, note that this permission should only be applied to the Browse
    Projects permission. If applied to other permissions, especially the Create Issues permission,
    it causes Jira to go into an infinite loop, and that is the reason why this permission
    type is disabled by default.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'There is also a similar Assignee (which only shows projects with assignable
    permissions) permission type, which can be enabled in the `permission-types.xml` file.
    Similar to the reporter equivalent, this permission type checks whether users
    can be assigned issues in the project. Just like the reporter permission type,
    this should only be applied to the Browse Projects permission:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Setting up password policies
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: By default, Jira allows you to create a password of any combination and length.
    For security, organizations often need to have password policies such as password
    length and complexity to strengthen the passwords and make them difficult to guess.
  prefs: []
  type: TYPE_NORMAL
- en: In this recipe, we will demonstrate how to set up password policies in Jira
    to define the strength of passwords.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To enable and configure the password policy settings, perform the following
    steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to Administration > System > Password Policy.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select from one of the predefined policy settings; alternatively, select the Custom option
    and configure the settings yourself.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on the Update button to enable the password policy, as shown in the following
    screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/f5052a93-144a-453f-8b36-a5b674feae3c.png)'
  prefs: []
  type: TYPE_IMG
- en: Generally, it is better to use the custom option and set your own password policy
    rather than using one of the predefined options, as it gives you more control
    and allows you to enforce more secure passwords for your users.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'With the password policy configured, every time someone tries to create a new
    password, Jira will make sure that the new password satisfies the policy rules.
    If it does not, error messages are displayed with information on the requirements,
    as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/664a9ec5-0550-4f83-9ef9-171c36ff56fb.png)'
  prefs: []
  type: TYPE_IMG
- en: The error messages show that some rules are not satisfied.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Apart from the built-in password policy feature, there is also a third-party
    app called **Enterprise Password Policy for Jira**, which provides features such
    as password age and user account locking to make your Jira compliant with ISO/IEC
    27002\. You can get the app at [https://marketplace.atlassian.com/plugins/com.intenso.jira.plugins.password-policy](https://marketplace.atlassian.com/plugins/com.intenso.jira.plugins.password-policy).
  prefs: []
  type: TYPE_NORMAL
- en: 'After you have installed the app in Jira, there will be a new Password Policy section
    in Manage apps, under Administration. Click on the Configure option and then on Password
    Complexity, and you will be able to set your password policy, as shown in the
    following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ab619309-db95-4f72-823d-0210224e9a64.png)'
  prefs: []
  type: TYPE_IMG
- en: You need to disable the default password policy feature to use this app.
  prefs: []
  type: TYPE_NORMAL
- en: As you can see from the preceding screenshot, there are more options and controls
    for you to define your password policies compared to the out-of-the-box feature
    from Jira.
  prefs: []
  type: TYPE_NORMAL
- en: Capturing electronic signatures for changes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Organizations that have strict regulatory requirements often need to capture **electronic
    signatures** (or **e-signatures**) as issues move along the workflow, for future
    auditing purposes. This is often a part of the CFR Part 11 compliance.
  prefs: []
  type: TYPE_NORMAL
- en: In this recipe, we will look at how to enforce and capture e-signatures when
    someone tries to transition an issue through the workflow.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For this recipe, we need to install the CFR Part 11 E-Signatures app. You can
    download the app at [https://docs.appfusions.com/display/PRT11J/Home](https://docs.appfusions.com/display/PRT11J/Home),
    and then install it in Manage apps in the administration console.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To start capturing electronic signatures, we first need to create an **Electronic
    Signature** custom field:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to Administration > Issues > Custom fields.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the Add Custom Fieldbutton and select the Advanced tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choose the Electronic Signaturecustom field type and click on Next.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Name the custom field `E-Signatures` and click on Next.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select a screen to place the custom field onto. For example, if you want to
    capture signatures when users resolve an issue, you will need to select the screen
    used for the **Resolve Issue **transition.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on the **Update **button:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/02c78b73-4831-45ab-9bf6-1c5c08e74828.png)'
  prefs: []
  type: TYPE_IMG
- en: You need to have a screen for the operations for which you want to capture electronic
    signatures.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Once you have created an Electronic Signature custom field and added it onto
    a screen, such as the Resolve Issue screen, it will be displayed as two text fields:
    one for the username and one for the password.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The workflow transition can only be completed when the user signs the action
    by putting in their username and password, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/353f3ce7-3fda-4e51-b5ee-1ef6baecd33d.png)'
  prefs: []
  type: TYPE_IMG
- en: 'If the signature verification is successful and the transition is complete,
    the electronic signature will be stored, and you can get a report by clicking
    on the new E-Signatures issue tab at the bottom of the web page:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/09cd7312-ba4a-4a29-9729-2df412d4743c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The e-signatures app also has a Restricted Mode option (which is turned off
    by default). This forces users to use their own credentials when providing e-signature. You
    can enable this restricted mode by performing the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to Administration > Manage apps > E-Signature Fields.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Check the Restricted Modeoption and click on Save.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once enabled, the username field is automatically set to the current user's
    username, so you can only sign with your own password.
  prefs: []
  type: TYPE_NORMAL
- en: Changing the duration of the remember me cookies
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When a user selects the Remember my login on this computer checkbox, the user
    doesn't need to re-enter their credentials again from the same browser, unless
    they are explicitly logged out. In addition to this, by default, this feature
    lasts for two weeks.
  prefs: []
  type: TYPE_NORMAL
- en: In this recipe, we will look at how to change the duration, extend it to the
    maximum extent possible, or reduce it to be consistent with your security requirements.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Since we will be making direct changes to a Jira system file, make sure you
    create backups for any files that you modify. This recipe will also require a
    restart of Jira, so plan this during a time slot that will not affect your users.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To change the ''remember me'' cookie duration, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Open the `seraph-config.xml` file from the `JIRA_INSTALL/atlassian-jira/WEB-INF/classes` directory
    in a text editor.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Locate the `autologin.cookie.age` line, and change the value of `param-value`
    to the desired number in seconds:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Restart Jira for the changes to apply.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Jira uses the Seraph framework ([https://docs.atlassian.com/atlassian-seraph/latest](https://docs.atlassian.com/atlassian-seraph/latest))
    to manage its HTTP session cookies. When the Remember me option is checked, it
    creates `seraph.rememberme.cookie`.
  prefs: []
  type: TYPE_NORMAL
- en: The `seraph-config.xml` file is used to configure the Seraph framework and the `autologin.cookie.age` parameter
    is used to set the maximum age for the cookie.
  prefs: []
  type: TYPE_NORMAL
- en: See also
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can refer to the *Changing the default session timeout* recipe for more
    details about how to change the default session timeout setting.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Changing the default session timeout
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: By default, each active user session lasts for five hours (or 300 minutes) of
    idle time. This means that a user can log in and leave the computer for up to
    five hours and their browser session will still remain active.
  prefs: []
  type: TYPE_NORMAL
- en: In this recipe, we will look at how to change the default session timeout.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Since we will be making direct changes to a Jira file, make sure you create
    backups for any files that are modified. This recipe will also require a restart
    of Jira, so plan this during a time slot that will not affect your users.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To change the session timeout settings in Jira, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Open the `web.xml` file from the `JIRA_INSTALL/atlassian-jira/WEB-INF` directory
    in a text editor.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Locate the `<session-config>` line, and change the value of `session-timeout`
    to the desired number in minutes:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Restart Jira for the changes to apply.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Jira uses the standard Java session configuration in the `web.xml` file, which
    defines the session timeout in minutes. You can refer to this at [ht](http://docs.oracle.com/cd/E13222_01/wls/docs81/webapp/web_xml.html#1017275)[tp://docs.oracle.com/cd/E13222_01/wls/docs81/webapp/web_xml.html#1017275](http://docs.oracle.com/cd/E13222_01/wls/docs81/webapp/web_xml.html#1017275).
  prefs: []
  type: TYPE_NORMAL
