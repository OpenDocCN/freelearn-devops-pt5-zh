["```\ncd ..\ngit clone https://github.com/vfarcic/ms-lifecycle.git\ncd ms-lifecycle\nvagrant up cd\nvagrant ssh cd\n\n```", "```\nexit\nvagrant halt\n\n```", "```\nvagrant up cd --provision\nvagrant ssh cd\n\n```", "```\ngit clone https://github.com/vfarcic/books-ms.git\ncd books\n-ms\n\n```", "```\ndocker build \\\n    -f Dockerfile.test \\\n    -t 10.100.198.200:5000/books-ms-tests \\\n    .\ndocker-compose \\\n    -f docker-compose-dev.yml \\\n    run --rm tests\nll target/scala-2.10/\n```", "```\nFROM debian:jessie\nMAINTAINER Viktor Farcic \"viktor@farcic.com\"\nRUN apt-get update && \\\n    apt-get install -y --force-yes --no-install-recommends openjdk-7-jdk && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\nENV DB_DBNAME books\nENV DB_COLLECTION books\nCOPY run.sh /run.sh\nRUN chmod +x /run.sh\nCOPY target/scala-2.10/books-ms-assembly-1.0.jar /bs.jar\nCOPY client/components /client/components\nCMD [\"/run.sh\"]\nEXPOSE 8080\n```", "```\nFROM debian:jessie\n\n```", "```\nMAINTAINER Viktor Farcic \"viktor@farcic.com\"\n\n```", "```\nRUN apt-get update && \\\n    apt-get install -y --force-yes --no-install-recommends openjdk-7-jdk && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n```", "```\nRUN apt-get update\nRUN apt-get install -y --force-yes --no-install-recommends openjdk-7-jdk\nRUN apt-get clean\nRUN rm -rf /var/lib/apt/lists/*\n```", "```\nENV DB_DBNAME books\nENV DB_COLLECTION books\n```", "```\nCOPY run.sh /run.sh\nRUN chmod +x /run.sh\nCOPY target/scala-2.10/books-ms-assembly-1.0.jar /bs.jar\nCOPY client/components /client/components\n```", "```\nCMD [\"/run.sh\"]\nEXPOSE 8080\n\n```", "```\ndocker build -t 10.100.198.200:5000/books-ms .\n\n```", "```\ndocker run -d --name books-db mongo\ndocker run -d --name books-ms \\\n    -p 8080:8080 \\\n    --link books-db:db \\\n    10.100.198.200:5000/books-ms\n```", "```\ndocker exec -it books-ms bash\nenv | grep DB\nexit\n\n```", "```\nDB_NAME=/books-ms/db\nDB_PORT_27017_TCP=tcp://172.17.0.5:27017\nDB_PORT=tcp://172.17.0.5:27017\nDB_ENV_MONGO_VERSION=3.0.5\nDB_PORT_27017_TCP_PORT=27017\nDB_ENV_MONGO_MAJOR=3.0\nDB_PORT_27017_TCP_PROTO=tcp\nDB_PORT_27017_TCP_ADDR=172.17.0.5\nDB_COLLECTION=books\nDB_DBNAME=books\n\n```", "```\ndocker ps -a\ndocker logs books-ms\n\n```", "```\ndocker rm -f books-ms books-db\ndocker ps -a\n\n```", "```\ndocker-compose -f docker-compose-dev.yml up -d app\n\n```", "```\nCreating booksms_db_1\nCreating booksms_app_1\n\n```", "```\napp:\n  image: 10.100.198.200:5000/books-ms\n  ports:- 8080:8080\n  links:- db:db\ndb: image: mongo\n...\n```", "```\ndocker-compose ps\n\n```", "```\n Name               Command          State           Ports\n----------------------------------------------------------------------\nbooksms_app_1   /run.sh                 Up      0.0.0.0:8080->8080/tcp\nbooksms_db_1    /entrypoint.sh mongod   Up      27017/tcp\n\n```", "```\ndocker-compose logs\n\n```", "```\ncurl -H 'Content-Type: application/json' -X PUT -d \\\n  '{\"_id\": 1,\"title\": \"My First Book\",\"author\": \"John Doe\",\"description\": \"Not a very good book\"}' \\\n  http://localhost:8080/api/v1/books | jq '.'\ncurl -H 'Content-Type: application/json' -X PUT -d \\\n  '{\"_id\": 2,\"title\": \"My Second Book\",\"author\": \"John Doe\",\"description\": \"Not a bad as the first book\"}' \\\n  http://localhost:8080/api/v1/books | jq '.'\ncurl -H 'Content-Type: application/json' -X PUT -d \\\n  '{\"_id\": 3,\"title\": \"My Third Book\",\"author\": \"John Doe\",\"description\": \"Failed writers club\"}' \\\n  http://localhost:8080/api/v1/books | jq '.'\ncurl http://localhost:8080/api/v1/books | jq '.'\ncurl http://localhost:8080/api/v1/books/_id/1 | jq '.'\n```", "```\ndocke\nr-compose stop\ndocker-compose rm -f\n\n```", "```\ndocker push 10.100.198.200:5000/books-ms\n\n```", "```\ndocker push 10.100.198.200:5000\n/books-ms-tests\nexit\nvagrant destroy -f\n\n```"]