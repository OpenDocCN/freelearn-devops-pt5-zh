["```\n$ ssh dockerhost\ndockerhost$ lsb_release –a\nNo LSB modules are available.\nDistributor ID: Debian\nDescription:   Debian GNU/Linux 8.2 (jessie)\nRelease:        8.2\nCodename:       jessie\ndockerhost$ docker version\nClient:\n Version:     1.10.0\n API version:  1.21\n Go version:   go1.4.2\n Git commit:   a34a1d5\n Built:        Fri Nov 20 12:59:02 UTC 2015\n OS/Arch:      linux/amd64\n\nServer:\n Version:     1.10.0\n API version:  1.21\n Go version:   go1.4.2\n Git commit:   a34a1d5\n Built:        Fri Nov 20 12:59:02 UTC 2015\n OS/Arch:      linux/amd64\n\n```", "```\n    dockerhost$ git clone https://github.com/docker-training/webapp.git training-webapp\n    Cloning into 'training-webapp'...\n    remote: Counting objects: 45, done.\n    remote: Total 45 (delta 0), reused 0 (de..., pack-reused 45\n    Unpacking objects: 100% (45/45), done.\n    Checking connectivity... done.\n\n    ```", "```\n    dockerhost$ cd training-webapp\n    dockerhost$ docker build -t hubuser/webapp .\n    Sending build context to Docker daemon 121.3 kB\n    Sending build context to Docker daemon\n    Step 0 : FROM ubuntu:14.04\n    Repository ubuntu already being ... another client. Waiting.\n     ---> 6d4946999d4f\n    Step 1 : MAINTAINER Docker Education Team <education@docker.com>\n     ---> Running in 0fd24c915568\n     ---> e835d0c77b04\n    Removing intermediate container 0fd24c915568\n    Step 2 : RUN apt-get update\n     ---> Running in 45b654e66939\n    Ign http://archive.ubuntu.com trusty InRelease\n    ...\n    Removing intermediate container c08be35b1529\n    Step 9 : CMD python app.py\n     ---> Running in 48632c5fa300\n     ---> 55850135bada\n    Removing intermediate container 48632c5fa300\n    Successfully built 55850135bada\n\n    ```", "```\n    dockerhost$ docker images\n    REPOSITORY      TAG      IMAGE ID  CREATED        VIRTUAL SIZE\n    hubuser/webapp  latest   55850135  5 minutes ago  360 MB\n    ubuntu          14.04    6d494699  3 weeks ago    188.3 MB\n\n    ```", "```\n    dockerhost$ docker login\n    Username: hubuser\n    Password: ********\n    Email: hubuser@hubemail.com\n    WARNING: login credentials saved in /home/hubuser/.dockercfg.\n    Login Succeeded\n\n    ```", "```\n    dockerhost$ docker push hubuser/webapp\n    The push refers to a repository [hubuser/webapp] (len: 1)\n    Sending image list\n    Pushing repository hubuser/webapp (1 tags)\n    428b411c28f0: Image already pushed, skipping\n    ...\n    7d04572a66ec: Image successfully pushed\n    55850135bada: Image successfully pushed\n    latest: digest: sha256:b00a3d4e703b5f9571ad6a... size: 2745\n\n    ```", "```\n    dockerhost$ dockerhost rmi hubuser/webapp\n\n    ```", "```\n    dockerhost$ docker pull hubuser/webapp\n    latest: Pulling from hubuser/webapp\n    e9e06b06e14c: Pull complete\n    ...\n    b37deb56df95: Pull complete\n    02a8815912ca: Already exists\n    Digest: sha256:06e9c1983bd6d5db5fba376ccd63bfa529e8d02f23d5\n    Status: Downloaded newer image for hubuser/webapp:latest\n\n    ```", "```\n    dockerhost$ docker images\n    REPOSITORY      TAG     IMAGE ID  CREATED      VIRTUAL SIZE\n    ubuntu          14.04   6d494699  3 weeks ago  188.3 MB\n    hubuser/webapp  latest  2a8815ca  7 weeks ago  348.8 MB\n\n    ```", "```\nimport os\nfrom flask import Flask\napp = Flask(__name__)\n@app.route('/')\ndef hello():\n    provider = str(os.environ.get('PROVIDER', 'world'))\n    return 'Hello '+provider+'!'\nif __name__ == '__main__':\n    # Bind to PORT if defined, otherwise default to 5000.\n port = int(os.environ.get('PORT', 5000))\n    app.run(host='0.0.0.0', port=port)\n```", "```\nFROM ubuntu:14.04\nMAINTAINER Docker Education Team <education@docker.com>\nRUN apt-get update\nRUN DEBIAN_FRONTEND=noninteractive apt-get \\\n        install -y -q python-all python-pip \nADD ./webapp/requirements.txt /tmp/requirements.txt\nRUN pip install -qr /tmp/requirements.txt\nADD ./webapp /opt/webapp/\nWORKDIR /opt/webapp\nEXPOSE 5000\nCMD [\"python\", \"app.py\"]\n```", "```\n    dockerhost$ docker run --name ourapp -d hubuser/webapp\n\n    ```", "```\n    dockerhost:~/training-webapp$ docker ps\n    CONTAINER ID  IMAGE  ...   STATUS        PORTS    NAMES\n    df3e6b788fd8  hubuser...   Up 4 seconds  5000/tcp ourapp\n\n    ```", "```\ndockerhost$ docker run -d --expose=4000-4500 \\\n --name app hubuser/webapp\ndockerhost $ docker ps\nCONTAINER ID   IMAGE      ...              PORTS                   NAMES\nca4dc1da26d    hubuser/webapp:latest  ...  4000-4500/tcp,5000/tcp  app\ndf3e6b788fd8   hubuser/webapp:l...         5000/tcp                ourapp\n\n```", "```\n    dockerhost$ docker run -P –d --name exposed hubuser/webapp\n\n    ```", "```\n    dockerhost$ docker ps\n    CONTAINER ID IMAGE  ...                PORTS                     NAMES\n    508cf1fb3e5  hubuser/webapp:latest ... 0.0.0.0:32771->5000/tcp   exposed\n\n    ```", "```\n    dockerhost$ cat /proc/sys/net/ipv4/ip_local_port_range\n    32768   61000\n\n    ```", "```\n    dockerhost$ ss -lt 'sport = *:32771'\n    State   Recv-Q Send-Q  Local Address:Port Peer Address:Port\n    LISTEN  0      128     :::32771           :::*\n\n    ```", "```\n    $ curl  http://dockerhost:32771\n    Hello world!\n\n    ```", "```\n$ ssh dockerhost\ndockerhost$ docker run -d -p 127.0.0.1:80:5000 training/webapp\ndockerhost$ curl http://localhost\nHello world!\ndockerhost$ exit\nlogout\nConnection to dockerhost closed.\n$ curl http://dockerhost\ncurl: (7) Failed connect to dockerhost:80; Connection refused\n\n```", "```\n    dockerhost$ docker run --name source –d hubuser/webapp\n\n    ```", "```\n    dockerhost$ docker run -d --link source:webapp \\\n     --name destination busybox /bin/ping webapp\n\n    ```", "```\n    dockerhost$ docker inspect -f \"{{ .HostConfig.Links }}\" \\\n     destination\n    [/source:/destination/webapp]\n\n    ```", "```\ndockerhost$ docker inspect -f \"{{ .NetworkSettings.IPAddress }}\" \\\n source\n172.17.0.15\ndockerhost$ docker inspect -f \"{{ .NetworkSettings.IPAddress }}\" \\\n destination\n172.17.0.28\ndockerhost$ iptables -L DOCKER\nChain DOCKER (1 references)\ntarget     prot opt source         destination \nACCEPT     tcp  --  172.17.0.28    172.17.0.15       tcp dpt:5000\nACCEPT     tcp  --  172.17.0.15    172.17.0.28       tcp spt:5000\n\n```", "```\n    dockerhost$ docker run -i -t --link source:webapp \\\n     --name interactive_container \\\n     busybox /bin/sh\n    / # \n\n    ```", "```\n    / # env | grep WEBAPP\n    WEBAPP_NAME=/interactive_container/webapp\n    WEBAPP_PORT_5000_TCP_ADDR=172.17.0.15\n    WEBAPP_PORT_5000_TCP_PORT=5000\n    WEBAPP_PORT_5000_TCP_PROTO=tcp\n    WEBAPP_PORT_5000_TCP=tcp://172.17.0.15:5000\n    WEBAPP_PORT=tcp://172.17.0.15:5000\n\n    ```", "```\n    172.17.0.29     d4509e3da954\n    127.0.0.1       localhost\n    ::1     localhost ip6-localhost ip6-loopback\n    fe00::0 ip6-localnet\n    ff00::0 ip6-mcastprefix\n    ff02::1 ip6-allnodes\n    ff02::2 ip6-allrouters\n    172.17.0.15     webapp 85173b8686fc source\n\n    ```", "```\n    / # nc webapp 5000\n    GET /\n\n    Hello world!\n    / #\n\n    ```"]