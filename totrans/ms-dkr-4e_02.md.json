["```\nFROM alpine:latest\nLABEL maintainer=”Russ McKendrick <russ@mckendrick.io>”\nLABEL description=”This example Dockerfile installs NGINX.”\nRUN apk add --update nginx && \\\n    rm -rf /var/cache/apk/* && \\\n    mkdir -p /tmp/nginx/\nCOPY files/nginx.conf /etc/nginx/nginx.conf\nCOPY files/default.conf /etc/nginx/conf.d/default.conf\nADD files/html.tar.gz /usr/share/nginx/\nEXPOSE 80/tcp\nENTRYPOINT [“nginx”]\nCMD [“-g”, “daemon off;”]\n```", "```\n$ docker image inspect <IMAGE_ID>\n```", "```\n$ docker image inspect -f {{.Config.Labels}} <IMAGE_ID>\n```", "```\nRUN apk add --update nginx && \\\n    rm -rf /var/cache/apk/* && \\\n    mkdir -p /tmp/nginx/\n```", "```\n$ apk add --update nginx\n```", "```\n$ rm -rf /var/cache/apk/*\n```", "```\n$ mkdir -p /tmp/nginx/\n```", "```\nRUN apk add --update nginx\nRUN rm -rf /var/cache/apk/*\nRUN mkdir -p /tmp/nginx/\n```", "```\nCOPY files/nginx.conf /etc/nginx/nginx.conf\nCOPY files/default.conf /etc/nginx/conf.d/default.conf\n```", "```\nuser  nginx;\nworker_processes  1;\nerror_log  /var/log/nginx/error.log warn;\npid        /var/run/nginx.pid;\nevents {\n    worker_connections  1024;\n}\nhttp {\n    include       /etc/nginx/mime.types;\n    default_type  application/octet-stream;\n    log_format  main  ‘$remote_addr - $remote_user [$time_\nlocal] “$request” ‘\n                      ‘$status $body_bytes_sent “$http_referer”\n‘\n                      ‘”$http_user_agent” “$http_x_forwarded_\nfor”’;\n    access_log  /var/log/nginx/access.log  main;\n    sendfile        off;\n    keepalive_timeout  65;\n    include /etc/nginx/conf.d/*.conf;\n}\n```", "```\nserver {\n  location / {\n      root /usr/share/nginx/html;\n  }\n}\n```", "```\nADD files/html.tar.gz /usr/share/nginx/\n```", "```\nADD https://raw.githubusercontent.com/PacktPublishing/Mastering-Docker-Fourth-Edition/master/chapter02/dockerfile-example/files/html.tar.gz /usr/share/nginx/\n```", "```\nEXPOSE 80/tcp\n```", "```\nENTRYPOINT [“nginx”]\nCMD [“-g”, “daemon off;”]\n```", "```\n$ nginx -g daemon off;\n```", "```\n$ docker container run --name nginx-version dockerfile-example\n-v\n```", "```\n$ nginx -v\n```", "```\nONBUILD RUN apk update && apk upgrade && rm -rf /var/cache/\napk/*\n```", "```\n$ docker image build --help\n```", "```\nFROM alpine:latest\nLABEL maintainer=”Russ McKendrick <russ@mckendrick.io>”\nLABEL description=”This example Dockerfile installs NGINX.”\nRUN apk add --update nginx && \\\n    rm -rf /var/cache/apk/* && \\\n    mkdir -p /tmp/nginx/\nCOPY files/nginx.conf /etc/nginx/nginx.conf\nCOPY files/default.conf /etc/nginx/conf.d/default.conf ADD files/html.tar.gz /usr/share/nginx/\nEXPOSE 80/tcp\nENTRYPOINT [“nginx”]\nCMD [“-g”, “daemon off;”]\n```", "```\n$ docker image build --file <path_to_Dockerfile> --tag\n<REPOSITORY>:<TAG> .\n```", "```\n$ docker image build --tag local:dockerfile-example .\n```", "```\n$ docker image ls\n```", "```\n$ docker container run -d --name dockerfile-example -p 8080:80\nlocal:dockerfile-example\n```", "```\n$ docker container ls\n```", "```\n$ docker container run --name nginx-version local:dockerfile-\nexample -v\n```", "```\n$ docker image inspect -f {{.Config.Labels}} local:dockerfile-\nexample\n```", "```\n$ docker container stop dockerfile-example\n$ docker container rm dockerfile-example nginx-version\n```", "```\n$ docker image pull alpine:latest\n```", "```\n$ docker container run -it --name alpine-test alpine /bin/sh\n```", "```\n$ apk update\n$ apk upgrade\n$ apk add --update nginx\n$ rm -rf /var/cache/apk/*\n$ mkdir -p /tmp/nginx/\n$ exit\n```", "```\n$ docker container commit <container_name> <REPOSITORY>:<TAG>\n```", "```\n$ docker container commit alpine-test local:broken-container\n```", "```\n$ docker image save -o <name_of_file.tar> <REPOSITORY>:<TAG>\n```", "```\n$ docker image save -o broken-container.tar local:broken-\ncontainer\n```", "```\nFROM scratch\nADD files/alpine-minirootfs-3.11.3-x86_64.tar.gz /\nCMD [“/bin/sh”]\n```", "```\n$ docker image build --tag local:fromscratch .\n```", "```\n$ docker image ls\n```", "```\n$ docker container run -it --name alpine-test local:fromscratch\n/bin/sh\n```", "```\n$ cat /etc/*release\n```", "```\nENV <key> <value>\nENV username admin\n```", "```\nENV <key>=<value>\nENV username=admin\n```", "```\nENV username=admin database=wordpress tableprefix=wp\n```", "```\n$ docker image inspect <IMAGE_ID>\n```", "```\nFROM alpine:3.8\nLABEL maintainer=”Russ McKendrick <russ@mckendrick.io>”\nLABEL description=”This example Dockerfile installs Apache & PHP.”\nENV PHPVERSION 7\nRUN apk add --update apache2 php${PHPVERSION}-apache2 php${PHPVERSION} && \\\n        rm -rf /var/cache/apk/* && \\\n        mkdir /run/apache2/ && \\\n        rm -rf /var/www/localhost/htdocs/index.html && \\\n        echo “<?php phpinfo(); ?>” > /var/www/localhost/htdocs/index.php && \\\n        chmod 755 /var/www/localhost/htdocs/index.php\nEXPOSE 80/tcp\nENTRYPOINT [“httpd”]\nCMD [“-D”, “FOREGROUND”]\n```", "```\n$ docker build --tag local/apache-php:7 .\n```", "```\nSending build context to Docker daemon   2.56kB\nStep 1/8 : FROM alpine:3.8\n ---> c8bccc0af957\nStep 2/8 : LABEL maintainer=”Russ McKendrick <russ@mckendrick.\nio>”\n ---> Running in 7746dd8cabd0\nRemoving intermediate container 7746dd8cabd0\n ---> 9173a415ed21\nStep 3/8 : LABEL description=”This example Dockerfile installs Apache & PHP.”\n ---> Running in 322e98b9c2e0\nRemoving intermediate container 322e98b9c2e0\n ---> aefb9450e664\nStep 4/8 : ENV PHPVERSION 7\n```", "```\n ---> Running in 0b9e9a5d8956\nRemoving intermediate container 0b9e9a5d8956\n ---> 219afdf8eeb8\nStep 5/8 : RUN apk add --update apache2 php${PHPVERSION}-\napache2 php${PHPVERSION} &&         rm -rf /var/cache/apk/* &&\n         mkdir /run/apache2/ &&         rm -rf /var/www/\nlocalhost/htdocs/index.html &&         echo “<?php phpinfo(); \n?>” > /var/www/localhost/htdocs/index.php &&         chmod 755 \n/var/www/localhost/htdocs/index.php\n ---> Running in 36823df46b29\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.8/main/x86_64/\nAPKINDEX.tar.gz\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.8/community/\nx86_64/APKINDEX.tar.gz\n(1/14) Installing libuuid (2.32-r0)\n(2/14) Installing apr (1.6.3-r1)\n(3/14) Installing expat (2.2.8-r0)\n(4/14) Installing apr-util (1.6.1-r3)\n(5/14) Installing pcre (8.42-r0)\n(6/14) Installing apache2 (2.4.41-r0)\nExecuting apache2-2.4.41-r0.pre-install\n```", "```\n(7/14) Installing php7-common (7.2.26-r0)\n(8/14) Installing ncurses-terminfo-base (6.1_p20180818-r1)\n(9/14) Installing ncurses-terminfo (6.1_p20180818-r1)\n(10/14) Installing ncurses-libs (6.1_p20180818-r1)\n(11/14) Installing libedit (20170329.3.1-r3)\n(12/14) Installing libxml2 (2.9.8-r2)\n(13/14) Installing php7 (7.2.26-r0)\n(14/14) Installing php7-apache2 (7.2.26-r0)\nExecuting busybox-1.28.4-r3.trigger\nOK: 26 MiB in 27 packages\nRemoving intermediate container 36823df46b29\n```", "```\n ---> 842eebf1d363\nStep 6/8 : EXPOSE 80/tcp\n ---> Running in 40494d3b357f\nRemoving intermediate container 40494d3b357f\n ---> 074e10ff8526\nStep 7/8 : ENTRYPOINT [“httpd”]\n ---> Running in a56700cae985\nRemoving intermediate container a56700cae985\n ---> 25b63b51f243\nStep 8/8 : CMD [“-D”, “FOREGROUND”]\n ---> Running in d2c478e67c0c\nRemoving intermediate container d2c478e67c0c\n ---> 966dcf5cafdf\nSuccessfully built 966dcf5cafdf\nSuccessfully tagged local/apache-php:7\n```", "```\n$ docker container run -d -p 8080:80 --name apache-php7 local/\napache-php:7\n```", "```\n$ docker image build --tag local/apache-php:5 .\n```", "```\nSending build context to Docker daemon   2.56kB\nStep 1/8 : FROM alpine:3.8\n ---> c8bccc0af957\nStep 2/8 : LABEL maintainer=”Russ McKendrick <russ@mckendrick.\nio>”\n ---> Using cache\n ---> 9173a415ed21\nStep 3/8 : LABEL description=”This example Dockerfile installs\nApache & PHP.”\n ---> Using cache\n ---> aefb9450e664\nStep 4/8 : ENV PHPVERSION 5\n```", "```\n ---> Running in d6e8dc8b70ce\nRemoving intermediate container d6e8dc8b70ce\n ---> 71896c898e35\nStep 5/8 : RUN apk add --update apache2 php${PHPVERSION}-\napache2 php${PHPVERSION} &&         rm -rf /var/cache/apk/* &&\n         mkdir /run/apache2/ &&         rm -rf /var/www/\nlocalhost/htdocs/index.html &&         echo “<?php phpinfo();\n ?>” > /var/www/localhost/htdocs/index.php &&         chmod 755\n /var/www/localhost/htdocs/index.php\n ---> Running in fb946c0684e4\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.8/main/x86_64/\nAPKINDEX.tar.gz\nfetch http://dl-cdn.alpinelinux.org/alpine/v3.8/community/\nx86_64/APKINDEX.tar.gz\n(1/15) Installing libuuid (2.32-r0)\n(2/15) Installing apr (1.6.3-r1)\n(3/15) Installing expat (2.2.8-r0)\n(4/15) Installing apr-util (1.6.1-r3)\n(5/15) Installing pcre (8.42-r0)\n(6/15) Installing apache2 (2.4.41-r0)\nExecuting apache2-2.4.41-r0.pre-install\n```", "```\n(7/15) Installing php5-common (5.6.40-r0)\n(8/15) Installing ncurses-terminfo-base (6.1_p20180818-r1)\n(9/15) Installing ncurses-terminfo (6.1_p20180818-r1)\n(10/15) Installing ncurses-libs (6.1_p20180818-r1)\n(11/15) Installing readline (7.0.003-r0)\n(12/15) Installing libxml2 (2.9.8-r2)\n(13/15) Installing php5-cli (5.6.40-r0)\n(14/15) Installing php5 (5.6.40-r0)\n(15/15) Installing php5-apache2 (5.6.40-r0)\nExecuting busybox-1.28.4-r3.trigger\nOK: 48 MiB in 28 packages\nRemoving intermediate container fb946c0684e4\n```", "```\n ---> 54cbb6ef4724\nStep 6/8 : EXPOSE 80/tcp\n ---> Running in 59776669f08a\nRemoving intermediate container 59776669f08a\n ---> e34c5c34658d\nStep 7/8 : ENTRYPOINT [“httpd”]\n ---> Running in 037ecfed197c\nRemoving intermediate container 037ecfed197c\n ---> c50bdf3e4b02\nStep 8/8 : CMD [“-D”, “FOREGROUND”]\n ---> Running in 9eccc9131ef9\nRemoving intermediate container 9eccc9131ef9\n ---> 7471b75e789e\nSuccessfully built 7471b75e789e\nSuccessfully tagged local/apache-php:5\n```", "```\n$ docker container run -d -p 9090:80 --name apache-php5 local/apache-php:5\n```", "```\n$ docker image ls\n```", "```\nRUN apk add --update apache2 php${PHPVERSION}-apache2 php${PHPVERSION}\n```", "```\nRUN apk add --update apache2 php7-apache2 php7\n```", "```\nRUN apk add --update apache2 php5-apache2 php5\n```", "```\nFROM alpine:latest\nLABEL maintainer=”Russ McKendrick <russ@mckendrick.io>”\nLABEL description=”An image with the latest version on Consul.”\nENV CONSUL_VERSION 1.7.1\nENV CONSUL_SHA256 09f3583c6cd7b1f748c0c012ce9b3d96de95\na6c0d2334327b74f7d72b1fa5054\nRUN  apk add --update ca-certificates wget && \\\n     wget -O consul.zip https://releases.hashicorp.com/consul/\n${CONSUL_VERSION}/consul_${CONSUL_VERSION}_linux_amd64.zip && \\\n     echo “$CONSUL_SHA256 *consul.zip” | sha256sum -c - && \\\n     unzip consul.zip && \\\n     mv consul /bin/ && \\\n     rm -rf consul.zip && \\\n     rm -rf /tmp/* /var/cache/apk/*\nEXPOSE 8300 8301 8301/udp 8302 8302/udp 8400 8500 8600 8600/udp\nVOLUME [ “/data” ]\nENTRYPOINT [ “/bin/consul” ]\nCMD [ “agent”, “-data-dir”, “/data”, “-server”, “\n-bootstrap-expect”, “1”, “-client=0.0.0.0”]\n```", "```\nFROM golang:latest as builder\nWORKDIR /go-http-hello-world/\nRUN go get -d -v golang.org/x/net/html \nADD https://raw.githubusercontent.com/geetarista/go-http-hello-world/master/hello_world/hello_world.go ./hello_world.go\nRUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o \napp .\nFROM scratch \nCOPY --from=builder /go-http-hello-world/app .\nCMD [“./app”] \n```", "```\n$ docker image build --tag local:go-hello-world .\n```", "```\nSending build context to Docker daemon  2.048kB\nStep 1/8 : FROM golang:latest as builder\nlatest: Pulling from library/golang\n50e431f79093: Pull complete\ndd8c6d374ea5: Pull complete\nc85513200d84: Pull complete\n55769680e827: Pull complete\n15357f5e50c4: Pull complete\n9edb2e455d9d: Pull complete\ned2acfe844ed: Pull complete\nDigest: sha256:d27017d27f9c9a58b361aa36126a29587ffd3b1b274af0\nd583fe4954365a4a59\nStatus: Downloaded newer image for golang:latest\n ---> 25c4671a1478\n```", "```\nStep 2/8 : WORKDIR /go-http-hello-world/\n ---> Running in 9c23e012e016\nRemoving intermediate container 9c23e012e016\n ---> ea0d7e26799e\nStep 3/8 : RUN go get -d -v golang.org/x/net/html\n ---> Running in 17f173992763\nget “golang.org/x/net/html”: found meta tag get.metaImport\n{Prefix:”golang.org/x/net”, VCS:”git”,\n RepoRoot:”https://go.googlesource.com/net”} at\n//golang.org/x/net/html?go-get=1\nget “golang.org/x/net/html”: verifying non-authoritative meta\ntag\ngolang.org/x/net (download)\nRemoving intermediate container 17f173992763\n```", "```\n ---> 68f07e01b0cf\nStep 4/8 : ADD https://raw.githubusercontent.com/geetarista/go-http-hello-world/master/hello_world/hello_world.go ./hello_world.go\nDownloading     393B\n ---> 4fb92adacdb0\nStep 5/8 : RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o app .\n ---> Running in 61a82b417f60\nRemoving intermediate container 61a82b417f60\n ---> 502d219e6869\n```", "```\nStep 6/8 : FROM scratch\n --->\nStep 7/8 : COPY --from=builder /go-http-hello-world/app .\n ---> 2b4a6e6066e5\nStep 8/8 : CMD [“./app”]\n ---> Running in c82089ea8a6b\nRemoving intermediate container c82089ea8a6b\n ---> 5e196ed7f699\nSuccessfully built 5e196ed7f699\nSuccessfully tagged local:go-hello-world\n```", "```\n$ docker image ls\n```", "```\n$ docker container run -d -p 8000:80 --name go-hello-world \nlocal:go-hello-world\n```", "```\n$ curl http://localhost:8000/\n```", "```\n$ docker container stop go-hello-world\n$ docker container rm go-hello-world\n```"]