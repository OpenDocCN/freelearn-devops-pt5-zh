["```\n    $ cd ~/The-Ultimate-Docker-Container-Book\n    ```", "```\n    $ mkdir ch07 && cd ch07\n    ```", "```\n    $ curl -X POST -d '{\"id\": 1, \"name\": \"Elephant\"}' \\    -H 'Content-Type: application/json' \\    localhost:8080/species\n    ```", "```\n{\"id\":1,\"name\":\"Elephant\",\"description\":null}\n```", "```\n    $ curl localhost:8080/species\n    ```", "```\n[{\"id\":1,\"name\":\"Elephant\",\"description\":null}]\n```", "```\n    $ docker image build -t library library\n    ```", "```\n    $ docker container run -d --rm \\    -p 8080:8080 library\n    ```", "```\n    $ docker image build -t library .\n    ```", "```\n    $ docker container run --rm \\    -v $HOME/.m2:/root/.m2    library ./mvnw test\n    ```", "```\n    $ dotnet new xunit -o library-component-tests\n    ```", "```\n    $ dotnet test library-component-tests\n    ```", "```\nPassed!  - Failed:  0, Passed:  1, Skipped:  0, Total:  1, …\n```", "```\n    $ code library-component-tests\n    ```", "```\n    using System.Text.Json;\n    ```", "```\n    public record Species(int id, string name, string description);\n    ```", "```\n    $ docker container run --rm \\    -v $HOME/.m2:/root/.m2    library\n    ```", "```\n    $ dotnet test\n    ```", "```\n    $ docker image build -t library-component-tests \\    library-component-tests\n    ```", "```\n    $ docker image build -t library library\n    ```", "```\n    $ docker container run -d --rm \\    -p 8080:8080 library\n    ```", "```\n    $ docker container run library-component-tests\n    ```", "```\n    CMD java -jar /app/my-app.jar\n    ```", "```\nCMD node index.js\n```"]