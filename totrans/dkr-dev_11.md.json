["```\naws eks --region us-east-2 update-kubeconfig --name EKS- VIVLKQ5X\n```", "```\nkubectl get nodes\n```", "```\nexport AWS_DEFAULT_PROFILE=my-eks-profile\n```", "```\n$ kubectl config get-contexts\nCURRENT   NAME                                                      CLUSTER                                                   AUTHINFO                                                  NAMESPACE\n*         arn:aws:eks:us-east-2:143970405955:cluster/EKS-8PWG76O8   arn:aws:eks:us-east-2:143970405955:cluster/EKS-8PWG76O8   arn:aws:eks:us-east-2:143970405955:cluster/EKS-8PWG76O8\n          docker-desktop                                            docker-desktop                                            docker-desktop\n$ kubectl config use-context docker-desktop\nSwitched to context \"docker-desktop\".\n$ kubectl get nodes\nNAME             STATUS   ROLES    AGE   VERSION\ndocker-desktop   Ready    master   21d   v1.15.5\n$ kubectl config use-context arn:aws:eks:us-east-2:143970405955:cluster/EKS-VIVLKQ5X\nSwitched to context \"arn:aws:eks:us-east-2:143970405955:cluster/EKS-VIVLKQ5X\".\n $ kubectl get nodes\nNAME                                        STATUS   ROLES    AGE    VERSION\nip-10-0-31-183.us-east-2.compute.internal   Ready    <none>   2d9h   v1.15.10-eks-bac369\nip-10-0-57-2.us-east-2.compute.internal     Ready    <none>   2d9h   v1.15.10-eks-bac369\nip-10-0-90-115.us-east-2.compute.internal   Ready    <none>   2d9h   v1.15.10-eks-bac369\n```", "```\nchapter9/bin/deploy-alb-ingress-controller.sh EKS-8PWG76O8\n```", "```\n$ host -t soa eks.example.com eks.example.com has SOA record ns-1372.awsdns-43.org. awsdns-hostmaster.amazon.com. 1 7200 900 1209600 86400\n```", "```\n---\nimage:\n  repository: 143970405955.dkr.ecr.us-east-2.amazonaws.com/                   dockerfordevelopers/shipitclicker:0.5.0\n```", "```\ningress:\n  enabled: true\n  annotations:\n    kubernetes.io/ingress.class: alb\n    alb.ingress.kubernetes.io/scheme: internet-facing\n    alb.ingress.kubernetes.io/listen-ports: '[{\"HTTPS\":443},{\"HTTP\":80}]'\n    alb.ingress.kubernetes.io/target-type: ip\n  hosts:\t\n    - host: \"shipit-v5.eks.example.com\"\n      paths: ['/*']\n```", "```\ndocker build . -t dockerfordevelopers/shipitclicker:0.5.0\ndocker tag dockerfordevelopers/shipitclicker:0.5.0 143970405955.dkr.ecr.us-east-2.amazonaws.com/dockerfordevelopers/shipitclicker:0.5.0\naws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 143970405955.dkr.ecr.us-east-2.amazonaws.com\ndocker push 143970405955.dkr.ecr.us-east-2.amazonaws.com/dockerfordevelopers/shipitclicker:0.5.0\nhelm install shipit-v5 -f values.yaml ./shipitclicker\n```", "```\n$ kubectl get ingress\nNAME                      HOSTS                             ADDRESS                                                                 PORTS   AGE\nshipit-v5-shipitclicker   shipit-v5.eks.shipitclicker.com   9bbd6f9c-default-shipitv5s-051a-795288134.us-east-2.elb.amazonaws.com   80      90m\n```", "```\nkubectl logs -n kube-system deployment.apps/alb-ingress-controller\n```", "```\n$ kubectl create namespace spinnaker\n$ helm install spinnaker stable/spinnaker --namespace spinnaker --version 1.23.3 --timeout 600s\n```", "```\nkubectl apply -n spinnaker -f spinnaker-alb-ingress.yaml\n```", "```\n$ kubectl get -n spinnaker ingress\nNAME        HOSTS                                  ADDRESS                                                                  PORTS   AGE\nspin-deck   spinnaker.eks.example.com              9bbd6f9c-spinnaker-spindec-5f03-917097792.us-east-2.elb.amazonaws.com    80      10m\nspin-gate   spinnaker-gate.eks.example.com         9bbd6f9c-spinnaker-spingat-712f-2021704484.us-east-2.elb.amazonaws.com   80      10m\n```", "```\nkubectl exec --namespace spinnaker -it spinnaker-spinnaker-halyard-0 bash\n```", "```\n$ hal config security api edit --override-base-url https://spinnaker-gate.eks.example.com  --cors-access-pattern https://spinnaker.eks.example.com\n$ hal config security ui edit --override-base-url https://spinnaker.eks.example.com\n$ hal deploy apply\n```", "```\nkubectl exec --namespace spinnaker -it spinnaker-spinnaker-halyard-0 bash\n```", "```\n$ hal config ci jenkins enable\n$ BASEURL=https://jenkins.example.com\n$ APIKEY=123456789012345678901234567890\n$ USERNAME=admin\n$ echo $APIKEY | hal config ci jenkins \\\n  master add my-jenkins-master  \\  --address $BASEURL --username $USERNAME --password\n$ hal deploy apply\n```", "```\n$ aws iam create-user --user-name Jenkins\n{\n    \"User\": {\n        \"Path\": \"/\",\n        \"UserName\": \"Jenkins\",\n        \"UserId\": \"AIDASDBKOBZBU6ZX6SQ7U\",\n        \"Arn\": \"arn:aws:iam::143970405955:user/Jenkins\",\n        \"CreateDate\": \"2020-05-03T02:45:34Z\"\n    }\n}\n$ aws iam attach-user-policy --user-name Jenkins --policy-arn  arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser\n$ aws iam create-access-key --user-name Jenkins\n{\n    \"AccessKey\": {\n        \"UserName\": \"Jenkins\",\n        \"AccessKeyId\": \"AKIASDBKOBZBYFDCBLMR\",\n        \"Status\": \"Active\",\n        \"SecretAccessKey\": \"q+1z7wt/FsbYOv5Yy7HRUSZI0OsLbANV7a8nIQDy\",\n        \"CreateDate\": \"2020-05-03T02:46:00Z\"\n    }\n}\n```", "```\nTOKEN=xxxx\nGH_ACCOUNT=my-github-user\nTOKEN_FILE=~/.github-token.txt\necho \"$TOKEN\" > $TOKEN_FILE\nhal config artifact github enable\nhal config artifact github account add $GH_ACCOUNT --token-file $TOKEN_FILE\nhal deploy apply\n```", "```\nkubectl exec --namespace spinnaker -it spinnaker-spinnaker-halyard-0 bash\n```", "```\n$ ADDRESS=index.docker.io\n$ REPOSITORIES=\"library/redis dockerhub-user/shipitclicker\"\n$ USERNAME=dockerhub-user\n$ PASSWORD=xxxx\n$ REPOSITORIES=\"library/redis dockerhub-user/shipitclicker\"\n$ echo $PASSWORD | hal config provider docker-registry \\\n    account add my-docker-registry \\\n    --address $ADDRESS \\\n    --repositories $REPOSITORIES \\\n    --username $USERNAME \\\n    --password\n$ hal deploy apply\n```", "```\nkubectl logs -n spinnaker -f -l app=spin --all-containers --max-log-requests 10\n```", "```\ncom.netflix.spinnaker.clouddriver.artifacts.exceptions.FailedDownloadException: Unable to determine the download URL of artifact Artifact(type=github/file, customKind=false, name=chapter9/helm.tar.gz, version=staging, location=null, reference=https://api.gitgub.com/repos/PacktPublishing/Docker-for-Developers/contents/chapter9/helm.tar.gz, metadata={id=8ebb0ad7-2d14-4882-9b77-fde3a03e3c45}, artifactAccount=obscurerichard, provenance=null, uuid=null): api.gitgub.com: Try again\n```"]