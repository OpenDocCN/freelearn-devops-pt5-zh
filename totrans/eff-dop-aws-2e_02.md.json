["```\n$ sudo apt install python-pip\n```", "```\n$ sudo easy_install pip\n```", "```\n$ sudo apt-get install python-pip python-dev build-essential  \n```", "```\n    $ sudo yum -y install python-pip  \n```", "```\n$ sudo pip install --upgrade --user awscli \n```", "```\n$ more credentials.csv\nUser Name,Access Key Id,Secret Access Key \"yogeshraheja\", AKIAII55DTLEV3X4ETAQ, mL2dEC8/ryuZ7fu6UI6kOm7PTlfROCZpai07Gy6T \n```", "```\n$ aws configure\nAWS Access Key ID [None]: AKIAII55DTLEV3X4ETAQ\nAWS Secret Access Key [None]: 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\nDefault region name [None]: us-east-1\nDefault output format [None]: \n```", "```\n$ aws iam list-users\n{\n    \"Users\": [\n        {\n            \"UserName\": \"yogeshraheja\",\n            \"PasswordLastUsed\": \"2018-08-07T09:57:53Z\",\n            \"CreateDate\": \"2018-08-07T04:56:03Z\",\n            \"UserId\": \"AIDAIN22VCQLK43UVWLMK\",\n            \"Path\": \"/\",\n            \"Arn\": \"arn:aws:iam::094507990803:user/yogeshraheja\"\n        }\n    ]\n}\n```", "```\n$ aws ec2 describe-images --filters \"Name=description,Values=Amazon Linux AMI * x86_64 HVM GP2\" --query 'Images[*].[CreationDate, Description, ImageId]' --output text | sort -k 1 | tail\n```", "```\n    $ aws ec2 describe-vpcs \n    {\n        \"Vpcs\": [\n            {\n                \"VpcId\": \"vpc-4cddce2a\",\n                \"InstanceTenancy\": \"default\",\n                \"CidrBlockAssociationSet\": [\n                    {\n                        \"AssociationId\": \"vpc-cidr-assoc-3c313154\",\n                        \"CidrBlock\": \"172.31.0.0/16\",\n                        \"CidrBlockState\": {\n                            \"State\": \"associated\"\n                        }\n                    }\n                ],\n                \"State\": \"available\",\n                \"DhcpOptionsId\": \"dopt-c0be5fa6\",\n                \"CidrBlock\": \"172.31.0.0/16\",\n                \"IsDefault\": true\n            }\n        ]\n    } \n```", "```\n    $ aws ec2 create-security-group \\\n        --group-name HelloWorld \\\n        --description \"Hello World Demo\" \\\n        --vpc-id vpc-4cddce2a \n    {\n        \"GroupId\": \"sg-01864b4c\"\n    }\n```", "```\n    $ aws ec2 authorize-security-group-ingress \\\n        --group-name HelloWorld \\\n        --protocol tcp \\\n        --port 22 \\\n        --cidr 0.0.0.0/0\n\n    $ aws ec2 authorize-security-group-ingress \\\n        --group-name HelloWorld \\\n        --protocol tcp \\\n        --port 3000 \\\n        --cidr 0.0.0.0/0  \n```", "```\n    $ aws ec2 describe-security-groups \\\n        --group-names HelloWorld \\\n        --output text \n    SECURITYGROUPS  Hello World Demo    sg-01864b4c     HelloWorld      \n    094507990803    vpc-4cddce2a\n    IPPERMISSIONS   22      tcp     22\n    IPRANGES        0.0.0.0/0\n    IPPERMISSIONS   3000    tcp     3000\n    IPRANGES        0.0.0.0/0\n    IPPERMISSIONSEGRESS     -1\n    IPRANGES        0.0.0.0/0 \n```", "```\n    $ aws ec2 create-key-pair --key-name EffectiveDevOpsAWS --query   \n    'KeyMaterial' --output text > ~/.ssh/EffectiveDevOpsAWS.pem\n\n    $ aws ec2 describe-key-pairs --key-name EffectiveDevOpsAWS\n    {\n        \"KeyPairs\": [\n            {\n                \"KeyName\": \"EffectiveDevOpsAWS\",\n                \"KeyFingerprint\": \n          \"27:83:5d:9b:4c:88:f6:15:c7:39:df:23:4f:29:21:3b:3d:49:e6:af\"\n\n            }\n        ]\n    }\n\n    $ cat ~/.ssh/EffectiveDevOpsAWS.pem\n -----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAiZLtUMnO2OKnHvTJOiIP26fThdsU0YRdlKI60in85x9aFZXSrZsKwOhWPpMtnUMJKeGvVQut+gJ1I1PNNjPqS2Dy60jH55hntUhr/ArpaL2ISDX4BgRAP1jcukBqS6+pL+mTp6OUNTToUt7LvAZoeo+10SYbzHF1ZMQLLs96fCMNvnbJdUCa904dJjJs7t/G2ou9RiNMRx8midrWcmmuGKOb1s6FgrxJ5OAMYegeccFVfGOjqPk3f+6QTPOTMNgNQ8ANKOMA9YtcIca/75QGUPifusTqUT4Fqtv3rbUYPvacAnYL9eCthtn1XMG7Oo/mR5MrU60wib2QcPipmrGNbwIDAQABAoIBABSyqkmxUxGGaCZcJbo9Ta16fnRxFZzAEWQ/VCIydv4+1UrSE7RS0zdavT8E3aP/Ze2LKtncu/wVSpJaFVHGVcWpfGKxvIG3iELZ9oUhDyTW/x3+IKanFRNyxyKudk+UyhuPRMu/7JhksV9mbbiILkfiPzSMSzpjB4p1hEkypfbvBnrbB+sRycx+jK5l209rNDukkJVvyFCnqPiH0wmvKRqHTNOMGWmM6CPOU+VpuMX+dIlrSeId7j6hqMjA0rGncnxYi035v2zicvIsEKHZ9MZCnkiRb3kJ9PhueTwwUQmoBYfV5E+1Wu34UmdsmALQEX3xniaR6xf9iWhQ2Nh8LaECgYEAzXHOZDPAUzXitO735KBUaiBp9NMv2gzE862Yf2rmDkFM4Y5RE3DKHrKfeOkrYqlG11On0m44GHBk/g4eqqIEaBjVp6i/Lk74tpQU6Kn1HT3w9lbXEFsCWjYZnev5oHP6PdedtRYNzZsCSNUdlw0kOG5WZZJ4E7mPZyrvK5pq+rMCgYEAq22KT0nD3d59V+LVVZfMzJuUBDeJeD139mmVbzAq9u5Hr4MkurmcIj8Q6jJIQaiC8XC1gBVEl08ZN2oY1+CBE+Gesi7mGOQ2ovDmoTfYRgScKKHv7WwR+N5/N7o26x+ZaoeaBe43Vjp6twaTpKkBOIuT50tvb25v9+UVMpGKcFUC\ngYEAoOFjJ3KjREYpT1jnROEM2cKiVrdefJmNTel+RyF2IGmgg+1Hrjqf/OQSH8QwVmWK9SosfIwVX4X8gDqcZzDS1JXGEjIB7IipGYjiysP1D74myTF93u/16qD89H8LD0xjBTSo6lrn2j9tzY0eS+Bdodc9zvKhF4kzNC4Z9wJIjiMCgYAOtqstXP5zt5n4hh6bZxkL4rqUlhO1f0khnDRYQ8EcSp1agh4P7Mhq5BDWmRQ8lnMOuAbMBIdLmV1ntTKGrN1HUJEnaAEV19icqaKR6dIlSFYC4stODH2KZ8ZxiQkXqzGmxBbDNYwIWaKYvPbFJkBVkx1Rt9bLsKXpl/72xSkltQKBgQCYEjUVp4dPzZL1CFryOwV72PMMX3FjOflTgAWr8TJBq/OLujzgwYsTy6cdD3AqnMQ2BlU7Gk4mmDZCVVsMqHFbIHEa5Y4e5qIQhamedl3IgmnMpdyuDYaT/Uh4tw0JxIJabqm+sQZv4s1Otgh00JlGrgFs+0D39Fy8qszqr6J04w==\n-----END RSA PRIVATE KEY----- \n    $ chmod 400 ~/.ssh/EffectiveDevOpsAWS.pem\n```", "```\n$ aws ec2 run-instances \\\n --instance-type t2.micro \\\n --key-name EffectiveDevOpsAWS \\\n --security-group-ids sg-01864b4c \\\n --image-id ami-cfe4b2b0\n{\n    \"Instances\": [\n        {\n            \"Monitoring\": {\n                \"State\": \"disabled\"\n            },\n            \"PublicDnsName\": \"\",\n            \"StateReason\": {\n                \"Message\": \"pending\",\n                \"Code\": \"pending\"\n            },\n            \"State\": {\n                \"Code\": 0,\n                \"Name\": \"pending\"\n            },\n            \"EbsOptimized\": false,\n            \"LaunchTime\": \"2018-08-08T06:38:43.000Z\",\n            \"PrivateIpAddress\": \"172.31.22.52\",\n            \"ProductCodes\": [],\n            \"VpcId\": \"vpc-4cddce2a\",\n            \"CpuOptions\": {\n                \"CoreCount\": 1,\n                \"ThreadsPerCore\": 1\n            },\n            \"StateTransitionReason\": \"\",\n            \"InstanceId\": \"i-057e8deb1a4c3f35d\",\n            \"ImageId\": \"ami-cfe4b2b0\",\n            \"PrivateDnsName\": \"ip-172-31-22-52.ec2.internal\",\n            \"KeyName\": \"EffectiveDevOpsAWS\",\n            \"SecurityGroups\": [\n                {\n                    \"GroupName\": \"HelloWorld\",\n                    \"GroupId\": \"sg-01864b4c\"\n                }\n            ],\n            \"ClientToken\": \"\",\n            \"SubnetId\": \"subnet-6fdd7927\",\n            \"InstanceType\": \"t2.micro\",\n            \"NetworkInterfaces\": [\n                {\n                    \"Status\": \"in-use\",\n                    \"MacAddress\": \"0a:d0:b9:db:7b:38\",\n                    \"SourceDestCheck\": true,\n                    \"VpcId\": \"vpc-4cddce2a\",\n                    \"Description\": \"\",\n                    \"NetworkInterfaceId\": \"eni-001aaa6b5c7f92b9f\",\n                    \"PrivateIpAddresses\": [\n                        {\n                            \"PrivateDnsName\": \"ip-172-31-22-\n                             52.ec2.internal\",\n                            \"Primary\": true,\n                            \"PrivateIpAddress\": \"172.31.22.52\"\n                        }\n                    ],\n                    \"PrivateDnsName\": \"ip-172-31-22-52.ec2.internal\",\n                    \"Attachment\": {\n                        \"Status\": \"attaching\",\n                        \"DeviceIndex\": 0,\n                        \"DeleteOnTermination\": true,\n                        \"AttachmentId\": \"eni-attach-0428b549373b9f864\",\n                        \"AttachTime\": \"2018-08-08T06:38:43.000Z\"\n                    },\n                    \"Groups\": [\n                        {\n                            \"GroupName\": \"HelloWorld\",\n                            \"GroupId\": \"sg-01864b4c\"\n                        }\n                    ],\n                    \"Ipv6Addresses\": [],\n                    \"OwnerId\": \"094507990803\",\n                    \"SubnetId\": \"subnet-6fdd7927\",\n                    \"PrivateIpAddress\": \"172.31.22.52\"\n                }\n            ],\n            \"SourceDestCheck\": true,\n            \"Placement\": {\n                \"Tenancy\": \"default\",\n                \"GroupName\": \"\",\n                \"AvailabilityZone\": \"us-east-1c\"\n            },\n            \"Hypervisor\": \"xen\",\n            \"BlockDeviceMappings\": [],\n            \"Architecture\": \"x86_64\",\n            \"RootDeviceType\": \"ebs\",\n            \"RootDeviceName\": \"/dev/xvda\",\n            \"VirtualizationType\": \"hvm\",\n            \"AmiLaunchIndex\": 0\n        }\n    ],\n    \"ReservationId\": \"r-09a637b7a3be11d8b\",\n    \"Groups\": [],\n    \"OwnerId\": \"094507990803\"\n}\n```", "```\n$ aws ec2 describe-instance-status --instance-ids i-057e8deb1a4c3f35d\n{\n    \"InstanceStatuses\": [\n        {\n            \"InstanceId\": \"i-057e8deb1a4c3f35d\",\n            \"InstanceState\": {\n                \"Code\": 16,\n                \"Name\": \"running\"\n            },\n            \"AvailabilityZone\": \"us-east-1c\",\n            \"SystemStatus\": {\n                \"Status\": \"initializing\",\n                \"Details\": [\n                    {\n                        \"Status\": \"initializing\",\n                        \"Name\": \"reachability\"\n                    }\n                ]\n            },\n            \"InstanceStatus\": {\n                \"Status\": \"initializing\",\n                \"Details\": [\n                    {\n                        \"Status\": \"initializing\",\n                        \"Name\": \"reachability\"\n                    }\n                ]\n            }\n        }\n    ]\n}\n```", "```\n$ aws ec2 describe-instance-status --instance-ids i-057e8deb1a4c3f35d --output text| grep -i SystemStatus\nSYSTEMSTATUS ok\n```", "```\n$ aws ec2 describe-instances \\\n --instance-ids i-057e8deb1a4c3f35d \\\n --query \"Reservations[*].Instances[*].PublicDnsName\"\n[\n    [\n        \"ec2-34-201-101-26.compute-1.amazonaws.com\"\n    ]\n]      \n```", "```\n$ ssh -i ~/.ssh/EffectiveDevOpsAWS.pem ec2-user@ ec2-34-201-101-26.compute-1.amazonaws.com\n\nThe authenticity of host 'ec2-34-201-101-26.compute-1.amazonaws.com (172.31.22.52)' can't be established.\n\nECDSA key fingerprint is SHA256:V4kdXmwb5ckyU3hw/E7wkWqbnzX5DQR5zwP1xJXezPU.\n\nECDSA key fingerprint is MD5:25:49:46:75:85:f1:9d:f5:c0:44:f2:31:cd:e7:55:9f.\n\nAre you sure you want to continue connecting (yes/no)? yes\nWarning: Permanently added 'ec2-34-201-101-26.compute-1.amazonaws.com,172.31.22.52' (ECDSA) to the list of known hosts.\n\n       __| __|_ )\n       _| ( / Amazon Linux AMI\n      ___|\\___|___|\n\nhttps://aws.amazon.com/amazon-linux-ami/2018.03-release-notes/\n\n1 package(s) needed for security, out of 2 available\n\nRun \"sudo yum update\" to apply all updates.\n[ec2-user@ip-172-31-22-52 ~]$\n```", "```\n[ec2-user@ip-172-31-22-52 ~]$ sudo yum install --enablerepo=epel -y nodejs \n[ec2-user@ip-172-31-22-52 ~]$ node -v\nv0.10.48\n```", "```\nvar http = require(\"http\") http.createServer(function (request, response) {\n// Send the HTTP header\n// HTTP Status: 200 : OK\n// Content Type: text/plain\nresponse.writeHead(200, {'Content-Type': 'text/plain'})\n// Send the response body as \"Hello World\" response.end('Hello World\\n')\n}).listen(3000)\n\n// Console will print the message console.log('Server running')    \n```", "```\n[ec2-user@ip-172-31-22-52 ~]$ \nwget https://raw.githubusercontent.com/yogeshraheja/Effective-DevOps-with-AWS/master/Chapter02/helloworld.js -O /home/ec2-user/helloworld.js\n--2018-08-19 13:06:42-- https://raw.githubusercontent.com/yogeshraheja/Effective-DevOps-with-AWS/master/Chapter02/helloworld.js\nResolving raw.githubusercontent.com (raw.githubusercontent.com)... 151.101.200.133\nConnecting to raw.githubusercontent.com (raw.githubusercontent.com)|151.101.200.133|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 384 [text/plain]\nSaving to: ‘/home/ec2-user/helloworld.js’\n\n/home/ec2-user/helloworld.js 100%[=====================================================================================>] 384 --.-KB/s in 0s\n\n2018-08-19 13:06:42 (37.9 MB/s) - ‘/home/ec2-user/helloworld.js’ saved [384/384] \n\n[ec2-user@ip-172-31-22-52 ~]$  \n```", "```\n[ec2-user@ip-172-31-22-52 ~]$ node helloworld.js  \nServer running \n```", "```\ndescription \"Hello world Daemon\"\n\n# Start when the system is ready to do networking. Start on started elastic-network-interfaces\n\n# Stop when the system is on its way down. Stop on shutdown\n\nrespawn script\nexec su --session-command=\"/usr/bin/node /home/ec2-user/helloworld.js\" ec2-user\nend script\n```", "```\n[ec2-user@ip-172-31-22-52 ~]$ \nsudo wget https://raw.githubusercontent.com/yogeshraheja/Effective-DevOps-with-AWS/master/Chapter02/helloworld.conf -O /etc/init/helloworld.conf\n--2018-08-19 13:09:39-- https://raw.githubusercontent.com/yogeshraheja/Effective-DevOps-with-AWS/master/Chapter02/helloworld.conf\nResolving raw.githubusercontent.com (raw.githubusercontent.com)... 151.101.200.133\nConnecting to raw.githubusercontent.com (raw.githubusercontent.com)|151.101.200.133|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 301 [text/plain]\nSaving to: ‘/etc/init/helloworld.conf’\n\n/etc/init/helloworld.conf 100%[=====================================================================================>] 301 --.-KB/s in 0s\n\n2018-08-19 13:09:39 (54.0 MB/s) - ‘/etc/init/helloworld.conf’ saved [301/301]\n\n[ec2-user@ip-172-31-22-52 ~]$\n```", "```\n[ec2-user@ip-172-31-22-52 ~]$ sudo start helloworld\nhelloworld start/running, process 2872\n[ec2-user@ip-172-31-22-52 ~]$\n```", "```\n[ec2-user@ip-172-31-22-52 ~]$ sudo stop helloworld \nhelloworld stop/waiting \n[ec2-user@ip-172-31-22-52 ~]$ ec2-metadata --instance-id \ninstance-id: i-057e8deb1a4c3f35d \n[ec2-user@ip-172-31-22-52 ~]$ exit \nlogout \n$ aws ec2 terminate-instances --instance-ids i-057e8deb1a4c3f35d \n{ \n    \"TerminatingInstances\": [ \n        { \n            \"InstanceId\": \"i-057e8deb1a4c3f35d\", \n            \"CurrentState\": { \n                \"Code\": 32, \n                \"Name\": \"shutting-down\" \n            }, \n            \"PreviousState\": { \n                \"Code\": 16, \n                \"Name\": \"running\" \n            } \n        } \n    ] \n} \n```"]