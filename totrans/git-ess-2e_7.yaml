- en: Git Resources
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter is a collection of resources I built during my experience with
    Git. I will share some thoughts about GUI tools, web interfaces to Git repositories,
    and learning resources, hoping they will act as a springboard for a successful
    Git career.
  prefs: []
  type: TYPE_NORMAL
- en: Git GUI clients
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When beginning to learn a new tool, especially such a wide and complex one as
    Git, it can be useful to take advantage of some GUI tools, to be able to picture
    commands and patterns in a simpler way to understand.
  prefs: []
  type: TYPE_NORMAL
- en: Git benefits from a wide range of GUI tools, so it's only a matter of choice;
    I want to tell you right away that there is not one perfect tool, as frequently
    happens, but there are enough of them to pick the one that best fits your needs.
  prefs: []
  type: TYPE_NORMAL
- en: Windows
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As a Microsoft .NET developer, I use Windows 99% of the time; in my spare time,
    I play a little bit with Linux, but in that case, I prefer to use the command
    line. In this section, you will find tools I use or have used in the past, while
    in the other platform section I will provide some hints based on the words of
    other people.
  prefs: []
  type: TYPE_NORMAL
- en: Git GUI
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Git has an integrated GUI, as we learnt in the previous chapters. It is probably
    not one of the most eye-catching solutions you will find, but it can be enough.
    The reason for using it is that it is already installed when you install Git,
    and that it is well integrated even with the command prompt; so, blaming files,
    viewing history, or interactive merging can be fired easily (just type `git gui
    <command>` into your shell):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/33caad31-97ce-437b-a640-9ec8d07d34dc.png)'
  prefs: []
  type: TYPE_IMG
- en: TortoiseGit
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you have migrated from Subversion to Git, you probably already heard about
    *TortoiseSVN*, a well-crafted tool for dealing with Subversion commands directly
    from Explorer through the right-click shell integration.
  prefs: []
  type: TYPE_NORMAL
- en: 'TortoiseGit brings Git, instead of Subversion, to the same place; by installing
    TortoiseGit you will benefit from the same Explorer integration, leaving most
    used Git commands only a step away from you. Even if I discourage the use of localized
    versions, TortoiseGit is available in different languages; bear in mind that you
    need to install Git first as it is not included in the TortoiseGit setup package:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/99b858a9-1977-4ddd-8b0e-ad8841607ed8.png)'
  prefs: []
  type: TYPE_IMG
- en: GitHub for Windows
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: GitHub offers a stylish Modern UI based client. I have to admit that I snubbed
    it at first, mostly because I was sure that I could only use it for GitHub repositories;
    instead, you can use it even with other remotes, but it's clear that the client
    is tailored for GitHub - to use other remotes, you have to edit the `config` file
    by hand, substituting the GitHub remote with the one you want.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you want a general-purpose client, this is probably not the best tool for
    you, but if you work mostly on GitHub, chances are it is the best GUI for your
    needs:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/bfbe0be7-f236-4f28-9ce9-2d7b6aba6f13.png)'
  prefs: []
  type: TYPE_IMG
- en: Atlassian SourceTree
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This is my favorite client. SourceTree is free like all the other tools; it
    comes from the mind of **Atlassian**, the well-known company behind *BitBucket*
    and other popular services like *Jira*, and *Confluence*. SourceTree can handle
    all kind of remotes, offering facilities (such as remembering passwords) to access
    most popular services like BitBucket and GitHub.
  prefs: []
  type: TYPE_NORMAL
- en: 'It embeds the GitFlow way of organizing repositories by design, offering a
    convenient button to initialize a repository with Gitflow branches, and integrating
    GitFlow commands provided by the author. The most interesting thing I found at
    first was that you can enable a window where SourceTree shows the equivalent Git
    command when you use some of the Git commands through the user interface; in this
    manner, when you are in doubt and you don''t remember the right command for the
    job, you can use SourceTree to accomplish your task and see what commands it uses
    to get the work done:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/edb86ef2-ac0f-4f0b-8953-a46540da82ec.png)'
  prefs: []
  type: TYPE_IMG
- en: SourceTree is available even for macOS.
  prefs: []
  type: TYPE_NORMAL
- en: Cmder
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Cmder is not really a Git GUI, but a nicer portable console emulator you can
    use instead of the classic Bash shell:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/dd17efb5-7d40-4bcd-9da9-316e544f54a4.png)'
  prefs: []
  type: TYPE_IMG
- en: It looks nicer than the original shell; it has multi-tab support and a wide
    set of configuration options to let you customize it as you prefer, thanks to
    *ConEmu* and *Clink* projects. Finally, yet importantly, it comes with Git embedded.
    You can download it from GitHub at [https://github.com/bliker/cmder](https://github.com/bliker/cmder).
  prefs: []
  type: TYPE_NORMAL
- en: macOS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'As I already said, I have no experience with macOS Git clients; the only information
    I can share with you is that GitHub offers its client for free even for this operating
    system, like Atlassian with SourceTree. There is no TortoiseGit for Mac, but I
    heard about a cool app called Git Tower, please consider giving it a try, as it
    seems very well crafted:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/078a978d-245c-486f-94bc-aa462fd01357.png)'
  prefs: []
  type: TYPE_IMG
- en: Linux
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Linux is the reason for Git, so I think that it is the best place to work with
    Git. I play with Linux now and then, and I usually use the Bash shell for Git.
  prefs: []
  type: TYPE_NORMAL
- en: For ZSH shell lovers, I suggest looking at [http://ohmyz.sh/](http://ohmyz.sh/),
    an interesting open-source project where you can find tons of plugins and themes.
    When it comes to plugins, there are some that let you enhance your Git experience
    with this famous alternate console.
  prefs: []
  type: TYPE_NORMAL
- en: At the end, take a look at some Git GUI for Linux by visiting [http://git-scm.com/download/gui/linux](http://git-scm.com/download/gui/linux)
  prefs: []
  type: TYPE_NORMAL
- en: Building up a personal Git server with web interface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: At a company I worked for, I was the first person to use Git for production
    code; at some point, after months of little trials in my spare time, I took courage
    and converted all the Subversion repositories where I usually worked alone into
    Git ones.
  prefs: []
  type: TYPE_NORMAL
- en: Unfortunately, firm IT policies stopped me from using external source code repositories,
    so no *GitHub* or *BitBucket*; to make things even worse, I also could not obtain
    a Linux server, and take advantage of great web interfaces like *Gitosis*, *Gitlab,*
    and so on. So, I started Googling for a solution, and I finally found one that
    can be useful even for people in the same situation.
  prefs: []
  type: TYPE_NORMAL
- en: SCM Manager
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**SCM Manager** ([https://www.scm-manager.org/](https://www.scm-manager.org/))
    is a very easy solution to share your Git repositories in a local Windows network;
    it offers a standalone solution to install and make it work on top of Apache Web
    Server directly in Windows. Although it is built in Java, you can make it work
    even in Linux or Mac.'
  prefs: []
  type: TYPE_NORMAL
- en: It can manage Subversion, Git, and Mercurial repositories, allowing you to define
    users, groups, and so on; it has a good list of plugins too, for other version
    control systems and other development related tools like Jenkins, Bamboo, and
    so on. There's also a *Gravatar* plugin and an Active Directory one, to let you
    and your colleagues use default domain credentials to access your internal repositories.
  prefs: []
  type: TYPE_NORMAL
- en: 'I have been using this solution for about two years without a hitch, with the
    exception of some configuration related annoyances during updates, due to my custom
    path personalization:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/3580be9d-a848-499a-862c-e920e539df76.png)'
  prefs: []
  type: TYPE_IMG
- en: Learning Git in a visual manner
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The last thing I'd like to share with readers is a web app I found useful at
    the very beginning for better understanding the way Git works.
  prefs: []
  type: TYPE_NORMAL
- en: '**Learn Git Branching** ([https://learngitbranching.js.org/](https://learngitbranching.js.org/))
    is a tremendously helpful web app that offers you some exercises to help you grow
    your Git culture. Starting from a basic commit exercise, you learn how to branch,
    rebase, and so on, but the really cool thing is that on the right of the page,
    you will see a funny repository graph evolving in real time, following the commands
    you type in the emulated shell:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/13f5a27d-aee5-4bfc-8374-c73395ecaba0.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Another good resource of this kind is **Visualizing Git Concepts with D3**,
    where you can grasp all the most important commands visually. Find it at [https://onlywei.github.io/explain-git-with-d3/](https://onlywei.github.io/explain-git-with-d3/):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/2508eabd-d037-464e-9e92-052b5aaaee2c.png)'
  prefs: []
  type: TYPE_IMG
- en: Git on the internet
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Finally, I suggest following some resources I usually follow in order to learn
    new things and get in touch with other smart and funny Git users over the internet.
  prefs: []
  type: TYPE_NORMAL
- en: Git for human beings Google Group
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This group is frequented by Git pro users; if you need some help in getting
    out of difficult situations, the best place to ask for it is at ;[https://groups.google.com/forum/#!forum/git-users](https://groups.google.com/forum/#!forum/git-users).
  prefs: []
  type: TYPE_NORMAL
- en: Git community on Google+
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This community is full of people who are happy to share their knowledge with
    you; most of the coolest things I know about Git have been discovered at [https://plus.google.com/u/0/communities/112688280189071733518](https://plus.google.com/u/0/communities/112688280189071733518).
  prefs: []
  type: TYPE_NORMAL
- en: Git cheat sheets
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The internet has plenty of good cheat sheets about Git; here are my preferred
    ones:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Git pretty**: [http://justinhileman.info/article/git-pretty/](http://justinhileman.info/article/git-pretty/)'
  prefs: []
  type: TYPE_NORMAL
- en: '**Hylke Bons Git cheat sheet**: [https://github.com/hbons/git-cheat-sheet](https://github.com/hbons/git-cheat-sheet)'
  prefs: []
  type: TYPE_NORMAL
- en: Git Minutes and Thomas Ferris Nicolaisen blog
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Thomas is a skilled Git user, and a very kind person. On his blog, you will
    find many interesting resources, including videos where he talks about Git at
    local German programming events. More than this, Thomas runs the *Git Minutes*
    podcast series, where he talks about Git with other people, discussing general
    purpose topics, tools, opinions, and so on.
  prefs: []
  type: TYPE_NORMAL
- en: Take a look at [www.tfnico.com](http://www.tfnico.com/) and [www.gitminutes.com](http://www.gitminutes.com).
  prefs: []
  type: TYPE_NORMAL
- en: Online videos
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: YouTube and other video sharing online platforms have plenty of good and free
    videos about Git; don't underrate this opportunity while learning Git. Furthermore,
    *Packt* has a very rich catalog about Git in video format, take a look for more
    information at [https://www.packtpub.com/video?search=git](https://www.packtpub.com/video?search=git)
  prefs: []
  type: TYPE_NORMAL
- en: Ferdinando Santacroce's blog
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: On my personal blog, [jesuswasrasta.com](http://jesuswasrasta.com), I recently
    started a *Git Pills* series, where I share with readers some things I discovered
    using Git, quick techniques to get the job done and ways to recover from weird
    situations.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we looked at some Git GUI clients. Even if I encourage people
    to understand Git by using shell commands, I have to admit that for most common
    tasks using a GUI-based tool or the IDE integration facilities makes me feel more
    comfortable, especially when diffing or reviewing history.
  prefs: []
  type: TYPE_NORMAL
- en: 'Then we discovered we could obtain a personal Git server with a fancy web interface:
    the internet has plenty of good pieces of software to achieve this target.'
  prefs: []
  type: TYPE_NORMAL
- en: At the end, as my last suggestion, I mentioned some good resources to enhance
    your Git comprehension; listening to experts and asking them questions is the
    most effective way to get your work done.
  prefs: []
  type: TYPE_NORMAL
