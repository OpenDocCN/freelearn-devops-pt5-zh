- en: OpenShift Installation
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OpenShift 安装
- en: In the previous chapter, we discussed how to set up your OpenShift lab environment
    quickly and easily using the most popular and simple methods with `oc cluster
    up`, MiniShift, and Vagrant on CentOS7, macOS, and Windows operating systems.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们讨论了如何使用`oc cluster up`、MiniShift 和 Vagrant 在 CentOS7、macOS 和 Windows
    操作系统上快速轻松地设置 OpenShift 实验环境。
- en: In this chapter, you will learn about the hardware and software requirements
    of OpenShift Origin, and you will obtain a basic understanding of OpenShift deployment
    scenarios and installation methods. You will also be able to perform an advanced
    installation of OpenShift using Ansible and learn about various options to customize
    your setup with the Ansible inventory.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将了解 OpenShift Origin 的硬件和软件要求，并对 OpenShift 部署场景和安装方法有一个基本的了解。您还将能够使用 Ansible
    执行 OpenShift 的高级安装，并了解通过 Ansible 库存自定义设置的各种选项。
- en: 'In this chapter, we will discuss the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论以下主题：
- en: Prerequisites
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 前提条件
- en: Overview of OpenShift installation methods
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenShift 安装方法概览
- en: Environment preparation
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 环境准备
- en: Advanced installation
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高级安装
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'The learning environment for this chapter will be represented by a single virtual
    machine deployed through Vagrant on VirtualBox. You will need the following minimal
    configuration in order to support the environment:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的学习环境将通过 Vagrant 在 VirtualBox 上部署单个虚拟机表示。为了支持该环境，您将需要以下最低配置：
- en: '| **CPU** | **RAM, GiB** | **OS** |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| **CPU** | **RAM, GiB** | **操作系统** |'
- en: '| 2 cores with HT enabled | 6 | Fedora 26/CentOS 7/RHEL 7 |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| 启用 HT 的 2 核 | 6 | Fedora 26/CentOS 7/RHEL 7 |'
- en: The VM will be about 3 GB in size, so make sure that you have enough free space
    on your `/home` partition, or change the location of the directory where VirtualBox
    stores the VM's files in the File | Preferences | General | Default Machine folder.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟机的大小约为 3 GB，因此请确保你的`/home`分区有足够的空闲空间，或者通过文件 | 偏好设置 | 常规 | 默认机器文件夹更改 VirtualBox
    存储虚拟机文件的位置。
- en: 'The `Vagrantfile` that can be used for deploying our VM may look similar to
    the following:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 可用于部署我们虚拟机的`Vagrantfile`可能类似于以下内容：
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: As all OpenShift services in this chapter will be deployed on a single VM, we
    will provide it with 4 vCPUs and 4 GiB RAM so that all processes have an adequate
    amount of resources to start with.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 由于本章中的所有 OpenShift 服务都将在单个虚拟机上部署，因此我们将为其提供 4 个 vCPU 和 4 GiB 的 RAM，以便所有进程能够得到足够的资源启动。
- en: In order to be able to pull `centos/7` box, you will need Vagrant version 2.x.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 为了能够拉取`centos/7`镜像，您需要 Vagrant 版本 2.x。
- en: Prerequisites
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前提条件
- en: In this chapter, we will focus on the Origin flavor of OpenShift, which is publicly
    accessible without any subscription. Like other OpenShift variants, Origin supports
    all features of commercial OpenShift versions that are provided by RedHat. OpenShift
    is a complex platform that consists of many components that interact and work
    together, with each having their own requirements, so before we start, we will
    have to satisfy them.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将重点介绍 OpenShift 的 Origin 版本，Origin 版本可以公开访问，无需任何订阅。与其他 OpenShift 变种一样，Origin
    支持所有由 RedHat 提供的商业版 OpenShift 的功能。OpenShift 是一个复杂的平台，包含多个相互交互和协同工作的组件，每个组件都有自己的要求，因此在开始之前，我们需要满足这些要求。
- en: Hardware requirements
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 硬件要求
- en: 'Official OpenShift Origin documentation provides sufficient hardware requirements
    for different host types. They are summarized in the following table:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 官方 OpenShift Origin 文档提供了不同主机类型的足够硬件要求。它们总结在以下表格中：
- en: '|  | **Masters** | **Nodes** | **External etcd** |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '|  | **Masters** | **Nodes** | **External etcd** |'
- en: '| **vCPU** | 2 | 1 | 2 |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| **vCPU** | 2 | 1 | 2 |'
- en: '| **RAM, GiB** | 16 | 8 | 8 |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| **RAM, GiB** | 16 | 8 | 8 |'
- en: '| **Disk Storage/Partitioning, GB** | `/var: 40``/usr/local/bin: 1``/tmp: 1`
    | `/var: 15``/usr/local/bin: 1``/tmp: 1``Docker storage backend: 15` | `20, SSD
    is recommended` |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| **磁盘存储/分区, GB** | `/var: 40``/usr/local/bin: 1``/tmp: 1` | `/var: 15``/usr/local/bin:
    1``/tmp: 1``Docker 存储后端: 15` | `20, 推荐使用 SSD` |'
- en: '| **Network, GB/s** | 1 | 1 | 1 |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| **网络, GB/s** | 1 | 1 | 1 |'
- en: The preceding information is not carved in stone and is only provided as a guideline.
    Hardware requirements for your particular installation are heavily influenced
    by such factors, as expected number of applications and workload. In fact, they
    may even be less strict.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 上述信息并非一成不变，仅供参考。特定安装的硬件要求会受到许多因素的影响，例如预期的应用程序数量和工作负载。实际上，要求可能会更宽松。
- en: Overview of OpenShift installation methods
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OpenShift 安装方法概览
- en: OpenShift Origin can be installed in several ways, depending on OS and requirements
    regarding availability, reliability, and scalability.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: RPM installation
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This is the default method. It installs all required services as systemd units
    from RPM packages, and they are available on RHEL/CentOS/Fedora. We will focus
    on this method using the CentOS 7 Linux distribution in the upcoming sections
    so that you may get a better understanding of the mechanisms involved.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: Containerized installation
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This is the only available method for Atomic Host OS. It installs OpenShift
    services in Docker containers, which provides an additional level of control.
    This method is preferable in an enterprise environment, as Atomic Host makes any
    dependency issues between packages a thing of the past and makes the host preparation
    process much easier, as Atomic Host provides a container-focused environment out
    of the box.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: Deployment scenarios
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'OpenShift Origin supports various models of deployment, which are listed as
    follows:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: '**All in one**: Single master, single etcd, and single node installed on the
    same system.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Single master, single etcd, and multiple nodes**: This is the scenario we
    are going to focus on, as it is relatively simple to set up while providing relevant
    experience. Master and etcd will be installed on the same host.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Single master, multiple external etcd, and multiple nodes**: This scenario
    provides HA of etcd nodes by clustering. Multiple etcd nodes form quorum, which
    is why an odd number of nodes is advised.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Multiple masters, multiple external etcd, and multiple nodes**: This scenario
    provides native HA of API as well, which will be explored later in this book.
    Masters by themselves are stateless, which means that they don''t require any
    synchronization mechanisms.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following diagram illustrates an all-in-one installation:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00044.jpeg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
- en: All-in-one
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram shows a multi-node OpenShift installation with single
    master and etcd instances:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00045.jpeg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
- en: Single master, single etcd, and multiple nodes
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: 'The following diagram shows the installation scenario by using a multi-node
    cluster of etcd:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00046.jpeg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
- en: Single master, multiple etcd, and multiple nodes
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: 'In a production environment, redundancy and data durability are very important.
    The following diagram gives an example of a production OpenShift installation.
    The installation contains three master and three etcd services. All ingress traffic
    is load balanced:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00047.jpeg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
- en: Multiple masters, multiple etcd, and multiple nodes
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: Although it's not uncommon to deploy etcd on the same hosts as masters, they
    are independent entities and while the former require quorum in an HA setup, masters
    do not and can be separately deployed in practically any numbers.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: Environment preparation
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For the RPM installation method, certain configurations need to be made before
    the installation begins. All commands in the following subsections are to be performed
    as the root.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: 'First, start the vagrant VM and login as root:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，启动 vagrant 虚拟机并以 root 用户登录：
- en: '[PRE1]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Before you do anything else, make sure that all hosts are up-to-date so that
    all features required by OpenShift are supported by the kernel and user-space
    libraries:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在做任何其他操作之前，确保所有主机都已更新，以便内核和用户空间库能够支持 OpenShift 所需的所有功能：
- en: '[PRE2]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'You will also need the following packages:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 你还需要以下软件包：
- en: '[PRE3]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: We also installed the `epel-release` package that enables the EPEL repository
    needed for installing the latest version of Ansible, required by OpenShift 3.9.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还安装了 `epel-release` 包，以启用 EPEL 仓库，从而可以安装 OpenShift 3.9 所需的最新版本的 Ansible。
- en: Generally speaking, you can install Ansible on any system, even on your laptop,
    and install OpenShift from there. But for the sake of simplicity we consolidate
    everything, including Ansible control functions, on a single VM.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，你可以在任何系统上安装 Ansible，甚至在你的笔记本上安装并从那里安装 OpenShift。但为了简化操作，我们将包括 Ansible 控制功能在内的所有内容集中在一个虚拟机上。
- en: Docker
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Docker
- en: 'As with Kubernetes, Docker is relied on by OpenShift for providing a container
    runtime environment. Therefore, we will need to activate Docker on our OpenShift
    VM:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 与 Kubernetes 一样，OpenShift 依赖 Docker 提供容器运行时环境。因此，我们需要在 OpenShift 虚拟机上激活 Docker：
- en: '[PRE4]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: SELinux
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SELinux
- en: SELinux must be enabled on all OpenShift nodes, including masters, before running
    the installer. This is required for isolating container processes with special
    MLS labels.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行安装程序之前，必须在所有 OpenShift 节点（包括主节点）上启用 SELinux。这是为了使用特殊的 MLS 标签隔离容器进程所必需的。
- en: 'Open the `/etc/selinux/config` file on the VM and make sure that the `SELINUX`
    and `SELINUXTYPE` parameters are set as follows:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 打开虚拟机上的 `/etc/selinux/config` 文件，确保 `SELINUX` 和 `SELINUXTYPE` 参数设置如下：
- en: '[PRE5]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: SELinux should already be configured by default. You will need to reboot the
    VM to activate the changes if you made any.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: SELinux 默认应该已经配置好。如果你做了任何更改，需要重启虚拟机以激活这些更改。
- en: 'Check to see if `SELINUX` is enabled:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 检查 `SELINUX` 是否启用：
- en: '[PRE6]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Ansible installation
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ansible 安装
- en: Ansible is a configuration management and orchestration tool that's written
    in Python. OpenShift Origin installer is actually a collection of Ansible playbooks
    in YAML format that define what services must be installed and how they are to
    be configured.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible 是一个用 Python 编写的配置管理和编排工具。OpenShift Origin 安装程序实际上是一个 Ansible playbook
    集合，采用 YAML 格式，定义了必须安装的服务及其配置方式。
- en: Ansible playbooks are run from a single point, which is called a control machine
    in Ansible terminology. It can be any machine and in our demonstration of advanced
    installation, we will use the master as a control machine.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible playbook 从一个单一的控制机器运行，在 Ansible 术语中，控制机器可以是任何机器，在我们的高级安装演示中，我们将使用主节点作为控制机器。
- en: These packages are provided by the EPEL repository, which is already enabled
    out-of-the-box in our lab. If they weren't, you would have to install the `epel-release`
    package.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 这些软件包由 EPEL 仓库提供，我们的实验室已经启用了该仓库。如果没有启用，你需要安装 `epel-release` 包。
- en: 'Next, clone the installation playbooks themselves from the Git repository:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，从 Git 仓库克隆安装 playbook：
- en: '[PRE7]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: We switched specifically to the **3.9** release because the master branch actually
    tracks the development version.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 我们特别切换到了 **3.9** 版本，因为主分支实际上跟踪的是开发版本。
- en: SSH access
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SSH 访问
- en: 'Ansible connects to other systems over SSH protocol, so it requires an SSH
    key pair. In this section, we are going to ensure SSH access from the root account
    of our VM to the root account of the same VM. This can be accomplished with the
    following commands:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible 通过 SSH 协议连接到其他系统，因此它需要 SSH 密钥对。在本节中，我们将确保从虚拟机的 root 账户到同一虚拟机的 root 账户的
    SSH 访问。这可以通过以下命令完成：
- en: '[PRE8]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'You can check whether access is indeed enabled by running the following commands:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过运行以下命令来检查访问是否已启用：
- en: '[PRE9]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Advanced installation
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 高级安装
- en: 'Being able to start a small cluster in a matter of minutes with minimal effort
    is great, but what if you need more control over various features so that you
    get a fully functional cluster right after installation? The answer is advanced
    installation. As opposed to quick installation, it involves the following:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 能够在几分钟内启动一个小型集群，并且只需最小的努力，当然很棒。但是，如果你需要对各种功能进行更多控制，以便在安装后即可获得一个完全功能的集群呢？答案就是高级安装。与快速安装不同，它包括以下内容：
- en: Creating an Ansible inventory file, containing all hosts spread over groups
    in accordance with the chosen deployment model, and variables customizing the
    installation for your environment
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建 Ansible 库存文件，其中包含所有按照选择的部署模型分组的主机，以及自定义安装环境的变量
- en: Running the Ansible playbook to install, configure, and start all OpenShift
    components, including internal registry, registry console, and router
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行 Ansible playbook 来安装、配置和启动所有 OpenShift 组件，包括内部注册表、注册表控制台和路由器
- en: OpenShift Ansible inventory
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: OpenShift Ansible 库存
- en: 'A typical Ansible inventory is a text file that contains groups of hosts and
    their variables. In the case of OpenShift, there are specific sections that may
    be present depending on the deployment topology and other requirements. They are
    summarized in the following table:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 一个典型的 Ansible 库存是一个文本文件，其中包含主机组及其变量。在 OpenShift 的情况下，可能会根据部署拓扑和其他要求，包含特定的节。它们在下表中总结：
- en: '| **Section** | **Description** | **Required** |'
  id: totrans-90
  prefs: []
  type: TYPE_TB
  zh: '| **Section** | **Description** | **Required** |'
- en: '| `masters` | Hosts for installation of master services, notably API. Can be
    a single node for standalone deployment, or an odd number of hosts for an HA setup.
    | Yes |'
  id: totrans-91
  prefs: []
  type: TYPE_TB
  zh: '| `masters` | 安装主服务的主机，尤其是 API。可以是单个节点用于独立部署，或者是奇数个主机用于高可用设置。 | 是 |'
- en: '| `new_masters` | Additional hosts for installation of master components when
    scaling an existing cluster up. | No |'
  id: totrans-92
  prefs: []
  type: TYPE_TB
  zh: '| `new_masters` | 在扩展现有集群时，安装主节点组件的额外主机。 | 否 |'
- en: '| `nodes` | Hosts for installation of node components, notably kubelet. Usually,
    there is more than one node, because best practice suggests designating at least
    one of the nodes as an infrastructure node to host such system services as registry
    and router.This section must include all masters as well. | Yes |'
  id: totrans-93
  prefs: []
  type: TYPE_TB
  zh: '| `nodes` | 安装节点组件的主机，尤其是 kubelet。通常会有多个节点，因为最佳实践建议将至少一个节点指定为基础设施节点，用于托管如注册表和路由器等系统服务。本节必须包含所有主节点。
    | 是 |'
- en: '| `new_nodes` | Additional hosts for the installation of node components when
    scaling an existing cluster up. | No |'
  id: totrans-94
  prefs: []
  type: TYPE_TB
  zh: '| `new_nodes` | 在扩展现有集群时，安装节点组件的额外主机。 | 否 |'
- en: '| `etcd` | This section is specified only in the case of HA configuration with
    multiple external etcds. It may contain the same hosts as masters, but since masters
    and etcd have different system requirements, it is better to deploy them on separate
    machines. An odd number is suggested for a quorum. | Yes |'
  id: totrans-95
  prefs: []
  type: TYPE_TB
  zh: '| `etcd` | 仅在进行高可用配置且有多个外部 etcd 的情况下，才会指定此节。它可能包含与主机相同的主机，但由于主机和 etcd 的系统要求不同，最好将它们部署在不同的机器上。建议选择奇数个以确保投票机制。
    | 是 |'
- en: '| `nfs` | The host for configuring NFS as a persistent storage backend for
    Ansible broker, internal registry, Hawkular metrics, and Elasticsearch logging.
    | No |'
  id: totrans-96
  prefs: []
  type: TYPE_TB
  zh: '| `nfs` | 配置 NFS 作为 Ansible 中介、内部注册表、Hawkular 指标和 Elasticsearch 日志的持久存储后端的主机。
    | 否 |'
- en: '| `lb` | In the case of multiple masters, you will have to provide a point
    of contact for external clients, which will distribute traffic between master
    hosts. By placing a host in this section, you will instruct Ansible to install
    HAProxy on that host and configure it for load balancing and TLS/SSL passthrough.
    | No |'
  id: totrans-97
  prefs: []
  type: TYPE_TB
  zh: '| `lb` | 如果有多个主节点，你需要提供一个外部客户端的接入点，该接入点将在主机之间分配流量。通过将主机放入此节，你将指示 Ansible 在该主机上安装
    HAProxy 并配置负载均衡和 TLS/SSL 穿透。 | 否 |'
- en: '| `glusterfs` | Hosts for configuring GlusterFS as a persistent storage backend.
    | No |'
  id: totrans-98
  prefs: []
  type: TYPE_TB
  zh: '| `glusterfs` | 配置 GlusterFS 作为持久存储后端的主机。 | 否 |'
- en: '| `glusterfs_registry` | Hosts for configuring GlusterFS as a persistent storage
    backend for the internal registry. | No |'
  id: totrans-99
  prefs: []
  type: TYPE_TB
  zh: '| `glusterfs_registry` | 配置 GlusterFS 作为内部注册表的持久存储后端的主机。 | 否 |'
- en: '| `OSEv3:vars` | This section contains global variables for configuring various
    aspects of OpenShift, such as authentication, registry placement, and so on. |
    Yes |'
  id: totrans-100
  prefs: []
  type: TYPE_TB
  zh: '| `OSEv3:vars` | 本节包含配置 OpenShift 各个方面的全局变量，如身份验证、注册表位置等。 | 是 |'
- en: '| `OSEv3:children` | This section lists all of the groups that are specified
    in the rest of the file. | Yes |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '| `OSEv3:children` | 本节列出了文件中其余部分所指定的所有组。 | 是 |'
- en: 'Ansible looks for specific variables to determine how various subsystems must
    be configured. The ones that we are going to use are listed in the following table.
    The full list of variables is available in the official documentation at [https://docs.openshift.org/latest/install_config/install/advanced_install.html](https://docs.openshift.org/latest/install_config/install/advanced_install.html):'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
- en: '| **Variable** | **Description** |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
- en: '| `openshift_node_labels` | Labels assigned to a particular node or to all
    nodes, depending on whether it is set for a node or globally in `OSEv3:vars`.
    You should have at least one node labeled as `{''region'': ''infra''}`. |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
- en: '| `openshift_schedulable` | Controls whether a node can be used to run pods.
    Masters are configured as unschedulable by default, but if you have no nodes labeled
    as infra, you must explicitly set it to true for at least one master, otherwise,
    pods for the registry and router will fail to start. |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
- en: '| `ansible_ssh_user` | The user account used by Ansible to connect to hosts
    via SSH. |'
  id: totrans-106
  prefs: []
  type: TYPE_TB
- en: '| `openshift_master_identity_providers` | Authentication backends. By default,
    OpenShift uses `AllowAllPasswordIdentityProvider`, effectively accepting all credentials,
    which is insecure and unacceptable in enterprise environments. |'
  id: totrans-107
  prefs: []
  type: TYPE_TB
- en: '| `deployment_type` | OpenShift distribution to install. Acceptable values
    are `enterprise` for the Red Hat OpenShift Container Platform and `origin` for
    OpenShift Origin. |'
  id: totrans-108
  prefs: []
  type: TYPE_TB
- en: '| `openshit_master_default_subdomain` | The subdomain for exposed services.
    By default, it is `<namespace>.svc.cluster.local`. |'
  id: totrans-109
  prefs: []
  type: TYPE_TB
- en: '| `openshift_disable_check` | Prior to actual installation, Ansible runs a
    number of checks to make sure that the environment satisfies certain requirements,
    such as available memory, disk space, and so on. This is meant as a safeguard
    against poor resource planning, but can be excessive in proof-of-concepts installations,
    like ours. Since we do not need 8 GB of RAM, 40 GB of disk space for the master,
    and 15 GB for nodes in /var for a testing environment, these checks can be safely
    skipped. |'
  id: totrans-110
  prefs: []
  type: TYPE_TB
- en: '| `openshift_clock_enabled` | OpenShift hosts rely on timestamps for the correct
    propagation of updates through `etcd`, failover, and quorum, which is achieved
    by time synchronization through NTP. This setting controls whether the `chronyd`
    daemon must be activated. |'
  id: totrans-111
  prefs: []
  type: TYPE_TB
- en: 'Summarizing the information given in the preceding tables, the inventory file''s
    structure should resemble the following:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: As we have only one node, we have to mark it as schedulable and belonging to
    `infra` region, so that registry, registry console, and router can be deployed.
    In production, you would usually dedicated masters to management and synchronization
    tasks, while leaving all the work of running containers to nodes, as well as have
    multiple nodes split up between different regions for availability..
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: OpenShift Ansible playbooks
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The OpenShift Ansible repository contains various playbooks for different tasks.
    Some of them are presented in the following table:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
- en: '| **Playbook** | **Description** |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
- en: '| `playbooks/prerequisites.yml` | Sets up prerequisites for the cluster deployment,
    such as subscribing hosts to Red Hat (in case of Red Hat Enterprise Linux), enabling
    repositories, and setting up firewall. |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
- en: '| `playbooks/deploy_cluster.yml` | Performs a complete installation of OpenShift
    Origin by installing all required packages, configuring, and starting services.
    This is the playbook we will use in this chapter. |'
  id: totrans-119
  prefs: []
  type: TYPE_TB
- en: '| `playbooks/openshift-master/scaleup.yml` | Looks for the host group `new_masters`
    in the inventory and configures these hosts as new members of the cluster. After
    scaleup is complete, you must move these hosts to the group `masters` to prevent
    Ansible from treating them as new ones during the next run. |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
- en: '| `playbooks/openshift-node/scaleup.yml` | Looks for the host group `new_nodes`
    in the inventory and configures these hosts as new members of the cluster. After
    scaleup is complete, you must move these hosts to the group `nodes` to prevent
    Ansible from treating them as new ones during the next run. |'
  id: totrans-121
  prefs: []
  type: TYPE_TB
- en: '| `playbooks/openshift-etcd/scaleup.yml` | Looks for the host group `new_etcd`
    in the inventory and configures these hosts as new members of the cluster. After
    scaleup is complete, you must move these hosts to the `etcd` group to prevent
    Ansible from treating them as new ones during the next run. |'
  id: totrans-122
  prefs: []
  type: TYPE_TB
- en: Familiarity with Ansible is beneficial, but not required.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
- en: Installation
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'At this point, we should have everything we need to begin the installation,
    so without further delay, let''s get started by running the prerequisites playbook:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: This playbook usually runs for a couple of minutes.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, let''s fire up the actual deployment:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: It is quite normal for this process to take 15-20 minutes, so you might as well
    use this time to skim through this book for basic operations to get you up and
    running faster.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
- en: Validation
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Once the installation has completed without any failures, you may perform basic
    sanity checks by querying the master API for installed nodes:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: As one would expect from the inventory, our single node acts both as master
    and node.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
- en: 'Another check you can run is to see if infrastructure components, like registry,
    registry console, and router were successfully deployed:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Infrastructure components of OpenShift reside in the `default` project/namespace.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
- en: 'You may also login to the web console at `https://172.24.0.11:8443`, where
    you will be prompted to accept a self-signed certificate, which you should do.
    You can use any credentials, as OpenShift accepts anyone by default, and you will
    see the following page:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00048.jpeg)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
- en: Figure 1\. OpenShift Service Catalog
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
- en: The first thing users see when they log in to OpenShift is the Service Catalog,
    which presents them with various languages and runtimes they can use for deploying
    their applications. Technically, these are templates which you will get an in-depth
    understanding of in [Chapter 9](part0195.html#5PUTM0-78aafb146b304cdeb9b3261a70edabde),
    Advanced OpenShift Concepts and in [Chapter 13](part0265.html#7SN520-78aafb146b304cdeb9b3261a70edabde),
    *Deploying Multi-Tier Applications Using Templates*.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 用户登录 OpenShift 后看到的第一个内容是服务目录，它展示了他们可以用来部署应用程序的各种语言和运行时。技术上来说，这些是模板，你将在[第 9
    章](part0195.html#5PUTM0-78aafb146b304cdeb9b3261a70edabde)，高级 OpenShift 概念和[第 13
    章](part0265.html#7SN520-78aafb146b304cdeb9b3261a70edabde)，*使用模板部署多层应用程序*中深入了解这些模板。
- en: Summary
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you learned about various deployment scenarios of OpenShift
    Origin, as well as installation methods. You wrote an Ansible inventory file and
    used it to deploy a ready-to-use OpenShift Origin platform with an internal registry,
    registry console, and a router installed out-of-the-box.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你了解了 OpenShift Origin 的各种部署场景，以及安装方法。你编写了一个 Ansible 清单文件，并使用它部署了一个即用型的
    OpenShift Origin 平台，平台内置了内部注册表、注册表控制台，并且即开即用地安装了路由器。
- en: In the following chapter, we are going to cover OpenShift core concepts such
    as creating new applications with OpenShift pods, services, routes, projects,
    and users. This will give you foundational skills, which will be enough for you
    to be able to run and manage your application container infrastructure in OpenShift.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将介绍 OpenShift 的核心概念，例如如何使用 OpenShift pod、服务、路由、项目和用户创建新应用程序。这将为你提供基础技能，足以让你能够在
    OpenShift 中运行和管理你的应用容器基础设施。
- en: Questions
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: 'What sections of the Ansible inventory file are mandatory for OpenShift installation?
    choose two:'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Ansible 清单文件中，哪些部分是 OpenShift 安装必需的？请选择两个：
- en: masters
  id: totrans-147
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: masters
- en: nfs
  id: totrans-148
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: nfs
- en: new_masters
  id: totrans-149
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: new_masters
- en: etcd
  id: totrans-150
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: etcd
- en: What label must be assigned to at least one node for successful deployment of
    a router and internal registry?
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 必须为至少一个节点分配什么标签，才能成功部署路由器和内部注册表？
- en: infrastructure
  id: totrans-152
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 基础设施
- en: dedicated
  id: totrans-153
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: dedicated
- en: infra
  id: totrans-154
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: infra
- en: special
  id: totrans-155
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: special
- en: What Ansible playbook is being used to deploy the OpenShift cluster?
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用于部署 OpenShift 集群的 Ansible playbook 是什么？
- en: playbooks/deploy_cluster.yml
  id: totrans-157
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: playbooks/deploy_cluster.yml
- en: playbooks/byo/config.yml
  id: totrans-158
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: playbooks/byo/config.yml
- en: playbooks/prerequisites.yml
  id: totrans-159
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: playbooks/prerequisites.yml
- en: playbooks/common/openshift-cluster/config.yml
  id: totrans-160
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: playbooks/common/openshift-cluster/config.yml
- en: Further reading
  id: totrans-161
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'Please see the following for further reading to accompany this chapter:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 请参阅以下内容以进一步阅读本章相关内容：
- en: '**Hardware requirements**: [https://docs.openshift.org/latest/install_config/install/prerequisites.html](https://docs.openshift.org/latest/install_config/install/prerequisites.html)'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**硬件要求**: [https://docs.openshift.org/latest/install_config/install/prerequisites.html](https://docs.openshift.org/latest/install_config/install/prerequisites.html)'
- en: '**Deployment scenarios**: [https://docs.openshift.org/latest/install_config/install/planning.html#installation-methods](https://docs.openshift.org/latest/install_config/install/planning.html#installation-methods)'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**部署场景**: [https://docs.openshift.org/latest/install_config/install/planning.html#installation-methods](https://docs.openshift.org/latest/install_config/install/planning.html#installation-methods)'
- en: '**Advanced installation and variables reference**: [https://docs.openshift.org/latest/install_config/install/advanced_install.html](https://docs.openshift.org/latest/install_config/install/advanced_install.html)'
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**高级安装和变量参考**: [https://docs.openshift.org/latest/install_config/install/advanced_install.html](https://docs.openshift.org/latest/install_config/install/advanced_install.html)'
- en: '**OpenShit Installation and Configuration**: [https://access.redhat.com/documentation/en-us/openshift_container_platform/3.9/html-single/installation_and_configuration/#install-config-install-planning](https://access.redhat.com/documentation/en-us/openshift_container_platform/3.9/html-single/installation_and_configuration/#install-config-install-planning)'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OpenShift 安装与配置**: [https://access.redhat.com/documentation/en-us/openshift_container_platform/3.9/html-single/installation_and_configuration/#install-config-install-planning](https://access.redhat.com/documentation/en-us/openshift_container_platform/3.9/html-single/installation_and_configuration/#install-config-install-planning)'
