["```\n{\n \"Type\" : \"AWS::S3::Bucket\",\n \"Properties\" : {\n \"AccessControl\" : String,\n \"AccelerateConfiguration\" : AccelerateConfiguration,\n \"AnalyticsConfigurations\" : [ AnalyticsConfiguration, ... ],\n \"BucketEncryption\" : BucketEncryption,\n \"BucketName\" : String,\n \"CorsConfiguration\" : CorsConfiguration,\n \"InventoryConfigurations\" : [ InventoryConfiguration, ... ],\n \"LifecycleConfiguration\" : LifecycleConfiguration,\n \"LoggingConfiguration\" : LoggingConfiguration,\n \"MetricsConfigurations\" : [ MetricsConfiguration, ... ]\n \"NotificationConfiguration\" : NotificationConfiguration,\n \"ReplicationConfiguration\" : ReplicationConfiguration,\n \"Tags\" : [ Resource Tag, ... ],\n \"VersioningConfiguration\" : VersioningConfiguration,\n \"WebsiteConfiguration\" : WebsiteConfiguration\n }\n}\n```", "```\nType: \"AWS::S3::Bucket\"\nProperties: \n AccessControl: String\n AccelerateConfiguration:\n AccelerateConfiguration\n AnalyticsConfigurations:\n - AnalyticsConfiguration\n BucketEncryption: \n BucketEncryption\n BucketName: String\n CorsConfiguration:\n CorsConfiguration\n InventoryConfigurations:\n - InventoryConfiguration \n LifecycleConfiguration:\n LifecycleConfiguration\n LoggingConfiguration:\n LoggingConfiguration\n MetricsConfigurations: \n - MetricsConfiguration\n NotificationConfiguration:\n NotificationConfiguration\n ReplicationConfiguration:\n ReplicationConfiguration\n Tags:\n - Resource Tag\n VersioningConfiguration:\n VersioningConfiguration\n WebsiteConfiguration:\n WebsiteConfiguration\n```", "```\nAWS::aws-product-name::data-type-name\n```", "```\n{\n key: value\n}\n```", "```\n{\n \"id\": 1,\n \"name\": \"michael\",\n \"country\": \"us\"\n}\n```", "```\n[\n {\n  \"id\": 1,\n  \"name\": \"michael\",\n  \"country\": \"us\"\n },\n {\n  \"id\": 2,\n  \"name\": \"jason\",\n  \"country\": \"uk\"\n },\n {\n  \"id\": 3,\n  \"name\": \"ryu\",\n  \"country\": \"jp\"\n }\n]\n```", "```\n{\n \"id\": 1,\n \"name\": \"michael\",\n \"address\":[\n      {\n        \"street\": \"abc street\",\n        \"city\": \"new york\"\n      },\n      {\n        \"street\": \"vue street\",\n        \"city\": \"hoston\"\n      }\n ],\n \"country\": \"us\"\n}\n```", "```\nkey:\n value\n```", "```\nid:\n 1\nname:\n \"michael\"\ncountry:\n \"us\"\n```", "```\n- id: 1\n  name: \"michael\"\n  country: \"us\"\n- id: 2\n  name: \"jason\"\n  country: \"uk\"\n- id: 3\n  name: \"ryu\"\n  country: \"jp\"\n```", "```\nid:\n 1\nname:\n \"michael\"\naddress:\n    - street: \"abc street\"\n      city: \"new york\"\n    - street: \"vue street\"\n      city: \"hoston\"\ncountry: \n \"us\"\n```", "```\n{\n \"AWSTemplateFormatVersion\" : \"version date\",\n \"Description\" : \"JSON string\",\n \"Metadata\" : {\n   template metadata\n },\n \"Parameters\" : {\n   set of parameters\n },\n \"Mappings\" : {\n   set of mappings\n },\n \"Conditions\" : {\n   set of conditions\n },\n \"Transform\" : {\n   set of transforms\n },\n \"Resources\" : {\n   set of resources\n },\n \"Outputs\" : {\n   set of outputs\n }\n}\n```", "```\nAWSTemplateFormatVersion: \"version date\"\nDescription:\n String\nMetadata:\n template metadata\nParameters:\n set of parameters\nMappings:\n set of mappings\nConditions:\n set of conditions\nTransform:\n set of transforms\nResources:\n set of resources\nOutputs:\n set of outputs\n```", "```\n{ \n  \"Parameters\": { \n    \"YourBucketName\":{\n      \"Description\": \"Amazon S3 Bucket name\",\n      \"Type\": \"String\"\n    }\n },\n \"Resources\" : {\n    \"MySimpleBucket\" : {\n      \"Type\" : \"AWS::S3::Bucket\",\n      \"Properties\" : {\n        \"AccessControl\" : \"PublicRead\",\n        \"BucketName\" : {\n           \"Ref\": \"YourBucketName\"\n        }\n      } \n    }\n  }\n}\n```", "```\n{\n    \"AWSTemplateFormatVersion\": \"2010-09-09\",\n    \"Description\": \"Amazon S3 with custom Bucket name\",\n    \"Parameters\": {      \n      \"YourBucketName\":{\n          \"Description\": \"Amazon S3 Bucket name\",\n          \"Type\": \"String\"\n      }\n    },\n    \"Resources\" : {\n        \"MySimpleBucket\" : {\n            \"Type\" : \"AWS::S3::Bucket\",\n            \"Properties\" : {\n                \"AccessControl\" : \"PublicRead\",\n                \"BucketName\" : {\n                    \"Ref\": \"YourBucketName\"\n                  }\n            }                \n        }\n\n    }\n}\n```", "```\nAWSTemplateFormatVersion:\n \"2010-09-09\"\nDescription:\n \"Amazon S3 with custom Bucket name\"\nParameters:\n YourBucketName:\n   Description:\n     \"Amazon S3 Bucket name\"\n   Type:\n     \"String\"\nResources:\n MySimpleBucket:\n   Type:\n     \"AWS::S3::Bucket\"\n   Properties:\n     AccessControl:\n        \"PublicRead\"\n   BucketName:\n     Ref:\n        \"YourBucketName\"\n```", "```\n$ aws cloudformation create-stack --stack-name my-simple-stack \n --template-body file://home/user/templates/simple-s3.json \n --parameters YourBucketName=my-simple-s3\n```", "```\n\"AWSTemplateFormatVersion\": \"2010-09-09\",\n    \"Description\": \"Amazon S3 with custom Bucket name\",\n    \"Parameters\": { \n      \"YourBucketName\":{\n          \"Description\": \"Amazon S3 Bucket name\",\n          \"Type\": \"String\"\n      }\n    }\n```", "```\nAWSTemplateFormatVersion:\n  \"2010-09-09\"\nDescription:\n  \"Amazon S3 with custom Bucket name\"\nParameters:\n  YourBucketName:\n    Description:\n      \"Amazon S3 Bucket name\"\n    Type:\n```", "```\n{\n \"AWSTemplateFormatVersion\": \"2010-09-09\",\n \"Description\": \"Amazon EC2 instance with Amazon Linux AMI.\",\n \"Parameters\": { \n    \"InstanceType\": {\n      \"Description\": \"EC2 instance type\",\n      \"Type\": \"String\",\n      \"Default\": \"t1.micro\",\n      \"AllowedValues\": [\n        \"t1.micro\",\n        \"t2.nano\",\n        \"t2.micro\",\n        \"t2.small\"\n      ],\n      \"ConstraintDescription\": \"must be a valid EC2 instance type.\"\n    } \n }\n```", "```\nAWSTemplateFormatVersion: '2010-09-09'\nDescription: Amazon EC2 instance with Amazon Linux AMI.\nParameters:\n  InstanceType:\n  Description: EC2 instance type\n  Type: String\n  Default: t1.micro\n  AllowedValues:\n    - t1.micro\n    - t2.nano\n    - t2.micro\n    - t2.small\n  ConstraintDescription: must be a valid EC2 instance type.\n```", "```\n\"Resources\": {\n   \"EC2Instance\": {\n     \"Type\": \"AWS::EC2::Instance\",\n     \"Properties\": {\n        \"InstanceType\": {\n           \"Ref\": \"InstanceType\"\n        },\n```", "```\nResources:\n EC2Instance:\n   Type: AWS::EC2::Instance\n   Properties:\n     InstanceType:\n       Ref: InstanceType\n```", "```\n\"Mappings\" : {\n   \"RegionMap\" : {\n     \"us-east-1\" : { \"32\" : \"ami-6411e20d\"},\n     \"us-west-1\" : { \"32\" : \"ami-c9c7978c\"},\n     \"eu-west-1\" : { \"32\" : \"ami-37c2f643\"},\n     \"ap-southeast-1\" : { \"32\" : \"ami-66f28c34\"},\n     \"ap-northeast-1\" : { \"32\" : \"ami-9c03a89d\"}\n   }\n}\n```", "```\nMappings\n RegionMap\n  us-east-1\n    32: ami-6411e20d\n  us-west-1\n    32 : ami-c9c7978c\n  eu-west-1\n    32 : ami-37c2f643\n  ap-southeast-1\n    32 : ami-66f28c34\n  ap-northeast-1\n    32 : ami-9c03a89d\n```", "```\n{ \"Fn::FindInMap\" : [ \"MapName\", \"TopLevelKey\", \"SecondLevelKey\"] }\n```", "```\nFn::FindInMap: [ MapName, TopLevelKey, SecondLevelKey ]\n```", "```\n     \"Mappings\": {\n      \"AWSInstanceType2Arch\": {\n        \"t1.micro\": {\n          \"Arch\": \"PV64\"\n        },\n        \"t2.nano\": {\n          \"Arch\": \"HVM64\"\n        },\n        \"t2.micro\": {\n          \"Arch\": \"HVM64\"\n        },\n        \"t2.small\": {\n          \"Arch\": \"HVM64\"\n        }\n      },\n       \"AWSRegionArch2AMI\": {\n        \"us-east-1\": {\n          \"PV64\": \"ami-2a69aa47\",\n          \"HVM64\": \"ami-6869aa05\",\n          \"HVMG2\": \"ami-61e27177\"\n        },\n        \"us-west-2\": {\n          \"PV64\": \"ami-7f77b31f\",\n          \"HVM64\": \"ami-7172b611\",\n          \"HVMG2\": \"ami-60aa3700\"\n        },\n        \"us-west-1\": {\n          \"PV64\": \"ami-a2490dc2\",\n          \"HVM64\": \"ami-31490d51\",\n          \"HVMG2\": \"ami-4b694d2b\"\n        }\n      }\n    },\n    \"Resources\": {\n      \"EC2Instance\": {\n        \"Type\": \"AWS::EC2::Instance\",\n        \"Properties\": {\n          \"InstanceType\": {\n            \"Ref\": \"InstanceType\"\n          }, \n          \"ImageId\": {\n            \"Fn::FindInMap\": [\n              \"AWSRegionArch2AMI\",\n              {\n                \"Ref\": \"AWS::Region\"\n              },\n              {\n                \"Fn::FindInMap\": [\n                  \"AWSInstanceType2Arch\",\n                  {\n                    \"Ref\": \"InstanceType\"\n                  },\n                  \"Arch\"\n                ]\n              }\n            ]\n          }\n        }\n      }\n    } \n```", "```\nMappings:\n  AWSInstanceType2Arch:\n    t1.micro:\n      Arch: PV64\n    t2.nano:\n      Arch: HVM64\n    t2.micro:\n      Arch: HVM64\n    t2.small:\n      Arch: HVM64\n  AWSInstanceType2NATArch:\n    t1.micro:\n      Arch: NATPV64\n    t2.nano:\n      Arch: NATHVM64\n    t2.micro:\n      Arch: NATHVM64\n    t2.small:\n      Arch: NATHVM64\n  AWSRegionArch2AMI:\n    us-east-1:\n      PV64: ami-2a69aa47\n      HVM64: ami-6869aa05\n      HVMG2: ami-61e27177\n    us-west-2:\n      PV64: ami-7f77b31f\n      HVM64: ami-7172b611\n      HVMG2: ami-60aa3700\n    us-west-1:\n      PV64: ami-a2490dc2\n      HVM64: ami-31490d51\n      HVMG2: ami-4b694d2b\nResources:\n  EC2Instance:\n    Type: AWS::EC2::Instance\n    Properties:\n      InstanceType:\n        Ref: InstanceType\n      ImageId:\n        Fn::FindInMap:\n        - AWSRegionArch2AMI\n        - Ref: AWS::Region\n        - Fn::FindInMap:\n          - AWSInstanceType2Arch\n          - Ref: InstanceType\n          - Arch\n```", "```\n{ \"Fn::Base64\" : valueToEncode }\n```", "```\nFn::Base64: valueToEncode\n```", "```\n{ \"Fn::Cidr\" : [ipBlock, count, sizeMask]}\n```", "```\nFn::Cidr: [ ipBlock, count, sizeMask ]\n```", "```\n\"NewVolume\" : {\n  \"Type\" : \"AWS::EC2::Volume\",\n  \"Properties\" : {\n    \"Size\" : {\n      \"Fn::If\" : [\n        \"CreateLargeSize\",\n        \"100\",\n        \"10\"\n      ]}, \n  }\n}\n```", "```\nNewVolume:\n  Type: \"AWS::EC2::Volume\"\n  Properties: \n    Size: \n      !If [CreateLargeSize, 100, 10]\n```", "```\n{ \"Fn::GetAtt\" : [ \"logicalNameOfResource\", \"attributeName\" ] }\n```", "```\nFn::GetAtt: [ logicalNameOfResource, attributeName ]\n```", "```\n  \"Resources\" : {\n    \"ElasticLoadBalancer\" : {\n      \"Type\" : \"AWS::ElasticLoadBalancing::LoadBalancer\",\n      \"Metadata\" : {\n        \"Comment1\" : \"Configure the Load Balancer with a simple health check and cookie-based stickiness\",\n        \"Comment2\" : \"Use install path for healthcheck to avoid redirects - ELB healthcheck does not handle 302 return codes\"\n      },\n```", "```\n\"Resources\" : {\n    \"Logical ID\" : {\n        \"Type\" : \"Resource type\",\n        \"Properties\" : {\n            Set of properties\n        }\n    }\n}\n```", "```\nResources:\n  Logical ID:\n    Type: Resource type\n    Properties:\n      Set of properties\n```", "```\n\"Outputs\" : {\n  \"Logical ID\" : {\n    \"Description\" : \"Information about the value\",\n    \"Value\" : \"Value to return\",\n    \"Export\" : {\n      \"Name\" : \"Value to export\"\n    }\n  }\n}\n```", "```\nOutputs:\n  Logical ID:\n    Description: Information about the value\n    Value: Value to return\n    Export:\n      Name: Value to export\n```", "```\n{\n    \"AWSTemplateFormatVersion\": \"2010-09-09\",\n    \"Description\": \"Amazon S3 with output\", \n    \"Resources\" : {\n        \"MySimpleBucket\" : {\n            \"Type\" : \"AWS::S3::Bucket\" \n        }\n\n    },\n    \"Outputs\" : {\n        \"BucketName\" : {\n            \"Value\" : { \"Ref\" : \"MySimpleBucket\" }\n        }\n    }\n}\n```", "```\nAWSTemplateFormatVersion: '2010-09-09'\nDescription: Amazon S3 with custom Bucket name\nResources:\n  MySimpleBucket:\n    Type: AWS::S3::Bucket \nOutputs:\n  BucketName:\n    Value:\n      Ref: MySimpleBucket\n```", "```\n\"KeyName\": {\n        \"Description\": \"Name of an existing EC2 KeyPair to enable SSH \n        access to the instance\",\n        \"Type\": \"AWS::EC2::KeyPair::KeyName\",\n        \"ConstraintDescription\": \"must be the name of an existing EC2 \n        KeyPair.\"\n},\n```", "```\n  KeyName:\n    Description: Name of an existing EC2 KeyPair to enable SSH access  \n    to the instance\n    Type: AWS::EC2::KeyPair::KeyName\n    ConstraintDescription: must be the name of an existing EC2 KeyPair.\n```", "```\n   \"Resources\": {\n      \"EC2Instance\": {\n        \"Type\": \"AWS::EC2::Instance\",\n        \"Properties\": {\n          ...\n          \"KeyName\": {\n            \"Ref\": \"KeyName\"\n          },\n```", "```\n   Resources:\n      EC2Instance: \n        Type: AWS::EC2::Instance\n        Properties: \n          ...\n          KeyName: \n            Ref: KeyName\n```", "```\n      \"SSHLocation\": {\n        \"Description\": \"The IP address range that can be used to SSH to the EC2 instances\",\n        \"Type\": \"String\",\n        \"MinLength\": \"9\",\n        \"MaxLength\": \"18\",\n        \"Default\": \"0.0.0.0/0\",\n        \"AllowedPattern\": \"(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})\",\n        \"ConstraintDescription\": \"must be a valid IP CIDR range of the form x.x.x.x/x.\"\n      }\n```", "```\nSSHLocation:\n    Description: The IP address range that can be used to SSH to the EC2 instances\n    Type: String\n    MinLength: '9'\n    MaxLength: '18'\n    Default: 0.0.0.0/0\n    AllowedPattern: \"(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})\"\n    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.\n```"]