["```\n$ docker version\n```", "```\n$ docker container run alpine echo \"Hello World\"\n```", "```\n$ docker container run alpine echo \"Hello World\"\n```", "```\nHello World\n```", "```\n$ docker container run alpine echo \"Hello World\"\n```", "```\n$ docker container run centos ping -c 5 127.0.0.1\n```", "```\nUnable to find image 'centos:latest' locally\n```", "```\nlatest: Pulling from library/centos\n```", "```\n52f9ef134af7: Pull completeDigest: sha256:a27fd8080b517143cbbbab9dfb7c8571c4...\nStatus: Downloaded newer image for centos:latest\n```", "```\nwhile :do\n    curl -s http://jservice.io/api/random | jq '.[0].question'\n    sleep 5\ndone\n```", "```\nwhile ($true) {  Invoke-WebRequest -Uri \"http://jservice.io/api/random\" -Method GET -UseBasicParsing |\n  Select-Object -ExpandProperty Content |\n  ConvertFrom-Json |\n  Select-Object -ExpandProperty 0 |\n  Select-Object -ExpandProperty question\n  Start-Sleep -Seconds 5\n}\n```", "```\n$ choco install jq\n```", "```\n$ brew install jq\n```", "```\n$ docker container run --detach \\    --name trivia fundamentalsofdocker/trivia:ed2\n```", "```\n$ docker container ls -l\n```", "```\n$ docker rm --force trivia\n```", "```\n$ docker container ls\n```", "```\n$ docker container ls --all\n```", "```\n$ docker container ls --quiet\n```", "```\n$ docker container rm --force $(docker container ls --all --quiet)\n```", "```\n$ docker container ls --help\n```", "```\n    $ docker container run -d --name trivia fundamentalsofdocker/trivia:ed2\n    ```", "```\n    $ docker container stop trivia\n    ```", "```\n$ export CONTAINER_ID=$(docker container ls -a | grep trivia | awk '{print $1}')\n```", "```\n$ CONTAINER_ID = docker container ls -a | Select-String \"trivia\" | Select-Object -ExpandProperty Line | ForEach-Object { $_ -split ' ' } | Select-Object -First 1$ Write-Output $CONTAINER_ID\n```", "```\n$ docker container stop $CONTAINER_ID\n```", "```\n$ docker container start $CONTAINER_ID\n```", "```\n$ docker container start trivia\n```", "```\n$ docker container rm <container ID>\n```", "```\n$ docker container rm <container name>\n```", "```\n$ docker container rm <container ID> --force\n```", "```\n$ docker container run --name trivia fundamentalsofdocker/ trivia:ed2\n```", "```\n$ docker container inspect trivia\n```", "```\n$ docker container inspect -f \"{{json .State}}\" trivia \\    | jq .\n```", "```\n$ docker container exec -i -t trivia /bin/sh\n```", "```\n/app # ps\n```", "```\n$ docker container exec trivia ps\n```", "```\n    $ docker container exec -it \\    -e MY_VAR=\"Hello World\" \\    trivia /bin/sh\n    ```", "```\n    /app # echo $MY_VAR\n    ```", "```\n    Hello World\n    ```", "```\n    /app # <CTRL-d>\n    ```", "```\n    $ docker container run -it \\    --name trivia2 fundamentalsofdocker/trivia:ed2\n    ```", "```\n    $ docker container attach trivia2\n    ```", "```\n    $ docker container rm --force trivia2\n    ```", "```\n    $ docker run -d --name nginx -p 8080:80 nginx:alpine\n    ```", "```\n    $ curl -4 localhost:8080\n    ```", "```\n    $ docker container attach nginx\n    ```", "```\n    $ for n in {1..10} do; curl -4 localhost:8080 done;\n    ```", "```\nPS> 1..10 | ForEach-Object {C:\\ProgramData\\chocolatey\\bin\\curl.exe -4 localhost:8080}\n```", "```\n    $ docker container rm nginx\n    ```", "```\n    $ docker container run --detach \\    --name trivia fundamentalsofdocker/trivia:ed2\n    ```", "```\n    $ docker container logs trivia\n    ```", "```\n    $ docker container logs --tail 5 trivia\n    ```", "```\n    $ docker container logs --tail 5 --follow trivia\n    ```", "```\n    $ docker container rm --force trivia\n    ```", "```\n    $ docker container run --name test -it \\    --log-driver none \\    busybox sh -c 'for N in 1 2 3; do echo \"Hello $N\"; done'\n    ```", "```\nHello 1Hello 2\nHello 3\n```", "```\n    $ docker container logs test\n    ```", "```\nError response from daemon: configured logging driver does not support reading\n```", "```\n    $ docker container rm test\n    ```", "```\n        $ brew install --cask virtualbox\n        ```", "```\n        $ choco install -y virtualbox\n        ```", "```\n    $ brew install --cask vagrant\n    ```", "```\n$ choco install -y vagrant\n```", "```\n    $ vagrant –version\n    ```", "```\nVagrant 2.3.2\n```", "```\n    $ vagrant init bento/ubuntu-22.04\n    ```", "```\n    $ vagrant up\n    ```", "```\n    $ vagrant ssh\n    ```", "```\n    $ cd /etc/docker\n    ```", "```\n    $ vi daemon.json\n    ```", "```\n    {    \"Log-driver\": \"json-log\",    \"log-opts\": {        \"max-size\": \"10m\",        \"max-file\": 3    }}\n    ```", "```\n    $ sudo kill -SIGHUP $(pidof dockerd)\n    ```", "```\n    $ vagrant destroy [name|id]\n    ```", "```\n    $ docker container ls\n    ```", "```\n    $ docker container ls -a -q\n    ```"]