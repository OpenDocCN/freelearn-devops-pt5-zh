["```\nFROM ubuntu:18.04\nRUN apt-get update -qq && apt-get install -qq package1 package2\nCOPY . /myapp\nRUN make /myapp\nCMD python /myapp/app.py\n```", "```\n\"RootFS\": {\n \"Type\": \"layers\",\n \"Layers\": [\n \"sha256:f1b5933fe4b5f49bbe8258745cf396afe07e625bdab3168e364daf7c956b6b81\",\n \"sha256:402522b96a27c1af04af5650819febc11f71db14152b1db8e5eab1ae581fdb2e\",\n \"sha256:cf2850b10a1aba79774a291266262f1af49fac3db11341a5ca1a396430f17507\",\n \"sha256:c1912ec50df66e3e013851f6deb80f41810b284509eebc909811115a97a1fe01\"\n ]\n }\n```", "```\n$ docker container run -ti debian\n Unable to find image 'debian:latest' locally\n latest: Pulling from library/debian\n 4a56a430b2ba: Pull complete\n Digest: sha256:e25b64a9cf82c72080074d6b1bba7329cdd752d51574971fd37731ed164f3345\n Status: Downloaded newer image for debian:latest\n root@60265b7c8a61:/#\n```", "```\nroot@60265b7c8a61:/# apt-get update -qq\n root@60265b7c8a61:/# apt-get install postfix\n Reading package lists... Done\n Building dependency tree\n Reading state information... Done\n The following additional packages will be installed:\n bzip2 cpio file libexpat1 libicu63 .....\n Suggested packages:\n bzip2-doc libarchive1 libsasl2-modules-gssapi-mit | libsasl2-modules-gssapi-heimdal  .....\n The following NEW packages will be installed:\n bzip2 cpio file libexpat1 libicu63 libmagic-mgc libmagic1 l ....\n 0 upgraded, 29 newly installed, 0 to remove and 5 not upgraded.\n Need to get 19.0 MB of archives.\n After this operation, 76.4 MB of additional disk space will be used.\n Do you want to continue? [Y/n] y\n Get:1 http://cdn-fastly.deb.debian.org/debian buster/main amd64 libpython3.7-minimal amd64 3.7.3-2 [588 kB]\n .....\n .....\n debconf: falling back to frontend: Teletype\n Postfix Configuration\n ---------------------\nPlease select the mail server configuration type that best meets your needs.\nNo configuration:\n Should be chosen to leave the current configuration unchanged.\n Internet site:\n Mail is sent and received directly using SMTP.\n Internet with smarthost:\n Mail is received directly using SMTP or by running a utility such\n as fetchmail. Outgoing mail is sent using a smarthost.\n Satellite system:\n All mail is sent to another machine, called a 'smarthost', for delivery.\n Local only:\n The only delivered mail is the mail for local users. There is no network.\n\n1\\. No configuration 2\\. Internet Site 3\\. Internet with smarthost 4\\. Satellite system 5\\. Local only\n General type of mail configuration: 1\nUnpacking postfix (3.4.5-1) ...\n ......\n ......\n Adding group `postfix' (GID 102) ...\n Done.\n Adding system user `postfix' (UID 101) ...\n Adding new user `postfix' (UID 101) with group `postfix' ...\n Not creating home directory `/var/spool/postfix'.\n Creating /etc/postfix/dynamicmaps.cf\n Adding group `postdrop' (GID 103) ...\n Done.\n /etc/aliases does not exist, creating it.\nPostfix (main.cf) was not set up. Start with\n cp /usr/share/postfix/main.cf.debian /etc/postfix/main.cf\n . If you need to make changes, edit /etc/postfix/main.cf (and others) as\n needed. To view Postfix configuration values, see postconf(1).\nAfter modifying main.cf, be sure to run 'service postfix reload'.\ninvoke-rc.d: could not determine current runlevel\n invoke-rc.d: policy-rc.d denied execution of start.\n Setting up libpython3-stdlib:amd64 (3.7.3-1) ...\n Setting up python3.7 (3.7.3-2) ...\n Setting up python3 (3.7.3-1) ...\n......\n......\n Processing triggers for libc-bin (2.28-10) ...\n```", "```\nroot@60265b7c8a61:/# exit\n```", "```\n$ docker container ls -l\nCONTAINER ID IMAGE COMMAND LABELS\nf11f8ad3b336 debian \"bash\"\n\n$ docker container commit f11f8ad3b336 debian-with-postfix\nsha256:a852d20d57c95bba38dc0bea942ccbe2c409d48685d8fc115827c1dcd5010aa6\n```", "```\n$ docker image ls\nIMAGE ID REPOSITORY TAG CREATED AT\na852d20d57c9 debian-with-postfix latest 2019-10-05 13:18:45 +0200 CEST\nc2c03a296d23 debian latest 2019-09-12 01:21:51 +0200 CEST\n\n```", "```\n        \"RootFS\": { \n          \"Type\": \"layers\", \n          \"Layers\": [ \n             \"sha256:78c1b9419976227e05be9d243b7fa583bea44a5258e52018b2af4cdfe23d148d\", \n             \"sha256:998e883275f6192039dd6eff96ece024e259cf74dd362c44c5eb9db9f3830aa0\" \n           ]\n        }\n\n```", "```\nFROM scratch\nADD hello /\nCMD [\"/hello\"]\n```", "```\nLABEL version=\"1.0\"\nLABEL description=\"This image has these \\\nand these properties....\"\nLABEL maintainer=\"Javier Ramirez\" team=\"Docker Infrastructures\"  environment=\"preproduction\"\n```", "```\nENV DATABASE_NAME=TEST\n```", "```\nWORKDIR /myappcode\n```", "```\nRUN apt-get update -qq \\\nâ€‹&& apt-get install curl\n```", "```\nCOPY mycode/* /myapp\n```", "```\nADD http://example.com/bigpackagefile.tar.gz /myapp\n```", "```\nUSER www-data:www-data\n```", "```\nVOLUME /mydata  \n```", "```\nEXPOSE 80/tcp \n```", "```\nCMD [\"/usr/bin/curl\",\"--help\"]\nCMD /usr/bin/curl -I https://www.packtpub.com\n```", "```\nHEALTHCHECK \\\n--interval=DURATION (default: 30s) \\\n--timeout=DURATION (default: 30s) \\\n--start-period=DURATION (default: 0s) \\\n--retries=N (default: 3) \\\nCMD /bin/myverificationscript \n```", "```\nRUN <command> <argument1> <argument2> <-- shell form\nRUN [\"executable\", \"argument1\", \"argument2\"] <-- exec JSON form\n```", "```\nCMD <command> <argument1> <argument2> <-- shell form\nCMD [\"executable or argument0\", \"argument1\", \"argument2\"] <-- exec JSON form\n```", "```\nENTRYPOINT <command> <argument1> <argument2> <-- shell form\nENTRYPOINT [\"executable\", \"argument1\", \"argument2\"] <-- exec JSON form\n```", "```\n$ docker image build [-t MY_TAG] [--label MY_LABEL=VALUE] [--file MY_DOCKERFILE] [BUILD_CONTEXT]\n\n```", "```\n$ docker build --file Dockerfile.application -t templated:production --build-arg ENVIRONMENT=production .\n\n```", "```\n$ docker image ls --filter label=environment\n REPOSITORY   TAG       IMAGE ID         CREATED             SIZE\n myapp        1.0      7dad160a2b02    4 seconds ago        5.6MB\n myapp       latest    285c3d16e672    7 minutes ago        5.6MB\n\n$ docker image ls --filter label=environment=test              \n REPOSITORY      TAG       IMAGE ID       CREATED         SIZE\n myapp          latest    285c3d16e672   7 minutes ago    5.6MB\n\n$ docker image ls --filter label=environment=production\n REPOSITORY      TAG        IMAGE ID      CREATED         SIZE\n myapp           1.0      7dad160a2b02  18 seconds ago    5.6MB\n\n$ docker image inspect myapp:1.0 --format \"{{ index .Config.Labels }}\"\n map[environment:production]\n```", "```\n$ docker image prune --force --filter label=environment=test \nDeleted Images:\ndeleted: sha256:285c3d16e6721700724848024b9258b05a0c8cd75ab9bd4330d9d48f3313ff28\ndeleted: sha256:62ee8a779b918d678f139941d19e33eeecc8e333a1c00d120c3b83b8545a6650\ndeleted: sha256:fb077551608a1c7244c4ed5f88e6ba301b6be2b7db7dd2a4f7194e03db6e18dd\ndeleted: sha256:9a704cd7c7c2a5233fad31df5f7186a9cf631b9b22bc89bc4d32d7ab0a1bc4a7\n\nTotal reclaimed space: 19.83kB\n```", "```\n$ docker image ls --format \"table {{.ID}}\\\\t{{.Repository}}:{{.Tag}}\\\\t{{.CreatedAt}}\"\nIMAGE ID            REPOSITORY:TAG               CREATED AT\n 28b4509cdae8        debian-with-postfix:latest   2019-10-05 13:18:45 +0200 CEST\n c2c03a296d23        debian:latest                2019-09-12 01:21:51 +0200 CEST\n d87c83ec7a66        nginx:alpine                 2019-08-28 00:20:07 +0200 CEST\n```", "```\n$ docker image save docker.io/codegazers/colors:test -o /tmp/codegazers_colors_test.tar\n\n$ file /tmp/codegazers_colors_test.tar\n /tmp/codegazers_colors_test.tar: POSIX tar archive\n\n$ tar -tf /tmp/codegazers_colors_test.tar\n.........\n.........\nd420450ab5b04122577e05172291941dcd735eaefd01ab61c64c056b148ebfde/layer.tar\n f99211cb5c4f5e30e2c5d6ce0f0f2ac42361aecbdcc77fd0e2eccf1650558a0c/\n f99211cb5c4f5e30e2c5d6ce0f0f2ac42361aecbdcc77fd0e2eccf1650558a0c/VERSION\n f99211cb5c4f5e30e2c5d6ce0f0f2ac42361aecbdcc77fd0e2eccf1650558a0c/json\n f99211cb5c4f5e30e2c5d6ce0f0f2ac42361aecbdcc77fd0e2eccf1650558a0c/layer.tar\n manifest.json\n repositories\n```", "```\n$ docker import /tmp/codegazers_colors_test.tar \n sha256:5bd30fec31de659bbfb6e3a294e826ada0474817f4c4163dd8a62027b627c81d \n\n$ docker image ls \n REPOSITORY            TAG                   IMAGE ID            CREATED             SIZE \n <none>                <none>                5bd30fec31de        4 seconds ago       77MB\n\n$ docker inspect codegazers/colors:test --format '{{json .Config.ExposedPorts }}'\n {\"3000/tcp\":{}}\n\n$ docker inspect 5bd30fec31de --format '{{json .Config.ExposedPorts }}'\n null\n```", "```\n$ docker image rm codegazers/colors:test\nUntagged: codegazers/colors:test\n\n$ docker image load </tmp/codegazers_colors_test.tar  \n Loaded image: codegazers/colors:test $ docker inspect codegazers/colors:test --format '{{json .Config.ExposedPorts }}'\n {\"3000/tcp\":{}}\n\n```", "```\nFROM alpine AS sdk\nRUN apk update && \\\napk add --update --no-cache alpine-sdk\nRUN mkdir /myapp\nWORKDIR /myapp\nADD hello.c /myapp\nRUN mkdir bin\nRUN gcc -Wall hello.c -o bin/hello\n\nFROM alpine\nCOPY --from=sdk /myapp/bin/hello /myapp/hello\nCMD /myapp/hello\n```", "```\nFROM alpine:latest\nARG HTTP_PROXY\nRUN apk update\n```", "```\nDocker-Certified-Associate-DCA-Exam-Guide/environments/standalone$ vagrant up\nBringing machine 'standalone' up with 'virtualbox' provider...\n...\nDocker-Certified-Associate-DCA-Exam-Guide/environments/standalone$ vagrant status\nCurrent machine states:\nstandalone running (virtualbox)\n...\nDocker-Certified-Associate-DCA-Exam-Guide/environments/standalone$\n```", "```\nDocker-Certified-Associate-DCA-Exam-Guide/environments/standalone$ vagrant ssh standalone\n[vagrant@standalone ~]$ \n```", "```\n[vagrant@standalone ~]$ cd $HOME\n[vagrant@standalone ~]$ mkdir chapter2\n[vagrant@standalone ~]$ cd chapter2\n```", "```\nFROM alpine:latest\nRUN echo \"hello world\"\n```", "```\n[vagrant@standalone chapter2]$ docker image build \\\n--file Dockerfile.cache --no-cache --label lab=lab1 -t test1 . \n Sending build context to Docker daemon 2.048kB\n Step 1/2 : from alpine:latest\n ---> 961769676411\n Step 2/2 : run echo \"hello world\"\n ---> Running in af16173c7af8\n hello world\n Removing intermediate container af16173c7af8\n ---> 9b3e0608971f\n Successfully built 9b3e0608971f\n Successfully tagged test1:latest\n```", "```\n[vagrant@standalone chapter2]$ docker image build \\\n--file Dockerfile.cache --no-cache --label lab=lab1 -t test2 . \n Sending build context to Docker daemon 2.048kB\n Step 1/2 : from alpine:latest\n ---> 961769676411\n Step 2/2 : run echo \"hello world\"\n ---> Running in 308e47ddbf7a\n hello world\n Removing intermediate container 308e47ddbf7a\n ---> aa5ec1fe2ca6\n Successfully built aa5ec1fe2ca6\n Successfully tagged test2:latest\n```", "```\n[vagrant@standalone chapter2]$ docker image ls --filter label=lab=lab1\n REPOSITORY          TAG                 IMAGE ID            CREATED              SIZE\n test2               latest              fefb30027241        About a minute ago   5.58MB\n test1               latest              4fe733b3db42        About a minute ago   5.58MB\n\n```", "```\nFROM alpine:latest\nRUN echo \"hello world\"\nRUN apk add --update -q python3\n```", "```\n[vagrant@standalone chapter2]$ time docker image build \\\n--file Dockerfile.cache -q -t test3 --no-cache .\n sha256:f2b524ac662682bdc13f77216ded929225d1b4253ebacb050f07d6d7e570bc51\n\n real    0m8.508s\n user    0m0.021s\n sys     0m0.042s\n\n```", "```\nFROM alpine:latest\nRUN echo \"hello world\"\nRUN apk add --update -q python3\nRUN apk add -q httpie\n```", "```\n[vagrant@standalone chapter2]$ time docker image build \\\n--file Dockerfile.cache -q -t test4 --no-cache . \n sha256:b628f57340b34e7fd2cba0b50f71f4269cf8e8fb779535b211dd668d7c21912f real 1m28.745s\n user 0m0.023s\n sys 0m0.030s\n\n```", "```\n[vagrant@standalone chapter2]$ time docker image build --file Dockerfile.cache -q -t test5 .\n sha256:7bfc6574efa9e9600d896264955dcb93afd24cb0c91ee5f19a8e5d231e4c31c7\nreal 0m15.038s\n user 0m0.025s\n sys 0m0.025s\n```", "```\nFROM alpine\nRUN mkdir /data\nRUN echo \"hello world\" > /data/helloworld\nVOLUME /data\n```", "```\n[vagrant@standalone ~]$ docker image build \\\n-f Dockerfile.chapter2.lab2 -t ch2lab2 --label lab=lab2 .\n\n Sending build context to Docker daemon  3.072kB\n Step 1/5 : FROM alpine\n ---> 961769676411\n Step 2/5 : RUN mkdir /data\n ---> Running in fc194efe122b\n Removing intermediate container fc194efe122b\n ---> d2d208a0c39e\n Step 3/5 : RUN echo \"hello world\" > /data/helloworld\n ---> Running in a390abafda32\n Removing intermediate container a390abafda32\n ---> b934d9c51292\n Step 4/5 : VOLUME /data\n ---> Running in 33df48627a75\n Removing intermediate container 33df48627a75\n ---> 8f05e96b072b\n Step 5/5 : LABEL lab=lab2\n ---> Running in 353a4ec552ef\n Removing intermediate container 353a4ec552ef\n ---> 4a1ad6047fea\n Successfully built 4a1ad6047fea\n Successfully tagged ch2lab2:latest\n\n```", "```\n[vagrant@standalone ~]$ docker container run ch2lab2 ls -lt /data\n total 4\n -rw-r--r--    1 root     root            12 Oct  7 19:30 helloworld\n\n```", "```\nFROM alpine\nRUN mkdir /data\nVOLUME /data\nRUN echo \"hello world\" > /data/helloworld\n```", "```\n[vagrant@standalone ~]$ docker image build \\\n-f Dockerfile.chapter2.lab2-2 -t ch2lab2-2 --label lab=lab2 .\n\n Sending build context to Docker daemon  4.096kB\n Step 1/5 : FROM alpine\n ---> 961769676411\n Step 2/5 : RUN mkdir /data\n ---> Using cache\n ---> d2d208a0c39e\n Step 3/5 : VOLUME /data\n ---> Using cache\n ---> 18022eec6fd2\n Step 4/5 : RUN echo \"hello world\" > /data/helloworld\n ---> Using cache\n ---> dbab99bb29a0\n Step 5/5 : LABEL lab=lab2\n ---> Using cache\n ---> ac8ef5e1b61e\n Successfully built ac8ef5e1b61e\n Successfully tagged ch2lab2-2:latest\n\n```", "```\n[vagrant@standalone ~]$ docker container run ch2lab2-2 ls -lt /data \n total 0\n\n```", "```\n[vagrant@standalone ~]$ cd $HOME/chapter2\n[vagrant@standalone ~]$ mkdir multistage\n[vagrant@standalone ~]$ cd multistage\n```", "```\n#include <stdio.h>\n int main()\n {\n   printf(\"Hello, World!\\n\");\n   return 0;\n }\n\n```", "```\nFROM alpine AS compiler \nRUN apk update && \\ \napk add --update -q --no-cache alpine-sdk \nRUN mkdir /myapp \nWORKDIR /myapp \nADD helloworld.c /myapp \nRUN mkdir bin \nRUN gcc -Wall helloworld.c -o bin/helloworld \n\nFROM alpine \nCOPY --from=compiler /myapp/bin/helloworld /myapp/helloworld \nCMD /myapp/helloworld\n```", "```\n[vagrant@standalone multistage]$ docker build \\\n--file Dockerfile.multistage --no-cache -t helloworld --label lab=lab3 . \n Sending build context to Docker daemon  3.072kB\n Step 1/11 : FROM alpine AS compiler\n ---> 961769676411\n Step 2/11 : RUN apk update && apk add --update -q --no-cache alpine-sdk\n ---> Running in f827f4a85626\n fetch http://dl-cdn.alpinelinux.org/alpine/v3.10/main/x86_64/APKINDEX.tar.gz\n fetch http://dl-cdn.alpinelinux.org/alpine/v3.10/community/x86_64/APKINDEX.tar.gz\n v3.10.2-102-ge3e3e39529 [http://dl-cdn.alpinelinux.org/alpine/v3.10/main]\n v3.10.2-103-g1b5ddad804 [http://dl-cdn.alpinelinux.org/alpine/v3.10/community]\n OK: 10336 distinct packages available\n Removing intermediate container f827f4a85626\n ---> f5c469c3ab61\n Step 3/11 : RUN mkdir /myapp\n ---> Running in 6eb27f4029b3\n Removing intermediate container 6eb27f4029b3\n ---> 19df6c9092ba\n Step 4/11 : WORKDIR /myapp\n ---> Running in 5b7e7ef9504a\n Removing intermediate container 5b7e7ef9504a\n ---> 759173258ccb\n Step 5/11 : ADD helloworld.c /myapp\n ---> 08033f10200a\n Step 6/11 : RUN mkdir bin\n ---> Running in eaaff98b5213\n Removing intermediate container eaaff98b5213\n ---> 63b5d119a25e\n Step 7/11 : RUN gcc -Wall helloworld.c -o bin/helloworld\n ---> Running in 247c18ccaf03\n Removing intermediate container 247c18ccaf03\n ---> 612d15bf6d3c\n Step 8/11 : FROM alpine\n ---> 961769676411\n Step 9/11 : COPY --from=compiler /myapp/bin/helloworld /myapp/helloworld\n ---> 18c68d924646\n Step 10/11 : CMD /myapp/helloworld\n ---> Running in 7055927efe3e\n Removing intermediate container 7055927efe3e\n ---> 08fd2f42bba9\n Step 11/11 : LABEL lab=lab3\n ---> Running in 3a4f4a1ad6d8\n Removing intermediate container 3a4f4a1ad6d8\n ---> 0a77589c8ecb\n Successfully built 0a77589c8ecb\n Successfully tagged helloworld:latest \n\n```", "```\n[vagrant@standalone multistage]$ docker container run helloworld:latest\n Hello, World! \n\n```", "```\n[vagrant@standalone multistage]$ docker image ls --filter label=lab=lab3\n REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\n helloworld          latest              0a77589c8ecb        2 minutes ago       5.6MB \n\n```", "```\n[vagrant@standalone ~]$ cd $HOME/chapter2  [vagrant@standalone ~]$ docker container run -d \\\n-p 5000:5000 --restart=always --name registry registry:2\n....\n....\n0d63bdad4017ce925b5c4456cf9f776551070b7780f306882708c77ce3dce78c\n```", "```\n[vagrant@standalone ~]$ docker pull alpine\nUsing default tag: latest\nlatest: Pulling from library/alpine\ne6b0cf9c0882: Pull complete \nDigest: sha256:2171658620155679240babee0a7714f6509fae66898db422ad803b951257db78\nStatus: Downloaded newer image for alpine:latest\ndocker.io/library/alpine:latest\n```", "```\n[vagrant@standalone ~]$ docker tag alpine localhost:5000/my-alpine \n```", "```\n[vagrant@standalone ~]$ docker image push localhost:5000/my-alpine\nThe push refers to repository [localhost:5000/my-alpine]\n6b27de954cca: Pushed \nlatest: digest: sha256:3983cc12fb9dc20a009340149e382a18de6a8261b0ac0e8f5fcdf11f8dd5937e size: 528\n```", "```\n[vagrant@standalone ~]$ docker images --filter=reference='alpine:latest' \nREPOSITORY TAG IMAGE ID CREATED SIZE\nalpine latest cc0abc535e36 42 hours ago 5.59MB\n```", "```\n[vagrant@standalone ~]$ docker image rm cc0abc535e36 --force\nUntagged: alpine:latest\nUntagged: alpine@sha256:2171658620155679240babee0a7714f6509fae66898db422ad803b951257db78\nUntagged: localhost:5000/my-alpine:latest\nUntagged: localhost:5000/my-alpine@sha256:3983cc12fb9dc20a009340149e382a18de6a8261b0ac0e8f5fcdf11f8dd5937e\nDeleted: sha256:cc0abc535e36a7ede71978ba2bbd8159b8a5420b91f2fbc520cdf5f673640a34\n```", "```\n[vagrant@standalone ~]$ docker container run localhost:5000/my-alpine:latest ls /tmp\nUnable to find image 'localhost:5000/my-alpine:latest' locally\nlatest: Pulling from my-alpine\ne6b0cf9c0882: Already exists \nDigest: sha256:3983cc12fb9dc20a009340149e382a18de6a8261b0ac0e8f5fcdf11f8dd5937e\nStatus: Downloaded newer image for localhost:5000/my-alpine:latest\n```", "```\n[vagrant@standalone ~]$ docker container rm --force registry\nregistry\n```", "```\n[vagrant@standalone ~]$ cd $HOME/chapter2\n[vagrant@standalone ~]$ mkdir templating\n[vagrant@standalone ~]$ cd templating\n```", "```\nFROM nginx:alpine \nRUN apk update -q\nRUN apk add \\ \ncurl \\ \nhttpie\n```", "```\nFROM nginx:alpine \nRUN apk update -q\n\n```", "```\n[vagrant@standalone templating]$ docker image build \\\n--quiet --file Dockerfile.nginx-dev -t baseimage:development --label lab=lab4 .     \n\n sha256:72f13a610dfb1eee3332b87bfdbd77b17f38caf08d07d5772335e963377b5f39 \n[vagrant@standalone templating]$ docker image build \\\n --quiet --file Dockerfile.nginx -t baseimage:production --label lab=lab4 .\n\n sha256:1fc2505b3bc2ecf3f0b5580a6c5c0f018b03d309b6208220fc8b4b7a65be2ec8\n\n```", "```\n[vagrant@standalone templating]$ docker image ls --filter label=lab=lab4 \n REPOSITORY       TAG         IMAGE ID      CREATED              SIZE\n baseimage    development   72f13a610dfb  13 seconds ago       83.4MB\n baseimage     production   1fc2505b3bc2  4 minutes ago        22.6MB\n\n```", "```\nARG ENVIRONMENT=development \nFROM baseimage:${ENVIRONMENT} \nCOPY html/* /usr/share/nginx/html\n\n```", "```\n[vagrant@standalone templating]$ mkdir html\n[vagrant@standalone templating]$ echo \"This is a simple test and of course it is not an application!!!\" > html/index.html\n\n```", "```\n[vagrant@standalone templating]$ docker image build \\\n--file Dockerfile.application \\\n-t templated:development \\\n--build-arg ENVIRONMENT=development \\\n--label lab=lab4 .\n Sending build context to Docker daemon  5.632kB\n Step 1/4 : ARG ENVIRONMENT=development\n Step 2/4 : FROM baseimage:${ENVIRONMENT}\n ---> 1fc2505b3bc2\n Step 3/4 : COPY html/* /usr/share/nginx/html\n ---> Using cache\n ---> e038e952a087\n Step 4/4 : LABEL lab=lab4\n ---> Running in bee7d26757da\n Removing intermediate container bee7d26757da\n ---> 06542624803f\n Successfully built 06542624803f\n Successfully tagged templated:development\n```", "```\n[vagrant@standalone templating]$ docker image build \\\n--file Dockerfile.application \\\n-t templated:production \\\n--build-arg ENVIRONMENT=production \\\n--label lab=lab4 . \n Sending build context to Docker daemon  5.632kB\n Step 1/4 : ARG ENVIRONMENT=development\n Step 2/4 : FROM baseimage:${ENVIRONMENT}\n ---> 1fc2505b3bc2\n Step 3/4 : COPY html/* /usr/share/nginx/html\n ---> Using cache\n ---> e038e952a087\n Step 4/4 : LABEL lab=lab4\n ---> Using cache\n ---> 06542624803f\n Successfully built 06542624803f\n Successfully tagged templated:production\n\n```"]