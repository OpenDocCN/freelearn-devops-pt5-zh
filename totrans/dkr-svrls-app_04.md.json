["```\n$ curl -sL https://cli.openfaas.com | sudo sh\n```", "```\n$ docker swarm init\n```", "```\n$ git clone https://github.com/openfaas/faas \\\n cd faas \\\n git checkout 0.6.5 \\\n ./deploy_stack.sh\nCloning into 'faas'...\nremote: Counting objects: 11513, done.\nremote: Compressing objects: 100% (21/21), done.\nremote: Total 11513 (delta 16), reused 19 (delta 8), pack-reused 11484\nReceiving objects: 100% (11513/11513), 16.64 MiB | 938.00 KiB/s, done.\nResolving deltas: 100% (3303/3303), done.\nNote: checking out '0.6.5'.\nHEAD is now at 5a58db2...\n\nDeploying stack\nCreating network func_functions\nCreating service func_gateway\nCreating service func_alertmanager\nCreating service func_echoit\nCreating service func_nodeinfo\nCreating service func_wordcount\nCreating service func_webhookstash\nCreating service func_decodebase64\nCreating service func_markdown\nCreating service func_base64\nCreating service func_hubstats\nCreating service func_prometheus\n```", "```\n$ docker stack ls\nNAME   SERVICES\nfunc   11\n```", "```\n$ docker stack services func --format \"table {{.Name}}\\t{{.Ports}}\"\nNAME                PORTS\nfunc_hubstats \nfunc_markdown \nfunc_echoit \nfunc_webhookstash \nfunc_prometheus     *:9090->9090/tcp\nfunc_gateway        *:8080->8080/tcp\nfunc_decodebase64 \nfunc_base64 \nfunc_wordcount \nfunc_alertmanager   *:9093->9093/tcp\nfunc_nodeinfo\n```", "```\n#include <stdio.h>\n\nint main() {\n  printf(\"%s\\n\", \"hello function\");\n  return 0;\n}\n```", "```\n###############\n# State 0\n###############\nFROM alpine:3.6\n\nRUN apk update apk add gcc musl-dev\n\nCOPY main.c /root/\nWORKDIR /root/\n\nRUN gcc -static -o main main.c\n\n###############\n# State 1\n###############\nFROM alpine:3.6\nADD https://github.com/openfaas/faas/releases/download/0.6.5/fwatchdog /usr/bin/\n\nRUN chmod +x /usr/bin/fwatchdog\nEXPOSE 8080\n\nCOPY --from=0 /root/main /usr/bin/func_c\nENV fprocess=\"/usr/bin/func_c\"\n\nENTRYPOINT [\"/usr/bin/fwatchdog\"]\n```", "```\nCOPY --from=0 /root/main /usr/bin/func_c\n```", "```\n$ export DOCKER_ID=\"chanwit\"           # replace this to yours Docker ID.\n$ docker build -t $DOCKER_ID/func_c .  # <- please note that there's a dot here.\n```", "```\n$ docker image ls $DOCKER_ID/func_c\nREPOSITORY      TAG     IMAGE ID      CREATED         SIZE\nchanwit/func_c  latest  b673f7f37036  35 minutes ago  11.6MB\n```", "```\n$ docker image push $DOCKER_ID/func_c\n```", "```\n$ curl -sSL https://cli.openfaas.com | sudo sh\n```", "```\n$ brew install faas-cli\n```", "```\n$ faas-cli new --lang=go hello\n\n2017/11/15 18:42:28 No templates found in current directory.\n2017/11/15 18:42:28 HTTP GET https://github.com/openfaas/faas-cli/archive/master.zip\n2017/11/15 18:42:38 Writing 287Kb to master.zip\n\n2017/11/15 18:42:38 Attempting to expand templates from master.zip\n2017/11/15 18:42:38 Fetched 10 template(s) : [csharp go-armhf go node-arm64 node-armhf node python-armhf python python3 ruby] from https://github.com/openfaas/faas-cli\n2017/11/15 18:42:38 Cleaning up zip file...\nFolder: hello created.\n ___                   _____           ____\n / _ \\ _ __   ___ _ __ |  ___|_ _  __ _/ ___|\n| | | | '_ \\ / _ \\ '_ \\| |_ / _` |/ _` \\___ \\\n| |_| | |_) |  __/ | | |  _| (_| | (_| |___) |\n \\___/| .__/ \\___|_| |_|_|  \\__,_|\\__,_|____/\n |_|\n\nFunction created in folder: hello\nStack file written: hello.yml\n```", "```\n$ tree -L 2 .\n.\n├── hello\n│   └── handler.go\n├── hello.yml\n└── template\n ├── csharp\n ├── go\n ├── go-armhf\n ├── node\n ├── node-arm64\n ├── node-armhf\n ├── python\n ├── python3\n ├── python-armhf\n └── ruby\n```", "```\n############\n# hello.yml \n############\nprovider:\n  name: faas\n  gateway: http://localhost:8080\n\nfunctions:\n  hello:\n    lang: go\n    handler: ./hello\n    image: hello  # change this line to <your Docker ID>/hello:v1\n```", "```\n$ faas-cli build -f ./hello.yml\n[0] > Building: hello.\nClearing temporary build folder: ./build/hello/\nPreparing ./hello/ ./build/hello/function\nBuilding: chanwit/hello:v1 with go template. Please wait..\n\nSending build context to Docker daemon  6.144kB\nStep 1/17 : FROM golang:1.8.3-alpine3.6\n ---> fd1ada53b403\n\n...\n\nStep 17/17 : CMD ./fwatchdog\n ---> Running in a904f6659c33\n ---> f3b8ec154ee9\nRemoving intermediate container a904f6659c33\nSuccessfully built f3b8ec154ee9\nSuccessfully tagged chanwit/hello:v1\nImage: chanwit/hello:v1 built.\n[0] < Builder done.\n```", "```\n$ tree -L 3 .\n.\n├── build\n│   └── hello\n│       ├── Dockerfile\n│       ├── function\n│       ├── main.go\n│       └── template.yml\n├── hello\n│   └── handler.go\n├── hello.yml\n└── template\n```", "```\n$ faas-cli push -f hello.yml \n[0] > Pushing: hello.\nThe push refers to a repository [docker.io/chanwit/hello]\n8170484ad942: Pushed \n071849fe2878: Pushed \na2e6c9f93e16: Pushed \n76eeaa2cc808: Pushed \n3fb66f713c9f: Pushed \nv1: digest: sha256:fbf493a6bb36ef92f14578508f345f055f346d0aecc431aa3f84a4f0db04e7cb size: 1367\n[0] < Pushing done.\n```", "```\n$ faas-cli deploy -f hello.yml \nDeploying: hello.\nRemoving old function.\nDeployed.\nURL: http://localhost:8080/function/hello\n\n200 OK\n```", "```\n$ faas-cli list\nFunction                          Invocations        Replicas\nfunc_echoit                       0                  1 \nfunc_wordcount                    0                  1 \nfunc_webhookstash                 0                  1 \nfunc_markdown                     0                  1 \nfunc_hubstats                     0                  1 \nfunc_decodebase64                 0                  1 \nhello                             0                  1 \nfunc_base64                       0                  1 \nfunc_nodeinfo                     0                  1 \n```", "```\n$ echo \"How are you?\" | faas-cli invoke hello\nHello, Go. You said: How are you?\n```", "```\n###################\n# State 0\n###################\nFROM golang:1.8.3-alpine3.6\n\n# ... lines removed for brevity\n\n###################\n# State 1\n###################\nFROM alpine:3.6\nRUN apk --no-cache add ca-certificates\n\n# Add non root user\nRUN addgroup -S app adduser -S -g app app \\\n    mkdir -p /home/app \\\n    chown app /home/app\n\nWORKDIR /home/app\nCOPY --from=0 /go/src/handler/handler    .\nCOPY --from=0 /usr/bin/fwatchdog         .\n\nUSER app\nENV fprocess=\"./handler\"\nCMD [\"./fwatchdog\"]\n```", "```\n$ tree .\n.\n├── README.md\n└── template\n └── go\n ├── Dockerfile\n ├── function\n │   └── handler.go\n ├── main.go\n ├── README.md\n └── template.yml\n```", "```\n$ faas-cli template pull https://github.com/chanwit/faas-templates\nFetch templates from repository: https://github.com/chanwit/faas-templates\n2017/11/16 15:44:46 HTTP GET https://github.com/chanwit/faas-templates/archive/master.zip\n2017/11/16 15:44:48 Writing 2Kb to master.zip\n\n2017/11/16 15:44:48 Attempting to expand templates from master.zip\n2017/11/16 15:44:48 Fetched 1 template(s) : [go] from https://github.com/chanwit/faas-templates\n2017/11/16 15:44:48 Cleaning up zip file...\n```", "```\n$ faas-cli build -f hello.yml \n[0] > Building: hello.\nClearing temporary build folder: ./build/hello/\nPreparing ./hello/ ./build/hello/function\nBuilding: chanwit/hello:v1 with go template. Please wait..\nSending build context to Docker daemon   7.68kB\nStep 1/15 : FROM golang:1.8.3-alpine3.6\n ---> fd1ada53b403\n\n...\n\nStep 15/15 : CMD ./fwatchdog\n ---> Using cache\n ---> 23dfcc80a031\nSuccessfully built 23dfcc80a031\nSuccessfully tagged chanwit/hello:v1\nImage: chanwit/hello:v1 built.\n[0] < Builder done.\n```", "```\n$ docker service create --name=grafana \\\n --network=func_functions \\\n -p 3000:3000 grafana/grafana\n```"]