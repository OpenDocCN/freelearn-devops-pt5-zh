["```\n$ sudo apt-get update\n$ sudo apt-get -y install ca-certificates curl gnupg lsb-release\n$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n$ echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\n$ sudo apt-get update\n$ sudo apt-get -y install docker-ce docker-ce-cli containerd.io\n```", "```\n$ sudo usermod -aG docker <username>\n```", "```\n$ docker info\nContainers: 0\n   Running: 0\n    Paused: 0\n   Stopped: 0\n    Images: 0\n…\n```", "```\n    ExecStart=/usr/bin/dockerd -H <server_ip>:2375\n    ```", "```\n$ docker run hello-world\nUnable to find image 'hello-world:latest' locally\nlatest: Pulling from library/hello-world\n1b930d010525: Pull complete\nDigest: sha256:2557e3c07ed1e38f26e389462d03ed943586f744621577a99efb77324b0fe535\nStatus: Downloaded newer image for hello-world:latest\nHello from Docker!\nThis message shows that your installation appears to be working correctly.\n...\n```", "```\n$ docker search mongo\nNAME   DESCRIPTION                    STARS   OFFICIAL AUTOMATED\nmongo  MongoDB document databases...  8293    [OK] \n...\n```", "```\n    $ docker run mongo\n    Unable to find image 'mongo:latest' locally\n    latest: Pulling from library/mongo\n    7b722c1070cd: Pull complete\n    ...\n    Digest: sha256:a7c1784c83536a3c686ec6f0a1c570ad5756b94a1183af88c07df82c5b64663c\n    {\"t\":{\"$date\":\"2021-11-17T12:23:12.379+00:00\"},\"s\":\"I\",  \"c\":\"CONTROL\",  \"id\":23285,   \"ctx\":\"-\",\"msg\":\"Automatically disabling TLS 1.0, to force-enable TLS 1.0 specify --sslDisabledProtocols 'none'\"}\n    ...\n    ```", "```\n    $ docker run -i -t ubuntu:20.04 /bin/bash\n    ```", "```\n    root@dee2cb192c6c:/# apt-get update\n    root@dee2cb192c6c:/# apt-get install -y git\n    ```", "```\n    root@dee2cb192c6c:/# which git\n    /usr/bin/git\n    ```", "```\n    root@dee2cb192c6c:/# exit\n    ```", "```\n    $ docker diff dee2cb192c6c\n    ```", "```\n    $ docker commit dee2cb192c6c ubuntu_with_git\n    ```", "```\n$ docker images\nREPOSITORY       TAG      IMAGE ID      CREATED            SIZE\nubuntu_with_git  latest   f3d674114fe2  About a minute ago 205 MB\nubuntu           20.04    20bb25d32758  7 days ago         87.5 MB\nmongo            latest   4a3b93a299a7  10 days ago        394 MB\nhello-world      latest   fce289e99eb9  2 weeks ago        1.84 kB\n```", "```\n$ docker run -i -t ubuntu_with_git /bin/bash\nroot@3b0d1ff457d4:/# which git\n/usr/bin/git\nroot@3b0d1ff457d4:/# exit\n```", "```\n    FROM ubuntu:20.04\n    RUN apt-get update && \\\n        apt-get install -y python\n    ```", "```\n    $ docker build -t ubuntu_with_python .\n    ```", "```\n    $ docker images\n    REPOSITORY              TAG     IMAGE ID       CREATED SIZE\n    ubuntu_with_python      latest  d6e85f39f5b7  About a minute ago  147 MB\n    ubuntu_with_git_and_jdk latest  8464dc10abbb  3 minutes ago       580 MB\n    ubuntu_with_git         latest  f3d674114fe2  9 minutes ago       205 MB\n    ubuntu                  20.04   20bb25d32758  7 days ago          87.5 MB\n    mongo                   latest  4a3b93a299a7  10 days ago         394 MB\n    hello-world             latest  fce289e99eb9  2 weeks ago         1.84 kB \n    ```", "```\nprint \"Hello World from Python!\"\n```", "```\nFROM ubuntu:20.04\nRUN apt-get update && \\\n    apt-get install -y python\nCOPY hello.py .\nENTRYPOINT [\"python\", \"hello.py\"]\n```", "```\n$ docker build -t hello_world_python .\n```", "```\n$ docker run hello_world_python\n```", "```\n    import os\n    print \"Hello World from %s !\" % os.environ['NAME']\n    ```", "```\n    $ docker build -t hello_world_python_name .\n    ```", "```\n    $ docker run -e NAME=Rafal hello_world_python_name\n    Hello World from Rafal !\n    ```", "```\n    ENV NAME Rafal\n    ```", "```\n    $ docker build -t hello_world_python_name_default .\n    $ docker run hello_world_python_name_default\n    Hello World from Rafal !\n    ```", "```\n$ docker run -d -t ubuntu:20.04\n```", "```\n$ docker ps\nCONTAINER ID   IMAGE           COMMAND       STATUS         PORTS \nNAMES\n95f29bfbaadc   ubuntu:20.04    \"/bin/bash\"   Up 5 seconds kickass_stonebraker\n```", "```\n$ docker ps -a\nCONTAINER ID   IMAGE          COMMAND       STATUS       PORTS  \nNAMES\n95f29bfbaadc   ubuntu:20.04   \"/bin/bash\"    Up 33 seconds kickass_stonebraker\n34080d914613   hello_world_python_name_default \"python hello.py\" Exited lonely_newton\n7ba49e8ee677 hello_world_python_name \"python hello.py\" Exited mad_turing\ndd5eb1ed81c3 hello_world_python \"python hello.py\" Exited thirsty_bardeen\n...\n```", "```\n$ docker stop 95f29bfbaadc    \n$ docker ps\nCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES\n```", "```\n$ docker run -d tomcat\n```", "```\n$ docker ps\nCONTAINER ID IMAGE  COMMAND           STATUS            PORTS    NAMES\nd51ad8634fac tomcat \"catalina.sh run\" Up About a minute 8080/tcp jovial_kare\n```", "```\n$ docker logs d51ad8634fac\n```", "```\n-p, --publish <host_port>:<container_port>\n```", "```\n$ docker stop d51ad8634fac\n$ docker run -d -p 8080:8080 tomcat\n```", "```\n$ ifconfig docker0\ndocker0 Link encap:Ethernet HWaddr 02:42:db:d0:47:db \n     inet addr:172.17.0.1 Bcast:0.0.0.0 Mask:255.255.0.0\n...\n```", "```\n$ docker inspect 03d1e6dc4d9e\n```", "```\n\"NetworkSettings\": {\n     \"Bridge\": \"\",\n     \"Ports\": {\n          \"8080/tcp\": [\n               {\n                    \"HostIp\": \"0.0.0.0\",\n                    \"HostPort\": \"8080\"\n               }\n          ]\n          },\n     \"Gateway\": \"172.17.0.1\",\n     \"IPAddress\": \"172.17.0.2\",\n     \"IPPrefixLen\": 16,\n}\n```", "```\n$ docker network ls\nNETWORK ID    NAME    DRIVER  SCOPE\nb3326cb44121  bridge  bridge  local \n84136027df04  host    host    local \n80c26af0351c  none    null    local\n```", "```\nEXPOSE 8080\n```", "```\n$ docker run -d -p 8080:8080 tomcat\n0835c95538aeca79e0305b5f19a5f96cb00c5d1c50bed87584cfca8ec790f241\ndocker: Error response from daemon: driver failed programming external connectivity on endpoint distracted_heyrovsky (1b1cee9896ed99b9b804e4c944a3d9544adf72f1ef3f9c9f37bc985e9c30f452): Bind for 0.0.0.0:8080 failed: port is already allocated.\n```", "```\n    $ docker run -d -P tomcat\n    078e9d12a1c8724f8aa27510a6390473c1789aa49e7f8b14ddfaaa328c8f737b\n    $ docker port 078e9d12a1c8\n    8080/tcp -> 0.0.0.0:32772\n    ```", "```\n    $ docker run -i -t -v ~/docker_ubuntu:/host_directory ubuntu:20.04 /bin/bash\n    ```", "```\n    root@01bf73826624:/# touch /host_directory/file.txt\n    ```", "```\n    root@01bf73826624:/# exit\n    exit\n    $ ls ~/docker_ubuntu/\n    file.txt\n    ```", "```\n    $ docker run -i -t -v ~/docker_ubuntu:/host_directory ubuntu:20.04 /bin/bash\n    root@a9e0df194f1f:/# ls /host_directory/\n    file.txt\n    root@a9e0df194f1f:/# exit\n    ```", "```\n    VOLUME /host_directory\n    ```", "```\n$ docker run -d --name tomcat tomcat\n```", "```\n$ docker logs tomcat\n```", "```\n$ docker build -t hello_world_python .\n```", "```\n<registry_address>/<image_name>:<version>\n```", "```\n    $ docker ps -a\n    CONTAINER ID IMAGE  COMMAND           STATUS  PORTS  NAMES\n    95c2d6c4424e tomcat \"catalina.sh run\" Up 5 minutes 8080/tcp tomcat\n    a9e0df194f1f ubuntu:20.04 \"/bin/bash\" Exited         jolly_archimedes\n    01bf73826624 ubuntu:20.04 \"/bin/bash\" Exited         suspicious_feynman\n    ...\n    ```", "```\n    $ docker rm 47ba1c0ba90e\n    ```", "```\n    $ docker container prune\n    ```", "```\n    $ docker run --rm hello-world\n    ```", "```\n    $ docker images\n    REPOSITORY TAG                         IMAGE ID     CREATED     SIZE\n    hello_world_python_name_default latest 9a056ca92841 2 hours ago 202.6 MB\n    hello_world_python_name latest         72c8c50ffa89 2 hours ago 202.6 MB\n    ...\n    ```", "```\n    $ docker rmi 48b5124b2768\n    ```", "```\n    docker volume prune command.\n    ```", "```\n$ docker help\n```", "```\n$ docker help run\n```"]