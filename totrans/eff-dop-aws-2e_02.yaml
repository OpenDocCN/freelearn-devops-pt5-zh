- en: Deploying Your First Web Application
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署你的第一个 Web 应用程序
- en: In the previous chapter, we covered a general introduction to the cloud, its
    benefits, and what having a DevOps philosophy means. AWS offers a number of services
    that are all easily accessible through the web interface, command-line interface,
    various SDKs, and APIs. In this chapter, we will take advantage of the web interface
    and command-line interface to create and configure our account and create a web
    server to host a simple Hello World application, all in a matter of minutes.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们介绍了云计算的一般概念、它的好处以及什么是 DevOps 思想。AWS 提供了许多服务，所有服务都可以通过 Web 界面、命令行界面、各种
    SDK 和 API 轻松访问。在本章中，我们将利用 Web 界面和命令行界面来创建和配置账户，并创建一个 Web 服务器来托管一个简单的 Hello World
    应用程序，所有操作都将在几分钟内完成。
- en: 'In this chapter, we will go through the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论以下主题：
- en: Creating and configuring your account
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建和配置你的账户
- en: Spinning up your first web server
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动你的第一个 Web 服务器
- en: Technical requirements
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'The technologies and services used in this chapter are as follows:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中使用的技术和服务如下：
- en: AWS Management Console
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AWS 管理控制台
- en: AWS compute services
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AWS 计算服务
- en: AWS IAM
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AWS IAM
- en: AWS CLI setup
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AWS CLI 设置
- en: JavaScript for the web application
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Web 应用程序的 JavaScript
- en: GitHub for ready made code
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GitHub 上的现成代码
- en: 'The GitHub links for the code are as follows:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 代码的 GitHub 链接如下：
- en: '[https://raw.githubusercontent.com/yogeshraheja/Effective-DevOps-with-AWS/master/Chapter02/helloworld.js](https://raw.githubusercontent.com/yogeshraheja/Effective-DevOps-with-AWS/master/Chapter02/helloworld.js)'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://raw.githubusercontent.com/yogeshraheja/Effective-DevOps-with-AWS/master/Chapter02/helloworld.js](https://raw.githubusercontent.com/yogeshraheja/Effective-DevOps-with-AWS/master/Chapter02/helloworld.js)'
- en: '[https://raw.githubusercontent.com/yogeshraheja/Effective-DevOps-with-AWS/master/Chapter02/helloworld.conf](https://raw.githubusercontent.com/yogeshraheja/Effective-DevOps-with-AWS/master/Chapter02/helloworld.conf)'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://raw.githubusercontent.com/yogeshraheja/Effective-DevOps-with-AWS/master/Chapter02/helloworld.conf](https://raw.githubusercontent.com/yogeshraheja/Effective-DevOps-with-AWS/master/Chapter02/helloworld.conf)'
- en: Creating and configuring your account
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建和配置你的账户
- en: If you haven't signed up for AWS yet, it is time to do so.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你还没有注册 AWS，现在是时候注册了。
- en: Signing up
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 注册
- en: This step is, of course, fairly simple and self-explanatory. In order to sign
    up (if you haven't done so yet), open [https://portal.aws.amazon.com](https://portal.aws.amazon.com)
    in your browser, click on the Create a new AWS account button, and follow the
    steps. You will need an email address and your credit card information.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这一步当然是相当简单且不言自明的。为了注册（如果你还没有注册），在浏览器中打开[https://portal.aws.amazon.com](https://portal.aws.amazon.com)，点击“创建一个新的
    AWS 账户”按钮，并按照步骤进行操作。你将需要一个电子邮件地址和信用卡信息。
- en: 'The two exceptions to this process are as follows:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这个过程的两个例外如下：
- en: If you plan to deploy servers in China, then you need to create your account
    in the AWS China region at [https://www.amazonaws.cn/](https://www.amazonaws.cn/).
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你打算在中国部署服务器，那么你需要在 AWS 中国区域创建账户，网址为[https://www.amazonaws.cn/](https://www.amazonaws.cn/)。
- en: AWS has a special facility called **GovCloud** for specific regulatory needs
    of United States federal, state, and local agencies. To sign up for this, go to
    the following link at [https://aws.amazon.com/govcloud-us/contact/](https://aws.amazon.com/govcloud-us/contact/).
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AWS 为美国联邦、州和地方政府机构的特定监管需求提供了一项名为**GovCloud**的特殊服务。要注册此服务，请访问以下链接：[https://aws.amazon.com/govcloud-us/contact/](https://aws.amazon.com/govcloud-us/contact/)。
- en: In this book, we will use servers located in Northern Virginia so you will need
    to sign up using the standard registration process.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们将使用位于弗吉尼亚州北部的服务器，因此你需要通过标准注册流程进行注册。
- en: Amazon runs a free-tier program for new users. This is designed to help you
    to discover AWS services free of cost. Amazon gives free credit on most services.
    It is likely that over time the offer will change, so this book isn't going to
    cover the specifics of this offer, but the details are available at [https://aws.amazon.com/free/](https://aws.amazon.com/free/).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊为新用户提供了一项免费计划，旨在帮助你免费体验 AWS 服务。亚马逊为大多数服务提供免费的信用额度。随着时间的推移，该优惠可能会有所变动，因此本书不会详细介绍此优惠的具体内容，但详细信息可以在[https://aws.amazon.com/free/](https://aws.amazon.com/free/)找到。
- en: 'Once you''re done with the sign-up process, you will be on the AWS Management
    Console landing page. This screen can be a bit overwhelming as Amazon now has
    a lot of services, but you will quickly get used to it. If you are a fan of bookmarks,
    this page is definitely a prime candidate:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 完成注册流程后，你将进入 AWS 管理控制台的登录页面。由于 Amazon 现在有很多服务，这个页面可能让人有些不知所措，但你会很快习惯的。如果你喜欢使用书签，那么这个页面绝对是一个首选：
- en: '![](img/55489223-a325-4c9b-be97-233e2f7d9d08.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](img/55489223-a325-4c9b-be97-233e2f7d9d08.png)'
- en: The account you just created is called a **root** account. This account will
    always have full access to all resources. Because of this, make sure that you
    keep your password in a safe place. The best practice is to use the root account
    only to create the initial user through the IAM service that we will discover
    shortly. In addition, it is strongly recommended to switch to **multi-factor authentication**
    (**MFA**) and use the identity service **IAM**—to manage user accounts, so pick
    a relatively complex password.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 你刚刚创建的账户被称为 **root** 账户。此账户将始终拥有对所有资源的完全访问权限。因此，确保将你的密码保存在安全的地方。最佳做法是仅使用 root
    账户通过 IAM 服务创建初始用户，我们将在稍后发现这个服务。此外，强烈建议切换到 **多因素认证**（**MFA**）并使用身份服务 **IAM** 管理用户账户，因此请设置一个相对复杂的密码。
- en: Enabling MFA on the root account
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启用 root 账户的 MFA
- en: 'In order to avoid any kind of issues, the first thing we need to do once we
    sign up is enable MFA. In case you haven''t seen or heard of this before, MFA
    is a security system that requires more than one method of authentication from
    independent categories of credentials. These are used to verify the user''s identity
    in order to log in. In practice, once enabled, you will need the password previously
    set when you signed up in order to login. However, you will also need another
    code provided from a different source. That second source can be provided through
    a physical device such as the SafeNet IDProve, which is available at [http://amzn.to/2u4K1rR](http://amzn.to/2u4K1rR),
    through an SMS on your phone, or through an application installed on your smartphone.
    We will use the third option—an application installed on your smartphone, which
    is completely free:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免任何问题，我们在完成注册后需要做的第一件事是启用 MFA。如果你以前没有听说过或看过 MFA，它是一种安全系统，要求通过来自不同类别凭证的多种身份验证方法。这些方法用于验证用户身份以便登录。实际上，一旦启用，你将需要在注册时设置的密码才能登录。此外，你还需要另一个来自不同来源的代码。第二个来源可以是通过物理设备（如
    SafeNet IDProve，链接：[http://amzn.to/2u4K1rR](http://amzn.to/2u4K1rR)）提供，或者通过手机上的短信，或者通过安装在智能手机上的应用程序。我们将使用第三种选项——安装在智能手机上的应用程序，这完全免费：
- en: Go to your App Store, Google Play Store, or App Marketplace and install an application
    called **Google Authenticator** (or any other equivalent, such as **Authy**).
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往你的应用商店、Google Play 商店或应用市场，安装一个名为 **Google Authenticator** 的应用（或者其他等效的应用，如
    **Authy**）。
- en: 'In the AWS Management Console, open the My Security Credentials page in the
    top-right corner:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 AWS 管理控制台中，打开右上角的“我的安全凭证”页面：
- en: '![](img/3c115402-abc2-4abe-b9cb-a918dee220b0.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3c115402-abc2-4abe-b9cb-a918dee220b0.png)'
- en: If prompted to create and use AWS **Identity and Access Management** (**IAM**),
    users with limited permissions, click on the Continue to Security Credentials
    button. We will explore the IAM system in [Chapter 3](8a74da7b-0748-4b90-a3bc-58e853e820ec.xhtml), *Treating
    Your Infrastructure as Code.* Expand the Multi-factor authentication (MFA) section
    on the page.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果系统提示你创建并使用 AWS **身份与访问管理**（**IAM**）用户，点击“继续到安全凭证”按钮。我们将在[第 3 章](8a74da7b-0748-4b90-a3bc-58e853e820ec.xhtml)中探索
    IAM 系统，*将基础设施视为代码*。在页面上展开“多因素认证”（MFA）部分。
- en: Pick virtual MFA and follow the instructions to sync Google authentication with
    your root account (note that the scan QR code option is the easiest one to pair
    the device).
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择虚拟 MFA 并按照说明将 Google 验证与 root 账户同步（注意，扫描二维码选项是最简单的配对设备方式）。
- en: From this point on, you will need your password and the token displayed on the
    MFA application in order to log in as root in the AWS console.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 从现在开始，你将需要你的密码以及 MFA 应用中显示的令牌，才能作为 root 用户登录 AWS 控制台。
- en: 'Two general tips for managing your passwords and MFA are as follows:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 有两个关于管理密码和 MFA 的通用建议如下：
- en: There are a number of good applications to manage passwords, such as **1Password**
    at [https://agilebits.com/onepassword](https://agilebits.com/onepassword) or **Dashlane**
    at [https://www.dashlane.com](https://www.dashlane.com/)[.](https://agilebits.com/onepassword)
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有许多优秀的应用程序可以管理密码，例如**1Password**，可以在[https://agilebits.com/onepassword](https://agilebits.com/onepassword)找到，或者**Dashlane**，可以在[https://www.dashlane.com](https://www.dashlane.com/)找到。
- en: For MFA, you can also try using **Authy** at [https://www.authy.com](https://www.authy.com/).
    This works like Google Authenticator but also has a centralized server allowing
    it to work across multiple devices (including desktop applications), so if you
    lose your phone, you won't lose access to AWS.
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于MFA，你还可以尝试使用**Authy**，它可以在[https://www.authy.com](https://www.authy.com/)找到。它的工作原理类似于Google
    Authenticator，但也有一个集中式服务器，允许它跨多个设备（包括桌面应用程序）工作，因此如果你丢失了手机，你也不会失去对AWS的访问权限。
- en: As we have seen earlier, the root account usage should be limited to a bare
    minimum. So, in order to create virtual servers, configure services, and so on,
    we will rely on the IAM service which will let us have granular control over permissions
    for each user.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前所看到的，根账户的使用应该限制到最小。因此，为了创建虚拟服务器、配置服务等，我们将依赖IAM服务，这将让我们对每个用户的权限进行细粒度控制。
- en: Creating a new user in IAM
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在IAM中创建新用户
- en: 'In this section, we will create and configure accounts for different individuals
    who need access to AWS. For now, we will keep things simple and only create an
    account for ourselves, as follows:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将为需要访问AWS的不同个人创建和配置账户。目前，我们将保持简单，仅为自己创建一个账户，如下所示：
- en: 'Navigate to the IAM menu in the AWS console ([https://console.aws.amazon.com/iam/](https://console.aws.amazon.com/iam/))
    or go to the Services drop-down list on the top left corner of the AWS console
    page and search for `IAM`:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在AWS控制台中导航到IAM菜单([https://console.aws.amazon.com/iam/](https://console.aws.amazon.com/iam/))，或者转到AWS控制台页面左上角的“服务”下拉菜单，搜索`IAM`：
- en: '![](img/cee7de26-a00f-483e-bc71-f348dd82a5bb.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cee7de26-a00f-483e-bc71-f348dd82a5bb.png)'
- en: Choose the Users option from the navigation pane.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从导航窗格中选择“用户”选项。
- en: Create a new user by clicking on the Add user button, and make sure that you
    tick the Programmatic access option to generate an access key ID and a secret
    access key for the user.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击“添加用户”按钮创建一个新用户，并确保勾选“编程访问”选项，以为该用户生成访问密钥ID和秘密访问密钥。
- en: Select the default options for now and create a user. Don't forget to download
    credentials.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择默认选项并创建用户。别忘了下载凭证。
- en: Back in the Users menu, click on your username to access the details page.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回到“用户”菜单，点击你的用户名以访问详细页面。
- en: In the Permissions tab, click on the Add permissions button and select the Attach
    existing policies directly option. Click on AdministratorAccess to provide full
    access to AWS services and resources to our newly created user.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“权限”标签下，点击“添加权限”按钮，选择“直接附加现有策略”选项。点击“AdministratorAccess”以向我们新创建的用户提供对AWS服务和资源的完全访问权限。
- en: 'Select the checkbox next to the AdministratorAccess option to provide full
    access to AWS services and resource to our newly created user. You will be left
    with a screen that looks like this:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选中“AdministratorAccess”选项旁边的复选框，以向我们新创建的用户提供对AWS服务和资源的完全访问权限。你将看到如下的页面：
- en: '![](img/38edc83d-43d9-4eab-91d6-e97173d81dd8.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](img/38edc83d-43d9-4eab-91d6-e97173d81dd8.png)'
- en: 'The last thing we need to do is add a password and turn on MFA for this account.
    This can be done as follows:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要做的最后一件事是为此账户设置密码并启用MFA。可以按照以下步骤完成：
- en: Click on the Security credentials tab.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“安全凭证”标签。
- en: Now click on the Console password option and enable the password for the newly
    created user. Set the password of your choice and click on the Apply button.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在点击“控制台密码”选项，为新创建的用户启用密码。设置你选择的密码并点击“应用”按钮。
- en: Once you're done with adding a password, click on the Assigned MFA device option.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你完成设置密码后，点击“分配MFA设备”选项。
- en: 'Select A virtual MFA device option and follow the remaining instructions in
    order to turn on MFA in your newly created account. You will get a message stating
    that The MFA device was successfully associated with your account**,** as shown
    in the following screenshot:'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择“虚拟MFA设备”选项，并按照剩余的说明操作，以便在你新创建的账户中启用MFA。你将看到一条信息，说明“MFA设备已成功关联到你的账户”，如下所示：
- en: '![](img/2711ccdd-92c9-4bd2-ba8f-bbdfdd202ee6.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2711ccdd-92c9-4bd2-ba8f-bbdfdd202ee6.png)'
- en: At this point, you are ready to start using the newly created user account.
    The important thing to note here is that signing in with an IAM user account is
    different from the root account. The main difference is that you sign in using
    a different URL.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此时，你已经准备好开始使用新创建的用户账户。需要注意的是，使用 IAM 用户账户登录与根账户不同，主要的区别是你使用不同的 URL 登录。
- en: Navigate to [https://console.aws.amazon.com/iam/home#home](https://console.aws.amazon.com/iam/home#home)
    or click on the Dashboard in the IAM menu.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到 [https://console.aws.amazon.com/iam/home#home](https://console.aws.amazon.com/iam/home#home)
    或在 IAM 菜单中点击仪表盘。
- en: You will see your unique sign-in URL under IAM users sign-in link. Feel free
    to also customize the link. Save this new URL in your bookmarks, and, from now
    on, use this link to sign into the AWS console.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将在 IAM 用户登录链接下看到你的独特登录 URL。你也可以自定义该链接。将这个新 URL 保存到书签中，从现在开始，使用这个链接登录 AWS 控制台。
- en: Sign out from the root account.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从根账户退出。
- en: Sign back in, but this time use your IAM user account at `https://AWS-account-ID`
    or [alias.signin.aws.amazon.com/console](https://us-east-1.signin.aws.amazon.com/oauth?SignatureVersion=4&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJMOATPLHVSJ563XQ&X-Amz-Date=2018-08-27T10%3A03%3A52.789Z&X-Amz-Signature=bd1d9ecc1e645513ee09a2133776098ba8a82903c49d994f62fe4cb04a5d92d9&X-Amz-SignedHeaders=host&client_id=arn%3Aaws%3Aiam%3A%3A015428540659%3Auser%2Fhomepage&redirect_uri=https%3A%2F%2Fconsole.aws.amazon.com%2Fconsole%2Fhome%3Fstate%3DhashArgs%2523%26isauthcode%3Dtrue&response_type=code&state=hashArgs%23).
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新登录，但这次请使用你的 IAM 用户账户，地址是 `https://AWS-account-ID` 或 [alias.signin.aws.amazon.com/console](https://us-east-1.signin.aws.amazon.com/oauth?SignatureVersion=4&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJMOATPLHVSJ563XQ&X-Amz-Date=2018-08-27T10%3A03%3A52.789Z&X-Amz-Signature=bd1d9ecc1e645513ee09a2133776098ba8a82903c49d994f62fe4cb04a5d92d9&X-Amz-SignedHeaders=host&client_id=arn%3Aaws%3Aiam%3A%3A015428540659%3Auser%2Fhomepage&redirect_uri=https%3A%2F%2Fconsole.aws.amazon.com%2Fconsole%2Fhome%3Fstate%3DhashArgs%2523%26isauthcode%3Dtrue&response_type=code&state=hashArgs%23)。
- en: Do not share your access key and secret key. By going through those steps, we
    enforced the use of MFA to access the AWS Console with our IAM user. We now need
    two factors (the password and the MFA token) to access the console. That said,
    we also created an access key which is far less secure. Anyone in possession of
    the secret key and access key (both present in the `credentials.csv`) will have
    full administrative access to the AWS account. Make sure to never share these
    credentials online. In [Chapter 8](0eb2bba9-5a84-4031-93d2-72dc4d6d4dd3.xhtml), *Hardening
    the Security of Your AWS Environment*, we will make a few changes to better protect
    this key and require the use of MFA to gain administrator privileges.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 不要分享你的访问密钥和秘密密钥。通过这些步骤，我们强制要求使用 MFA 来访问 AWS 控制台。现在，我们需要两个因素（密码和 MFA 令牌）才能访问控制台。也就是说，我们还创建了一个访问密钥，它的安全性较低。任何拥有秘密密钥和访问密钥（这两者都包含在
    `credentials.csv` 中）的人将拥有 AWS 账户的完全管理权限。请确保永远不要在网上共享这些凭证。在 [第 8 章](0eb2bba9-5a84-4031-93d2-72dc4d6d4dd3.xhtml)，*加固你的
    AWS 环境的安全性*，我们将进行一些更改，以更好地保护这个密钥并要求使用 MFA 才能获得管理员权限。
- en: The next step in configuring our account is to configure our computers to interact
    with AWS using the command-line interface.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 配置账户的下一步是配置我们的计算机，以便通过命令行界面与 AWS 进行交互。
- en: Installing and configuring the command-line interface (CLI)
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装和配置命令行界面（CLI）
- en: Using Amazon's web interface is usually a great way to explore new services.
    The problem is that when you want to go fast, create more repeatable steps, or
    create good documentation, having simple commands to execute becomes more efficient.
    Amazon provides a great and easy-to-use CLI. The tool is written in Python and
    therefore is cross-platform (Windows, Mac, and Linux).
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Amazon 的网页界面通常是探索新服务的好方法。问题是，当你想要快速操作、创建更多可重复的步骤或生成良好的文档时，执行简单命令会更加高效。Amazon
    提供了一个非常棒且易于使用的 CLI 工具。该工具是用 Python 编写的，因此具有跨平台特性（Windows、Mac 和 Linux）。
- en: We will install the tool on our laptop/desktop so that we can interact with
    AWS using bash commands. Linux and macOS X come natively with bash. If you use
    one of these operating systems, you can skip the next section. On Windows, we
    first need to install a feature called **Windows Subsystem for Linux** (**WSL**),
    which will give us the ability to run Bash commands that are very similar to what
    you get on Ubuntu Linux.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在笔记本电脑/桌面电脑上安装该工具，以便通过 bash 命令与 AWS 交互。Linux 和 macOS X 原生支持 bash。如果你使用其中一种操作系统，可以跳过下一节。在
    Windows 上，我们首先需要安装名为 **Windows Subsystem for Linux**（**WSL**）的功能，它将使我们能够运行与 Ubuntu
    Linux 上非常相似的 Bash 命令。
- en: Installing WSL (Windows only)
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 WSL（仅限 Windows）
- en: 'Nowadays, Linux and macOS X are among the most predominant OS used by developers.
    Windows recently released a partnership with Canonical, the company behind one
    of the most popular Linux distributions, support for Bash, and most of the common
    Linux packages. By installing this tool on Windows, we will be able to  interact
    with our servers more efficiently, which will also run Linux:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 如今，Linux 和 macOS X 是开发人员使用的最主流操作系统之一。Windows 最近与 Canonical（Linux 发行版之一的背后公司）建立了合作关系，支持
    Bash 以及大多数常见的 Linux 包。通过在 Windows 上安装此工具，我们将能够更高效地与我们的服务器交互，这些服务器也运行 Linux：
- en: 'Click on the Start button and search for `settings`, and then open the Settings
    application:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击开始按钮，搜索 `设置`，然后打开设置应用：
- en: '![](img/693e26db-782b-4fac-b619-8505f41b5e68.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](img/693e26db-782b-4fac-b619-8505f41b5e68.jpg)'
- en: 'This will lead you to the following window, where you have to search for `Windows
    Update settings`. Open the Windows Update settings menu:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将引导您到以下窗口，在其中搜索 `Windows 更新设置`。打开 Windows 更新设置菜单：
- en: '![](img/f4451a3e-1a0d-4cfa-9bcc-cf68caa4adb4.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f4451a3e-1a0d-4cfa-9bcc-cf68caa4adb4.png)'
- en: In the left-hand side menu of Windows Update settings, click on the For developers sub-menu
    and turn on the Developer mode option.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Windows 更新设置的左侧菜单中，点击“开发人员”子菜单并启用“开发者模式”选项。
- en: 'Once your developer mode is turned on, search in the search bar on the left-hand-side
    menu for the `Control Panel` option:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦开启开发者模式，在左侧菜单的搜索框中搜索 `控制面板` 选项：
- en: '![](img/c8b255a1-221b-4987-9dae-b44b30839af8.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c8b255a1-221b-4987-9dae-b44b30839af8.png)'
- en: 'In the Control Panel dashboard, select the Category option from the View by
    drop-down, and click on the Programs option. Then, under Programs and Features,
    click on the Turn Windows features on or off option:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在控制面板的仪表板中，选择“类别”视图选项，然后点击“程序”选项。接着，在“程序和功能”下，点击“启用或关闭 Windows 功能”选项：
- en: '![](img/2e3f5df9-c6ce-405e-9cca-5faf1d2f95c6.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2e3f5df9-c6ce-405e-9cca-5faf1d2f95c6.png)'
- en: 'In this menu, find the feature called Windows Subsystem for Linux (Beta), and
    click on the OK button:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在此菜单中，找到名为“Windows 子系统 for Linux (Beta)”的功能，并点击“确定”按钮：
- en: '![](img/0d5ef3e7-cf36-4a98-a6a1-d054b26781e4.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0d5ef3e7-cf36-4a98-a6a1-d054b26781e4.png)'
- en: This will install the feature and ask you to restart your computer.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这将安装该功能并要求您重新启动计算机。
- en: 'Once you are back in Windows, click on the Start button again, search for `bash`,
    and start the Bash on Ubuntu on the Windows application:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回 Windows 后，再次点击开始按钮，搜索 `bash`，并启动 Bash on Ubuntu on the Windows 应用：
- en: '![](img/9feb5a78-ec22-4f50-9db9-c8ee5e2deb6b.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9feb5a78-ec22-4f50-9db9-c8ee5e2deb6b.png)'
- en: After a few initialization steps, you will be able to use Bash on Windows in
    the same way you would on Linux.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成初始化步骤后，您将能够像在 Linux 上一样使用 Windows 上的 Bash。
- en: From that point on, use the Bash application to run the commands present in
    the book.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 从此时起，使用 Bash 应用程序运行书中列出的命令。
- en: Installing the AWS CLI package
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 AWS CLI 包
- en: The AWS CLI utility is written in Python. While there are several ways to install
    it, we will use **PyPA**, the Python package manager, to install this tool.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: AWS CLI 工具是用 Python 编写的。虽然有多种方式来安装它，但我们将使用 **PyPA**，Python 包管理器，来安装此工具。
- en: 'To install PyPA, depending on your OS, you will need to run the following commands:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装 PyPA，取决于您的操作系统，您需要运行以下命令：
- en: 'On Windows:'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Windows 上：
- en: '[PRE0]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'On macOS X:'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 macOS X 上：
- en: '[PRE1]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'On Debian-based Linux distributions:'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在基于 Debian 的 Linux 发行版上：
- en: '[PRE2]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'On Red Hat/CentOS-based Linux distributions:'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在基于 Red Hat/CentOS 的 Linux 发行版上：
- en: '[PRE3]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Once PyPA is installed, you will get access to the `pip` command.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 安装 PyPA 后，您将能够使用 `pip` 命令。
- en: 'Lastly, to install the AWS CLI using the `pip` command, you simply need to
    run the following command:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，要使用 `pip` 命令安装 AWS CLI，您只需运行以下命令：
- en: '[PRE4]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: If you get an output to upgrade your `pip` version to the latest available level,
    execute `pip install --upgrade pip`.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 如果提示您升级 `pip` 版本到最新的可用版本，执行 `pip install --upgrade pip`。
- en: We have demonstrated all of the outputs from CentOS-based Linux distribution
    but the process is equally applicable on all of the mentioned supported platforms.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经展示了来自 CentOS 基于 Linux 发行版的所有输出，但该过程同样适用于所有提到的支持平台。
- en: Configuring the AWS CLI
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置 AWS CLI
- en: 'To do this, you will need to extract the AWS access key ID and secret access
    key from the file downloaded in step 4 of the *Creating a new user in IAM* section:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，您需要从在*创建 IAM 中的新用户*部分的第 4 步下载的文件中提取 AWS 访问密钥 ID 和秘密访问密钥：
- en: '[PRE5]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'We will run the following command to configure our AWS account:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将运行以下命令来配置我们的 AWS 账户：
- en: '[PRE6]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'At this point, we are ready to start using the CLI. We can quickly verify that
    everything is working by listing the user accounts, as follows:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 此时，我们准备开始使用CLI。我们可以通过列出用户账户来快速验证一切是否正常，如下所示：
- en: '[PRE7]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: AWS aws-shell
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: AWS aws-shell
- en: Amazon has a second CLI tool called `aws-shell`. This tool is more interactive
    than the classic `awscli` command, as it offers out-of-the-box auto-completion
    and a split-screen view that lets you access the documentation as you type your
    commands. If you are a new AWS user, give it a shot (`pip install aws-shell`).
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 亚马逊有一个第二个命令行工具叫做`aws-shell`。这个工具比经典的`awscli`命令更具交互性，因为它提供了开箱即用的自动补全功能，并且有一个分屏视图，可以让你在输入命令时访问文档。如果你是一个新的AWS用户，不妨试试看（`pip
    install aws-shell`）。
- en: Creating our first web server
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建我们的第一个Web服务器
- en: Now that we have our environment set up, we are finally ready to launch our
    first EC2 instance. There are a couple of ways to do that. Since we just installed
    and configured `awscli` and we want to see effective ways of managing infrastructures,
    we will demonstrate how to do this using the CLI.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经设置好了环境，终于可以启动我们的第一个EC2实例了。有几种方法可以做到这一点。由于我们刚刚安装并配置了`awscli`，并且希望查看有效的基础设施管理方法，我们将演示如何使用CLI来完成这项工作。
- en: 'Launching a virtual server requires having a certain amount of information
    ahead of time. We will use the `aws ec2 run-instances` command, but we need to
    supply it with the following:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 启动虚拟服务器需要提前准备一些信息。我们将使用`aws ec2 run-instances`命令，但需要提供以下信息：
- en: An AMI ID
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个AMI ID
- en: An instance type
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个实例类型
- en: A security group
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个安全组
- en: An SSH key-pair
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个SSH密钥对
- en: Amazon Machine Images (AMIs)
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 亚马逊机器镜像（AMI）
- en: 'An AMI is a package that contains, among other things, the root file system
    with the operating system (for example, Linux, UNIX, or Windows) as well as additional
    software required to start up the system. To find the proper AMI, we will use
    the `aws ec2 describe-images` command. By default, the `describe-images` command
    will list all available public AMIs, which is way over 3 million by now. To get
    the best out of that command, it is important to combine it with the filter option
    to only include the AMI we would like to use. In our case, we want to use the
    following to filter our AMIs:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: AMI是一个包含多个内容的包，其中包括操作系统的根文件系统（例如，Linux、UNIX或Windows），以及启动系统所需的其他软件。为了找到合适的AMI，我们将使用`aws
    ec2 describe-images`命令。默认情况下，`describe-images`命令会列出所有可用的公共AMI，目前已经超过了300万个。为了充分利用这个命令，重要的是结合过滤选项，仅包括我们想要使用的AMI。在我们的情况下，我们将使用以下方法来过滤我们的AMI：
- en: We want the name to be Amazon Linux AMI, which designates the Linux distribution
    officially supported by AWS. Amazon Linux is based off Red Hat/CentOS but includes
    a few extra packages to make the integration with other AWS services easy to do.
    You can read more about AWS Linux at [http://amzn.to/2uFT13F](http://amzn.to/2uFT13F).
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们希望名称为Amazon Linux AMI，这表示AWS官方支持的Linux发行版。Amazon Linux基于Red Hat/CentOS，但包括一些额外的包，以便与其他AWS服务的集成更加方便。你可以在[http://amzn.to/2uFT13F](http://amzn.to/2uFT13F)了解更多关于AWS
    Linux的信息。
- en: We want to use the `x84_64` bits version of Linux to match the architecture
    we will use.
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们想使用`x84_64`位版本的Linux，以匹配我们将要使用的架构。
- en: The virtualization type should be HVM, which stands for hardware virtual machine.
    This is the newest and best-performing type of virtualization.
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 虚拟化类型应该是HVM，代表硬件虚拟机。这是最新且性能最强的虚拟化类型。
- en: We want GP2 support, which will let us use the newest generation of instances
    that don't come with *instance store,* meaning that the servers that power our
    instances will be different from the servers that store our data.
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们需要GP2支持，这样我们就可以使用最新一代的实例，而这些实例没有*实例存储*，意味着支持我们实例的服务器将与存储我们数据的服务器不同。
- en: 'In addition, we will sort the output by age and only look at the most recently
    released AMI:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们将按年龄对输出进行排序，并只查看最近发布的AMI：
- en: '[PRE8]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The output of running the preceding command can be shown as follows:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 运行前面命令的输出如下所示：
- en: '![](img/b5850390-3f22-4650-ba95-ec90894f10a7.png)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b5850390-3f22-4650-ba95-ec90894f10a7.png)'
- en: As you can see, at this time, the most recent AMI ID is `ami-cfe4b2b0`. This
    might differ by the time you execute the same command, as the Amazon vendors included
    regularly update their OS.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，当前最新的AMI ID是`ami-cfe4b2b0`。当你执行相同的命令时，这可能会有所不同，因为亚马逊供应商定期更新他们的操作系统。
- en: When using the `aws cli --query` option, the output can be very consequential
    for certain commands. Taking the preceding example, if we only care about a subset
    of information, we can supplement the commands with the `--query` option to filter
    the information we want only. This option uses the **JMESPath** query language.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用`aws cli --query`选项时，输出对于某些命令非常重要。以前面的例子为例，如果我们只关心某些信息子集，我们可以使用`--query`选项来过滤我们想要的信息。该选项使用**JMESPath**查询语言。
- en: Instance types
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实例类型
- en: In this section, we will select the virtual hardware to use for our virtual
    server. AWS provides a number of options best described in their documentation
    at [https://aws.amazon.com/ec2/instance-types/](https://aws.amazon.com/ec2/instance-types/).
    We will talk about instance types in more detail in [Chapter 6](c54f64c9-e8a3-4eed-b68d-087ff40f8b1d.xhtml), *Scaling
    Your Infrastructure*.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将选择用于虚拟服务器的虚拟硬件。AWS提供了一些选项，最好在他们的文档中进行详细描述：[https://aws.amazon.com/ec2/instance-types/](https://aws.amazon.com/ec2/instance-types/)。我们将在[第6章](c54f64c9-e8a3-4eed-b68d-087ff40f8b1d.xhtml)中更详细地讨论实例类型，*扩展您的基础设施*。
- en: For now, we will select the `t2.micro` instance type as it is eligible for the
    AWS free usage tier.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将选择`t2.micro`实例类型，因为它符合AWS的免费使用套餐条件。
- en: Security groups
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安全组
- en: Security groups work a bit like firewalls. All EC2 instances have a set of security
    groups assigned to them, and each security group contains rules to allow traffic
    to flow inbound (**ingress**) and/or outbound (**egress**).
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 安全组的工作方式有点像防火墙。所有EC2实例都有一组安全组分配给它们，每个安全组包含允许流入（**入站**）和/或流出（**出站**）流量的规则。
- en: 'For this exercise, we will create a small web application running on port `tcp/3000`.
    In addition, we want to be able to SSH into the instance, so we also need to allow
    inbound traffic to port `tcp/22`. We will create a simple security group to allow
    this, by performing the following steps:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，我们将创建一个运行在`tcp/3000`端口上的小型Web应用程序。此外，我们希望能够通过SSH连接到实例，因此我们还需要允许到`tcp/22`端口的入站流量。我们将通过以下步骤创建一个简单的安全组来实现这一点：
- en: 'First, we need to find out our default **virtual private cloud** (**VPC**)
    ID. Despite being in a cloud environment, where the physical resources are shared
    by all AWS customers, there is still a strong emphasis on security. AWS segmented
    their virtual infrastructure using the concept of VPC. You can imagine this as
    being a virtual datacenter with its own network. The security groups that protect
    our EC2 instances are tied with subnets that in turn are tied to the network that
    the VPC provides:'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们需要找出我们的默认**虚拟私有云**（**VPC**）ID。尽管处于云环境中，物理资源由所有AWS客户共享，但安全性仍然受到严格强调。AWS使用VPC的概念来分割他们的虚拟基础设施。你可以把它想象成一个带有自己网络的虚拟数据中心。保护我们的EC2实例的安全组与子网相关联，子网又与VPC提供的网络相关联：
- en: '![](img/e89e10dd-525c-4dd0-8d7c-28cf71e18dd4.png)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e89e10dd-525c-4dd0-8d7c-28cf71e18dd4.png)'
- en: 'To identify our VPC ID, we can run the following command:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 要识别我们的VPC ID，我们可以运行以下命令：
- en: '[PRE9]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Now that we know the VPC ID (yours will be different), we can create our new
    security group, as follows:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们知道了VPC ID（你的将会不同），我们可以按照以下步骤创建我们的新安全组：
- en: '[PRE10]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'By default, security groups allow all outbound traffic from the instance. We
    just need to open up SSH (`tcp/22`) and `tcp/3000` for inbound traffic. We then
    need to input the following:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 默认情况下，安全组允许实例的所有出站流量。我们只需打开SSH（`tcp/22`）和`tcp/3000`的入站流量。然后，我们需要输入以下内容：
- en: '[PRE11]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'We can now verify the change made using the following code, as the previous
    commands aren''t verbose:'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在可以使用以下代码验证所做的更改，因为之前的命令并不详细：
- en: '[PRE12]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: As expected, we opened up the traffic to the proper ports. If you know how to
    find your public IP, you can improve the SSH rule by replacing `0.0.0.0/0` with
    your IP/32 so that only you can try to SSH into that EC2 instance.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 如预期那样，我们已经开放了适当端口的流量。如果您知道如何找到您的公共IP地址，您可以通过将`0.0.0.0/0`替换为您的IP/32来改进SSH规则，以便只有您可以尝试通过SSH连接到该EC2实例。
- en: Using the aws cli --output option
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 使用aws cli --output选项
- en: 'By default, most of the commands will return a JSON output. AWS has a a certain
    number of options globally available. You can see them used a bit in this chapter.
    The first option is `--output [json | text | table]`:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数命令默认会返回JSON输出。AWS全局可用的选项有一定数量。您可以在本章中看到它们的使用。第一个选项是`--output [json | text
    | table]`：
- en: '![](img/f8f066db-fef2-47a2-a091-1c8768870275.png)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f8f066db-fef2-47a2-a091-1c8768870275.png)'
- en: Generating your SSH keys
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 生成您的SSH密钥
- en: By default, Amazon EC2 uses SSH key pairs to give you SSH access to your EC2
    instances. You can either generate a key pair in EC2 and download the private
    key or generate a key yourself using a third-party tool such as OpenSSL, importing
    the public key in EC2\. We will use the first method to create EC2 SSH keys.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Amazon EC2使用SSH密钥对为你提供SSH访问权限。你可以在EC2中生成密钥对并下载私钥，也可以使用第三方工具（如OpenSSL）生成密钥，并在EC2中导入公钥。我们将使用第一种方法来创建EC2
    SSH密钥。
- en: 'Here, ensure that you set read only permissions on your newly generated private
    (`.pem`) key file:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在此，确保为你新生成的私有（`.pem`）密钥文件设置只读权限：
- en: '[PRE13]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Launching an EC2 instance
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启动EC2实例
- en: 'We now have all the information required to launch our instance. Let''s finally
    launch it as follows:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经拥有了启动实例所需的所有信息。让我们最后按如下方式启动它：
- en: '[PRE14]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'You can track the progress of the instance creation. To do that, get the instance
    ID provided in the output of the `aws ec2 run-instances` command and run the following
    command:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以跟踪实例创建的进度。为此，获取`aws ec2 run-instances`命令输出中的实例ID，并运行以下命令：
- en: '[PRE15]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The instance will be ready once the status under `SystemStatus` changes from
    `initializing` to `ok`:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦`SystemStatus`下的状态从`initializing`变为`ok`，实例就会准备好：
- en: '[PRE16]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Connecting to the EC2 instance using SSH
  id: totrans-160
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用SSH连接到EC2实例
- en: 'The main goal of this chapter is to create a simple `Hello World` web application.
    Since we are starting with a Vanilla OS, we need to connect to the host to make
    the necessary changes to turn our standard server into a web server. In order
    to SSH our instance, we need to find the DNS name of our running instance, as
    follows:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的主要目标是创建一个简单的`Hello World`网页应用。由于我们从一个普通操作系统开始，我们需要连接到主机，进行必要的更改，将我们的标准服务器转变为网页服务器。为了通过SSH访问我们的实例，我们需要找到正在运行的实例的DNS名称，方法如下：
- en: '[PRE17]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'We now have the public DNS name of our instance and the private key to SSH
    into it. The last thing to know is that, for the OS that we selected while choosing
    our AMI in Amazon Linux, the default user account is called `ec2-user`:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在有了实例的公共DNS名称和私钥，可以用来SSH连接到它。最后需要了解的是，对于我们在选择Amazon Linux的AMI时所选的操作系统，默认用户帐户名为`ec2-user`：
- en: '[PRE18]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: If you experience any issues, add the `-vvv` option in your SSH command to troubleshoot
    it.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 如果遇到任何问题，请在SSH命令中添加`-vvv`选项进行故障排除。
- en: Creating a simple Hello World web application
  id: totrans-166
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个简单的Hello World网页应用
- en: 'Now that we are connected to our EC2 instance, we are ready to start playing
    around with it. In this book, we will focus on the most common use case for AWS
    in tech companies: hosting an application. In terms of languages, we will use
    JavaScript, which is one of the most popular languages on GitHub. That said, this
    application is  aimed more at giving support in order to demonstrate how to best
    use AWS using the DevOps principles. Having any kind of knowledge about JavaScript
    isn''t required in order to understand this book:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经连接到EC2实例，准备开始在它上面进行实验。在本书中，我们将专注于AWS在技术公司中最常见的用例：托管应用程序。在编程语言方面，我们将使用JavaScript，这是GitHub上最受欢迎的语言之一。也就是说，这个应用程序更多的是为了提供支持，演示如何使用DevOps原则最好地使用AWS。了解JavaScript的任何知识都不是理解本书的必要条件：
- en: '![](img/74869af1-18ea-46ef-ba9c-fe358d404429.png)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![](img/74869af1-18ea-46ef-ba9c-fe358d404429.png)'
- en: 'Some of the main advantages that JavaScript offers with regards to this book
    include the fact that:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: JavaScript在本书中提供的一些主要优势包括：
- en: It is fairly easy to write and read, even for beginners
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它非常容易写和读，甚至对于初学者来说
- en: It doesn't need to be compiled
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它不需要编译
- en: It can be run server side thanks to Node.js ([https://nodejs.org](https://nodejs.org))
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它可以在服务器端运行，得益于Node.js（[https://nodejs.org](https://nodejs.org)）
- en: It is officially supported by AWS and therefore the AWS SDK for JavaScript is
    a *first-class citizen*
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它是AWS官方支持的，因此AWS的JavaScript SDK是一个*一流的成员*
- en: For the rest of the chapter, all the commands and code are to be run on our
    instance through SSH.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的其余部分，所有命令和代码都将在我们的实例上通过SSH运行。
- en: Installing Node.js
  id: totrans-175
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Node.js
- en: 'The first thing we need to do is install Node.js. Amazon Linux is based on
    **Red Hat Enterprise Linux** (**RHEL**) and uses the `yum` utility to manage and
    install packages. The OS comes with **Extra Packages for Enterprise Linux** (**EPEL**)
    preconfigured in it. As we would expect, Node.js is present in EPEL:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要做的第一件事是安装Node.js。Amazon Linux基于**Red Hat Enterprise Linux**（**RHEL**），并使用`yum`工具来管理和安装软件包。操作系统自带了**Enterprise
    Linux的额外软件包**（**EPEL**）预配置。正如我们所预期的，Node.js在EPEL中：
- en: '[PRE19]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: This is definitely an old version of the node but it's going to be good enough
    for what we need.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 这肯定是一个旧版本的节点，但它对我们需要的功能已经足够了。
- en: Running a Node.js Hello World application
  id: totrans-179
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行 Node.js Hello World 应用程序
- en: 'Now that the node is installed, we can create a simple Hello World application.
    Here is the code for creating this:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，节点已经安装好，我们可以创建一个简单的 Hello World 应用程序。下面是创建此应用程序的代码：
- en: '[PRE20]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Feel free to copy this into a file. Alternatively, if you want to save time,
    download this from GitHub:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 随意将其复制到文件中。或者，如果你想节省时间，可以从 GitHub 上下载：
- en: '[PRE21]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'In order to run the Hello World application, we are now simply going to run
    the following code:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 为了运行 Hello World 应用程序，我们现在只需运行以下代码：
- en: '[PRE22]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'If everything goes well, you will now be able to open this in your browser
    at the following link: `http://your-public-dns-name:3000`. Or in my case, this
    will be found here: `http://ec2-34-201-101-26.compute-1.amazonaws.com:3000`. You
    will then be able to see the result, as follows:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一切顺利，你现在应该能够在浏览器中打开以下链接：`http://your-public-dns-name:3000`。或者在我的例子中，可以在这里找到：`http://ec2-34-201-101-26.compute-1.amazonaws.com:3000`。然后，你将能够看到如下结果：
- en: '![](img/cf05de32-d99b-47e8-ac17-ffaf0d1003e9.png)'
  id: totrans-187
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cf05de32-d99b-47e8-ac17-ffaf0d1003e9.png)'
- en: We will now stop the execution of the Hello World web application with *Ctrl*
    + *C* in your Terminal window.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将通过在终端窗口中按 *Ctrl* + *C* 停止 Hello World 网络应用程序的执行。
- en: Turning our simple code into a service using upstart
  id: totrans-189
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 upstart 将我们的简单代码转化为服务
- en: Since we started the node application manually in the Terminal, closing the
    SSH connection or hitting *Ctrl* + *C* on the keyboard will stop the node process,
    and therefore our Hello World application will not work anymore. Amazon Linux,
    unlike a standard Red Hat-based distribution, comes with a system called **upstart**.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们在终端手动启动了节点应用程序，关闭 SSH 连接或按 *Ctrl* + *C* 键会停止节点进程，因此我们的 Hello World 应用程序将不再工作。与标准的
    Red Hat 基于发行版不同，Amazon Linux 带有一个名为 **upstart** 的系统。
- en: This is fairly easy to use and provides a couple of extra features that traditional
    **System-V bootup** scripts don't have, such as the ability to respawn a process
    that died unexpectedly. To add an upstart configuration, you need to create a
    file inside `/etc/init` on the EC2 instance.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 这个工具非常易于使用，并提供了一些传统 **System-V 启动** 脚本没有的额外功能，比如在进程意外死亡时重新生成进程。要添加 upstart 配置，你需要在
    EC2 实例的`/etc/init`目录下创建一个文件。
- en: 'Here is the code to insert it in `/etc/init/helloworld.conf`:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是将其插入`/etc/init/helloworld.conf`的代码：
- en: '[PRE23]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '*Why start on elastic network interfaces? *If you are familiar with upstart
    outside of AWS, you might have used start on run level [345]. In AWS, the problem
    with that is that your network comes from **Elastic Network Interface** (**ENI**),
    and if your application starts before this service, it might not be able to connect
    to the network correctly.'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: '*为什么要在弹性网络接口上启动？* 如果你熟悉 AWS 之外的 upstart，可能曾使用过 `start on run level [345]`。在
    AWS 中，问题在于你的网络来自 **弹性网络接口** (**ENI**)，如果应用程序在此服务之前启动，它可能无法正确连接到网络。'
- en: '[PRE24]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'We can now simply start our application, as follows:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以简单地启动我们的应用程序，如下所示：
- en: '[PRE25]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: As expected, `http://your-public-dns-name:3000` still works, and this time we
    can safely close our SSH connection.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 正如预期的那样，`http://your-public-dns-name:3000` 仍然有效，这一次我们可以安全地关闭 SSH 连接。
- en: Terminating our EC2 instance
  id: totrans-199
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 终止我们的 EC2 实例
- en: As with most Hello World exercises, once the `helloworld` message is displayed,
    the goal is reached. It is now time to think about shutting down our server. Since
    we only pay for what we consume in AWS, freeing up unnecessary resources such
    as this server is a good strategy for making AWS very cost effective.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 和大多数 Hello World 示例一样，一旦`helloworld`消息显示出来，目标就达成了。现在是时候考虑关闭我们的服务器了。由于我们在 AWS
    中只为实际使用的资源付费，因此释放像这样的不必要的资源是一种使 AWS 非常具有成本效益的好策略。
- en: 'We can do a clean shutdown of the Hello World service using the `stop` command.
    We can then exit the virtual server and terminate our instance, as follows:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`stop`命令干净地关闭 Hello World 服务。然后，我们可以退出虚拟服务器并终止实例，如下所示：
- en: '[PRE26]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Summary
  id: totrans-203
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This chapter was a quick and simple introduction to AWS and its most notorious
    service, EC2\. After signing up for AWS, we configured our environment in such
    a way that we could create a virtual server using the command-line interface.
    Leading to this, we selected our first AMI, created our first security group,
    and generated our SSH keys, which we will reuse throughout the book. After launching
    an EC2 instance, we manually deployed a simple Node.js application to display
    Hello World.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 本章是对 AWS 及其最著名的服务 EC2 的简短介绍。在注册 AWS 后，我们配置了环境，以便通过命令行界面创建虚拟服务器。接下来，我们选择了第一个
    AMI，创建了第一个安全组，并生成了 SSH 密钥，这些密钥将在整本书中重复使用。在启动 EC2 实例后，我们手动部署了一个简单的 Node.js 应用程序来显示
    Hello World。
- en: While the process wasn't very fastidious thanks to the AWS CLI, it still required
    going through numerous steps, which aren't very repeatable. We also deployed the
    application without any automation or validation. Furthermore, the only way we
    can check if the application is running is by manually checking the endpoint.
    In the remainder of the book, we will revisit the process of creating and managing
    web applications and infrastructure, but, this time, we will follow the DevOps
    principles and incorporate their best practices.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然得益于 AWS CLI，该过程并不特别繁琐，但仍然需要经历许多步骤，而且这些步骤并不容易重复。我们还在没有任何自动化或验证的情况下部署了应用程序。此外，检查应用程序是否运行的唯一方法是手动检查端点。在接下来的章节中，我们将重新审视创建和管理网页应用程序与基础设施的过程，但这次我们将遵循
    DevOps 原则，并结合其最佳实践。
- en: 'In Chapter 3*, Treating Your Infrastructure as Code*, we will address one of
    the first issues we encountered: managing our infrastructure with automation.
    To do that, we will write code to manage our infrastructure.'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 在第三章《将基础设施视为代码》中，我们将讨论我们遇到的第一个问题：如何通过自动化来管理我们的基础设施。为此，我们将编写代码来管理我们的基础设施。
- en: Questions
  id: totrans-207
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: 'Please answer the following questions:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 请回答以下问题：
- en: How do you create a free-tier AWS account?
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何创建一个免费层的 AWS 账户？
- en: How do you create your first AWS cloud instance using the AWS Console portal?
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何使用 AWS 控制台门户创建你的第一个 AWS 云实例？
- en: How do you create your first AWS cloud instance using the AWS CLI utility?
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何使用 AWS CLI 工具创建你的第一个 AWS 云实例？
- en: How do you deploy a simple Hello World web application on your newly created
    AWS instance?
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何在新创建的 AWS 实例上部署一个简单的 Hello World 网页应用程序？
- en: How do you destroy your created AWS instance to complete this exercise?
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何销毁你创建的 AWS 实例以完成此练习？
- en: Further reading
  id: totrans-214
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'Refer to the following links for for more information on AWS and AWS CLI:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 请参考以下链接，获取关于 AWS 和 AWS CLI 的更多信息：
- en: '**AWS Free Tier**: [https://aws.amazon.com/free/](https://aws.amazon.com/free/)'
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AWS 免费层**：[https://aws.amazon.com/free/](https://aws.amazon.com/free/)'
- en: '**AWS Command Line Interface**: [https://aws.amazon.com/cli/](https://aws.amazon.com/cli/)'
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AWS 命令行界面**：[https://aws.amazon.com/cli/](https://aws.amazon.com/cli/)'
