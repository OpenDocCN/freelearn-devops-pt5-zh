- en: Chapter 1. Installing Docker Locally
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this, the first chapter, we are going to look at installing and configuring
    Docker on the following platforms:'
  prefs: []
  type: TYPE_NORMAL
- en: macOS Sierra
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Windows 10 Professional
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ubuntu 16.04 LTS Desktop
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Once installed, we will then look at how you can interact with your local Docker
    installation.
  prefs: []
  type: TYPE_NORMAL
- en: Before we start our installation, I would like to take a moment to quickly talk
    about the version of Docker which we will be installing.
  prefs: []
  type: TYPE_NORMAL
- en: At the time of writing, Docker 17.03 has just been released and like most updates,
    introduces new features as well as changes to existing features. This book has
    been written with this version of Docker so some of the commands listed may not
    work or have the same effect when using older versions.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you already have Docker installed, I would recommend that you check that
    you are running Docker 17.03 by running the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: If your version of Docker is older that 17.03 then please refer to the upgrade
    instructions in each of the following sections before proceeding with the rest
    of the chapters.
  prefs: []
  type: TYPE_NORMAL
- en: Docker for Mac and Windows
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As we have already touched upon in the preface, the version of the Docker Engine
    we are going to be covering in this book is very much a Linux-based tool, so how
    does it work on macOS and Windows?
  prefs: []
  type: TYPE_NORMAL
- en: It is easy to assume that because macOS is an operating system built on-top
    of a UNIX like kernel called XNU that Docker will just run as it would do on a
    Linux machine, unfortunately, a lot of the features which allow Docker to run
    are not present in the Kernel used by macOS.
  prefs: []
  type: TYPE_NORMAL
- en: While there is the recently launched Windows Subsystem for Linux which is currently
    in beta, Docker for Windows does not currently take advantage of this, meaning
    that there is even less of a Linux-like kernel for Docker to use.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Windows Subsystem for Linux exposes an Ubuntu shell which allows you to
    run native Linux command-line tools on your Windows installation; for more information,
    please see [https://msdn.microsoft.com/en-gb/commandline/wsl/about](https://msdn.microsoft.com/en-gb/commandline/wsl/about).
  prefs: []
  type: TYPE_NORMAL
- en: So how does Docker for Mac and Windows work? The latest versions of macOS and
    Windows 10 Professional ship with hypervisors which are built into the operating
    systems kernel, macOS has **Hypervisor framework** while Windows 10 uses Hyper-V.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Hypervisor framework allows developers to build applications without the need
    to install third-party kernel extensions, meaning they can leverage full hardware
    virtualization but remain purely in user space meaning that virtual machines remain
    sandboxed as if they were running as a native application. The following URL gives
    a technical overview: [https://developer.apple.com/reference/hypervisor](https://developer.apple.com/reference/hypervisor)'
  prefs: []
  type: TYPE_NORMAL
- en: 'For Docker for Mac Docker have built their own open source framework which
    works with the Hypervisor framework called **HyperKit**: you can find out more
    about HyperKit at [https://github.com/docker/HyperKit/](https://github.com/docker/HyperKit/).'
  prefs: []
  type: TYPE_NORMAL
- en: Hyper-V has been the native hypervisor for Windows-based operating systems since
    Windows Server 2008; it has also been part of the desktop version of Windows since
    Windows 8 (Professional and Enterprise editions), it allows users and developers
    to launch Windows and Linux virtual machines with hardware virtualization in a
    sandboxed environment. For more information on Hyper-V, please see [https://www.microsoft.com/en-us/cloud-platform/server-virtualization](https://www.microsoft.com/en-us/cloud-platform/server-virtualization).
  prefs: []
  type: TYPE_NORMAL
- en: Docker for Mac and Windows uses these native virtualisation technologies to
    launch a virtual machine running their MobyLinux distribution, MobyLinux is a
    light-weight distribution based on Alpine Linux who's only function is to run
    Docker.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The ISO for Alpine Linux currently weighs in at 26 MB, and a fully functioning
    minimal installation requires a footprint of ~130MB, while the distribution is
    extremely small it is as useable and secure as more common Linux distributions.
    You can find out more at [https://alpinelinux.org/](https://alpinelinux.org/).
  prefs: []
  type: TYPE_NORMAL
- en: Docker for Mac and Windows takes care of launching, configuring, and maintaining
    the virtual machine as well as functions such as networking and mounting filesystems
    from your local machine to a MobyLinux virtual machine.
  prefs: []
  type: TYPE_NORMAL
- en: Docker for Mac
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Docker for Mac has the following system requirements; if your machine does
    not meet them then Docker for Mac will fail to install:'
  prefs: []
  type: TYPE_NORMAL
- en: Your Mac must be a 2010 or later model, with support for Intel's hardware support
    for **memory man****agement unit** (**MMU**) virtualization.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You must be running OS X El Capitan 10.11 or newer. I recommend that you are
    running the latest macOS.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You must have at least 4GB of RAM.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Versions of VirtualBox 4.3.30 or lower must NOT be installed as this causes
    problems with Docker for Mac.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To check that your machine can support Docker for Mac you can run the following
    command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: This should return a `1` when you run the command; this means the virtualization
    is enabled in your kernel as it is available on your CPU.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading Docker for Mac
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Docker for Mac is available from the following URL:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://store.docker.com/editions/community/docker-ce-desktop-mac](https://store.docker.com/editions/community/docker-ce-desktop-mac)'
  prefs: []
  type: TYPE_NORMAL
- en: I would recommend sticking with the **Stable channel** for now as this is the
    version we will be installing on remote machines in later chapters. Clicking on
    **Get Docker for Mac (stable)** will kick off a download of a disk image (DMG)
    file, once downloaded double-click on the file to mount it.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Docker for Mac
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Like most macOS apps, all you have to do is the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Drag the Docker application from the mounted disc image to your applications
    folder; opening the mounted image in the macOS finder by double clicking on it
    makes this task easy, as you can see from the following screenshot:![Installing
    Docker for Mac](img/B06455_01_01.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once the application has been copied, you can close the finder window and open
    your **Applications**, find Docker, and open it:![Installing Docker for Mac](img/B06455_01_02.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When you open Docker for the first time you will be walked through the initial
    installation:![Installing Docker for Mac](img/B06455_01_03.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Clicking **Next** will tell you that Docker will ask for your password, it needs
    this to complete the installation.![Installing Docker for Mac](img/B06455_01_04.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After clicking **OK** and entering your password when prompted a whale icon
    will appear in the menu bar, and while Docker starts you should see something
    which looks like the following popup:![Installing Docker for Mac](img/B06455_01_05.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Clicking **Got it!** will close the pop-up. You can tell that Docker has started
    as the small boxes on the whales back in the icon will stop animating; also left-clicking
    over the icon will bring up a menu which shows the status of your Docker installation:![Installing
    Docker for Mac](img/B06455_01_06.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Selecting **About Docker** from the menu will open the following window:![Installing
    Docker for Mac](img/B06455_01_07.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Running the following command in a terminal shows additional information about
    your Docker installation:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'You should see something like the following output:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![Installing Docker for Mac](img/B06455_01_08.jpg)'
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: As you can see, it gives details on the Docker client which is installed on
    your macOS host and the MobyLinux virtual machine the client is connecting to.
  prefs: []
  type: TYPE_NORMAL
- en: Docker for Windows
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Docker for Windows has the following system requirements; if your machine does
    not meet them then Docker for Windows will inform you before exiting:'
  prefs: []
  type: TYPE_NORMAL
- en: You must be running a 64bit Windows 10 Pro, Enterprise and Education (1511 November
    update, build 10586 or later) installation or later (there are plans to support
    other versions in the future)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hyper-V must be enabled, though the installer will enable it for you if needed
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You must have at least 4GB of RAM
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Downloading Docker for Windows
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Docker for Windows is available from the following URL:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://store.docker.com/editions/community/docker-ce-desktop-windows](https://store.docker.com/editions/community/docker-ce-desktop-windows)'
  prefs: []
  type: TYPE_NORMAL
- en: Like Docker for Mac, I would recommend sticking with the **Stable channel**.
    Clicking on **Get Docker for Windows (stable)** will download an installer; once
    the installer has finished downloading, you will be given the option to **Run**
    it.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Docker for Windows
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'When the Docker for Windows installer first opens, you will be greeted by the
    Docker License Agreement:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing Docker for Windows](img/B06455_01_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Clicking **I accept the terms of the License Agreement** will enable the **Install**
    button, clicking **Install** with immediately start the installation.
  prefs: []
  type: TYPE_NORMAL
- en: After a minute or two, you should receive confirmation that the installation
    has been completed.
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing Docker for Windows](img/B06455_01_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Making sure that **Launch Docker** is ticked (it should be by default), click
    on **Finish** to open Docker. If you do not have Hyper-V enabled, then you will
    receive the following prompt:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing Docker for Windows](img/B06455_01_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Clicking **Ok** will reboot your computer so ensure that you have saved any
    open documents you may have. Once rebooted, Docker should launch automatically,
    and like Docker for Mac, you will notice that there is an icon of a whale in your
    menu bar:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing Docker for Windows](img/B06455_01_15.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Once Docker has started, selecting **About Docker** from the menu will open
    the following window:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing Docker for Windows](img/B06455_01_16.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Finally, open Windows PowerShell and entering the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'This will return similar information on Docker for Mac, showing both the client
    information and details on the MobyLinux virtual machine:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing Docker for Windows](img/B06455_01_17.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'There is one more thing with Docker for Windows: you can run native Windows
    containers. You can enable this feature by selecting the **Switch to Windows containers
    …** option from the menu; if it is your first time enabling this feature then
    you will get the following dialog popup:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing Docker for Windows](img/B06455_01_18.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Clicking **Ok** will reboot your machine. Once rebooted, selecting the menu
    option again will switch you over from using Linux to Windows; this is reflected
    when you run the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![Installing Docker for Windows](img/B06455_01_19.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'As you can see, the server **OS/Arch** has changed from **linux/amd64** to
    **windows/amd64**. We will not be looking at Windows containers in this book;
    you can change back to Linux containers by using the menu option:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Installing Docker for Windows](img/B06455_01_20.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you have any problems running the commands in later chapters on Docker for
    Windows, check that you are using Linux containers by running `docker version`
    or using the menu.
  prefs: []
  type: TYPE_NORMAL
- en: Upgrading Docker for Mac and Windows
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Both Docker for Mac and Windows allow you to easily update your installed version
    of Docker. If you have an old version of Docker for Mac or Windows installed,
    you should have been prompted that there is a later version of Docker available
    when you first open Docker. I you haven't had a prompt then selecting **Check
    for Updates…** from the menu will kick off the upgrade process, which is similar
    to the installation process we have already covered for each of the versions.
  prefs: []
  type: TYPE_NORMAL
- en: If there are no updates, then you will receive a notification confirming you
    are on the latest version.
  prefs: []
  type: TYPE_NORMAL
- en: Docker on Ubuntu 16.04
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you have been looking at the Docker website, you will notice that there is
    not a Docker for Linux Desktop download, that is because there is no need for
    one. Docker is a Linux tool and will run natively on most Linux desktops and servers.
  prefs: []
  type: TYPE_NORMAL
- en: 'While Docker is available in the main Ubuntu repositories, I would recommend
    installing Docker using the official repository. You can do this by running the
    following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: This will configure and install the latest version of Docker Engine. Once installed,
    you will receive a command to run to give your user permission to run Docker,
    run the command and then log out.
  prefs: []
  type: TYPE_NORMAL
- en: 'When you log back in, you will be able to run the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'You should see something like the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Docker on Ubuntu 16.04](img/B06455_01_21.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: One thing I haven't mentioned so far is that when we installed Docker for Mac
    and Windows two additional components were installed. These were Docker Machine
    and Docker Compose, we will be covering these in [Chapter 2](ch02.html "Chapter 2. Launching
    Applications Using Docker"), *Launching Applications Using Docker* and [Chapter
    3](ch03.html "Chapter 3. Docker in the Cloud"), *Docker in the Cloud*.
  prefs: []
  type: TYPE_NORMAL
- en: 'To install Docker Machine run the following commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'To install Docker Compose, run the following commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Once installed you should be able to run the following two commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Testing your installation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that we have Docker installed, we are going to quickly test our installation
    by downloading, running and connecting to a NGINX container.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: NGINX is a free, open source, high-performance HTTP server and reverse proxy.
    NGINX is known for its high performance, stability, rich feature set, simple configuration,
    and low resource consumption.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**A note on Docker commands**'
  prefs: []
  type: TYPE_NORMAL
- en: Docker 1.13 introduced a slightly altered set of command line instructions for
    interacting with containers and images. As this syntax will eventually become
    the new standard we will be using it throughout this book. For more information
    on the CLI restructure, please see the Docker 1.13 announcement blog post at [https://blog.docker.com/2017/01/whats-new-in-docker-1-13/](https://blog.docker.com/2017/01/whats-new-in-docker-1-13/)
  prefs: []
  type: TYPE_NORMAL
- en: To download and launch the container all you need to do run the following commands
    from your terminal prompt;
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: The first command pulls the NGINX container image from the Docker Hub, and the
    second command launches our NGINX container, naming it `nginx-test` mapping port
    `8080` on your machine to port `80` on the container.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can check that the container is running using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Opening your browser and going to `http://localhost:8080/` should show you the
    default **Welcome to NGINX** page.
  prefs: []
  type: TYPE_NORMAL
- en: 'As you can see from the following screens, the process is the same when using
    Docker for Mac:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Testing your installation](img/B06455_01_23.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Docker for Windows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Testing your installation](img/B06455_01_24.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Or Docker on Ubuntu 16.04:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Testing your installation](img/B06455_01_25.jpg)'
  prefs: []
  type: TYPE_IMG
- en: As you can see from the screens above, the result of us running the same command
    on each of the three platforms is exactly the same.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have tested launching a container you can tidy up afterwards by running
    the following commands to stop and remove the container and then delete the image:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we have worked through installing Docker for Mac, Docker for
    Windows and Docker on Ubuntu 16.04\. Hopefully, you will have followed along with
    one or more of the installations on your local machine. We have also launched
    our first container and connected to it using our web browser.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will go into a lot more detail on the commands we used
    to launch our test container as well as using Docker Compose to launch multi-container
    applications.
  prefs: []
  type: TYPE_NORMAL
