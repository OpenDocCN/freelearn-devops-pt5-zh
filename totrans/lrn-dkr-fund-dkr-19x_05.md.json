["```\n$ docker version\n```", "```\nClient: Docker Engine - Community\n Version: 19.03.0-beta3\n API version: 1.40\n Go version: go1.12.4\n Git commit: c55e026\n Built: Thu Apr 25 19:05:38 2019\n OS/Arch: darwin/amd64\n Experimental: false\n\nServer: Docker Engine - Community\n Engine:\n Version: 19.03.0-beta3\n API version: 1.40 (minimum version 1.12)\n Go version: go1.12.4\n Git commit: c55e026\n Built: Thu Apr 25 19:13:00 2019\n OS/Arch: linux/amd64\n ...\n```", "```\n$ docker container run alpine echo \"Hello World\" \n```", "```\nUnable to find image 'alpine:latest' locally\nlatest: Pulling from library/alpine\ne7c96db7181b: Pull complete\nDigest: sha256:769fddc7cc2f0a1c35abb2f91432e8beecf83916c421420e6a6da9f8975464b6\nStatus: Downloaded newer image for alpine:latest\nHello World\n```", "```\n$ docker container run alpine echo \"Hello World\" \n```", "```\n Hello World  \n```", "```\n$ docker container run alpine echo \"Hello World\" \n```", "```\n$ docker container run centos ping -c 5 127.0.0.1\n```", "```\nUnable to find image 'centos:latest' locally\nlatest: Pulling from library/centos\n8ba884070f61: Pull complete\nDigest: sha256:b5e66c4651870a1ad435cd75922fe2cb943c9e973a9673822d1414824a1d0475\nStatus: Downloaded newer image for centos:latest\nPING 127.0.0.1 (127.0.0.1) 56(84) bytes of data.\n64 bytes from 127.0.0.1: icmp_seq=1 ttl=64 time=0.104 ms\n64 bytes from 127.0.0.1: icmp_seq=2 ttl=64 time=0.059 ms\n64 bytes from 127.0.0.1: icmp_seq=3 ttl=64 time=0.081 ms\n64 bytes from 127.0.0.1: icmp_seq=4 ttl=64 time=0.050 ms\n64 bytes from 127.0.0.1: icmp_seq=5 ttl=64 time=0.055 ms\n--- 127.0.0.1 ping statistics ---\n5 packets transmitted, 5 received, 0% packet loss, time 4127ms\nrtt min/avg/max/mdev = 0.050/0.069/0.104/0.022 ms\n```", "```\nUnable to find image 'centos:latest' locally\n```", "```\nlatest: Pulling from library/centos \n```", "```\n8ba884070f61: Pull complete\nDigest: sha256:b5e66c4651870a1ad435cd75922fe2cb943c9e973a9673822d1414824a1d0475\nStatus: Downloaded newer image for centos:latest\n```", "```\nwhile : \ndo \n wget -qO- http://jservice.io/api/random | jq .[0].question \n sleep 5 \ndone\n```", "```\n\"In 2004 Pitt alumna Wangari Maathai became the first woman from this continent to win the Nobel Peace Prize\"\n\"There are 86,400 of these in every day\"\n\"For $5 million in 2013 an L.A. movie house became TCL Chinese Theatre, but we bet many will still call it this, after its founder\"\n^C\n```", "```\n$ docker container run -d --name trivia fundamentalsofdocker/trivia:ed2\n```", "```\n$ docker container ls -l\n```", "```\nCONTAINER ID  IMAGE                            ... CREATED         STATUS ...\n0ff3d7cf7634  fundamentalsofdocker/trivia:ed2  ... 11 seconds ago  Up 9 seconds ...\n```", "```\n$ docker rm -f trivia\n```", "```\n$ docker container ls\n```", "```\n$ docker container ls -a\n```", "```\n$ docker container ls -q\n```", "```\n$ docker container rm -f $(docker container ls -a -q)\n```", "```\n$ docker container ls -h \n```", "```\n$ docker container run -d --name trivia fundamentalsofdocker/trivia:ed2\n```", "```\n$ docker container stop trivia\n```", "```\n$ export CONTAINER_ID=$(docker container ls -a | grep trivia | awk '{print $1}')\n```", "```\n$ docker container stop $CONTAINER_ID \n```", "```\n$ docker container start trivia \n```", "```\n$ docker container rm <container ID>\n```", "```\n$ docker container rm <container name>\n```", "```\n$ docker container inspect trivia \n```", "```\n[\n    {\n        \"Id\": \"48630a3bf188...\",\n        ...\n        \"State\": {\n            \"Status\": \"running\",\n            \"Running\": true,\n            ...\n        },\n        \"Image\": \"sha256:bbc92c8f014d605...\",\n        ...\n        \"Mounts\": [],\n        \"Config\": {\n            \"Hostname\": \"48630a3bf188\",\n            \"Domainname\": \"\",\n            ...\n        },\n        \"NetworkSettings\": {\n            \"Bridge\": \"\",\n            \"SandboxID\": \"82aed83429263ceb6e6e...\",\n            ...\n        }\n    }\n]\n```", "```\n$ docker container inspect -f \"{{json .State}}\" trivia | jq .\n```", "```\n{\n  \"Status\": \"running\",\n  \"Running\": true,\n  \"Paused\": false,\n  \"Restarting\": false,\n  \"OOMKilled\": false,\n  \"Dead\": false,\n  \"Pid\": 18252,\n  \"ExitCode\": 0,\n  \"Error\": \"\",\n  \"StartedAt\": \"2019-06-16T13:30:15.776272Z\",\n  \"FinishedAt\": \"2019-06-16T13:29:38.6412298Z\"\n}\n```", "```\n$ docker container exec -i -t trivia /bin/sh\n```", "```\n/app # ps\n```", "```\n$ docker container exec trivia ps\n```", "```\n$ docker container exec -it \\\n -e MY_VAR=\"Hello World\" \\\n trivia /bin/sh\n/app # echo $MY_VAR\nHello World\n/app # <CTRL-d>\n```", "```\n$ docker container attach trivia\n```", "```\n$ docker run -d --name nginx -p 8080:80 nginx:alpine\n```", "```\n$ curl -4 localhost:8080\n```", "```\n<html> \n<head> \n<title>Welcome to nginx!</title> \n<style> \n    body { \n        width: 35em; \n        margin: 0 auto; \n        font-family: Tahoma, Verdana, Arial, sans-serif; \n    } \n</style> \n</head> \n<body> \n<h1>Welcome to nginx!</h1> \n...\n</html> \n```", "```\n$ docker container attach nginx\n```", "```\n$ for n in {1..10}; do curl -4 localhost:8080; done \n```", "```\n172.17.0.1 - - [16/Jun/2019:14:14:02 +0000] \"GET / HTTP/1.1\" 200 612 \"-\" \"curl/7.54.0\" \"-\"\n172.17.0.1 - - [16/Jun/2019:14:14:02 +0000] \"GET / HTTP/1.1\" 200 612 \"-\" \"curl/7.54.0\" \"-\"\n172.17.0.1 - - [16/Jun/2019:14:14:02 +0000] \"GET / HTTP/1.1\" 200 612 \"-\" \"curl/7.54.0\" \"-\"\n...\n```", "```\n$ docker container rm nginx \n```", "```\n$ docker container logs trivia\n```", "```\n$ docker container logs --tail 5 trivia\n```", "```\n$ docker container logs --tail 5 --follow trivia \n```", "```\n$ docker container run --name test -it \\\n --log-driver none \\\n busybox sh -c 'for N in 1 2 3; do echo \"Hello $N\"; done'\n```", "```\nHello 1\nHello 2\nHello 3 \n```", "```\n$ docker container logs test\n```", "```\nError response from daemon: configured logging driver does not support reading\n```", "```\n$ docker container rm test\n```", "```\n$ vagrant init bento/ubuntu-17.04\n$ vagrant up\n$ vagrant ssh\n```", "```\n$ vi daemon.json \n```", "```\n{\n  \"Log-driver\": \"json-log\",\n  \"log-opts\": {\n    \"max-size\": \"10m\",\n    \"max-file\": 3\n  }\n}\n```", "```\n$ sudo kill -SIGHUP $(pidof dockerd)\n```"]