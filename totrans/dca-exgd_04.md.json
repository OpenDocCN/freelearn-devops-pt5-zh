["```\n$ docker container run nginx:alpine\n Unable to find image 'nginx:alpine' locally\n alpine: Pulling from library/nginx\n 9d48c3bd43c5: Already exists\n 1ae95a11626f: Pull complete\n Digest: sha256:77f340700d08fd45026823f44fc0010a5bd2237c2d049178b473cd2ad977d071\n Status: Downloaded newer image for nginx:alpine\n```", "```\n$ docker container ls\n CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES\n f84f6733537c nginx:alpine \"nginx -g 'daemon of…\" 11 seconds ago Up 10 seconds 80/tcp gallant_lederberg\n```", "```\n$ docker container inspect gallant_lederberg\n[\n {\n \"Id\": \"f84f6733537c3733bda67387b394cabce3f35cf7ee50a46937cb1f59f2a7a680\",\n \"Created\": \"2019-10-20T09:34:46.179017074Z\",\n \"Path\": \"nginx\",\n......\n......\n......\n\"NetworkSettings\": {\n \"Bridge\": \"\",\n \"SandboxID\": \"7bb519745e9b7becc806f36bc16b141317448388f7c19a3bd86e1bc392bea469\",\n \"HairpinMode\": false,\n......\n......\n\"Gateway\": \"172.17.0.1\",\n \"IPAddress\": \"172.17.0.2\",\n......\n......\n```", "```\n$ ps -fea |grep -v grep |egrep -e nginx -e f84f67\n zero 1524 5881 0 11:34 pts/0 00:00:00 docker container run nginx:alpine\n root 1562 1693 0 11:34 ? 00:00:00 containerd-shim -namespace moby -workdir /var/lib/containerd/io.containerd.runtime.v1.linux/moby/f84f6733537c3733bda67387b394cabce3f35cf7ee50a46937cb1f59f2a7a680 -address /run/containerd/containerd.sock -containerd-binary /usr/bin/containerd -runtime-root /var/run/docker/runtime-runc\n root 1594 1562 0 11:34 ? 00:00:00 nginx: master process nginx -g daemon off;\n systemd+ 1644 1594 0 11:34 ? 00:00:00 nginx: worker process\n systemd+ 1646 1594 0 11:34 ? 00:00:00 nginx: worker process\n systemd+ 1647 1594 0 11:34 ? 00:00:00 nginx: worker process\n systemd+ 1648 1594 0 11:34 ? 00:00:00 nginx: worker process\n```", "```\n$ docker run -ti busybox\n Unable to find image 'busybox:latest' locally\n latest: Pulling from library/busybox\n 7c9d20b9b6cd: Pull complete\n Digest: sha256:fe301db49df08c384001ed752dff6d52b4305a73a7f608f21528048e8a08b51e\n Status: Downloaded newer image for busybox:latest\n# wget http://172.17.0.2 -q -O -\n <!DOCTYPE html>\n <html>\n <head>\n <title>Welcome to nginx!</title>\n <style>\n body {\n width: 35em;\n margin: 0 auto;\n font-family: Tahoma, Verdana, Arial, sans-serif;\n }\n </style>\n </head>\n <body>\n <h1>Welcome to nginx!</h1>\n <p>If you see this page, the nginx web server is successfully installed and\n working. Further configuration is required.</p>\n\n <p>For online documentation and support please refer to\n <a href=\"http://nginx.org/\">nginx.org</a>.<br/>\n Commercial support is available at\n <a href=\"http://nginx.com/\">nginx.com</a>.</p>\n\n <p><em>Thank you for using nginx.</em></p>\n </body>\n </html>\n/ # exit\n```", "```\n$ docker container run nginx:alpine\n 172.17.0.3 - - [20/Oct/2019:10:26:56 +0000] \"GET / HTTP/1.1\" 200 612 \"-\" \"Wget\" \"-\"\n 172.17.0.3 - - [20/Oct/2019:10:27:09 +0000] \"GET / HTTP/1.1\" 200 612 \"-\" \"Wget\" \"-\"\n```", "```\n$ docker container ls --all\n CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES\n 4848ed569f61 busybox \"sh\" 34 minutes ago Exited (0) 31 minutes ago interesting_yalow\n f84f6733537c nginx:alpine \"nginx -g 'daemon of…\" About an hour ago Up About an hour 80/tcp gallant_lederberg\n```", "```\n$ docker stop gallant_lederberg\n gallant_lederberg\n```", "```\n$ docker container run --name ping busybox ping www.google.com\n PING www.google.com (172.217.16.228): 56 data bytes\n 64 bytes from 172.217.16.228: seq=0 ttl=56 time=694.384 ms\n 64 bytes from 172.217.16.228: seq=1 ttl=56 time=291.257 ms\n 64 bytes from 172.217.16.228: seq=2 ttl=56 time=365.674 ms\n 64 bytes from 172.217.16.228: seq=3 ttl=56 time=433.928 ms\n 64 bytes from 172.217.16.228: seq=4 ttl=56 time=718.424 ms\n```", "```\n$ time docker container stop ping\n ping\n real 0m10,721s\n user 0m0,019s\n sys 0m0,032s\n```", "```\n$ docker container create --name webserver nginx:alpine\n 6121184dd136781ceb87a210049b25334ce140968dd110ea7d6945ced3ca6668\n```", "```\n$ docker container ls --all --filter name=webserver\n CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES\n 6121184dd136        nginx:alpine        \"nginx -g 'daemon of…\"   2 minutes ago       Created                                 webserver\n```", "```\n$ docker container start webserver\n webserver\n```", "```\n$ docker container ls --filter name=webserver\n CONTAINER         ID       IMAGE    COMMAND        CREATED     STATUS PORTS NAMES\n 6121184dd136 nginx:alpine \"nginx -g 'daemon of…\" 10 minutes ago  Up     3 minutes 80/tcp webserver\n```", "```\n$ docker container run busybox ip add\n 1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue qlen 1000\n link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n inet 127.0.0.1/8 scope host lo\n valid_lft forever preferred_lft forever\n 37: eth0@if38: <BROADCAST,MULTICAST,UP,LOWER_UP,M-DOWN> mtu 1500 qdisc noqueue\n link/ether 02:42:ac:11:00:03 brd ff:ff:ff:ff:ff:ff\n inet 172.17.0.3/16 brd 172.17.255.255 scope global eth0\n valid_lft forever preferred_lft forever\n```", "```\n$ docker container run --network=host busybox ip add\n 1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue qlen 1000\n link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n inet 127.0.0.1/8 scope host lo\n valid_lft forever preferred_lft forever\n inet6 ::1/128 scope host\n valid_lft forever preferred_lft forever\n 2: enp0s25: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc fq_codel qlen 1000\n link/ether 68:f7:28:c1:bc:13 brd ff:ff:ff:ff:ff:ff\n 3: wlp3s0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq qlen 1000\n link/ether 34:02:86:e3:f6:25 brd ff:ff:ff:ff:ff:ff\n inet 192.168.200.161/24 brd 192.168.200.255 scope global dynamic wlp3s0\n valid_lft 49sec preferred_lft 49sec\n inet6 fe80::ee87:e44f:9189:f720/64 scope link\n valid_lft forever preferred_lft forever\n 6: virbr1: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc noqueue qlen 1000\n link/ether 52:54:00:f7:57:34 brd ff:ff:ff:ff:ff:ff\n inet 192.168.39.1/24 brd 192.168.39.255 scope global virbr1\n valid_lft forever preferred_lft forever\n ......\n```", "```\n$ docker container ls\n CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES\n 4b2806790a4f nginx:alpine \"nginx -g 'daemon of…\" 2 hours ago Up 40 minutes 80/tcp webserver\n```", "```\n$ docker container exec webserver ps -ef\n PID USER TIME COMMAND\n 1 root 0:00 nginx: master process nginx -g daemon off;\n 6 nginx 0:00 nginx: worker process\n 7 nginx 0:00 nginx: worker process\n 8 nginx 0:00 nginx: worker process\n 9 nginx 0:00 nginx: worker process\n 10 root 0:00 ps -ef\n```", "```\n$ docker exec -ti --user nginx --env ENVIRONMENT=test webserver /bin/sh\n / $ id\n uid=101(nginx) gid=101(nginx) groups=101(nginx)\n / $ env|grep ENVIRON\n ENVIRONMENT=test\n```", "```\n$ docker container cp /tmp/TEST webserver:/tmp/TEST\n```", "```\n$ docker container logs --tail all webserver\n 172.17.0.3 - - [20/Oct/2019:18:39:52 +0000] \"GET / HTTP/1.1\" 200 612 \"-\" \"Wget\" \"-\"\n 172.17.0.3 - - [20/Oct/2019:18:39:55 +0000] \"GET / HTTP/1.1\" 200 612 \"-\" \"Wget\" \"-\"\n 172.17.0.3 - - [20/Oct/2019:18:39:57 +0000] \"GET / HTTP/1.1\" 200 612 \"-\" \"Wget\" \"-\"\n```", "```\n$ docker stats --all --format \"table [{{.Container}}] {{.Name}}\\t{{.CPUPerc}}\\t{{.MemUsage}}\"\n [CONTAINER] NAME CPU % MEM USAGE / LIMIT\n [8ab15ccdc42f] stress 0.00% 0B / 0B\n [ed19e4376cdc] intelligent_easley 0.00% 0B / 0B\n [0ca76903840f] vigilant_mendeleev 0.00% 0B / 0B\n [afa67a5a2162] inspiring_mclaren 0.00% 0B / 0B\n [49229db83166] mystifying_maxwell 0.00% 0B / 0B\n [4cef73c07691] naughty_diffie 0.00% 0B / 0B\n [5dcc40de271e] adoring_wright 0.00% 0B / 0B\n [07aeb6f9c6df] focused_fermi 0.00% 0B / 0B\n [bbe4cb0d9cac] magical_chaplygin 0.00% 0B / 0B\n [4b2806790a4f] webserver 0.00% 4.676MiB / 11.6GiB\n```", "```\n$ docker container top webserver\n UID PID PPID C STIME TTY TIME CMD\n root 17878 17848 0 19:06 ? 00:00:00 nginx: master process nginx -g daemon off;\n systemd+ 17924 17878 0 19:06 ? 00:00:00 nginx: worker process\n systemd+ 17925 17878 0 19:06 ? 00:00:00 nginx: worker process\n systemd+ 17927 17878 0 19:06 ? 00:00:00 nginx: worker process\n systemd+ 17928 17878 0 19:06 ? 00:00:00 nginx: worker process\n```", "```\n$ docker container diff webserver\n C /var\n C /var/cache\n C /var/cache/nginx\n A /var/cache/nginx/client_temp\n A /var/cache/nginx/fastcgi_temp\n A /var/cache/nginx/proxy_temp\n A /var/cache/nginx/scgi_temp\n A /var/cache/nginx/uwsgi_temp\n C /root\n A /root/.ash_history\n C /run\n A /run/nginx.pid\n C /tmp\n A /tmp/TEST \n```", "```\n$ docker container ls --all --format \"table {{.Names}}: {{.Image}} {{.Command}}\" --no-trunc \nNAMES: IMAGE COMMAND\nloving_diffie: alpine \"/bin/sh\"\nrecursing_fermi: alpine \"/bin/sh\"\nsilly_payne: centos \"/bin/bash\"\nwonderful_visvesvaraya: centos \"/bin/bash\"\noptimistic_lamarr: centos \"/bin/bash\"\nfocused_shtern: centos \"/bin/bash\"\nstress: frjaraur/stress-ng:alpine \"stress-ng stress-ng --vm 2 --vm-bytes 1G --timeout 60s\"\nvibrant_faraday: baseimage:development \"curl\"\nlucid_wright: baseimage:production \"curl\"\nelastic_cori: baseimage:production \"env\"\n```", "```\n$ docker run -ti --cap-add SYS_ADMIN --device /dev/mapper/centos-root:/dev/sdx centos\n [root@5ccb0ef8ce84 /]# mkdir /data\n [root@5ccb0ef8ce84 /]# mount /dev/sdx /data\n [root@5ccb0ef8ce84 /]# cd /data\n [root@5ccb0ef8ce84 data]# ls\n bin  boot  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  vagrant  var\n```", "```\n$ docker container run -ti --device /dev/snd alpine\n / # apk add --update -q alsa-utils\n / # speaker-test -t wav -c 6 -l1\n\n speaker-test 1.1.9\n\n Playback device is default\n Stream parameters are 48000Hz, S16_LE, 6 channels\n WAV file(s)\n Rate set to 48000Hz (requested 48000Hz)\n Buffer size range from 2048 to 16384\n Period size range from 1024 to 1024\n Using max buffer size 16384\n Periods = 4\n was set period_size = 1024\n was set buffer_size = 16384\n 0 - Front Left\n 1 - Front Right\n 2 - Unused\n 3 - Unused\n 4 - Unused\n 5 - Unused\n Time per period = 8.298695\n```", "```\nDocker-Certified-Associate-DCA-Exam-Guide/environments/standalone$ vagrant up\nBringing machine 'standalone' up with 'virtualbox' provider...\n...\nDocker-Certified-Associate-DCA-Exam-Guide/environments/standalone$ vagrant status\nCurrent machine states:\nstandalone running (virtualbox)\n...\nDocker-Certified-Associate-DCA-Exam-Guide/environments/standalone$\n```", "```\nDocker-Certified-Associate-DCA-Exam-Guide/environments/standalone$ vagrant ssh standalone\n[vagrant@standalone ~]$ \n```", "```\n[vagrant@standalone ~]$ /vagrant/install_requirements.sh \n```", "```\n[vagrant@standalone ~]$ docker container --help\nUsage: docker container COMMAND\nManage containers\nCommands:\n attach Attach local standard input, output, and error streams to a running container\n commit Create a new image from a container's changes\n.....\n.....\n.....\n unpause Unpause all processes within one or more containers\n update Update configuration of one or more containers\n wait Block until one or more containers stop, then print their exit codes\nRun 'docker container COMMAND --help' for more information on a command.\n```", "```\n[vagrant@standalone ~]$ docker container run -ti -d alpine\naa73504ba37299aa7686a1c5d8023933b09a0ff13845a66be0aa69203eea8de7\n```", "```\n[vagrant@standalone ~]$ docker container ls -l\nCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES\naa73504ba372 alpine \"/bin/sh\" About a minute ago Up About a minute elastic_curran\n```", "```\n[vagrant@standalone ~]$ docker container rename $(docker container ls -ql) myalpineshell\n```", "```\n[vagrant@standalone ~]$ docker container ls -l\nCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES\naa73504ba372 alpine \"/bin/sh\" 11 minutes ago Up 11 minutes myalpineshell\n```", "```\n[vagrant@standalone ~]$ docker container attach myalpineshell\n/ # touch /tmp/TESTFILE\n/ # exit\n```", "```\n[vagrant@standalone ~]$ docker container ls -l\nCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES\naa73504ba372 alpine \"/bin/sh\" 14 minutes ago Exited (0) 46 seconds ago myalpineshell\n```", "```\n[vagrant@standalone ~]$ docker container run alpine curl www.google.com\ndocker: Error response from daemon: OCI runtime create failed: container_linux.go:345: starting container process caused \"exec: \\\"curl\\\": executable file not found in $PATH\": unknown.\nERRO[0001] error waiting for container: context canceled \n```", "```\n[vagrant@standalone ~]$ docker container ls -l\nCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES\n466cc346e5d3 alpine \"curl www.google.com\" 17 seconds ago Created fervent_tharp\n```", "```\n[vagrant@standalone ~]$ docker container run alpine ls -l /tmp/TESTFILE\nls: /tmp/TESTFILE: No such file or directory\n\n[vagrant@standalone ~]$ docker container ls -l\nCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES\n7c328b9a0609 alpine \"ls -l /tmp/TESTFILE\" 8 seconds ago Exited (1) 6 seconds ago priceless_austin\n```", "```\n[vagrant@standalone ~]$ docker container rename $(docker container ls -ql) secondshell\n```", "```\n[vagrant@standalone ~]$ touch /tmp/TESTFILE\n\n[vagrant@standalone ~]$ docker container cp /tmp/TESTFILE secondshell:/tmp/TESTFILE\n```", "```\n[vagrant@standalone ~]$ docker container start secondshell\nsecondshell\n\n[vagrant@standalone ~]$ docker container ls -l\nCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES\n7c328b9a0609 alpine \"ls -l /tmp/TESTFILE\" 32 minutes ago Exited (0) 4 seconds ago secondshell\n```", "```\n[vagrant@standalone ~]$ docker container rm secondshell\nsecondshell\n\n[vagrant@standalone ~]$ docker container ls --all --filter name=myalpineshell --filter name=secondshell\nCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES\naa73504ba372 alpine \"/bin/sh\" 59 minutes ago Exited (0) 45 minutes ago myalpineshell\n```", "```\n[vagrant@standalone ~]$ docker container start -a -i myalpineshell\n<PRESS Ctrl+p+q>\n/ # read escape sequence\n\n[vagrant@standalone ~]$ docker container exec -ti myalpineshell sh\n/ # ps -ef\nPID USER TIME COMMAND\n 1 root 0:00 /bin/sh\n 6 root 0:00 sh\n 11 root 0:00 ps -ef\n/ # exit\n```", "```\n[vagrant@standalone ~]$ docker container ls --all --filter name=myalpineshell\nCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES\naa73504ba372 alpine \"/bin/sh\" About an hour ago Up 4 minutes myalpineshell\n```", "```\n[vagrant@standalone ~]$ docker container run --memory-reservation=250m --name 2GBreserved -d frjaraur/stress-ng:alpine --vm 2 --vm-bytes 1024M\nb07f6319b4f9da3149d41bbe9a4b1440782c8203e125bd08fd433df8bac91ba7\n```", "```\n[vagrant@standalone ~]$ docker container run --memory=250m --name 2GBlimited -d frjaraur/stress-ng:alpine --vm 2 --vm-bytes 1024M\ne98fbdd5896d1d182608ea35df39a7a768c0c4b843cc3b425892bee3e394eb81\n```", "```\nCONTAINER ID NAME CPU % MEM USAGE / LIMIT MEM % NET I/O BLOCK I/O PIDS\nb07f6319b4f9 2GBreserved 203.05% 1.004GiB / 11.6GiB 8.65% 6.94kB / 0B 0B / 0B 5\ne98fbdd5896d 2GBlimited 42.31% 249.8MiB / 250MiB 99.94% 4.13kB / 0B 1.22GB / 2.85GB 5\n```", "```\n[vagrant@standalone ~]$ docker container rm -f 2GBlimited 2GBreserved\n2GBlimited\n2GBreserved\n```", "```\n[vagrant@standalone ~]$ docker container run -d --cpus=1 --name CPU2vs1 frjaraur/stress-ng:alpine --cpu 2 --timeout 120 \n```", "```\n[vagrant@standalone ~]$ docker container run -d --cpus=2 --name CPU2vs2 frjaraur/stress-ng:alpine --cpu 2 --timeout 120\n```", "```\n[vagrant@standalone ~]$ docker container run -d --cpus=4 --name CPU2vs4 frjaraur/stress-ng:alpine --cpu 2 --timeout 120\n```", "```\nCONTAINER ID        NAME                CPU %               MEM USAGE / LIMIT    MEM %               NET I/O             BLOCK I/O           PIDS\n0dc652ed28b0        CPU2vs4             132.47%             7.379MiB / 11.6GiB   0.06%               4.46kB / 0B         0B / 0B             3\nec62ee9ed812        CPU2vs2             135.41%             7.391MiB / 11.6GiB   0.06%               5.71kB / 0B         0B / 0B             3\nbb1034c8b588        CPU2vs1             98.90%              7.301MiB / 11.6GiB   0.06%               7.98kB / 0B         262kB / 0B          3\n```", "```\n[vagrant@standalone ~]$ docker run -d --name web1 --label stage=production nginx:alpine\nbb5c63ec7427b6cdae19f9172f5b0770f763847c699ff2dc9076e60623771da3\n\n[vagrant@standalone ~]$ docker run -d --name web2 --label stage=development nginx:alpine\n4e7607f3264c52c9c14b38412c95dfc8c286835fd1ffab1d7898c5cfab47c9b8\n\n[vagrant@standalone ~]$ docker run -d --name web3 --label stage=development nginx:alpine\nfcef82c80ed0b049705609885bc9c518bf062a39bbe2b6d68b7017bcc6dcaa14\n```", "```\n[vagrant@standalone ~]$ docker container ls\nCONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES\nfcef82c80ed0 nginx:alpine \"nginx -g 'daemon of…\" About a minute ago Up 59 seconds 80/tcp web3\n4e7607f3264c nginx:alpine \"nginx -g 'daemon of…\" About a minute ago Up About a minute 80/tcp web2\nbb5c63ec7427 nginx:alpine \"nginx -g 'daemon of…\" About a minute ago Up About a minute 80/tcp web1\n```", "```\n[vagrant@standalone ~]$ docker container ls \\\n--format \"table {{.Names}} {{.Command}}\\\\t{{.Labels}}\" \nNAMES COMMAND                 LABELS\nweb3 \"nginx -g 'daemon of…\"   maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>,stage=development\nweb2 \"nginx -g 'daemon of…\"   stage=development,maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>\nweb1 \"nginx -g 'daemon of…\"   stage=production,maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>\n```", "```\n[vagrant@standalone ~]$ docker container ls --format \"table {{.Names}} {{.Command}}\\\\t{{.Labels}}\" --filter label=stage=development\nNAMES COMMAND LABELS\nweb3 \"nginx -g 'daemon of…\" maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>,stage=development\nweb2 \"nginx -g 'daemon of…\" maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>,stage=development\n```", "```\n[vagrant@standalone ~]$ docker container kill $(docker container ls --format \"{{.ID}}\" --filter label=stage=development)\n\n[vagrant@standalone ~]$ docker container ls --format \"table {{.Names}}\\\\t{{.Labels}}\"\nNAMES               LABELS\nweb1                maintainer=NGINX Docker Maintainers <docker-maint@nginx.com>,stage=production\n```"]