- en: '13'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Next Steps
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Over the course of this glorious book, you have learned about:'
  prefs: []
  type: TYPE_NORMAL
- en: Installing Git at the command line, within Visual Studio, and GitHub Desktop
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to create a remote repository on GitHub
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to clone a repository to your local repository using the command line, Visual
    Studio, or GitHub Desktop
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to pull changes down to the local repository
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to push changes up to the remote repository (origin)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Best practices on the frequency of committing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to write effective messages when committing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What the work area is
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What the stash is
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What the index/staging area is
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What the local repository is
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What the remote repository is
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to stage and commit
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to commit without staging
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What branches are and how to create them
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to push a new branch
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What the HEAD pointer is
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to examine your commits with Log
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to push a commit to the server
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to manage your commits with the command line, Visual Studio, and GitHub
    Desktop
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to merge into the main branch
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What a pull request is
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What merge conflicts are and how to resolve them
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What a Fast Forward merge is
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What a True Merge is
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What Rebasing is and how to use it
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to use amend to modify the previous commit
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to cherry-pick commits from one branch to another
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to work with Interactive Rebasing to change history
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The standard workflow using Git
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What notes are and how to use them
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What tags are and how to use them
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using the `log` to review your commits
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using log flags and commands to zero in on the information you want
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to see the information the log provides in Visual Studio and GitHub Desktop
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using Diff to see what has changed
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using aliases to save time and simplify your use of Git
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Searching for words or phrases in a set of commits
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating the stash
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Listing what's in the stash
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Retrieving from the stash
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The `clean` command for getting rid of unwanted untracked files
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to see metadata and choose which data you want to see
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using bisect to find a broken commit
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using blame to examine which programmer made each change to a file
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fixing numerous kinds of errors
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Despite this seemingly comprehensive list, there are some advanced or corner
    cases that we did not cover. Further, there are additional flags for almost all
    the commands we did cover. You can learn about them in several places. The key
    locations for learning about Git are:'
  prefs: []
  type: TYPE_NORMAL
- en: 'GitHub Docs Repository: [https://github.com/github/docs](https://github.com/github/docs
    )'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Git users mailing list: [http://jliberty.me/gitmail](http://jliberty.me/gitmail)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Stack Overflow: [http://jliberty.me/SOGit](http://jliberty.me/SOGit)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Git Documentation reference: [http://jliberty.me/GitDocs](http://jliberty.me/GitDocs)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can reach me at `jesseliberty@gmail.com` if none of these resources answer
    your question, though I'm sometimes slow to respond.
  prefs: []
  type: TYPE_NORMAL
- en: The Git commands should not change much, if at all, and Visual Studio and GitHub
    Desktop will almost certainly keep up with any changes as they arrive.
  prefs: []
  type: TYPE_NORMAL
- en: 'Be sure to check out some of the other excellent GUI interfaces to Git, such
    as:'
  prefs: []
  type: TYPE_NORMAL
- en: Fork
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SourceTree
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tortoise Git
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There are too many to list, but take a look at [http://jliberty.me/GitGUI](http://jliberty.me/GitGUI)
    for a nearly exhaustive list of GUI clients.
  prefs: []
  type: TYPE_NORMAL
- en: Good luck and I hope you Git everything you want in life.
  prefs: []
  type: TYPE_NORMAL
- en: Jesse Liberty
  prefs: []
  type: TYPE_NORMAL
- en: '`http://jesseliberty.com`'
  prefs: []
  type: TYPE_NORMAL
- en: '`@jesseliberty`'
  prefs: []
  type: TYPE_NORMAL
- en: '`![Logo  Description automatically generated](img/Image17554.png)`'
  prefs: []
  type: TYPE_NORMAL
- en: '[packt.com](https://subscribe.packtpub.com/)'
  prefs: []
  type: TYPE_NORMAL
- en: Subscribe to our online digital library for full access to over 7,000 books
    and videos, as well as industry leading tools to help you plan your personal development
    and advance your career. For more information, please visit our website.
  prefs: []
  type: TYPE_NORMAL
- en: Why subscribe?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Spend less time learning and more time coding with practical eBooks and Videos
    from over 4,000 industry professionals
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Learn better with Skill Plans built especially for you
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Get a free eBook or video every month
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fully searchable for easy access to vital information
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Copy and paste, print, and bookmark content
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Did you know that Packt offers eBook versions of every book published, with
    PDF and ePub files available? You can upgrade to the eBook version at [www.Packt.com](http://www.Packt.com)
    and as a print book customer, you are entitled to a discount on the eBook copy.
    Get in touch with us at [customercare@packtpub.com](mailto:customercare@packtpub.com)
    for more details.
  prefs: []
  type: TYPE_NORMAL
- en: At [www.Packt.com](http://www.packtpub.com/), you can also read a collection
    of free technical articles, sign up for a range of free newsletters, and receive
    exclusive discounts and offers on Packt books and eBooks.
  prefs: []
  type: TYPE_NORMAL
