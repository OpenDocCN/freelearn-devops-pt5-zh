- en: Get Started with Creating Your Project
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we'll take a look at projects that help to keep our work organized.
    We'll learn in detail about JIRA and how it can be used in managing all our projects.
    Let's get started.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will learn about the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Introduction to JIRA
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating an account with Atlassian
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Project creation and management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to set up a project using scheme, screens, workflows, and permissions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction to JIRA
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This section is on JIRA software essentials. In this section, we will learn
    about what JIRA is, and getting started with creating projects and how JIRA can
    organize the work that we include within it.
  prefs: []
  type: TYPE_NORMAL
- en: What is JIRA?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: JIRA has been in place for a while, and it originally as an issue ticketing
    system, with a bug tracking kind of software, but, as project management has evolved
    over the years, Agile processes have become increasingly popular. JIRA has become
    a very effective Agile management tool for both Scrum and for common, and is now primarily
    used in that way.
  prefs: []
  type: TYPE_NORMAL
- en: 'JIRA has three different packages that it offers at this time:'
  prefs: []
  type: TYPE_NORMAL
- en: JIRA Core
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JIRA Software
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JIRA Service Desk
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These packages include the base software of JIRA Core and also include Agile
    project management features.
  prefs: []
  type: TYPE_NORMAL
- en: 'JIRA has been used extensively and it has a huge community with lots of add-ons,
    which allow for planning, tracking, releasing, and reporting. Here''s a link we
    can use to learn more about JIRA: [https://www.atlassian.com/software/jira](https://www.atlassian.com/software/jira).'
  prefs: []
  type: TYPE_NORMAL
- en: How JIRA uses projects as a way to keep work organized
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Here are the following steps to view projects in JIRA:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Log in using the JIRA credentials. We will now notice that we''ve already created
    a First Project. It''s a Software type project:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00005.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Project view
  prefs: []
  type: TYPE_NORMAL
- en: To understand how this was done, click on Create project.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Name this project `Second Project`. We can now see in the following screenshot
    that we have a Scrum template, and we could change that to something else if we
    wanted to, but for now, we''ll leave it as it is and click on the Create button:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00006.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'We have the `Second Project`, and, as we can see in the following screenshot,
    we''ve got our First Project in our Second Project:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00007.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Go to View all projects, where we can see all of the projects:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00008.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Click on Second Project. We can see in the following screenshot what this backlog
    view looks like. This is where we can create a test story and put items in our
    backlog:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00009.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: JIRA uses projects to help us organize our work and create a holding place for
    everything. It uses a key, which is a three or four digit ID, which we can reference
    as well.
  prefs: []
  type: TYPE_NORMAL
- en: We'll go more into detail about what all of these different things are in the
    UI, but for now, it's important to note that projects are what JIRA uses in order
    to organize our work.
  prefs: []
  type: TYPE_NORMAL
- en: Creating an account with Atlassian
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this section, we''re going to learn how to create an account and how to
    set up our JIRA software so that we can begin using it for project management:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Open the *Atlassian* website. We''ll see that there''s plenty of information
    about the company, about some of the different software products that they have,
    and more. We''ll go to the Try free button at the top of the page:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00010.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'We''ll see that they''ve got some options. We''re going to use the Jira Software.
    They have a server version and a cloud version:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00011.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'We''re going to be using the cloud version, so let''s select that. We can see
    that we can try it for free for seven days, but we''ve also got some different
    options for once it becomes a paid subscription. Since we''re just a small team,
    we''re going to go ahead and take the first option, which is $10 a month, and
    we''re going to Try it free:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00012.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'We''ll see that on the following screen, it''s going to ask us to go ahead
    and set up our URL. We''ll choose `digitalcoffeetest`, we''ll put in our name,
    our email, and we can see that we then have to add a password:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00013.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Once we do that, the website will go ahead and send us an email to validate
    the data that we have just given them. Once we check our email and validate that
    the information is correct, we will then go back to the site and log in.
  prefs: []
  type: TYPE_NORMAL
- en: Creating an account is that easy.
  prefs: []
  type: TYPE_NORMAL
- en: Project creation and management
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we're going talk about creating projects and then managing
    those projects in JIRA.
  prefs: []
  type: TYPE_NORMAL
- en: 'The steps to create and manage projects in JIRA are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Select projects in the left-hand menu. We can see that we have a First Project
    and then a Second Project:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00014.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Select the First Project. This will bring us to our Backlog view of the project.
    The backlog will store all of the stories, bugs, and different issue types that
    we want inside this project:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00015.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Backlog view of the project
  prefs: []
  type: TYPE_NORMAL
- en: 'On the left, we''ll see that we have the following different options. First,
    we have a search option. In our search, we can either type or we can also hit
    the slash key (*/*) on our keyboard. We''ve got some options regarding filtering
    and looking at assignees:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Sprints**: We can select this and get the board view for the current Sprint'
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Versions**: This determines who gets report releases when we do a release
    of a version, in which case we can take a look at those issues, which will allow
    us to perform queries for different issues'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Components**: These are a grouping of work items'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Go down to Settings. This will take us to the following screen:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00016.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: As we can see, we've got our name, we've got a key, URL, the type of project
    that this is, and we're going to stick with the software that's going to let us
    perform Agile processes like Scrum. We can categorize, we can select an image
    and description, we can also decide who is the admin on this project, and we can
    decide, when we create a new item in the backlog, whether it gets assigned to
    the project lead, which, in this case, would be the admin or we can even leave
    it as unassigned.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are a lot of options on the left, but we''re going to take a look at
    the summary, because the summary is going to give us a view of all of those different
    options, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00017.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Summary
  prefs: []
  type: TYPE_NORMAL
- en: Workflows
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'First, let''s take a look at workflows so that we can understand how workflows
    operate. We''ll go into more detail in the next section about workflows, but what
    we really need to understand is that this will control the way that the issues
    move from To Do, to In Progress, to Done, and this allows us to customize the
    way that it works:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00018.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'If we take a look at screenshots for this project, we can see that we''re using
    a Scrum issue type, so this will allow us to select the items that appear on those
    different issue types, which are things such as story points, assignee, and acceptance
    criteria:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00019.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'We will now look into the Fields. This allows us to control the fields that
    are available:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00020.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: We can do things like setting up and creating components.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will now click on Components on the left and we will call this component
    `Test`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00021.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'This will now allow us to assign this component to different issue types. We
    can do things such as set permissions, as can be seen in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00022.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'And we can even set notifications as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00023.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: We can see that when an issue is created, we're going to notify all watchers,
    the current assignee, and the reporter when the issues are updated, and more besides.
    We can also customize this. If you're one of those people who receives way too
    many emails already, you might want to slim this down a little bit so that we're
    really only being notified about the most important actions. We know now how to
    create and manage our projects in JIRA.
  prefs: []
  type: TYPE_NORMAL
- en: How to set up a project using scheme, screens, workflows, and permissions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the last section, we learned about the configuration scheme of JIRA, and
    how to set up projects with regard to screens, workflows, permissions, and even
    notifications.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this section, we''re going to learn about the following in detail:'
  prefs: []
  type: TYPE_NORMAL
- en: Screens
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Workflows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Permissions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Notifications
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Screens
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We are going to flip over to the JIRA account and look at our project view:'
  prefs: []
  type: TYPE_NORMAL
- en: First, we will select a project, and once we have our project loaded up, we're
    going to go ahead and choose our settings for this project. We'll go over to the
    left-hand menu and select Settings. As we learned previously, we will set up our
    settings.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'We saw a little bit about this in the previous section, but we''re going to
    learn more deeply about Screens. We can see that we use what''s called a Scrum
    issue type screen scheme. We''ve got a default screen scheme that will cover the
    different issue type Story, Epic, Task, and Sub-task, and then we''ve got a bug
    screen scheme that will cover the issue type Bug, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00024.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Click the edit icon on the right. We can then take a look at the default issue
    screen, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00025.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: This will give us control over all of the different fields that appear in an
    issue type. There may be some that we don't need to use, because our organization
    doesn't use them or we don't find value in those, in which case removing them
    from the interface will make things faster, so we don't need to have a view of
    those. The way we would do that is by dragging and moving these into different
    orders, but let's say for instance that we didn't want components. Therefore,
    we can easily just remove those by clicking on Remove. The components will no
    longer appear on any of our issue types with the exception of bug, right? We haven't
    configured the bug one yet.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'At the bottom, we can see the ability to select the field, so we can actually
    select a field if we want to add something back, like `Components`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00026.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Or, we could even just type `components` and add it back that way, and we'll
    drag it back up to the right before the description where we had it before. That's
    how we use screens in JIRA. Next, let's take a look at workflows.
  prefs: []
  type: TYPE_NORMAL
- en: Workflows
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: From the options on the left-hand side, click on Workflows.
  prefs: []
  type: TYPE_NORMAL
- en: 'What the workflow is going to let us do is allow us to see the different ways
    that a status can affect another status, and how items can move from one status
    to the next so that we can see how this works:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on FP: Software Simplified Workflow Scheme, as shown in the following
    screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00027.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'This will take us to the following screen:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00028.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Any thing, and any type, can be move to TO DO. Once we create any type, we can
    automatically move it TO DO, any type can moved to DONE, and any type can move
    to IN PROGRESS.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We can actually add a status as `Closed` by clicking on Add status.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Drag the Closed status to the bottom, below IN PROGRESS, and now we have a
    new status:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00029.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Then, we can allow different transitions to happen to this closed status. One
    example that we might want to do would be, let's say, if we have story points
    assigned to an item, or perhaps hours assigned to an item. When we move that through
    the workflow, and that item goes from IN PROGRESS to DONE, when we move it to
    CLOSED, we may want to have the remaining hours update itself to zero. This is
    an example of something that we might want to do with that workflow.
  prefs: []
  type: TYPE_NORMAL
- en: Permissions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We want to take a look at permissions, so we''ll bring up the Permissions options
    for our default software scheme, which is what we''re using for our Scrum project,
    as can be seen in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00030.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Project Permissions
  prefs: []
  type: TYPE_NORMAL
- en: Since we're the only one that's actually accessing and controlling this, we
    have access to everything, but if we had more people that were assigned to this
    project, then we would be able to identify who can do what, both from a project
    permissions perspective as well as from an issue permissions perspective.
  prefs: []
  type: TYPE_NORMAL
- en: Notifications
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We can see that we have a Notifications option under our First Project. We
    learned a little bit about this in the last section, but we will learn more about
    it now:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00031.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: But let's say we were the person who reported an issue, and, when that issue
    was created, we would want the current assignee, the person that's assigned to
    that issue, to be notified, and we'd also want any of the watchers of that item
    to be notified as well. We, as the reporter, would be notified. But then let's
    say that that issue goes ahead and gets updated. Once that issue gets updated,
    it may be that we don't want to be notified of that. Therefore, we can edit the
    notifications.
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on Delete under the Issue Updated section. This will take us to the following
    screen:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00032.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: The reporter will now be notified when an item is created but not when it's
    updated. The reporter is again notified when the item is assigned.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We've reached the end of our first chapter. In this chapter, we talked about
    what JIRA is, what it's used for today, why we should use it, and we talked about
    projects and how JIRA organizes its work into a project format. We learned how
    to create an account with Atlassian so that we can start using JIRA. We talked
    about creating and managing different projects in JIRA, and how to handle them.
    Lastly, we learned more about the specifics in the configuration of projects,
    such as screens, workflows, permissions, and notifications.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we're going to talk about managing all of those work items
    in more detail so that we've got lots and lots to do, and JIRA will help us to
    achieve that.
  prefs: []
  type: TYPE_NORMAL
