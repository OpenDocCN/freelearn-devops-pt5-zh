["```\n# yum -y install https://download.elastic.co/elasticsearch/release/org/elasticsearch/distribution/rpm/elasticsearch/2.4.1/elasticsearch-2.4.1.rpm https://download.elastic.co/logstash/logstash/packages/centos/logstash-2.4.0.noarch.rpm\n\n```", "```\ncluster.name: wonga-bonga \nindex.number_of_shards: 1 \nindex.number_of_replicas: 0 \nindex : \n  refresh_interval: 5s \n\n```", "```\n# mkdir /opt/logstash/patterns\n\n```", "```\nNGUSERNAME [a-zA-Z\\.\\@\\-\\+_%]+ \nNGUSER %{NGUSERNAME} \nNGINXACCESS %{IPORHOST:clientip} %{NGUSER:ident} %{NGUSER:auth} \\[%{HTTPDATE:timestamp}\\] \"%{WORD:verb} %{URIPATHPARAM:request} HTTP/%{NUMBER:httpversion}\" %{NUMBER:response} (?:%{NUMBER:bytes}|-) (?:\"(?:%{URI:referrer}|-)\"|%{QS:referrer}) %{QS:agent} \n\n```", "```\ninput { \n  beats { \n    port => 5044 \n  } \n} \n\nfilter { \n  if [type] == \"nginx-access\" { \n    grok { \n      match => { \"message\" => \"%{NGINXACCESS}\" } \n    } \n  } \n} \n\noutput { \n  elasticsearch { \n    hosts => \"localhost:9200\" \n    manage_template => false \n    index => \"%{[@metadata][beat]}-%{+YYYY.MM.dd}\" \n    document_type => \"%{[@metadata][type]}\" \n  } \n} \n\n```", "```\n# service elasticsearch start\n# service logstash start\n\n```", "```\n# yum -y install https://download.elastic.co/beats/filebeat/filebeat-1.3.1-x86_64.rpm\n\n```", "```\noutput: \n  #elasticsearch: \n  #  hosts: [\"localhost:9200\"] \n  logstash: \n    hosts: [\"localhost:5044\"] \n\n```", "```\nfilebeat: \n  prospectors: \n    - \n      paths: \n     - /var/log/*.log \n        - /var/log/messages \n        - /var/log/secure \n\n```", "```\n# service filebeat start\n\n```", "```\n#!/bin/bash \n\nyum -y install https://download.elastic.co/beats/filebeat/filebeat-1.3.1-x86_64.rpm \nyum -y install nginx \n\ncat << EOF > /etc/filebeat/filebeat.yml \nfilebeat: \n  prospectors: \n    - \n      paths: \n        - /var/log/*.log \n        - /var/log/messages \n        - /var/log/secure \n    - \n      paths: \n        - /var/log/nginx/access.log \n      document_type: nginx-access \n  registry_file: /var/lib/filebeat/registry \noutput: \n  logstash: \n    hosts: [\"10.0.1.132:5044\"] \nEOF \n\nservice nginx start \nservice filebeat start \n\n```", "```\n# yum -y install https://download.elastic.co/kibana/kibana/kibana-4.6.1-x86_64.rpm\n\n```", "```\n# service kibana start\n\n```", "```\nglobal: \n  smtp_smarthost: 'localhost:25' \n  smtp_from: 'alertmanager@example.org' \n\nroute: \n  group_by: ['alertname', 'cluster', 'service'] \n  group_wait: 30s \n  group_interval: 5m \n  repeat_interval: 1h  \n  receiver: team-X-mails \n\nreceivers: \n- name: 'team-X-mails' \n  e-mail_configs: \n  - to: 'team-X+alerts@example.org' \n    require_tls: false \n\n```", "```\n# cd /opt/prometheus/alertmanager\n# (./alertmanager 2>&1 | logger -t prometheus_alertmanager)&\n\n```", "```\n# cd /opt/prometheus/server\n# (./prometheus -alertmanager.url=http://localhost:9093 2>&1 | logger -t prometheus_server)\n\n```", "```\n  - job_name: 'ec2' \n    ec2_sd_configs: \n      - region: 'us-east-1' \n        access_key: 'xxxx' \n        secret_key: 'xxxx' \n        port: 9126 \n    relabel_configs: \n      - source_labels: [__meta_ec2_tag_Name] \n        regex: ^webserver \n        action: keep \n\n```", "```\nyum -y install https://dl.influxdata.com/telegraf/releases/telegraf-1.0.1.x86_64.rpm \n\ncat << EOF > /etc/telegraf/telegraf.conf \n[global_tags] \n[agent] \n  interval = \"10s\" \n  round_interval = true \n  metric_batch_size = 1000 \n  metric_buffer_limit = 10000 \n  collection_jitter = \"0s\" \n  flush_interval = \"10s\" \n  flush_jitter = \"0s\" \n  precision = \"\" \n  debug = false \n  quiet = false \n  hostname = \"\" \n  omit_hostname = false \n[[outputs.prometheus_client]] \n  listen = \":9126\" \n[[inputs.cpu]] \n  percpu = true \n  totalcpu = true \n  fielddrop = [\"time_*\"] \n[[inputs.disk]] \n  ignore_fs = [\"tmpfs\", \"devtmpfs\"] \n[[inputs.diskio]] \n[[inputs.kernel]] \n[[inputs.mem]] \n[[inputs.processes]] \n[[inputs.swap]] \n[[inputs.system]] \nEOF \n\nservice telegraf start \n\n```", "```\n    # yum -y install https://grafanarel.s3.amazonaws.com/builds/\n            grafana-3.1.1-1470047149.x86_64.rpm\n    # service grafana-server start\n\n    ```", "```\n# mkdir /opt/prometheus/server/rules\n\n```", "```\nrule_files: \n  - \"rules/*.rules\" \n\n```", "```\nALERT Keepalive \n  IF up == 0 \n  FOR 1m \n  ANNOTATIONS { \n    summary = \"Instance {{$labels.instance}} down\", \n    description = \"{{$labels.instance}} of job {{$labels.job}} has been down for more than 1 minute.\" \n  } \n\n```", "```\nALERT High_disk_space_usage \n  IF disk_used_percent > 20 \n  FOR 1m \n  ANNOTATIONS { \n    summary = \"High disk space usage on {{ $labels.instance }}\", \n    description = \"{{ $labels.instance }} has a disk_used value of {{ $value }}% on {{ $labels.path }})\", \n  } \n\n```", "```\n# yum install http://mirrors.jenkins-ci.org/redhat-stable/\n      jenkins-2.7.1-1.1.noarch.rpm\n# service jenkins start\n\n```", "```\n# su - -s /bin/bash jenkins\n$ ssh-keygen -trsa -b4096\nGenerating public/private rsa key pair.\nEnter file in which to save the key (/var/lib/jenkins/.ssh/id_rsa): \nCreated directory '/var/lib/jenkins/.ssh'\n...\n\n```", "```\nHost 10.0.* \n   StrictHostKeyChecking no \n   UserKnownHostsFile=/dev/null \n   User ec2-user \n\n```", "```\n... \n# Add Jenkins's key \ncat << EOF >> /home/ec2-user/.ssh/authorized_keys \n{{JENKINS_PUB_KEY_GOES_HERE}} \nEOF \n\n```", "```\n# yum -y install golang\n# mkdir /opt/prometheus/executor && export GOPATH=$_\n# go get github.com/imgix/prometheus-am-executor\n\n```", "```\n#!/bin/bash \n\nif [[ \"$AMX_STATUS\" != \"firing\" ]]; then \n  exit 0 \nfi \n\nmain() { \n  for i in $(seq 1 \"$AMX_ALERT_LEN\"); do \n    ALERT_NAME=AMX_ALERT_${i}_LABEL_alertname \n    INSTANCE=AMX_ALERT_${i}_LABEL_instance \n    LABELS=$(set|egrep \"^AMX_ALERT_${i}_LABEL_\"|tr '\\n' ' '|base64 -w0) \n    PAYLOAD=\"{'parameter': [{'name':'alertcount', 'value':'${i}'}, {'name':'alertname', 'value':'${!ALERT_NAME}'}, {'name':'instance', 'value':'${!INSTANCE}'}, {'name':'labels', 'value':'${LABELS}'}]}\" \n    curl -s -X POST http://localhost:8080/job/prometheus_webhook/build --user 'prometheus:password' --data-urlencode json=\"${PAYLOAD}\" \n  done \n  wait \n} \n\nmain \"$@\" \n\n```", "```\nglobal: \n  smtp_smarthost: 'localhost:25' \n  smtp_from: 'alertmanager@example.org' \n\nroute: \n  group_by: ['alertname', 'cluster', 'service'] \n  group_wait: 10s \n  group_interval: 30s \n  repeat_interval: 1m \n  receiver: team-X-mails \n\n  routes: \n  - receiver: 'jenkins-webhook' \n    match: \n      alertname: \"High_disk_space_usage\" \n\nreceivers: \n- name: 'team-X-mails' \n  e-mail_configs: \n  - to: 'veselin+testprom@kantsev.com' \n    require_tls: false \n    send_resolved: true \n\n- name: 'jenkins-webhook' \n  webhook_configs: \n  - url: http://localhost:8888 \n\n```", "```\n# cd /opt/prometheus/executor\n# ./bin/prometheus-am-executor -l ':8888' ./executor.sh\n2016/10/16 17:57:36 Listening on :8888 and running [./executor.sh]\n\n```", "```\necho \"alertname: ${alertname}\" \necho \"alertcount: ${alertcount}\" \necho \"instance: ${instance}\" \n\nexport $(echo ${labels}|base64 -d) \n\nNODE=$(echo ${instance}|cut -d: -f1) \nLABEL_DIR=AMX_ALERT_${alertcount}_LABEL_path \nAPP_DIR='/opt/myapp/tmp' \n\nif [ ${!LABEL_DIR} == ${APP_DIR} ];then \nssh ${NODE} \"sudo rm -f ${APP_DIR}/*.tmp\"\nfi \n\n```", "```\n# dd if=/dev/zero of=/tmp/dd.out bs=1M count=256\n# mkfs.ext4 /tmp/dd.out\n# mkdir -p /opt/myapp/tmp\n# mount -oloop /tmp/dd.out /opt/myapp/tmp/\n\n```", "```\n# dd if=/dev/zero of=/opt/myapp/tmp/dd.tmp bs=1M count=196\n\n```"]