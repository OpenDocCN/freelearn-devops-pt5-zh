["```\ncurl https://sdk.cloud.google.com | bash\n```", "```\ngcloud init\n```", "```\ngcloud compute --project \"implementing-modern-devops\" instances create \"test-instance\" \\\n               --zone \"europe-west1-c\" --machine-type \"n1-standard-1\" --subnet \"default\" \\\n               --maintenance-policy \"MIGRATE\" \\\n               --service-account \"1085359944086-compute@developer.gserviceaccount.com\"\n               --scopes \\                     \n                    \"https://www.googleapis.com/auth/devstorage.read_only\", \\\n                    \"https://www.googleapis.com/auth/logging.write\", \\\n                    \"https://www.googleapis.com/auth/monitoring.write\", \\\n                    \"https://www.googleapis.com/auth/servicecontrol\", \\\n                    \"https://www.googleapis.com/auth/service.management.readonly\", \\\n                    \"https://www.googleapis.com/auth/trace.append\" \\ \n               --tags \"http-server\",\"https-server\" --image \"debian-8-jessie-v20170327\" \\\n               --image-project \"debian-cloud\" --boot-disk-size \"10\" --boot-disk-type \"pd-standard\" \\\n               --boot-disk-device-name \"test-instance\"\n```", "```\ngcloud compute --project \"implementing-modern-devops\" instances create \"test-instance\"\n```", "```\ngcloud compute --project \"implementing-modern-devops\" firewall-rules create \"default-allow-http\" --allow tcp:80 --network \"default\" --source-ranges \"0.0.0.0/0\" --target-tags \"http-server\"\n```", "```\ngcloud compute --project \"implementing-modern-devops\" firewall-rules create \"default-allow-https\" --allow tcp:443 --network \"default\" --source-ranges \"0.0.0.0/0\" --target-tags \"https-server\"\n```", "```\nterraform version\n```", "```\nTerraform v0.9.4\n```", "```\nterraform\n```", "```\nterraform apply -h\n```", "```\nprovider \"google\" {\n credentials = \"${file(\"xxx.json\")}\"\n project = \"implementing-modern-devops\"\n region = \"europe-west1-b\"\n}\n\nresource \"google_compute_instance\" \"my-first-instance\" {\n}\n```", "```\nterraform plan\n```", "```\nErrors:\n\n * google_compute_instance.my-first-instance: \"disk\": required field is not set\n * google_compute_instance.my-first-instance: \"name\": required field is not set\n * google_compute_instance.my-first-instance: \"machine_type\": required field is not set\n * google_compute_instance.my-first-instance: \"zone\": required field is not set\n```", "```\nresource \"google_compute_instance\" \"my-first-instance\" {\n name = \"my-first-instance\"\n machine_type = \"n1-standard-1\"\n zone = \"europe-west1-b\"\n disk {\n image = \"ubuntu-os-cloud/ubuntu-1704-zesty-v20170413\"\n }\n\n network_interface {\n   network = \"default\"\n   access_config {\n    // Ephemeral IP\n   }\n }\n}\n```", "```\n+ google_compute_instance.my-first-instance\n can_ip_forward: \"false\"\n disk.#: \"1\"\n disk.0.auto_delete: \"true\"\n disk.0.image: \"ubuntu-os-cloud/ubuntu-1704-zesty-v20170413\"\n machine_type: \"n1-standard-1\"\n metadata_fingerprint: \"<computed>\"\n name: \"my-first-instance\"\n network_interface.#: \"1\"\n network_interface.0.access_config.#: \"1\"\n network_interface.0.access_config.0.assigned_nat_ip: \"<computed>\"\n network_interface.0.address: \"<computed>\"\n network_interface.0.name: \"<computed>\"\n network_interface.0.network: \"default\"\n self_link: \"<computed>\"\n tags_fingerprint: \"<computed>\"\n zone: \"europe-west1-b\"\n\nPlan: 1 to add, 0 to change, 0 to destroy.\n```", "```\nterraform apply\n```", "```\ngoogle_compute_instance.my-first-instance: Creating...\n can_ip_forward: \"\" => \"false\"\n... (lines omitted: they should match the ones in the plan) ...\n zone: \"\" => \"europe-west1-b\"\ngoogle_compute_instance.my-first-instance: Still creating... (10s elapsed)\ngoogle_compute_instance.my-first-instance: Still creating... (20s elapsed)\ngoogle_compute_instance.my-first-instance: Still creating... (30s elapsed)\ngoogle_compute_instance.my-first-instance: Creation complete\n\nApply complete! Resources: 1 added, 0 changed, 0 destroyed.\n\nThe state of your infrastructure has been saved to the path\nbelow. This state is required to modify and destroy your\ninfrastructure, so keep it safe. To inspect the complete state\nuse the `terraform show` command.\n\nState path: terraform.tfstate\n```", "```\nterraform remote config -backend=gcs -backend-config=\"bucket=my-terraform\" -backend-config=\"path=terraform/infrastructure\"\n```", "```\nexport GOOGLE_APPLICATION_CREDENTIALS=./xxx.json\n```", "```\nresource \"google_compute_address\" \"my-first-ip\" {\n name = \"static-ip-address\"\n}\n```", "```\nresource \"google_compute_instance\" \"my-first-instance\" {\n name = \"my-first-instance\"\n machine_type = \"n1-standard-1\"\n zone = \"europe-west1-b\"\n disk {\n image = \"ubuntu-os-cloud/ubuntu-1704-zesty-v20170413\"\n }\n\n network_interface {\n network = \"default\"\n access_config {\n nat_ip = \"${google_compute_address.my-first-ip.address}\"\n } \n}\n```", "```\nprovider \"google\" {\n credentials = \"${file(\"xxx.json\")}\"\n project = \"implementing-modern-devops\"\n region = \"europe-west1\"\n} \n```", "```\nvariable \"project_name\" {\n type = \"string\"\n default = \"implementing-modern-devops\"\n}\n\nvariable \"default_region\" {\n type = \"string\"\n default = \"europe-west1\"\n}\n```", "```\nprovider \"google\" {\n credentials = \"${file(\"xxx.json\")}\"\n project = \"${var.project_name}\"\n region = \"${var.default_region}\"\n} \n```", "```\nterraform apply -var 'project_name=my-new-name' \n```", "```\nproject_name = \"my-new-project-name\"\n```", "```\nexport TF_VAR_project_name=my-new-project-name\n```", "```\noutput \"instance_ip\" {\n value = \"${google_compute_instance.my-first-instance.network_interface.0.access_config.0.nat_ip}\"\n}\n```", "```\ngoogle_compute_address.my-first-ip: Refreshing state... (ID: static-ip-address)\ngoogle_compute_instance.my-first-instance: Refreshing state... (ID: my-first-instance)\n\nApply complete! Resources: 0 added, 0 changed, 0 destroyed.\n\nOutputs:\n\ninstance_ip = 23.251.138.171\n```", "```\nterraform output instance_ip\n```", "```\nterraform output\n```", "```\ngoogle_compute_instance.my-first-instance.network_interface.0.access_config.0.nat_ip\n```", "```\noutput \"instance_zone\" {\n value = \"The zone is ${google_compute_instance.my-first-instance.zone}\"\n}\n```"]