- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Git is the most popular open source and distributed version-control system.
    Version-control systems help software teams manage changes to project sources
    over time. Using version control is a must in any collaborative development, and
    it’s useful even if you work alone.
  prefs: []
  type: TYPE_NORMAL
- en: '*Mastering Git* will help novice Git professionals attain expert-level proficiency
    with Git, as well as understand Git concepts and the mental model behind basic
    and advanced Git tasks. Developers working with Git will be able to use its powerful
    capabilities to make their work easier. *Mastering Git* will help in various tasks
    during development, saving time and effort.'
  prefs: []
  type: TYPE_NORMAL
- en: This book is meticulously designed to help you gain deeper insights into Git’s
    architecture and its underlying concepts, behavior, and best practices.
  prefs: []
  type: TYPE_NORMAL
- en: You’ll begin with a quick example of using Git for the collaborative development
    of a sample project, in order to establish a basic knowledge of Git’s operational
    tasks and concepts. As you progress through the book, subsequent chapters provide
    detailed descriptions of the various areas of Git use – from managing your own
    work, through source code archaeology, to working with other developers. You’ll
    learn how to examine and explore your project’s history, create and manage your
    contributions, set up repositories and branches for collaboration in centralized
    and distributed workflows, integrate work sent from other developers, customize
    and extend Git, and recover from repository errors.
  prefs: []
  type: TYPE_NORMAL
- en: Version control topics are accompanied by detailed descriptions of the relevant
    parts of Git’s architecture and behavior. By exploring advanced Git practices
    and getting to know the details of Git’s workings, you will attain a deeper understanding
    of its behavior, allowing you to customize and extend existing recipes and write
    your own.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you are a Git user with a reasonable knowledge of it and you are familiar
    with its basic concepts, such as branching, merging, staging, and workflows, this
    is the book for you. If you have used Git for a long time, this book will help
    you understand how Git works, make full use of its power, and learn about advanced
    tools, techniques, and workflows.
  prefs: []
  type: TYPE_NORMAL
- en: If you are a system administrator, project lead, or operations manager, this
    book will help you to configure Git for better collaborative development, selecting
    a workflow and branching patterns that would fit best the needs of the team and
    a project.
  prefs: []
  type: TYPE_NORMAL
- en: A basic knowledge of installing Git and its software configuration management
    concepts is essential. The first chapter of the book, Git Basics in Practice,
    should work as a refresher and get you up to date. This book assumes that you
    have some skills in working from the command line, although this is not strictly
    necessary.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[*Chapter 1*](B21194_01.xhtml#_idTextAnchor015), *Git Basics in Practice*,
    serves as a reminder of the version-control basics with Git. The focus is on providing
    the practical aspects of the technology, using an example of the development of
    a simple project. This chapter will show and explain basic version-control operations
    for the development of an example project, as well as how two developers can use
    Git to collaborate.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 2*](B21194_02.xhtml#_idTextAnchor028), *Developing with Git*, shows
    how to selectively commit files and interactively select what to commit. You will
    learn how to create new revisions and new lines of development. This chapter introduces
    the concept of the staging area for commits (the index) and explains how to view
    and read differences between the working directory, the index, and the current
    revision. It will also teach you how to create, list, and switch branches, how
    to go back in history, and how to revert changes or amend the last commit.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 3*](B21194_03_split_000.xhtml#_idTextAnchor049), *Managing Your Worktrees*,
    teaches you how to manage your files in detail to prepare content for a new commit.
    It will explain the concept of the index and file status, teaching you how to
    examine the status of your working area, how to move file contents between a worktree,
    index, and repository, and how to change your file status. It will also show how
    to manage files that require special handling, introducing the concepts of ignored
    files and file attributes.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 4*](B21194_04.xhtml#_idTextAnchor083), *Exploring Project History*,
    introduces the concept of a graph of revisions and explains how this concept relates
    to the ideas of branches, tags, and the current branch in Git. You will learn
    how to select and view a revision or a range of revisions, as well as how to refer
    to them. These skills will help you focus on specific parts of project history,
    selecting the interesting part of it for further search.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 5*](B21194_05.xhtml#_idTextAnchor113), *Searching* *Through* *the
    Repository*, explores how to extract the information you want from selected commits.
    You will learn how to limit your search according to the revision metadata, such
    as the contents of the commit message, or look at the changes themselves. These
    skills will help you focus on specific parts of project history, extract information
    from it, examine what changed and when, and even find bugs by using history bisection.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 6*](B21194_06.xhtml#_idTextAnchor140), *Collaborative Development
    with Git*, presents a bird’s-eye view of the various ways to collaborate, showing
    different centralized and distributed workflows, their advantages and disadvantages,
    and how to set them up. This chapter will focus on repository-level interactions
    in collaborative development. You will also learn the concept of the chain of
    trust and how to use signed tags, signed merges, signed commits, and signed pushes.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 7*](B21194_07.xhtml#_idTextAnchor172), *Publishing Your Changes*,
    examines how Git exchanges information and data between your local repository
    and remote repositories, describes what the choices are with respect to transport
    protocols, and shows how Git can help manage credentials that might be needed
    to access those remote repositories. This chapter also teaches you how you can
    send your changes upstream so that they can appear in the repository with the
    official history of a project.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 8*](B21194_08_split_000.xhtml#_idTextAnchor196), *Advanced Branching
    Techniques*, dives deeper into the details of collaboration in distributed development.
    It explores the relationships between local branches and branches in remote repositories
    and describes techniques to synchronize branches and tags. You will learn the
    different patterns when using branches, including a trunk-based workflow and a
    topic branch (also called a feature branch) workflow, their advantages and disadvantages,
    and when to use them.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 9*](B21194_09.xhtml#_idTextAnchor229), *Merging Changes Together*,
    teaches you how to merge together changes from different parallel lines of development
    (that is, branches) using merge and rebase (and squash merge). This chapter will
    also explain the different types of merge conflicts, how to examine them, and
    how to resolve them. You will learn how to copy changes with cherry-pick and how
    to apply a single patch and a patch series.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 10*](B21194_10_split_000.xhtml#_idTextAnchor247), *Keeping History
    Clean*, explains why you might want to keep a clean history, when it can and should
    be done, and how it can be done. You will find step-by-step instructions on how
    to reorder, squash, and split commits. This chapter also demonstrates how you
    can recover from a history rewrite and explains what to do if you cannot rewrite
    history, how to revert the effect of commit, how to add a note to it, and how
    to change the view of a project’s history with a replacement mechanism.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 11*](B21194_11.xhtml#_idTextAnchor270), *Managing Subprojects*, explains
    and shows different ways to connect different projects in a single repository
    of a framework superproject, from a strong inclusion by embedding the code of
    one project in another (monorepos and subtrees) to a light connection between
    projects by nesting repositories (submodules and similar solutions).'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 12*](B21194_12.xhtml#_idTextAnchor302), *Managing Large Repositories*,
    presents various solutions to the problem of large Git repositories, whether they
    are large because of a long history, contain a large number of files, or contain
    a project that includes some large files.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 13*](B21194_13_split_000.xhtml#_idTextAnchor320), *Customizing and
    Extending Git*, covers configuring and extending Git to fit your needs. You will
    find here details on how to set up the command line for easier use and a short
    introduction to graphical interfaces. This chapter explains how to automate Git
    with hooks (focusing on client-side hooks) – for example, how to make Git check
    whether a commit being created passes specific coding guidelines.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 14*](B21194_14.xhtml#_idTextAnchor349), *Git Administration*, focuses
    on the administrative side of Git. It briefly touches on the topic of serving
    Git repositories. Here, you will learn how to use server-side hooks for logging,
    access control, enforcing a development policy, and other purposes.'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 15*](B21194_15.xhtml#_idTextAnchor371), *Git Best Practices*, presents
    a collection of version-control, generic and Git-specific recommendations and
    best practices. These cover issues such as managing the working directory, creating
    commits and a series of commits (pull requests), submitting changes for inclusion,
    and a peer review of changes.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To follow the examples used in this book and run the provided commands, you
    will need the Git software ([https://git-scm.com/](https://git-scm.com/)), preferably
    version 2.41.0 or later. Git is available for free on every platform (such as
    Linux, Windows, and macOS). All examples use the textual Git interface, using
    the bash shell (which is provided with Git for Microsoft Windows, where it is
    not present by default).
  prefs: []
  type: TYPE_NORMAL
- en: '| **Software covered in** **the book** | **Operating** **system requirements**
    |'
  prefs: []
  type: TYPE_TB
- en: '| Git | Windows, macOS, or Linux |'
  prefs: []
  type: TYPE_TB
- en: To follow the development of a sample program, which is tracked in [*Chapter
    1*](B21194_01.xhtml#_idTextAnchor015), *Git Basics in Practice*, as a demonstration
    of using version control, you would also need a web browser and a text editor
    (although a programmers’ editor or IDE is preferred).
  prefs: []
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from GitHub at [https://github.com/PacktPublishing/Mastering-Git---Second-Edition](https://github.com/PacktPublishing/Mastering-Git---Second-Edition).
    If there’s an update to the code, it will be updated in the GitHub repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`Code in text`: Indicates code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles. Here is an example: “Then, Bob writes JavaScript source code (`random.js`)
    that is responsible for web application behavior.”'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see on
    screen. For instance, words in menus or dialog boxes appear in **bold**. Here
    is an example: “Select **System info** from the **Administration** panel.”'
  prefs: []
  type: TYPE_NORMAL
- en: Tips or important notes
  prefs: []
  type: TYPE_NORMAL
- en: Appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '**General feedback**: If you have questions about any aspect of this book,
    email us at [customercare@packtpub.com](mailto:customercare@packtpub.com) and
    mention the book title in the subject of your message.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)
    and fill in the form.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at [copyright@packt.com](mailto:copyright@packt.com)
    with a link to the material.'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com).'
  prefs: []
  type: TYPE_NORMAL
- en: Share Your Thoughts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Once you’ve read *Mastering Git*, we’d love to hear your thoughts! Please [click
    here to go straight to the Amazon review page](https://packt.link/r/1-835-08607-1)
    for this book and share your feedback.
  prefs: []
  type: TYPE_NORMAL
- en: Your review is important to us and the tech community and will help us make
    sure we’re delivering excellent quality content.
  prefs: []
  type: TYPE_NORMAL
- en: Download a free PDF copy of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Thanks for purchasing this book!
  prefs: []
  type: TYPE_NORMAL
- en: Do you like to read on the go but are unable to carry your print books everywhere?
  prefs: []
  type: TYPE_NORMAL
- en: Is your eBook purchase not compatible with the device of your choice?
  prefs: []
  type: TYPE_NORMAL
- en: Don’t worry, now with every Packt book you get a DRM-free PDF version of that
    book at no cost.
  prefs: []
  type: TYPE_NORMAL
- en: Read anywhere, any place, on any device. Search, copy, and paste code from your
    favorite technical books directly into your application.
  prefs: []
  type: TYPE_NORMAL
- en: The perks don’t stop there, you can get exclusive access to discounts, newsletters,
    and great free content in your inbox daily
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow these simple steps to get the benefits:'
  prefs: []
  type: TYPE_NORMAL
- en: Scan the QR code or visit the link below
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B21194_QR_Free_PDF.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '[https://packt.link/free-ebook/978-1-83508-607-0](https://packt.link/free-ebook/978-1-83508-607-0)'
  prefs: []
  type: TYPE_NORMAL
- en: Submit your proof of purchase
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: That’s it! We’ll send your free PDF and other benefits to your email directly
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
