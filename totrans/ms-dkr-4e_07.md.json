["```\n$ docker version\n```", "```\n$ git submodule update --init --recursive\n```", "```\n$ vagrant plugin install vagrant-reload\n```", "```\n$ vagrant up\n```", "```\n$ vagrant rdp\n```", "```\n$ docker container run hello-world\n```", "```\n$ docker pull mcr.microsoft.com/windows/servercore\n$ docker container run -it mcr.microsoft.com/windows/servercore:ltsc2019 powershell\n```", "```\n$ Get-CimInstance -ClassName Win32_Desktop -ComputerName .\n```", "```\n$ docker container ls -a\n```", "```\n# escape=`\nFROM mcr.microsoft.com/windows/servercore:ltsc2019\nRUN powershell -Command `\n    Add-WindowsFeature Web-Server; `\n    Invoke-WebRequest -UseBasicParsing -Uri “https://dotnetbinaries.blob.core.windows.net/servicemonitor/2.0.1.10/ServiceMonitor.exe” -OutFile “C:\\ServiceMonitor.exe”\nEXPOSE 80\nENTRYPOINT [“C:\\\\ServiceMonitor.exe”, “w3svc”]\n```", "```\n$ docker image build --tag local:dockerfile-iis .\n```", "```\n$ docker container run -d --name dockerfile-iis local:dockerfile-iis\n```", "```\n$ docker container inspect --format=”{{.NetworkSettings.Networks.nat.IPAddress}}” dockerfile-iis\n```", "```\n$ docker container stop dockerfile-iis\n$ docker container prune\n```", "```\nversion: ‘2.1’\nservices:\n  db:\n    image: microsoft/mssql-server-windows-express\n    environment:\n      sa_password: “${SA_PASSWORD}”\n      ACCEPT_EULA: “${SQL_SERVER_ACCEPT_EULA}”\n    healthcheck:\n      test: [ “CMD”, “sqlcmd”, “-U”, “sa”, “-P”, “${SA_PASSWORD}”, “-Q”, “select 1” ]\n      interval: 10s\n      retries: 10\n  octopus:\n    image: octopusdeploy/octopusdeploy:${OCTOPUS_VERSION}\n    environment:\n      ADMIN_USERNAME: “${OCTOPUS_ADMIN_USERNAME}”\n      ADMIN_PASSWORD: “${OCTOPUS_ADMIN_PASSWORD}”\n      SQLDBCONNECTIONSTRING: “${DB_CONNECTION_STRING}”\n      ACCEPT_EULA: “${OCTOPUS_ACCEPT_EULA}”\n      ADMIN_EMAIL: “${ADMIN_EMAIL}”\n    ports:\n     - “1322:8080”\n    depends_on:\n      db:\n        condition: service_healthy\n    stdin_open: true\n    volumes:\n      - “./Repository:C:/Repository”\n      - “./TaskLogs:C:/TaskLogs”\nnetworks:\n  default:\n    external:\n      name: nat\n```", "```\nSA_PASSWORD=N0tS3cr3t!\nOCTOPUS_VERSION=2019.13.4\nDB_CONNECTION_STRING=Server=db,1433;Initial Catalog=Octopus;Persist Security Info=False;User ID=sa;Password=N0tS3cr3t!;MultipleActiveResultSets=False;Connection Timeout=30;\nOCTOPUS_ADMIN_USERNAME=admin\nOCTOPUS_ADMIN_PASSWORD=Passw0rd123\nADMIN_EMAIL=\nOCTOPUS_ACCEPT_EULA=Y\nSQL_SERVER_ACCEPT_EULA=Y\n```", "```\n$ docker-compose pull\n```", "```\n$ mkdir Repository\n$ mkdir TaskLogs\n```", "```\n$ docker-compose --project-name Octopus up -d\n```", "```\n$ docker-compose --project-name Octopus logs -f\n```", "```\n$ docker inspect -f “{{ .NetworkSettings.Networks.nat.IPAddress }}” octopus_octopus_1\n```", "```\n$ docker-compose --project-name Octopus down --rmi all --volumes\n```"]