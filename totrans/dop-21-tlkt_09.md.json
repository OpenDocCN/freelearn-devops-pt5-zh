["```\ncd cloud-provisioning\n\ngit pull\n\nscripts/dm-swarm.sh\n\n```", "```\neval $(docker-machine env swarm-1)\n\ndocker network create --driver overlay elk\n\ndocker service create \\\n --name elasticsearch \\\n --network elk \\\n --reserve-memory 500m \\\n elasticsearch:2.4\n\n```", "```\ndocker service ps elasticsearch\n\n```", "```\nNAME            IMAGE             NODE    DESIRED STATE \nelasticsearch.1 elasticsearch:2.4 swarm-1 Running       \n------------------------------------------------------\nCURRENT STATE\nRunning 19 seconds ago \n\n```", "```\nmkdir -p docker/logstash\n\ncp conf/logstash.conf \\\n    docker/logstash/logstash.conf\n\ncat docker/logstash/logstash.conf\n\n```", "```\ninput {\n  syslog { port => 51415 }\n}\n\noutput {\n  elasticsearch {\n    hosts => [\"elasticsearch:9200\"]\n  }\n  # Remove in production\n  stdout {\n    codec => rubydebug\n  }\n}\n\n```", "```\ndocker service create --name logstash \\\n    --mount \"type=bind,source=$PWD/docker/logstash,target=/conf\" \\\n    --network elk \\\n    -e LOGSPOUT=ignore \\\n    --reserve-memory 100m \\\n    logstash:2.4 logstash -f /conf/logstash.conf\n\n```", "```\nFROM logstash\n\nRUN mkdir /config/\nCOPY conf/logstash.conf /config/\n\nCMD [\"-f\", \"/config/logstash.conf\"]\n\n```", "```\ndocker service ps logstash\n\n```", "```\nNAME       IMAGE        NODE    DESIRED STATE CURRENT STATE\nlogstash.1 logstash:2.4 swarm-1 Running       Running 2 seconds ago\n\n```", "```\nLOGSTASH_NODE=$(docker service ps logstash | tail -n +2 | awk '{print $4}')\n\neval $(docker-machine env $LOGSTASH_NODE)\n\nLOGSTASH_ID=$(docker ps -q \\\n    --filter label=com.docker.swarm.service.name=logstash)\n\ndocker logs $LOGSTASH_ID \n\n```", "```\n{:timestamp=>\"2016-10-19T23:08:06.358000+0000\", :message=>\"Pipeline \\\nmain started\"}\n\n```", "```\neval $(docker-machine env swarm-1)\n\ndocker service create \\\n    --name logger-test \\\n    --network elk \\\n    --restart-condition none \\\n    debian \\\n    logger -n logstash -P 51415 hello world\n\n```", "```\neval $(docker-machine env $LOGSTASH_NODE)\n\ndocker logs $LOGSTASH_ID\n\n```", "```\n{\n    \"message\" => \"<5>Oct 19 23:11:47 <someone>: hello world\\u0000\",\n    \"@version\" => \"1\",\n    \"@timestamp\" => \"2016-10-19T23:11:47.882Z\",\n        \"host\" => \"10.0.0.7\",\n        \"tags\" => [\n        [0] \"_grokparsefailure_sysloginput\"\n        ],\n           \"priority\" => 0,\n           \"severity\" => 0,\n           \"facility\" => 0,\n  \"facility_label\" => \"kernel\",\n  \"severity_label\" => \"Emergency\"\n}\n\n```", "```\neval $(docker-machine env swarm-1)\n\ndocker service rm logger-test\n\n```", "```\ndocker service create --name logspout \\\n    --network elk \\\n    --mode global \\\n    --mount \\\n\"type=bind,source=/var/run/docker.sock,target=/var/run/\\\n    docker.sock\" \n    -e SYSLOG_FORMAT=rfc3164 \\\n    gliderlabs/logspout syslog://logstash:51415\n\n```", "```\ndocker service ps logspout\n\n```", "```\nNAME        IMAGE                      NODE    DESIRED STATE           \nlogspout... gliderlabs/logspout:latest swarm-3 Running       \nlogspout... gliderlabs/logspout:latest swarm-2 Running       \nlogspout... gliderlabs/logspout:latest swarm-1 Running       \n------------------------------------------------------\nCURRENT STATE\nRunning 11 seconds ago\nRunning 10 seconds ago\nRunning 10 seconds ago \n\n```", "```\ndocker service create --name registry \\\n    -p 5000:5000 \\\n    --reserve-memory 100m \\\n    registry\n\n```", "```\ndocker service ps registry\n\n```", "```\neval $(docker-machine env $LOGSTASH_NODE)\n\ndocker logs $LOGSTASH_ID\n\n```", "```\n{\n   \"message\" => \"time=\\\"2016-10-19T23:14:19Z\\\" level=info \\\nmsg=\\\"listening on [::]:5000\\\" go.version=go1.6.3 \\\ninstance.id=87c31e30-a747-4f70-b7c2-396dd80eb47b version=v2.5.1 \\n\",\n         \"@version\" => \"1\",\n     \"@timestamp\" => \"2016-10-19T23:14:19.000Z\",\n         \"host\" => \"10.0.0.7\",\n         \"priority\" => 14,\n   \"timestamp8601\" => \"2016-10-19T23:14:19Z\",\n      \"logsource\" => \"c51c177bd308\",\n         \"program\" => \"registry.1.abszmuwq8k3d7comu504lz2mc\",\n             \"pid\" => \"4833\",\n        \"severity\" => 6,\n        \"facility\" => 1,\n       \"timestamp\" => \"2016-10-19T23:14:19Z\",\n   \"facility_label\" => \"user-level\",\n   \"severity_label\" => \"Informational\"\n}\n\n```", "```\ndocker network create --driver overlay proxy\n\ncurl -o docker-compose-stack.yml \\\n    https://raw.githubusercontent.com/\\\nvfarcic/docker-flow-proxy/master/docker-compose-stack.yml\n\ndocker stack deploy \\\n    -c docker-compose-stack.yml proxy\n\n```", "```\ndocker service create --name kibana \\\n    --network elk \\\n    --network proxy \\ \n-e ELASTICSEARCH_URL=http://elasticsearch:9200 \\\n    --reserve-memory 50m \\\n    --label com.df.notify=true \\\n    --label com.df.distribute=true \\\n    --label com.df.servicePath=/app/kibana,/bundles,/elasticsearch \\\n    --label com.df.port=5601 \\\n    kibana:4.6\n\n```", "```\ndocker service ps kibana\n\n```", "```\nopen \"http://$(docker-machine ip swarm-1)/app/kibana\"\n\n```", "```\ndocker-machine rm -f swarm-1 swarm-2 swarm-3\n\n```"]