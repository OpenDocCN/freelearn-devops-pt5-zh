["```\n$ kubectl run --generator=run-pod/v1 --image=nginx:alpine myfirstpod --labels=example=myfirstpod\npod/myfirstpod created\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n name: myfirstpod\n  labels:\n    example: myfirstpod\nspec:\n  containers:\n  - name: myfirstpodcontainer\n    image: nginx:alpine\n```", "```\n$ kubectl get pods\nNAME         READY   STATUS    RESTARTS   AGE\nmyfirstpod   1/1     Running   0          11s\n```", "```\napiVersion: apps/v1\nkind: ReplicaSet\nmetadata:\n  name: myfirstrs\n  labels:\n    example: myfirstrs\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      example: myfirstrs\n  template:\n    metadata:\n      name: myfirstpod\n      labels:\n        example: myfirstrs\n    spec:\n      containers:\n      - name: myfirstpodcontainer\n        image: nginx:alpine\n```", "```\n$ kubectl get all -l example=myfirstrs\nNAME                  READY   STATUS    RESTARTS   AGE\npod/myfirstrs-2xrpk   1/1     Running   0          47s\npod/myfirstrs-94rb5   1/1     Running   0          47s\npod/myfirstrs-jm6lc   1/1     Running   0          47s\n\nNAME                        DESIRED   CURRENT   READY   AGE\nreplicaset.apps/myfirstrs   3         3         3       47s\n```", "```\napiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  name: myfirstds\n  labels:\n    example: myfirstds\nspec:\n  selector:\n    matchLabels:\n      example: myfirstds\n  template:\n    metadata:\n      name: myfirstpod\n      labels:\n        example: myfirstds\n    spec:\n      containers:\n      - name: myfirstpodcontainer\n        image: nginx:alpine\n        resources:\n          limits:\n            memory: 100Mi\n          requests:\n            cpu: 100m\n            memory: 10Mi\n```", "```\n$ kubectl get all -l example=myfirstds -o wide\nNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES\npod/myfirstds-cr7xc 1/1 Running 0 84s 192.168.135.5 node3 <none> <none>\npod/myfirstds-f6x8n 1/1 Running 0 84s 192.168.104.6 node2 <none> <none>\n\nNAME DESIRED CURRENT READY UP-TO-DATE AVAILABLE NODE SELECTOR AGE CONTAINERS IMAGES SELECTOR\ndaemonset.apps/myfirstds 2 2 2 2 2 <none> 84s myfirstpodcontainer nginx:alpine example=myfirstds\n```", "```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: myfirstdeployment\n  labels:\n    example: myfirstds\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      example: myfirstdeployment\n  template:\n    metadata:\n      name: myfirstpod\n      labels:\n        example: myfirstdeployment\n    spec:\n      containers:\n      - name: myfirstpodcontainer\n        image: nginx:alpine\n        ports:\n        - containerPort: 80\n```", "```\n$  kubectl get all -l example=myfirstdeployment -o wide\nNAME                                     READY   STATUS    RESTARTS   AGE   IP               NODE    NOMINATED NODE   READINESS GATES\npod/myfirstdeployment-794f9bfcd7-9m8vg   1/1     Running   0          12s   192.168.135.9    node3   <none>           <none>\npod/myfirstdeployment-794f9bfcd7-f7499   1/1     Running   0          12s   192.168.104.10   node2   <none>           <none>\npod/myfirstdeployment-794f9bfcd7-kfzfk   1/1     Running   0          12s   192.168.104.11   node2   <none>           <none>\n\nNAME                                           DESIRED   CURRENT   READY   AGE   CONTAINERS            IMAGES         SELECTOR\nreplicaset.apps/myfirstdeployment-794f9bfcd7   3         3         3       12s   myfirstpodcontainer   nginx:alpine   pod-template-hash=794f9bfcd7,example=myfirstdeployment\n```", "```\n$ kubectl create deployment example-webserver --image=nginx:alpine\ndeployment.apps/example-webserver created\n```", "```\n$ kubectl get pods -o wide\nNAME                                READY   STATUS    RESTARTS   AGE   IP               NODE    NOMINATED NODE   READINESS GATES\nexample-webserver-7789c6d697-kts7l   1/1     Running   0          69s   192.168.104.16   node2   <none>           <none>\n```", "```\nnode3:~$ ping -c 2 192.168.104.16 \nPING 192.168.104.16 (192.168.104.16) 56(84) bytes of data.\n64 bytes from 192.168.104.16: icmp_seq=1 ttl=63 time=0.483 ms\n64 bytes from 192.168.104.16: icmp_seq=2 ttl=63 time=0.887 ms\n\n--- 192.168.104.16 ping statistics ---\n2 packets transmitted, 2 received, 0% packet loss, time 1001ms\nrtt min/avg/max/mdev = 0.483/0.685/0.887/0.202 ms\n```", "```\nnode3:~$ curl -I 192.168.104.16:80\nHTTP/1.1 200 OK\nServer: nginx/1.17.6\nDate: Sun, 05 Jan 2020 22:20:42 GMT\nContent-Type: text/html\nContent-Length: 612\nLast-Modified: Tue, 19 Nov 2019 15:14:41 GMT\nConnection: keep-alive\nETag: \"5dd406e1-264\"\nAccept-Ranges: bytes\n```", "```\n$ kubectl run --generator=run-pod/v1 example-nettools --image=frjaraur/nettools:minimal -ti -- sh \nIf you don't see a command prompt, try pressing enter.\n/ # ping -c 2 192.168.104.16 \nPING 192.168.104.16 (192.168.104.16): 56 data bytes\n64 bytes from 192.168.104.16: seq=0 ttl=62 time=0.620 ms\n64 bytes from 192.168.104.16: seq=1 ttl=62 time=0.474 ms\n\n--- 192.168.104.16 ping statistics ---\n2 packets transmitted, 2 packets received, 0% packet loss\nround-trip min/avg/max = 0.474/0.547/0.620 ms\n\n/ # curl -I 192.168.104.16:80\nHTTP/1.1 200 OK\nServer: nginx/1.17.6\nDate: Sun, 05 Jan 2020 22:22:16 GMT\nContent-Type: text/html\nContent-Length: 612\nLast-Modified: Tue, 19 Nov 2019 15:14:41 GMT\nConnection: keep-alive\nETag: \"5dd406e1-264\"\nAccept-Ranges: bytes\n```", "```\n$ kubectl get pods -o wide\nNAME                                READY   STATUS    RESTARTS   AGE    IP               NODE    NOMINATED NODE   READINESS GATES\nexample-nettools                     1/1     Running   1          85s    192.168.135.13   node3   <none>           <none>\nexample-webserver-7789c6d697-kts7l   1/1     Running   0          5m8s   192.168.104.16   node2   <none>           <none>\n```", "```\n$ kubectl expose deployment example-webserver \\\n--name example-webserver-svc --type=NodePort --port=80\n\nservice/example-webserver-svc exposed\n```", "```\n$ kubectl get services -o wide\nNAME                   TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)        AGE   SELECTOR\nkubernetes             ClusterIP   10.96.0.1      <none>        443/TCP        11h   <none>\nexample-webserver-svc   NodePort    10.98.107.31   <none>        80:30951/TCP   39s   app=example-webserver\n```", "```\n$ curl -I 10.98.107.31:80\nHTTP/1.1 200 OK\nServer: nginx/1.17.6\nDate: Sun, 05 Jan 2020 22:26:09 GMT\nContent-Type: text/html\nContent-Length: 612\nLast-Modified: Tue, 19 Nov 2019 15:14:41 GMT\nConnection: keep-alive\nETag: \"5dd406e1-264\"\nAccept-Ranges: bytes\n```", "```\nnode1:~$ curl -I 0.0.0.0:30951\nHTTP/1.1 200 OK\nServer: nginx/1.17.6\nDate: Sun, 05 Jan 2020 22:26:57 GMT\nContent-Type: text/html\nContent-Length: 612\nLast-Modified: Tue, 19 Nov 2019 15:14:41 GMT\nConnection: keep-alive\nETag: \"5dd406e1-264\"\nAccept-Ranges: bytes\n\nnode3:~$ curl -I 0.0.0.0:30951\nHTTP/1.1 200 OK\nServer: nginx/1.17.6\nDate: Sun, 05 Jan 2020 22:27:41 GMT\nContent-Type: text/html\nContent-Length: 612\nLast-Modified: Tue, 19 Nov 2019 15:14:41 GMT\nConnection: keep-alive\nETag: \"5dd406e1-264\"\nAccept-Ranges: bytes\n```", "```\n$ kubectl get pods -o wide -l app=example-webserver\nNAME                                READY   STATUS    RESTARTS   AGE   IP               NODE    NOMINATED NODE   READINESS GATES\nexample-webserver-7789c6d697-kts7l   1/1     Running   0          10m   192.168.104.16   node2   <none>           <none>\n```", "```\n<SERVICE_NAME>.<NAMESPACE>.svc.<CLUSTER>.<DOMAIN>\n```", "```\n$ kubectl attach example-nettools -c example-nettools -i -t\nIf you don't see a command prompt, try pressing enter.\n/ # host example-webserver.default.svc.cluster.local\nexample-webserver.default.svc.cluster.local has address 10.101.195.251\n/ # curl -I example-webserver.default.svc.cluster.local:80\nHTTP/1.1 200 OK\nServer: nginx/1.17.6\nDate: Sun, 05 Jan 2020 21:58:37 GMT\nContent-Type: text/html\nContent-Length: 612\nLast-Modified: Tue, 19 Nov 2019 15:14:41 GMT\nConnection: keep-alive\nETag: \"5dd406e1-264\"\nAccept-Ranges: bytes\n```", "```\n$ kubectl scale --replicas=3 deployment/example-webserver\ndeployment.extensions/example-webserver scaled\n```", "```\n$ kubectl get pods -o wide -l app=example-webserver\nNAME                                READY   STATUS    RESTARTS   AGE    IP               NODE    NOMINATED NODE   READINESS GATES\nexample-webserver-7789c6d697-dnx6l   1/1     Running   0          4m8s   192.168.135.14   node3   <none>           <none>\nexample-webserver-7789c6d697-kts7l   1/1     Running   0          23m    192.168.104.16   node2   <none>           <none>\nexample-webserver-7789c6d697-zdrtr   1/1     Running   0          4m8s   192.168.104.17   node2   <none>           <none>\n```", "```\n$ for I in $(seq 5);do curl -I 10.98.107.31:80;done\n```", "```\n$ kubectl logs example-webserver-7789c6d697-zdrtr\n192.168.166.128 - - [05/Jan/2020:22:44:32 +0000] \"HEAD / HTTP/1.1\" 200 0 \"-\" \"curl/7.47.0\" \"-\"\n192.168.166.128 - - [05/Jan/2020:22:45:38 +0000] \"HEAD / HTTP/1.1\" 200 0 \"-\" \"curl/7.47.0\" \"-\"\n```", "```\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: database-traffic\nspec:\n  podSelector:\n    matchLabels:\n      tier: database\n  policyTypes:\n  - Ingress\n  - Egress\n  ingress:\n  - from:\n    - ipBlock:\n        cidr: 172.17.10.0/24\n    - podSelector:\n        matchLabels:\n          tier: frontend\n    ports:\n    - protocol: TCP\n      port: 5432\n  egress:\n  - to:\n    - ipBlock:\n        cidr: 10.0.0.0/24\n    ports:\n    - protocol: TCP\n      port: 5978\n```", "```\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: default-deny\nspec:\n  podSelector: {}\n  policyTypes:\n  - Egress\n```", "```\napiVersion: networking.k8s.io/v1beta1\nkind: Ingress\nmetadata:\n  name: simple-fanout-example\n  annotations:\n    nginx.ingress.kubernetes.io/rewrite-target: /\nspec:\n  rules:\n  - host: example.local\n    http:\n      paths:\n      - path: /example1\n        backend:\n          serviceName: example-webserver\n          servicePort: 80\n      - path: /example2\n        backend:\n          serviceName: another-service\n          servicePort: 8080\n```", "```\nDocker-Certified-Associate-DCA-Exam-Guide/environments/kubernetes$ vagrant up\n--------------------------------------------------------------------------------------------\n KUBERNETES Vagrant Environment\n Engine Version: current\n Kubernetes Version: 1.14.0-00\n Kubernetes CNI: https://docs.projectcalico.org/v3.8/manifests/calico.yaml\n--------------------------------------------------------------------------------------------\nBringing machine 'kubernetes-node1' up with 'virtualbox' provider...\nBringing machine 'kubernetes-node2' up with 'virtualbox' provider...\nBringing machine 'kubernetes-node3' up with 'virtualbox' provider... \n...\nDocker-Certified-Associate-DCA-Exam-Guide/environments/kubernetes$\n```", "```\nDocker-Certified-Associate-DCA-Exam-Guide/environments/kubernetes$ vagrant ssh kubernetes-node1\nvagrant@kubernetes-node1:~$\n```", "```\nDocker-Certified-Associate-DCA-Exam-Guide/environments/kubernetes$ vagrant ssh kubernetes-node1\n\nvagrant@kubernetes-node1:~$ kubectl get nodes\nNAME STATUS ROLES AGE VERSION\nkubernetes-node1 Ready master 6m52s v1.14.0\nkubernetes-node2 Ready <none> 3m57s v1.14.0\nkubernetes-node3 Ready <none> 103s v1.14.0 \n```", "```\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  name: blue-app\n  labels:\n    color: blue\n    example: blue-app\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: blue\n  template:\n    metadata:\n      labels:\n        app: blue\n    spec:\n      containers:\n      - name: blue\n        image: codegazers/colors:1.12\n        env:\n        - name: COLOR\n          value: blue\n        ports:\n        - containerPort: 3000\n```", "```\nvagrant@kubernetes-node1:~$ kubectl create -f blue-deployment-simple.yaml\ndeployment.extensions/blue-app created\n```", "```\nvagrant@kubernetes-node1:~$ kubectl get deployments -o wide\nNAME READY UP-TO-DATE AVAILABLE AGE CONTAINERS IMAGES SELECTOR\nblue-app 2/2 2 2 103s blue codegazers/colors:1.12 app=blue\n```", "```\nvagrant@kubernetes-node1:~$ kubectl get pods -o wide\nNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES\nblue-app-54485c74fc-wgw7r 1/1 Running 0 2m8s 192.168.135.2 kubernetes-node3 <none> <none>\nblue-app-54485c74fc-x8p92 1/1 Running 0 2m8s 192.168.104.2 kubernetes-node2 <none> <none>\n```", "```\nvagrant@kubernetes-node1:~$ curl 192.168.104.2:3000/text\nAPP_VERSION: 1.0\nCOLOR: blue\nCONTAINER_NAME: blue-app-54485c74fc-x8p92\nCONTAINER_IP: 192.168.104.2\nCLIENT_IP: ::ffff:192.168.166.128\nCONTAINER_ARCH: linux\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: blue-svc\nspec:\n  ports:\n  - port: 80\n    targetPort: 3000\n    protocol: TCP\n    name: http\n  selector:\n    app: blue\n```", "```\nvagrant@kubernetes-node1:~$ kubectl create -f blue-service-simple.yaml\nservice/blue-svc created\n\nvagrant@kubernetes-node1:~$ kubectl get svc\nNAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE\nblue-svc ClusterIP 10.100.207.49 <none> 80/TCP 7s\nkubernetes ClusterIP 10.96.0.1 <none> 443/TCP 53m\n```", "```\nvagrant@kubernetes-node1:~$ curl 10.100.207.49:80/text\nAPP_VERSION: 1.0\nCOLOR: blue\nCONTAINER_NAME: blue-app-54485c74fc-x8p92\nCONTAINER_IP: 192.168.104.2\nCLIENT_IP: ::ffff:192.168.166.128\nCONTAINER_ARCH: linux\n```", "```\nvagrant@kubernetes-node1:~$ curl 10.100.207.49:80/text\nAPP_VERSION: 1.0\nCOLOR: blue\nCONTAINER_NAME: blue-app-54485c74fc-wgw7r\nCONTAINER_IP: 192.168.135.2\nCLIENT_IP: ::ffff:192.168.166.128\nCONTAINER_ARCH: linux\n```", "```\nvagrant@kubernetes-node1:~$ kubectl delete -f blue-service-simple.yaml\nservice \"blue-svc\" deleted\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: blue-svc\nspec:\n  type: NodePort\n  ports:\n  - port: 80\n    targetPort: 3000\n    protocol: TCP\n    name: http\n  selector:\n    app: blue\n```", "```\nvagrant@kubernetes-node1:~$ kubectl create -f blue-service-nodeport.yaml\nservice/blue-svc created\n\nvagrant@kubernetes-node1:~$ kubectl get svc\nNAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE\nblue-svc NodePort 10.100.179.60 <none> 80:32648/TCP 5s\nkubernetes ClusterIP 10.96.0.1 <none> 443/TCP 58m\n```", "```\nvagrant@kubernetes-node1:~$ curl 0.0.0.0:32648/text\nAPP_VERSION: 1.0\nCOLOR: blue\nCONTAINER_NAME: blue-app-54485c74fc-x8p92\nCONTAINER_IP: 192.168.104.2\nCLIENT_IP: ::ffff:192.168.166.128\nCONTAINER_ARCH: linux\n```", "```\nvagrant@kubernetes-node3:~$ curl 10.10.10.13:32648/text\nAPP_VERSION: 1.0\nCOLOR: blue\nCONTAINER_NAME: blue-app-54485c74fc-wgw7r\nCONTAINER_IP: 192.168.135.2\nCLIENT_IP: ::ffff:10.0.2.15\nCONTAINER_ARCH: linux\n```", "```\nvagrant@kubernetes-node1:~$ kubectl set image deployment blue-app blue=codegazers/colors:1.15\ndeployment.extensions/blue-app image updated\n```", "```\nvagrant@kubernetes-node1:~$ kubectl get all -o wide\nNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES\npod/blue-app-787648f786-4tz5b 1/1 Running 0 76s 192.168.104.3 node2 <none> <none>\npod/blue-app-787648f786-98bmf 1/1 Running 0 76s 192.168.135.3 node3 <none> <none>\n\nNAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE SELECTOR\nservice/blue-svc NodePort 10.100.179.60 <none> 80:32648/TCP 22m app=blue\nservice/kubernetes ClusterIP 10.96.0.1 <none> 443/TCP 81m <none>\n\nNAME READY UP-TO-DATE AVAILABLE AGE CONTAINERS IMAGES SELECTOR\ndeployment.apps/blue-app 2/2 2 2 52m blue codegazers/colors:1.15 app=blue\n\nNAME DESIRED CURRENT READY AGE CONTAINERS IMAGES SELECTOR\nreplicaset.apps/blue-app-54485c74fc 0 0 0 52m blue codegazers/colors:1.12 app=blue,pod-template-hash=54485c74fc\nreplicaset.apps/blue-app-787648f786 2 2 2 76s blue codegazers/colors:1.15 app=blue,pod-template-hash=787648f786\n```", "```\nvagrant@kubernetes-node1:~$ kubectl rollout status deployment.apps/blue-app\ndeployment \"blue-app\" successfully rolled out\n```", "```\nvagrant@kubernetes-node1:~$ kubectl rollout undo deployment.apps/blue-app\ndeployment.apps/blue-app rolled back\n```", "```\nvagrant@kubernetes-node1:~$ kubectl get all -o wide\nNAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES\npod/blue-app-54485c74fc-kslgw 1/1 Running 0 62s 192.168.104.4 node2 <none> <none>\npod/blue-app-54485c74fc-lrkxv 1/1 Running 0 62s 192.168.135.4 node3 <none> <none>\n\nNAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE SELECTOR\nservice/blue-svc NodePort 10.100.179.60 <none> 80:32648/TCP 29m app=blue\nservice/kubernetes ClusterIP 10.96.0.1 <none> 443/TCP 87m <none>\n\nNAME READY UP-TO-DATE AVAILABLE AGE CONTAINERS IMAGES SELECTOR\ndeployment.apps/blue-app 2/2 2 2 58m blue codegazers/colors:1.12 app=blue\n\nNAME DESIRED CURRENT READY AGE CONTAINERS IMAGES SELECTOR\nreplicaset.apps/blue-app-54485c74fc 2 2 2 58m blue codegazers/colors:1.12 app=blue,pod-template-hash=54485c74fc\nreplicaset.apps/blue-app-787648f786 0 0 0 7m46s blue codegazers/colors:1.15 app=blue,pod-template-hash=787648f786\n```", "```\n$ vagrant ssh kubernetes-node2\n\nvagrant@kubernetes-node2:~$ ls  /mnt/\n```", "```\n$ vagrant ssh kubernetes-node1\n\nvagrant@kubernetes-node1:~$ git clone https://github.com/PacktPublishing/Docker-Certified-Associate-DCA-Exam-Guide.git\n```", "```\nvagrant@kubernetes-node1:~$ cd Docker-Certified-Associate-DCA-Exam-Guide/chapter9/nginx-lab/yaml/\nvagrant@kubernetes-node1:~/Docker-Certified-Associate-DCA-Exam-Guide/chapter9/nginx-lab/yaml$\n```", "```\nvagrant@kubernetes-node1:~/Docker-Certified-Associate-DCA-Exam-Guide/chapter9/nginx-lab/yaml$ kubectl create -f .\nconfigmap/webserver-test-config created\ndeployment.apps/webserver created\npersistentvolume/webserver-pv created\npersistentvolumeclaim/werbserver-pvc created\nsecret/webserver-secret created\nservice/webserver-svc created\n```", "```\nvagrant@kubernetes-node1:~/Docker-Certified-Associate-DCA-Exam-Guide/chapter9/nginx-lab/yaml$ kubectl get all\nNAME                            READY   STATUS    RESTARTS   AGE\npod/webserver-d7fbbf4b7-rhvvn   1/1     Running   0          31s\nNAME                    TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE\nservice/kubernetes      ClusterIP   10.96.0.1       <none>        443/TCP        107m\nservice/webserver-svc   NodePort    10.97.146.192   <none>        80:30080/TCP   31s\nNAME                        READY   UP-TO-DATE   AVAILABLE   AGE\ndeployment.apps/webserver   1/1     1            1           31s\nNAME                                  DESIRED   CURRENT   READY   AGE\nreplicaset.apps/webserver-d7fbbf4b7   1         1         1       31s\n```", "```\nvagrant@kubernetes-node1:~/Docker-Certified-Associate-DCA-Exam-Guide/chapter9/nginx-lab/yaml$ kubectl get pv\nNAME           CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS   CLAIM                    STORAGECLASS   REASON   AGE\nwebserver-pv   500Mi      RWO            Retain           Bound    default/werbserver-pvc   manual                  6m13s\n\nvagrant@kubernetes-node1:~/Docker-Certified-Associate-DCA-Exam-Guide/chapter9/nginx-lab/yaml$ kubectl get pvc\nNAME             STATUS   VOLUME         CAPACITY   ACCESS MODES   STORAGECLASS   AGE\nwerbserver-pvc   Bound    webserver-pv   500Mi      RWO            manual         6m15s\n```", "```\nvagrant@kubernetes-node1:~/Docker-Certified-Associate-DCA-Exam-Guide/chapter9/nginx-lab/yaml$ curl 0.0.0.0:30080\n<!DOCTYPE html>\n<html>\n<head>\n<title>DEFAULT_TITLE</title>\n<style>\n body {\n width: 35em;\n margin: 0 auto;\n font-family: Tahoma, Verdana, Arial, sans-serif;\n }\n</style>\n</head>\n<body>\n<h1>DEFAULT_BODY</h1>\n</body>\n</html>\n```", "```\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  creationTimestamp: null\n  name: webserver-test-config\ndata:\n  default.conf: |+\n        server {\n            listen       80;\n            server_name  test;\n            location / {\n                root   /wwwroot;\n                index  index.html index.htm;\n            }\n            error_page   500 502 503 504  /50x.html;\n            location = /50x.html {\n                root   /usr/share/nginx/html;\n            }\n        }\n```", "```\n...\n        volumeMounts:\n        - name: config-volume\n          mountPath: /etc/nginx/conf.d/\n...\n      volumes:\n      - name: config-volume\n        configMap:\n          name: webserver-test-config\n...\n```", "```\napiVersion: v1\ndata:\n  PAGEBODY: SGVsbG9fV29ybGRfZnJvbV9TZWNyZXQ=\n  PAGETITLE: RG9ja2VyX0NlcnRpZmllZF9EQ0FfRXhhbV9HdWlkZQ==\nkind: Secret\nmetadata:\n  creationTimestamp: null\n  name: webserver-secret\n```", "```\n...\n        env:\n...\n        - name: PAGETITLE\n          valueFrom:\n            secretKeyRef:\n              name: webserver-secret\n              key: PAGETITLE\n        - name: PAGEBODY\n          valueFrom:\n            secretKeyRef:\n              name: webserver-secret\n              key: PAGEBODY\n...\n```", "```\n...\n        volumeMounts:\n...\n        - mountPath: /wwwroot\n          name: data-volume\n...\n      - name: data-volume\n        persistentVolumeClaim:\n          claimName: werbserver-pvc\n...\n```", "```\n...\n        volumeMounts:\n...\n        - mountPath: /var/log/nginx\n          name: empty-volume\n          readOnly: false\n...\n      volumes:\n...\n      - name: empty-volume\n        emptyDir: {}\n...\n```", "```\nvagrant@kubernetes-node1:~/Docker-Certified-Associate-DCA-Exam-Guide/chapter9/nginx-lab/yaml$ kubectl delete pod/webserver-d7fbbf4b7-rhvvn\npod \"webserver-d7fbbf4b7-rhvvn\" deleted\n```", "```\nvagrant@kubernetes-node1:~/Docker-Certified-Associate-DCA-Exam-Guide/chapter9/nginx-lab/yaml$ kubectl get pods\nNAME READY STATUS RESTARTS AGE\nwebserver-d7fbbf4b7-sz6dx 1/1 Running 0 17s\n```", "```\nvagrant@kubernetes-node1:~/Docker-Certified-Associate-DCA-Exam-Guide/chapter9/nginx-lab/yaml$ curl 0.0.0.0:30080\n<!DOCTYPE html>\n<html>\n<head>\n<title>Docker_Certified_DCA_Exam_Guide</title>\n<style>\n body {\n width: 35em;\n margin: 0 auto;\n font-family: Tahoma, Verdana, Arial, sans-serif;\n }\n</style>\n</head>\n<body>\n<h1>Hello_World_from_Secret</h1>\n</body>\n</html>\n```", "```\n$ vagrant ssh kubernetes-node2\n\nvagrant@kubernetes-node2:~$ cat /mnt/index.html\n<!DOCTYPE html>\n<html>\n<head>\n<title>Docker_Certified_DCA_Exam_Guide</title>\n<style>\n body {\n width: 35em;\n margin: 0 auto;\n font-family: Tahoma, Verdana, Arial, sans-serif;\n }\n</style>\n</head>\n<body>\n<h1>Hello_World_from_Secret</h1>\n</body>\n</html>\n```"]