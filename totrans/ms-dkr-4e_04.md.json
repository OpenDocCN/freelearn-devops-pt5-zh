["```\n$ docker container run hello-world\n```", "```\nFROM scratch\nCOPY hello /\nCMD [\"/hello\"]\n```", "```\n$ docker container ls -a\n```", "```\nif name == \"boring_wozniak\" /* Steve Wozniak is not boring */ { goto begin }\n```", "```\n$ docker container rm awesome_jackson\n```", "```\n$ docker container run -d --name nginx-test -p 8080:80 nginx\n```", "```\n$ docker container ls\n```", "```\n$ docker container run --name nginx-foreground -p 9090:80 nginx\n```", "```\ndocker: Error response from daemon: driver failed programming external connectivity on endpoint nginx-foreground (3f5b355607f24e03f09a60ee688645f223bafe4492f807459e4a 2b83571f23f4): Bind for 0.0.0.0:8080 failed: port is already allocated.\n```", "```\nERRO[0003] error getting events from daemon: net/http: request cancelled\n```", "```\n$ docker container attach nginx-test\n```", "```\n$ docker container start nginx-test\n```", "```\n$ docker container attach --sig-proxy=false nginx-test\n```", "```\n$ docker container exec nginx-test cat /etc/debian_version\n```", "```\n$ docker container exec -i -t nginx-test /bin/bash\n```", "```\n$ docker container logs --tail 5 nginx-test\n```", "```\n$ docker container logs -f nginx-test\n```", "```\n$ docker container logs --since 2020-03-28T15:52:00 nginx-test\n```", "```\n$ docker container logs --since 2020-03-28T15:52:00 -t nginx-test\n```", "```\n$ docker container top nginx-test\n```", "```\n$ docker container run -d --name nginx-test --cpu-shares 512 --memory 128M -p 8080:80 nginx\n```", "```\n$ docker container update --cpu-shares 512 --memory 128M nginx-test\n```", "```\nError response from daemon: Cannot update container 662b6e5153ac77685f25a1189922d7f49c2df6b2375b3635a37eea 4c8698aac2: Memory limit should be smaller than already set memoryswap limit, update the memoryswap at the same time\n```", "```\n$ docker container inspect nginx-test\n```", "```\n$ docker container inspect nginx-test | grep -i memory\n```", "```\n            \"Memory\": 0,\n            \"KernelMemory\": 0,\n            \"KernelMemoryTCP\": 0,\n            \"MemoryReservation\": 0,\n            \"MemorySwap\": 0,\n            \"MemorySwappiness\": null,\n```", "```\n$ docker container update --cpu-shares 512 --memory 128M --memory-swap 256M nginx-test\n```", "```\n            \"Memory\": 134217728,\n            \"KernelMemory\": 0,\n            \"KernelMemoryTCP\": 0,\n            \"MemoryReservation\": 0,\n            \"MemorySwap\": 268435456,\n            \"MemorySwappiness\": null,\n```", "```\n$ for i in {1..5}; do docker container run -d --name nginx$(printf \"$i\") nginx; done \n```", "```\n$ docker container pause nginx1\n```", "```\n$ docker container unpause nginx1\n```", "```\n$ docker container stop nginx2\n```", "```\n$ docker container stop -t 60 nginx3\n```", "```\n$ docker container start nginx2 nginx3\n```", "```\n$ docker container restart -t 60 nginx4\n```", "```\n$ docker container kill nginx5\n```", "```\n$ docker container prune\n```", "```\n$ docker container rm nginx4\n```", "```\n$ docker container stop nginx3 && docker container rm nginx3\n```", "```\n$ docker container create --name nginx-test -p 8080:80 nginx\n```", "```\n$ docker container port nginx-test\n```", "```\n    80/tcp -> 0.0.0.0:8080\n```", "```\n$ docker container exec nginx-test touch /tmp/testing\n```", "```\n$ docker container diff nginx-test\n```", "```\n    C /run\n    A /run/nginx.pid\n    C /tmp\n    A /tmp/testing\n    C /var\n    C /var/cache\n    C /var/cache/nginx\n    A /var/cache/nginx/client_temp\n    A /var/cache/nginx/fastcgi_temp\n    A /var/cache/nginx/proxy_temp\n    A /var/cache/nginx/scgi_temp\n    A /var/cache/nginx/uwsgi_temp\n```", "```\n$ docker container cp nginx-test:/tmp/testing testing \n```", "```\n$ echo \"This is a test of copying a file from the host machine to the container\" > testing\n$ docker container cp testing nginx-test:/tmp/testing\n$ docker container exec nginx-test cat /tmp/testing\n```", "```\n$ docker image pull redis:alpine\n$ docker image pull russmckendrick/moby-counter\n$ docker network create moby-counter\n```", "```\n$ docker container run -d --name redis --network moby-counter redis:alpine\n```", "```\n$ docker container run -d --name moby-counter --network moby-counter -p 8080:80 russmckendrick/moby-counter\n```", "```\nvar port = opts.redis_port || process.env.USE_REDIS_PORT || 6379\nvar host = opts.redis_host || process.env.USE_REDIS_HOST || 'redis'\n```", "```\n$ docker container exec moby-counter ping -c 3 redis\n```", "```\n$ docker container exec moby-counter cat /etc/hosts\n```", "```\n    127.0.0.1\tlocalhost\n    ::1\tlocalhost ip6-localhost ip6-loopback\n    fe00::0\tip6-localnet\n    ff00::0\tip6-mcastprefix\n    ff02::1\tip6-allnodes\n    ff02::2\tip6-allrouters\n    172.18.0.3\te7335ca1830d\n```", "```\n$ docker container exec moby-counter cat /etc/resolv.conf\n```", "```\nnameserver 127.0.0.11\noptions ndots:0\n```", "```\n$ docker container exec moby-counter nslookup redis 127.0.0.11\n```", "```\n    Server:    127.0.0.11\n    Address 1: 127.0.0.11\n\n    Name:      redis\n    Address 1: 172.18.0.2 redis.moby-counter\n```", "```\n$ docker network create moby-counter2\n$ docker run -itd --name moby-counter2 --network moby-counter2 -p 9090:80 russmckendrick/moby-counter\n```", "```\n$ docker container exec moby-counter2 ping -c 3 redis\n```", "```\n$ docker container exec moby-counter2 cat /etc/resolv.conf\n```", "```\n    nameserver 127.0.0.11\n    options ndots:0\n```", "```\n$ docker container exec moby-counter2 nslookup redis 127.0.0.11\n```", "```\n    Server:    127.0.0.11\n    Address 1: 127.0.0.11\n    nslookup: can't resolve 'redis': Name does not resolve\n```", "```\n$ docker container run -d --name redis2 --network moby-counter2 --network-alias redis redis:alpine\n```", "```\n$ docker container exec moby-counter2 nslookup redis 127.0.0.1\n```", "```\nServer:    127.0.0.1\nAddress 1: 127.0.0.1 localhost\nName:      redis\nAddress 1: 172.19.0.3 redis2.moby-counter2\n```", "```\n$ docker network inspect moby-counter\n```", "```\n[\n    {\n        \"Name\": \"moby-counter\",\n        \"Id\": \"c9d98376f13ccd556d84b708e132350900036fb4 cfecf275dcbd8657dc69b22c\",\n        \"Created\": \"2020-03-29T13:06:03.3911316Z\",\n        \"Scope\": \"local\",\n        \"Driver\": \"bridge\",\n        \"EnableIPv6\": false,\n```", "```\n        \"IPAM\": {\n            \"Driver\": \"default\",\n            \"Options\": {},\n            \"Config\": [\n                {\n                    \"Subnet\": \"172.18.0.0/16\",\n                    \"Gateway\": \"172.18.0.1\"\n                }\n            ]\n        },\n```", "```\n        \"Internal\": false,\n        \"Attachable\": false,\n        \"Ingress\": false,\n        \"ConfigFrom\": {\n            \"Network\": \"\"\n        },\n        \"ConfigOnly\": false,\n```", "```\n        \"Containers\": {\n            \"e7335ca1830da66d4bdc2915a6a35e83e 546cbde63cd97ab48bfd3ca06ae99ae\": {\n                \"Name\": \"moby-counter\",\n                \"EndpointID\": \"fb405fac3e0814e3ab7f1b8e2c4 2bbfe09d751982c502ff196ac794e382bbb2a\",\n                \"MacAddress\": \"02:42:ac:12:00:03\",\n                \"IPv4Address\": \"172.18.0.3/16\",\n                \"IPv6Address\": \"\"\n            },\n            \"f3b6a0d45f56fe2a0b54beb4b89d6094aaf 42598e11c3080ef0a21b78f0ec159\": {\n                \"Name\": \"redis\",\n                \"EndpointID\": \"817833e6bba40c73a3a349fae 53205b1c9e19d73f3a8d5e296729ed5876cf648\",\n                \"MacAddress\": \"02:42:ac:12:00:02\",\n                \"IPv4Address\": \"172.18.0.2/16\",\n                \"IPv6Address\": \"\"\n            }\n        },\n```", "```\n        \"Options\": {},\n        \"Labels\": {}\n    }\n]\n```", "```\n$ docker container stop moby-counter2 redis2\n$ docker container prune\n$ docker network prune\n```", "```\n$ docker container stop redis\n$ docker container rm redis\n```", "```\n$ docker container run -d --name redis --network moby-counter redis:alpine\n```", "```\n$ docker container stop redis\n$ docker container rm redis\n```", "```\nFROM alpine:3.11\nRUN addgroup -S -g 1000 redis && adduser -S -G redis -u 999 redis\nRUN apk add --no-cache \\\n\t\t'su-exec>=0.2' \\\n\t\ttzdata\nENV REDIS_VERSION 5.0.8\nENV REDIS_DOWNLOAD_URL http://download.redis.io/releases/redis-5.0.8.tar.gz\nENV REDIS_DOWNLOAD_SHA f3c7eac42f433326a8d981b50dba0169 fdfaf46abb23fcda2f933a7552ee4ed7\n```", "```\nRUN set -eux; \\\n\t\\\n\tapk add --no-cache --virtual .build-deps \\\n\t\tcoreutils \\\n\t\tgcc \\\n\t\tlinux-headers \\\n\t\tmake \\\n\t\tmusl-dev \\\n\t\topenssl-dev \\\n\t; \\\n\t\\\n```", "```\n\twget -O redis.tar.gz \"$REDIS_DOWNLOAD_URL\"; \\\n\techo \"$REDIS_DOWNLOAD_SHA *redis.tar.gz\" | sha256sum -c -; \\\n\tmkdir -p /usr/src/redis; \\\n\ttar -xzf redis.tar.gz -C /usr/src/redis --strip-components=1; \\\n\trm redis.tar.gz; \\\n\t\\\n```", "```\n\tgrep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 1$' /usr/src/redis/src/server.h; \\\n\tsed -ri 's!^(#define CONFIG_DEFAULT_PROTECTED_MODE) 1$!\\1 0!' /usr/src/redis/src/server.h; \\\n\tgrep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 0$' /usr/src/redis/src/server.h; \\\n\t\\\n```", "```\n\tmake -C /usr/src/redis -j \"$(nproc)\" all; \\\n\tmake -C /usr/src/redis install; \\\n\t\\\n\tserverMd5=\"$(md5sum /usr/local/bin/redis-server | cut -d' ' -f1)\"; export serverMd5; \\\n\tfind /usr/local/bin/redis* -maxdepth 0 \\\n\t\t-type f -not -name redis-server \\\n\t\t-exec sh -eux -c ' \\\n\t\t\tmd5=\"$(md5sum \"$1\" | cut -d\" \" -f1)\"; \\\n\t\t\ttest \"$md5\" = \"$serverMd5\"; \\\n\t\t' -- '{}' ';' \\\n\t\t-exec ln -svfT 'redis-server' '{}' ';' \\\n\t; \\\n\t\\\n```", "```\n\trm -r /usr/src/redis; \\\n\t\\\n\trunDeps=\"$( \\\n\t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \\\n\t\t\t| tr ',' '\\n' \\\n\t\t\t| sort -u \\\n\t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \\\n\t)\"; \\\n\tapk add --no-network --virtual .redis-rundeps $runDeps; \\\n\tapk del --no-network .build-deps; \\\n\t\\\n```", "```\n\tredis-cli --version; \\\n\tredis-server --version\n```", "```\nRUN mkdir /data && chown redis:redis /data\nVOLUME /data\nWORKDIR /data\nCOPY docker-entrypoint.sh /usr/local/bin/\nENTRYPOINT [\"docker-entrypoint.sh\"]\nEXPOSE 6379\nCMD [\"redis-server\"]\n```", "```\n$ docker volume ls\n```", "```\n$ docker container run -d --name redis -v 45c4cb295fc831c085c49963a01f8e0f79534b9 f0190af89321efec97b9d051f:/data -network moby-counter redis:alpine\n```", "```\n$ docker container exec redis ls -lhat /data\n```", "```\n    total 12K\n    drwxr-xr-x    1 root     root        4.0K Mar 29 13:51 ..\n    drwxr-xr-x    2 redis    redis       4.0K Mar 29 13:35 .\n    -rw-r--r--    1 redis    redis        210 Mar 29 13:35 dump.rdb\n```", "```\n$ docker container stop redis\n$ docker container rm redis\n```", "```\n$ docker volume create redis_data\n```", "```\n$ docker container run -d --name redis -v redis_data:/data --network moby-counter redis:alpine\n```", "```\n$ docker volume inspect redis_data\n```", "```\n[\n    {\n        \"CreatedAt\": \"2020-03-29T14:01:05Z\",\n        \"Driver\": \"local\",\n        \"Labels\": {},\n        \"Mountpoint\": \"/var/lib/docker/volumes/redis_data/_data\",\n        \"Name\": \"redis_data\",\n        \"Options\": {},\n        \"Scope\": \"local\"\n    }\n]\n```", "```\n$ docker container stop redis moby-counter\n$ docker container prune\n$ docker network prune\n```", "```\n$ docker volume prune\n```", "```\n$ docker container [command]\n$ docker network [command]\n$ docker volume [command]\n$ docker image [command]\n```"]