["```\nbrew install awscli\n\n```", "```\naws configure\n\n```", "```\nbrew install kubernetes-cli\n\n```", "```\nexport KUBE_AWS_ZONE=eu-west-1c\nexport AWS_S3_REGION=eu-west-1\n\n```", "```\nexport NUM_NODES=2\n\n```", "```\nexport KUBERNETES_PROVIDER=aws\n\n```", "```\ncurl -sS https://get.k8s.io | bash\n\n```", "```\nkubectl get nodes\n\n```", "```\ntail -3 ~/.kube/config\n\n```", "```\napiVersion: v1\nkind: ReplicationController\nmetadata:\n  name: nginxcluster\nspec:\n  replicas: 5\n  selector:\n    app: nginxcluster\n  template:\n    metadata:\n      name: nginxcluster\n      labels:\n        app: nginxcluster\n    spec:\n      containers:\n      - name: nginxcluster\n        image: russmckendrick/cluster\n        ports:\n        - containerPort: 80\n```", "```\nkubectl create -f nginxcluster.yaml\n\n```", "```\nkubectl get pods\n\n```", "```\nkubectl get services\n\n```", "```\nkubectl get rc\n\n```", "```\nkubectl expose rc nginxcluster --port=80 --type=LoadBalancer\n\n```", "```\nkubectl get services\n\n```", "```\nkubectl describe service nginxcluster\n\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: mysql\n  labels: \n    name: mysql\nspec: \n  containers: \n    - resources:\n      image: russmckendrick/mariadb\n      name: mysql\n      env:\n        - name: MYSQL_ROOT_PASSWORD\n          value: yourpassword\n      ports: \n        - containerPort: 3306\n          name: mysql\n      volumeMounts:\n        - name: mysql-persistent-storage\n          mountPath: /var/lib/mysql\n  volumes:\n    - name: mysql-persistent-storage\n      awsElasticBlockStore:\n        volumeID:<insert your volume id here>\n        fsType: ext4\n```", "```\nkubectl create -f mysql.yaml\n\n```", "```\nkubectl get pods\n\n```", "```\nkubectl describe pod mysql\n\n```", "```\nkubectl delete rc nginxcluster\nkubectl delete service nginxcluster\n\n```", "```\napiVersion: v1\nkind: Service\nmetadata: \n  labels: \n    name: mysql\n  name: mysql\nspec: \n  ports:\n    - port: 3306\n  selector: \n    name: mysql\n```", "```\nkubectl create -f mysql-service.yaml\n\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: wordpress\n  labels: \n    name: wordpress\nspec: \n  containers: \n    - image: wordpress\n      name: wordpress\n      env:\n        - name: WORDPRESS_DB_PASSWORD\n          value: yourpassword\n      ports: \n        - containerPort: 80\n          name: wordpress\n      volumeMounts:\n        - name: wordpress-persistent-storage\n          mountPath: /var/www/html\n  volumes:\n    - name: wordpress-persistent-storage\n      awsElasticBlockStore:\n        volumeID: <insert your volume id here>\n        fsType: ext4\n```", "```\nkubectl create -f wordpress.yaml\n\n```", "```\nkubectl logs wordpress\n\n```", "```\napiVersion: v1\nkind: Service\nmetadata: \n  labels: \n    name: wpfrontend\n  name: wpfrontend\nspec: \n  ports:\n    - port: 80\n  selector: \n    name: wordpress\n  type: LoadBalancer\n```", "```\nkubectl create -f wordpress-service.yaml\n\n```", "```\nkubectl get services\nkubectl describe service wpfrontend\n\n```", "```\nkubectl describe pod wordpress | grep \"Container ID\"\n\n```", "```\nkubectl delete pod wordpress\nkubectl create -f wordpress.yaml\n\n```", "```\nkubectl describe pod wordpress | grep \"Container ID\"\n\n```", "```\nkubectl delete pod wordpress\nkubectl delete pod mysql\nkubectl delete service wpfrontend\nkubectl delete service mysql\n\n```", "```\nkubectl cluster-info\n\n```", "```\ntail -3 ~/.kube/config\n\n```", "```\nkubectl logs wordpress\n\n```", "```\nexport KUBE_AWS_ZONE=eu-west-1c\nexport AWS_S3_REGION=eu-west-1\nexport NUM_NODES=2\nexport KUBERNETES_PROVIDER=aws\n\n```", "```\n./kubernetes/cluster/kube-down.sh\n\n```", "```\ndocker-machine create \\\n --driver digitalocean \\\n --digitalocean-access-token sdnjkjdfgkjb345kjdgljknqwetkjwhgoih314rjkwergoiyu34rjkherglkhrg0 \\\n --digitalocean-region lon1 \\\n --digitalocean-size 1gb \\\n rancher\n\n```", "```\neval $(docker-machine env rancher)\ndocker run -d --restart=always -p 8080:8080 rancher/server\n\n```", "```\ndocker ps\n\n```", "```\ndocker logs -f <name of your container>\n\n```", "```\nopen http://$(docker-machine ip rancher):8080/\n\n```", "```\nps aux\nhostname\ncat /etc/*release\n\n```", "```\nping -c 2 10.42.220.91\n\n```", "```\nsupervisorctl stop nginx\n\n```", "```\nps aux\n\n```", "```\nkill 12 13\n\n```", "```\n<service>.<stack>.<environment>.<hosted zone>\n```", "```\nClusterLoadBalancer:\n  ports:\n  - 80:80\n  tty: true\n  image: rancher/load-balancer-service\n  links:\n  - MyClusterApp:MyClusterApp\n  stdin_open: true\nMyClusterApp:\n  ports:\n  - 60036:80/tcp\n  log_driver: ''\n  labels:\n    io.rancher.scheduler.global: 'true'\n    io.rancher.container.pull_image: always\n  tty: true\n  log_opt: {}\n  image: russmckendrick/cluster\n  stdin_open: true\n```", "```\nClusterLoadBalancer:\n  scale: 1\n  load_balancer_config:\n    haproxy_config: {}\n  health_check:\n    port: 42\n    interval: 2000\n    unhealthy_threshold: 3\n    healthy_threshold: 2\n    response_timeout: 2000\nMyClusterApp:\n  health_check:\n    port: 80\n    interval: 2000\n    initializing_timeout: 60000\n    unhealthy_threshold: 3\n    strategy: recreate\n    request_line: GET \"/index.html\" \"HTTP/1.0\"\n    healthy_threshold: 2\n    response_timeout: 2000\n```"]