- en: Self-Healing Applied To Services
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自我修复应用于服务
- en: The job of a system that self-heals services is to make sure that they are (almost)
    always running according to the design. Such a system needs to monitor the state
    of the cluster and continuously ensure that all the services are running the specified
    number of replicas. If one of them stops, the system should start a new one. If
    a whole node goes does, all the replicas that were running on that node should
    be scheduled to run across the healthy nodes. As long as the capacity of the cluster
    can host all the replicas, such a system should be able to maintain the defined
    specifications.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 自我修复服务的系统的工作就是确保服务（几乎）始终按照设计运行。这样的系统需要监控集群的状态，并持续确保所有服务都在运行指定数量的副本。如果其中一个停止，系统应启动一个新的副本。如果整个节点宕机，该节点上运行的所有副本应该被调度到健康节点上运行。只要集群的容量能够容纳所有副本，系统应该能够保持已定义的规格。
- en: Having a system that self-heals services does not mean that it provides high-availability.
    If a replica stops being operational, the system will bring it back into the running
    state. However, there will be a (very) short period between a failure and until
    the system is restored to the desired state. If we’re running only one replica
    of a service, during that time there will be downtime. The best way to remedy
    this problem is to run at least a couple of replicas of each service. That way,
    when one of them goes down, the others will handle the requests until the failed
    one is restored to its desired state.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有一个自我修复服务的系统并不意味着它提供高可用性。如果一个副本停止工作，系统将把它恢复到运行状态。然而，系统恢复到所需状态之间会有一个（非常）短的时间间隔。如果我们只运行一个副本的服务，那么在这段时间内将会有停机时间。解决这个问题的最佳方法是运行每个服务的至少两个副本。这样，当其中一个副本宕机时，其他副本将处理请求，直到故障副本恢复到所需状态。
- en: Assuming that the conditions of the cluster do not change (nodes do not go down)
    and that the load on the cluster is constant, the system capable of self-healing
    services should provide near 100% up-time. Unfortunately, nodes do go down, and
    the load on the cluster is (almost) never constant. We’ll explore how to remedy
    those problems later. For now, we’ll focus on how to build the part of the system
    that will make sure that the services are healing automatically.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 假设集群的条件保持不变（节点不会宕机）且集群负载保持恒定，具备自我修复服务的系统应该能够提供接近 100% 的正常运行时间。不幸的是，节点确实会宕机，并且集群的负载（几乎）从不恒定。我们稍后将探讨如何解决这些问题。现在，我们将重点关注如何构建系统的部分，以确保服务能够自动修复。
- en: Creating The Cluster And Deploying Services
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 创建集群并部署服务
- en: We’ll start by setting up a Swarm cluster and deploying the stacks that we’ll
    use in this chapter.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从设置一个 Swarm 集群开始，并部署在本章中使用的堆栈。
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
