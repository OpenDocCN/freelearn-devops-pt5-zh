- en: Chapter 15. Implementing JIRA Service Desk
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we will learn how to implement a JIRA Service Desk application
    for taking care of IT help desks and support requests that is not only easy to
    use, but comes with the preconfigured features of a ticketing system out of the
    box. All the support tickets are tracked using a JIRA project, but, it comes with
    a customer portal that makes it really easy to raise requests. Also, JIRA Service
    Desk can be integrated with Confluence and users can easily search for related
    issues while raising new tickets.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Product overview—JIRA Service Desk?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing JIRA Service Desk
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Product overview – JIRA Service Desk?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In [Chapter 1](ch01.html "Chapter 1. Planning Your JIRA Installation"), *Planning
    Your JIRA Installation*, we discussed the new JIRA 7, which was split into three
    separate applications called JIRA Core, JIRA Software, and JIRA Service Desk.
    In [Chapter 6](ch06.html "Chapter 6.  Sample Implementation of Use Cases"), *Sample
    Implementation of Use Cases*, we discussed some sample use cases of JIRA and in
    [Chapter 4](ch04.html "Chapter 4. Customizing JIRA for Test Management"), *Customizing
    JIRA for Test Management*, we also looked at how JIRA can be customized for test
    management. Similarly, JIRA can also be configured for support requests, but in
    that case, only users who have a JIRA account can log in to raise requests. In
    cases where there is a need to have unlimited customers who can create tickets,
    JIRA Service Desk can be used. JIRA Service Desk does not impose any limit on
    the customers and it also comes with the standard features of a typical support
    and ticketing system.
  prefs: []
  type: TYPE_NORMAL
- en: Installing JIRA Service Desk
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In case you only want to use JIRA for support projects, you can download and
    install the JIRA Service Desk application. The procedure to install it is similar
    to that of JIRA Software, which we discussed in [Chapter 1](ch01.html "Chapter 1. Planning
    Your JIRA Installation"), *Planning Your JIRA Installation*. However, if you are
    already using JIRA Core or JIRA Software in your organization, you can still install
    the JIRA Service Desk application over your existing instance. Follow the steps
    mentioned here to install the JIRA Service Desk application on your existing JIRA
    instance:'
  prefs: []
  type: TYPE_NORMAL
- en: Download the latest version of JIRA Service Desk available. You will get a `jira-servicedesk-application-3.1.7.obr`
    file at [https://marketplace.atlassian.com/plugins/com.atlassian.servicedesk.application/versions](https://marketplace.atlassian.com/plugins/com.atlassian.servicedesk.application/versions).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Go to **Administration** | **Applications** | **Versions & licenses**. On this
    screen, you will get the list of all the applications such as JIRA Core and JIRA
    Software that are already installed. Click on the **Upload an application** link
    in the top-right corner and in the **Upload application** popup that appears,
    upload the `jira-servicedesk-application-3.1.7.obr` file that you just downloaded:![Installing
    JIRA Service Desk](img/image_15_001.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: JIRA Service Desk will be installed. You can also generate an evaluation license
    for it. Once the license is installed you will be able to create a new Service
    Desk project:![Installing JIRA Service Desk](img/image_15_002.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Go to the navigation menu at the top of the screen and then click on **Projects**
    | **Create project**. On the **Create project** popup, select **IT Service Desk**
    under **SERVICE DESK** and press the **Next** button to continue:![Installing
    JIRA Service Desk](img/image_15_003.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the **IT Service Desk** popup, enter project **Name** and **Key**, and press
    the **Submit** button to continue:![Installing JIRA Service Desk](img/image_15_004.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A new project with the Service Desk type will be created now. A typical Service
    Desk project will be quite similar to a standard JIRA project, but it comes with
    some additional features:![Installing JIRA Service Desk](img/image_15_005.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the project is created, you will be greeted with a **Welcome guide**,
    which contains several links to Atlassian documentation to get you familiar with
    Service Desk. In the project sidebar there are three tabs: **Queues**, **Customers**,
    and **Reports**. Let us understand each of them.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Queues
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A queue is simply a filtered list of issues based on predefined conditions.
    For instance, there are several queues already defined in your project, such as
    **Unassigned issues**, **Assigned to me**, **Due in 24h**, and more.
  prefs: []
  type: TYPE_NORMAL
- en: 'Queues are somewhat similar to JIRA filters. You can also create your own queues.
    Click on the **New queue** link, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Queues](img/image_15_006.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'On the **New queue** screen, enter **Name** as `In Progress`, and, under **Issues
    to show**, select **Status** as **In Progress**. If you are familiar with JQL
    then click on the **Advanced** link right next to the **Issues to show** section.
    Press the **Create** button to save the queue:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Queues](img/image_15_007.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The queue will now be saved and available in the existing list of **QUEUES**
    in your project.
  prefs: []
  type: TYPE_NORMAL
- en: Customers
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Your Service Desk project is, by default, open for **everyone with an account**
    in your JIRA instance, but we can limit which user or group will be the **Customers**,
    and can raise requests in this project:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Customers](img/image_15_008.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Reports
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The Service Desk project comes with some really good inbuilt reports that will
    help you understand the current progress of your team working on the support project:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Reports](img/image_15_009.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Let us understand the purpose of these reports.
  prefs: []
  type: TYPE_NORMAL
- en: Workload
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This is a simple report that shows the number of requests your team is working
    on right now. It will help you to evenly distribute the workload among your agents.
    The reports display the number of **Issues in progress** for each agent. This
    is an important report, which helps the project lead to evenly distribute the
    work among agents so they are not under- or over-allocated.
  prefs: []
  type: TYPE_NORMAL
- en: SLA goals
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Service Desk comes with **Service Level Agreement** (**SLA**) such as **Time
    to first response** and **Time to resolution**. This report will tell you if your
    team is able to achieve these SLA goals or not. The report displays the percentage
    of successful achievement of the SLA in the last seven days. These reports can
    quickly tell how the team is performing with regard to resolving the issues, which
    are measured by time-bound goals.
  prefs: []
  type: TYPE_NORMAL
- en: Satisfaction
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This report will display the average customer satisfaction level. This helps
    you to understand whether your customers are happy with your service or not. It
    displays an average of the ratings given by users. It is a nice and quick way
    to get general feedback from users and can help to understand their satisfaction
    levels.
  prefs: []
  type: TYPE_NORMAL
- en: Article usage
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: If you have linked a Confluence space with your project, then this report shows
    the number of times articles were viewed and how many customers found those articles
    useful. JIRA Service Desk is closely integrated with Confluence spaces; it provides
    the related articles to the user while they are raising a new request, which might
    be a known issue or a very common request. In such cases, an article in the linked
    Confluence space can help the users self-service themselves.
  prefs: []
  type: TYPE_NORMAL
- en: Article effectiveness
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This report shows the number of issues created by customers versus the number
    of issues customers solved themselves by viewing the articles. Understanding how
    many times users referred to the linked Confluence space articles and helped themselves
    by reading them can give you an idea of the effectiveness of those articles.
  prefs: []
  type: TYPE_NORMAL
- en: Created vs Resolved
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This reports displays the number of issues **Created vs Resolved** for the selected
    duration, such as **Past 7 days**, **Past 14 days**, or **Past 30 days**. A similar
    report is usually present in non-JIRA Service Desk projects too.
  prefs: []
  type: TYPE_NORMAL
- en: Time to resolution
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This report shows how much time is taken to resolve all the issues, along with
    how much time is taken to resolve an issue of a particular type, such as **Incidents**.
  prefs: []
  type: TYPE_NORMAL
- en: Incidents reported by priority
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A count of issues based on individual priorities is displayed in this report.
    It is useful to get a quick glance of the issue count broken up by their priorities,
    such as **Highest**, **High**, **Medium**, **Low**, and **Lowest**.
  prefs: []
  type: TYPE_NORMAL
- en: SLA met vs breached
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A simple count of how many issues achieved their SLA goal versus how many issues
    did not achieve their SLA goals or, in other words, breached. Along with the **SLA
    goals** reports, this report tells you how many tickets in the project were not
    able to achieve their SLA goal.
  prefs: []
  type: TYPE_NORMAL
- en: Customer channels
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'There are two ways customers can raise tickets in the project—**Customer portal**,
    or **Email**. Let us discuss them in detail:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Customer channels](img/image_15_010.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Customer portal
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The most important purpose of the Service Desk application is to focus on support
    requests and ticketing systems to cater to the requests of end users and customers.
    Using JIRA, a simple project can be created to track the issues and access can
    be given to the customers provided there are enough licenses, but, in general,
    the end users may not find it intuitive to log in to an issue tracker to raise
    their requests. Atlassian understood this concern and created the Service Desk
    application with a dedicated **Customer portal**, which is a neat and simple interface
    for raising support requests.
  prefs: []
  type: TYPE_NORMAL
- en: Every Service Desk project will have its own **Customer portal** URL like the
    one mentioned here `http://localhost/servicedesk/customer/portal/1`.
  prefs: []
  type: TYPE_NORMAL
- en: 'You will find this URL when you click on the **Customer channels** tab in the
    project sidebar. The project-specific URL will be displayed in the popup that
    appears,. You can share this URL with your customers, or publish it on your website.
    **Customer portal** offers a simple and intuitive interface to raise the request.
    Let us go through this portal. Open this URL in your web browser:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Customer portal](img/image_15_011.jpg)'
  prefs: []
  type: TYPE_IMG
- en: On the left-hand side, five **Groups** are listed and, under each of them, several
    requests types, such as **Report a system problem**, **Get IT help**, and **Request
    a new account** are grouped. These request types are actually assigned to a specific
    issue type in JIRA. We can create a new request type and map it to any existing
    issue type.
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on **Report a system problem** and it will open a new page with a form
    to raise a request:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Customer portal](img/image_15_012.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'This form is something similar to the one that opens when you click on the
    **Create** button in JIRA, but it is much simpler. Customers can fill in this
    form and click on the **Create** button to raise the request:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Customer portal](img/image_15_013.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Once the request is submitted, a JIRA issue is created with the status **WAITING
    FOR SUPPORT**. Each Service Desk project has its own workflow, just like any other
    JIRA project. The issue will start appearing in the **Queues** of the project.
  prefs: []
  type: TYPE_NORMAL
- en: E-mail
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can configure Service Desk in such a way that your customers can raise tickets
    by simply sending an e-mail to a specific e-mail address. We need to configure
    our project first to enable this functionality.
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on the **Set up email requests** link in the popup that appears when
    you click on the **Customer channels** tab on the project sidebar:'
  prefs: []
  type: TYPE_NORMAL
- en: '![E-mail](img/image_15_014.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'On the next screen, click on the **Add an email address** button:'
  prefs: []
  type: TYPE_NORMAL
- en: '![E-mail](img/image_15_015.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'In the **Set up email channel** popup, enter the details of your e-mail account.
    If you are using a Google apps account, enter **Email address** and **Password**,
    but you can also configure POP- and IMAP-based accounts from the **Other** tab.
    Press the **Next** button to continue:'
  prefs: []
  type: TYPE_NORMAL
- en: '![E-mail](img/image_15_016.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Now you will need to select which request type will be used to create issues
    from e-mail. You can select **Report a system problem** and press the **Done**
    button at the bottom:'
  prefs: []
  type: TYPE_NORMAL
- en: '![E-mail](img/image_15_017.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The e-mail will now be configured for this project. JIRA Service Desk will continuously
    read the specified inbox and whenever there is a new mail, it will copy the e-mail
    subject in the **Summary** field and e-mail content in the **Description** field.
  prefs: []
  type: TYPE_NORMAL
- en: JIRA Service Desk configurations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Service Desk projects are not much different from a standard JIRA project. Internally,
    it is also configured using various schemes for **Issue types**, **Workflows**,
    **Screens**, and **Permissions**. In [Chapter 4](ch04.html "Chapter 4. Customizing
    JIRA for Test Management"), *Customizing JIRA for Test Management*, we discussed
    how to customize the project by modifying these schemes. However, there are certain
    configurations that are specific to a Service Desk-based project.
  prefs: []
  type: TYPE_NORMAL
- en: 'Go to **Project Administration** of your project under the project sidebar
    and just below the **Summary**, you will notice a new set of configurations that
    are not present in a standard JIRA project:'
  prefs: []
  type: TYPE_NORMAL
- en: '![JIRA Service Desk configurations](img/image_15_018.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Let us understand them one by one.
  prefs: []
  type: TYPE_NORMAL
- en: Request types
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Earlier in this chapter, we discussed how the **Customer** portal is a simple
    interface for end users. They get to choose the different types of request, which
    are internally mapped to a specific issue type. Under this section, you can create
    a new request type and also modify the existing ones:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Request types](img/image_15_019.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Enter a **Request name**, such as `Hardware problem`, select **Issue type**
    as **Problem**, and enter text in **Groups** as `6\. Miscellaneous`. Then press
    the **Add** button. Now, if you go back to your **Customer portal**, there will
    be a new request type added, but it will only contain the **Summary** field. Let
    us now add a few more fields to this request type:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Request types](img/image_15_020.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Click on the **Edit fields** link corresponding to the request type you want
    to modify:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Request types](img/image_15_021.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Now click on the **Add a field** button in the top-right corner of the screen:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Request types](img/image_15_022.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'In the **Add a field** popup, select the fields that you want to add and click
    the **Apply** button:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Request types](img/image_15_023.jpg)'
  prefs: []
  type: TYPE_IMG
- en: The fields will now be added and will be visible to the end user on the **Customer
    portal**. You can also add a custom field in your JIRA instance and add it to
    the screen associated with the project. It will then be available for you to add
    to the request types.
  prefs: []
  type: TYPE_NORMAL
- en: Request security
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'You can control who can raise a support request on your Service Desk project:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Request security](img/image_15_024.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'As you can see in the preceding screenshot, you have three options to select
    from:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Anyone can sign up for a customer account on my Customer Portal**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Only people who have an account can raise a request**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Only people on my customers list can raise a request**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Select the option that is most suitable for your project and click on the **Save**
    button.
  prefs: []
  type: TYPE_NORMAL
- en: To add the users to your customer list, go to the **Users and roles** of your
    project and add the user to the **SERVICE DESK CUSTOMERS** project role.
  prefs: []
  type: TYPE_NORMAL
- en: Portal settings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'In this section, you can change the **Name** of your **Customer portal**, which
    is, by default, the same as your project name. You can also upload a custom logo:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Portal settings](img/image_15_025.jpg)'
  prefs: []
  type: TYPE_IMG
- en: It is also possible to give an **Announcement** to the users, which will be
    displayed at the top of your **Customer portal**.
  prefs: []
  type: TYPE_NORMAL
- en: Satisfaction settings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In the Service Desk project, your customers can give feedback. This will help
    you understand their satisfaction levels. Under this section, you can enable or
    disable this feature.
  prefs: []
  type: TYPE_NORMAL
- en: E-mail requests
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Your customers can raise a request by either visiting the **Customer portal**,
    or by sending an e-mail to the address that you specify. We discussed how to configure
    it in the previous section on **Customer channels**.
  prefs: []
  type: TYPE_NORMAL
- en: Knowledge base
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Service Desk projects can be integrated with a Confluence space. This is
    useful because, when a customer raises a request through the **Customer portal**,
    they can be presented with the related pages on Confluence. Customers can then
    go through those related pages and can potentially solve their problem without
    the need to raise a request.
  prefs: []
  type: TYPE_NORMAL
- en: 'To configure the **Knowledge base**, an application link has first to be added
    between JIRA and Confluence. [Chapter 16](ch16.html "Chapter 16. Integrating JIRA
    with Common Atlassian Applications and Other Tools"), *Integrating JIRA with Common
    Atlassian Applications and Other Tools*, has detailed information on adding an
    application link. Let us take a look at how to link a Confluence space with our
    project:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Knowledge base](img/image_15_026.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Under the **Link a Confluence space** section, select the **Link to a Confluence
    space** radio button. Then, under the **Application** drop-down, select **Confluence**
    and finally, under the **Space** drop-down, select the name of the Confluence
    space and click on the **Link** button.
  prefs: []
  type: TYPE_NORMAL
- en: SLAs
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Service Desk projects comes with the following SLAs:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Time to resolution**: This is the time taken from creation to resolution
    of the issue'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Time to first response**: This is the time taken from creation to changing
    the status of the issue to **Waiting for customer**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'We can also create our own SLA, such as `Time to Assign`. Follow the procedure
    mentioned in the following steps to create a new SLA in your project:'
  prefs: []
  type: TYPE_NORMAL
- en: '![SLAs](img/image_15_027.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Click on the **New Metric** link on the left-hand side.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the **New Metric** screen, enter the **Name** of the metric.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the **Start** time, when the count will begin.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the **Stop** time, when the count will finish.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Under the **Goals** section, enter the **Goal** as `4h` for **All remaining
    issues** and click the **Update** button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Finally, click the **Create** button at the top of the screen to save the new
    SLA.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The new SLA will be reflected in all existing and new issues in your project.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Automation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Service Desk projects come with a nifty utility to add some automation tasks
    to the project. This utility is useful to assist the team in performing some recurring
    tasks, and also to enforce some policies.
  prefs: []
  type: TYPE_NORMAL
- en: 'For instance, we just added a new SLA: **Time to Assign**, where an issue is
    assigned to an agent within 4 hours of its creation. We can actually post a comment
    on the request when only 60 minutes are remaining in this SLA. This comment would
    be visible only to the existing agents assigned on this project.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow the procedure given to add a new rule:'
  prefs: []
  type: TYPE_NORMAL
- en: Click on the **Add rule** button in the top-right corner:![Automation](img/image_15_028.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the **New automation rule** popup, select **Custom rule** and press the **Next**
    button to continue:![Automation](img/image_15_029.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the next screen, enter the name, such as `Alert user`, in the first text
    box. We now have to **Add a trigger** under the **WHEN** box and we also have
    to **Add an action** under the **THEN** box.![Automation](img/image_15_030.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Add a trigger** link and in the **Edit WHEN** popup that appears,
    again click on the **Add trigger** link. Then select **SLA time remaining** and
    click the **Add** button:![Automation](img/image_15_031.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the **SLA** drop-down, select **Time to Assign** and, in **Event**, select
    **Due soon (60 min remaining)**. Press the **Confirm** button to save the trigger.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now click on the **Add an action** link and, in the **Edit THEN** popup that
    appears, again click on the **Add action** link. Then select **Add comment** and
    click the **Add** button:![Automation](img/image_15_032.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter a **Comment text**, select **Comment type**, and press the **Confirm**
    button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We have now added a new rule that will post an internal comment on the issue
    when the SLA is due in the next 60 minutes.
  prefs: []
  type: TYPE_NORMAL
- en: Adding users as agents
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Service Desk license doesn't impose any limit on the number of customers
    but instead limits the number of users that can act as an agent on the project.
    The requests can only be assigned to an agent, and only they can communicate with
    the customers.
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow the steps given here to add users as agents in your project:'
  prefs: []
  type: TYPE_NORMAL
- en: To make a user an agent, first add them in the **jira-servicedesk-users**, which
    should be assigned to the **JIRA Service Desk** application under the **Application
    access** section.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Then go to **Project administration** | **Users and roles**, and add that user
    in the project role **Service Desk Team**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Finally, check your permission scheme. The **Service Desk Agent** permission
    should be given to the **Service Desk Team** project role.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we have learned how to create and use a Service Desk project,
    which is now one of the most important applications for support projects from
    Atlassian. This application comes with really nice built-in features that get
    you started in no time. We also learned various configurations of Service Desk
    to get the most out of this go-to application for support projects.
  prefs: []
  type: TYPE_NORMAL
- en: In the following chapter, we will take a look at various integrations of JIRA
    with common Atlassian applications, and other tools that help at various stages
    of the **software development life cycle** (**SDLC**).
  prefs: []
  type: TYPE_NORMAL
