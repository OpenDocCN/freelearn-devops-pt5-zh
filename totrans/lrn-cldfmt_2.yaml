- en: Building Your First AWS CloudFormation Project
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We can build various infrastructure models using AWS CloudFormation. We can
    add, update, and delete AWS resources in our infrastructure design as IaC and
    then deploy our IaC scripts to AWS CloudFormation. In this section, we will build
    a simple project to show how to develop IaC using AWS CloudFormation.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following topics will be covered in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Preparing a project
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CloudFormation implementation using the management console
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CloudFormation implementation using the AWS CLI
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Managing an AWS CloudFormation project
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CloudFormation project scenario
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous chapter, we learned what AWS CloudFormation is. In this chapter,
    we continue our exploration of AWS CloudFormation. We will focus on how to build
    a simple IaC using CloudFormation.
  prefs: []
  type: TYPE_NORMAL
- en: 'To minimize problem complexity, we will use a simple AWS resource such as Amazon
    S3, and create a bucket in Amazon S3 through CloudFormation. To build a CloudFormation
    project, we will follow the steps shown in the following diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00014.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.1: Project steps for deploying AWS CloudFormation'
  prefs: []
  type: TYPE_NORMAL
- en: 'The preceding diagram shows how to build and deploy a CloudFormation project.
    In this scenario, we will use a CloudFormation stack to build an IaC design. The
    steps are explained as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Build IaC scripts in a CloudFormation template to define the AWS resources that
    are used to build an infrastructure
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Upload the template file to the CloudFormation server
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a CloudFormation stack
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Configure all options from the CloudFormation stack
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Review all settings before deploying to the CloudFormation server
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Deploy a CloudFormation stack
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We will apply these steps to our CloudFormation project. Each step will be executed
    in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Preparation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Technically, we don't need any special preparation. You should have an active
    AWS account in order to build CloudFormation projects, and you also need an internet
    connection since we build and manage AWS through the internet network.
  prefs: []
  type: TYPE_NORMAL
- en: Lastly, you should be aware of pricing. Currently, CloudFormation is free, but
    the AWS resources used in a CloudFormation project are probably chargeable. Some
    AWS resources are free with certain limitations.
  prefs: []
  type: TYPE_NORMAL
- en: Implementing a CloudFormation project using the management console
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this section, we are going to build our first CloudFormation project graphically
    through the CloudFormation management console. Follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Open a browser and navigate to [https://console.aws.amazon.com/cloudformation](https://console.aws.amazon.com/cloudformation).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Log in with your active AWS account. After successful login, you should get
    the AWS CloudFormation management console, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00015.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.2: AWS CloudFormation management console'
  prefs: []
  type: TYPE_NORMAL
- en: To start creating a simple CloudFormation project, first create a stack.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the Create new stack button, shown in *Figure 2.2*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You should now see the screen shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00016.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.3: Selecting a template for CloudFormation'
  prefs: []
  type: TYPE_NORMAL
- en: From the screen shown in the preceding screenshot, upload a CloudFormation template
    file. You can upload the template file or create a template using the Design template
    option. If you have a CloudFormation template file that has already been uploaded
    to Amazon S3, you can specify the file path from Amazon S3.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: For this demo, we uploaded a CloudFormation template file from local to Amazon
    S3\. The template file is in JSON and YAML file formats.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, we can create a template file in JSON and YAML. You can select a template
    file in JSON (`hello-cloudformation.json`) or YAML (`hello-cloudformation.yaml`).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The following is the content of the `hello-cloudformation.json` file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'The following is the content of the `hello-cloudformation.yaml` file:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: After creating a CloudFormation template file in JSON or YAML, you can upload
    it to the CloudFormation management console.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the Upload a template to Amazon S3 option shown in *Figure 2.3*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Then, click on the Choose File option to select your template file from the
    local computer.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Wait until your template file is uploaded to Amazon S3.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After it is uploaded, click on the Next button to continue the steps of the
    project.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You should now see the screen shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00017.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.4: Adding a stack name'
  prefs: []
  type: TYPE_NORMAL
- en: Fill in your stack name. This is used for stack identity in CloudFormation.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After you have filled in the stack name, click on the Next button to continue.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You will see the following screenshot for configuring stack options such as
    tags and permissions:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00018.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.5: Configuring stack options'
  prefs: []
  type: TYPE_NORMAL
- en: In this demo, we won't configure any options in the CloudFormation stack. We
    can skip this step. Click on the Next button to continue.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You can now see the review screen, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00019.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.6: Confirmation before executing and deploying to Amazon AWS'
  prefs: []
  type: TYPE_NORMAL
- en: Review all the information that you have set.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once done, click on the Create button to execute your template and then deploy
    all the resources from the predefined template to Amazon AWS. Your browser should
    be redirected to the CloudFormation dashboard. You should now see the status of
    the stack being created, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00020.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.7: A stack being created in CloudFormation'
  prefs: []
  type: TYPE_NORMAL
- en: If you want to get an update on the progress of the creation, click on the circle-arrow
    at the top right.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the process is done, you should see it in the Status column, in the list
    shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00021.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.8: A stack was completely created'
  prefs: []
  type: TYPE_NORMAL
- en: If you want to see the details of your created stack, you can click on your
    stack name, as shown in the preceding screenshot.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Then, you will see details from the selected CloudFormation stack. The following
    screenshot shows an example of a detailed stack:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00022.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.9: Getting details from the stack'
  prefs: []
  type: TYPE_NORMAL
- en: AWS CloudFormation creates all the resources that you have already defined in
    the template file.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In our demo, we create Amazon S3\. We can verify it by opening the Amazon S3
    management console at [https://console.aws-amazon.com/s3](https://console.aws-amazon.com/s3).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'On the Amazon S3 management console, you should see a bucket with the name
    that is defined in your CloudFormation stack, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00023.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.10: A S3 bucket was created in AWS CloudFormation'
  prefs: []
  type: TYPE_NORMAL
- en: This is the end of the section on how to build AWS CloudFormation graphically
    through the CloudFormation management console.
  prefs: []
  type: TYPE_NORMAL
- en: Next, we will work through a similar scenario using the AWS CLI.
  prefs: []
  type: TYPE_NORMAL
- en: Implementing a CloudFormation project using the AWS CLI
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we'll explore how to work with the AWS CLI on CloudFormation.
    In the previous section, we built and deployed CloudFormation graphically through
    the CloudFormation management console. We will perform a similar action to build
    and deploy CloudFormation using the AWS CLI.
  prefs: []
  type: TYPE_NORMAL
- en: Let's explore!
  prefs: []
  type: TYPE_NORMAL
- en: Setting up the AWS Command Line Interface (CLI)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The AWS CLI is a tool from Amazon for managing Amazon AWS in Terminal mode.
    We manage all AWS resources from this Terminal. This tool supports Windows, Linux,
    and macOS. If you work with the Windows platform, you can download this tool from
    the following website, selecting your Windows version:'
  prefs: []
  type: TYPE_NORMAL
- en: Windows 64-bit: [https://s3.amazonaws.com/aws-cli/AWSCLI64.msi](https://s3.amazonaws.com/aws-cli/AWSCLI64.msi)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Windows 32-bit: [https://s3.amazonaws.com/aws-cli/AWSCLI32.msi](https://s3.amazonaws.com/aws-cli/AWSCLI32.msi)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'For Linux and Mac, you can install the AWS CLI through `pip` with the Python
    runtime. Type the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'If you want to upgrade your AWS CLI through `pip`, type the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'If you have installed or upgraded the CLI already, you can verify AWS CLI by
    checking its version. Type the following command in the Terminal:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'You should see the AWS CLI version. For instance, you can see my AWS CLI version
    in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00024.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.11: Checking the AWS CLI version'
  prefs: []
  type: TYPE_NORMAL
- en: 'To configure the AWS CLI with your current AWS account, type the following
    command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: You should prepare all the required access and secret keys. I recommend reading
    the guidelines on this at [https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-getting-started.html](https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-getting-started.html).
  prefs: []
  type: TYPE_NORMAL
- en: The next step is to configure security access on the AWS CLI to enable working
    with CloudFormation.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring security access for CloudFormation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To work with CloudFormation from the AWS CLI, we need to configure our security
    access and rights. In this demo, we will build and deploy CloudFormation with
    Amazon S3, so we need to configure security settings for CloudFormation and Amazon
    S3 on the AWS CLI.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are the steps for adding security access to CloudFormation and
    Amazon S3:'
  prefs: []
  type: TYPE_NORMAL
- en: Open a browser and navigate to the AWS IAM management console at [https://console.aws.amazon.com/iam](https://console.aws.amazon.com/iam).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once you''re at the IAM management console, click on the Policies option in
    the left-hand menu. You should see the screen shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00025.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.12: Add a new policy for CloudFormation'
  prefs: []
  type: TYPE_NORMAL
- en: Now, create a custom policy for CloudFormation.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Create policy, which is indicated by the arrow in *Figure 2.12*. Then,
    you should have a policy form, as shown in *Figure 2.13*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'We will add policy scripts in JSON format, so click on the JSON tab on the
    creation form, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00026.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 2.13: Adding a policy to access CloudFormation resources
  prefs: []
  type: TYPE_NORMAL
- en: 'In this scenario, we give full access to CloudFormation. You can write these
    scripts and paste them to the JSON tab shown in *Figure 2.13*:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Once you have pasted the scripts, you can click on the Review policy button
    and you should see the form shown in *Figure 2.14*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Fill in the name and description of your policy. For instance, the name of
    the review policy in the following screenshot is `AWSCloudFormationLRW`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00027.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.14: Fill in the policy name and description'
  prefs: []
  type: TYPE_NORMAL
- en: Once done, click on Create policy to start creating a policy. Now, we continue
    by adding that policy to our account.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the Users section in the menu on the left and select the user account
    that is used in the AWS CLI.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In the Summary section of your IAM user, you should have the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00028.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.15: Adding a policy to a user'
  prefs: []
  type: TYPE_NORMAL
- en: To add your own policy to your IAM account, click on Add permissions on the
    Permissions tab; see *Figure 2.15*. You should then see the screen shown in *Figure
    2.16*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the Attach existing policies directly option in the Grant permissions
    section and type your policy name, for instance, `AWSCloudFormationLRW`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'You should see your own policy. Click on it, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00029.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.16: Adding permissions from your own policy'
  prefs: []
  type: TYPE_NORMAL
- en: After selecting your policy, click on Next:Review at the bottom. Now you should
    see the form shown in *Figure 2.17*.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once done, click on Add permissions to add that policy to your IAM account:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00030.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.17: Confirmation of adding permission'
  prefs: []
  type: TYPE_NORMAL
- en: Now, your IAM user has a CloudFormation policy with full access.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Using the same approach, we also need to add the AmazonS3FullAccess policy to
    your IAM account.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Add an existing policy with AmazonS3FullAccess, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00031.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.18: Adding the AmazonS3FullAccess policy to a user'
  prefs: []
  type: TYPE_NORMAL
- en: Select the AmazonS3FullAccess policy and then add it to your IAM user.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once done, your IAM should have CloudFormation and AmazonS3FullAccess policies,
    as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00032.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.19: CloudFormation and Amazon S3 policies have been added'
  prefs: []
  type: TYPE_NORMAL
- en: Now, your IAM user has CloudFormation and AmazonS3FullAccess policies. Now,
    you can manage CloudFormation from the AWS CLI.
  prefs: []
  type: TYPE_NORMAL
- en: The next step is to build CloudFormation and then deploy it to AWS CloudFormation.
  prefs: []
  type: TYPE_NORMAL
- en: Building and deploying CloudFormation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we will use the AWS CLI to deploy AWS CloudFormation. To work
    with CloudFormation in the AWS CLI, we need to know some CloudFormation commands.
    You can find all the commands for CloudFormation at [https://docs.aws.amazon.com/cli/latest/reference/cloudformation/index.html](https://docs.aws.amazon.com/cli/latest/reference/cloudformation/index.html).
  prefs: []
  type: TYPE_NORMAL
- en: We will use the same template as in the first demo, `hello-cloudformation.json`.
    We will upload this template to CloudFormation and then deploy it.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now open the Terminal and navigate to the directory where `hello-cloudformation.json`
    is located. To create a stack, we can use the `cloudformation create-stack` command.
    Type the following command to upload the template and create a stack:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'The preceding command is explained as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`--stack-name mystackcli1`: This defines the stack name. In this case, the
    stack name is `mystackcli1`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--template-body file://./hello-cloudformation.json`: This is a template file.
    You should use `file://` with the full template file path. In this demo, Terminal
    has already been navigated to a directory where the `./hello-cloudformation.json` file
    is located.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--debug`: This is a parameter to enable verbosity so we can see all the verbose
    messages from the CLI.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For information about the CloudFormation `create-stack` command, I recommend
    you read the document at: [https://docs.aws.amazon.com/cli/latest/reference/cloudformation/create-stack.html](https://docs.aws.amazon.com/cli/latest/reference/cloudformation/create-stack.html).
  prefs: []
  type: TYPE_NORMAL
- en: 'If this operation is executed successfully, you should get StackId on the Terminal.
    You can see my program output in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00033.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.20: Creating a CloudFormation solution using the AWS CLI'
  prefs: []
  type: TYPE_NORMAL
- en: 'To verify your operation is complete, you can use the `list-stacks` command
    from the CloudFormation CLI. For further information about the `list-stacks` command,
    go to [https://docs.aws.amazon.com/cli/latest/reference/cloudformation/list-stacks.html](https://docs.aws.amazon.com/cli/latest/reference/cloudformation/list-stacks.html).
    Now, type the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'You should see a status from the stack operation, as you can see in the following
    screenshot, for example. A stack status can be found in the StackStatus option,
    which is indicated by the rectangle:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00034.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.21: Showing all CloudFormation stacks from the CLI'
  prefs: []
  type: TYPE_NORMAL
- en: 'We can also find out stack details using the `describe-stacks` command by passing
    in the stack name. Information about the `describe-stacks` command can be found
    at [https://docs.aws.amazon.com/cli/latest/reference/cloudformation/describe-stacks.html](https://docs.aws.amazon.com/cli/latest/reference/cloudformation/describe-stacks.html).
    For the demo, I want to see the details of the stack with the name `mystackcli1`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'After execution, you should see the stack status in the StackStatus option,
    as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00035.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.22: Checking the stack status through the CLI'
  prefs: []
  type: TYPE_NORMAL
- en: 'If the status of the stack is CREATE_COMPLETE, stack creation has succeeded.
    You can verify this on the CloudFormation management console. Select the region
    used by your AWS CLI. The following screenshot shows that my stack was created
    by the AWS CLI:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00036.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.23: A CloudFormation stack has been created from the AWS CLI'
  prefs: []
  type: TYPE_NORMAL
- en: This is the end of the section on how to create a CloudFormation stack using
    the AWS CLI. Next, we will modify an existing CloudFormation stack.
  prefs: []
  type: TYPE_NORMAL
- en: Editing a CloudFormation project
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we will update our CloudFormation project. For a simple update
    scenario, we will modify a bucket name from Amazon S3\. We will modify the CloudFormation
    template and then apply this template to the CloudFormation server.
  prefs: []
  type: TYPE_NORMAL
- en: We will perform project updates using the CloudFormation management console
    and the AWS CLI. Each method will be explained in the next section.
  prefs: []
  type: TYPE_NORMAL
- en: Editing CloudFormation using the management console
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We will modify an existing CloudFormation stack. For a simple scenario, we will
    change a bucket title on Amazon S3\. We will use the modified template file, `hello-cloudformation-v2.json`,
    from the previous demo.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are the steps for modifying an existing stack using the CloudFormation
    management console:'
  prefs: []
  type: TYPE_NORMAL
- en: Open a browser and navigate to AWS CloudFormation at [https://console.aws.amazon.com/cloudformation/](https://console.aws.amazon.com/cloudformation/).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: On the AWS CloudFormation dashboard, select the stack that you want to modify.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Then, click on Actions and select the Update Stack option from the sub-menu.
    You can see this in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00037.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.24: Editing a selected stack in the CloudFormation management console'
  prefs: []
  type: TYPE_NORMAL
- en: After selecting a stack for editing, select the Upload a template to Amazon
    S3 option.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on the Next button to read the CloudFormation template. You should now
    see the following screen:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00038.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.25: Uploading an updated template'
  prefs: []
  type: TYPE_NORMAL
- en: Upload the updated template, for instance, `hello-cloudformation-v2.json`. When
    done, click on the Next button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: CloudFormation will check your template. If the content of the template file
    is similar, CloudFormation will not perform the next process.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'If there is a change, CloudFormation will continue the process. You should
    see the screen shown in *Figure 2.26*. We can''t change the stack name. Now, click
    on the Next button:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00039.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.26: Showing a stack for updating'
  prefs: []
  type: TYPE_NORMAL
- en: 'You should now see the screen shown in *Figure 2.27*. Change your stack options
    and click on the Next button:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00040.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.27: Setting options for a stack'
  prefs: []
  type: TYPE_NORMAL
- en: 'You should now see the review screen, as shown in *Figure 2.28*. Check all
    your changes and click on Update to deploy the changes to CloudFormation:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00041.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.28: Reviewing all changes before deploying'
  prefs: []
  type: TYPE_NORMAL
- en: CloudFormation will apply all changes to your stack. You can see the progress
    of the process in the Status column on the Stacks dashboard.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once done, you should see UPDATE_COMPLETE in the Status column, as shown in
    the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00042.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.29: Stack update is complete'
  prefs: []
  type: TYPE_NORMAL
- en: This is the end of the section on editing a CloudFormation stack using the management
    console. Next, we will perform the same process using the AWS CLI.
  prefs: []
  type: TYPE_NORMAL
- en: Editing CloudFormation using the AWS CLI
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we will focus on editing an existing CloudFormation stack using
    the AWS CLI. We have the modified template file, `hello-cloudformation-v2.json`.
    We will update an existing CloudFormation stack by replacing it with the `hello-cloudformation-v2.json`
    file.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now open the Terminal and navigate to the directory where `hello-cloudformation-v2.json`
    is located. To update a stack, we can use `cloudformation update-stack`. Type
    the following command to upload the template and create a stack:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'The preceding command is explained as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`--stack-name mystackcli1`: This is the stack that will be updated. In this
    case, the stack name is `mystackcli1`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--template-body file://./hello-cloudformation-v2.json`: This is a changed
    template file. You should use `file://` with the full template file path. In this
    demo, Terminal has already been navigated to the directory where the `./hello-cloudformation-v2.json` file
    is located.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--debug`: This is a parameter to enable verbosity, so we can see all verbose
    messages from the CLI.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For further information about the CloudFormation `update-stack` command, I recommend
    reading the document at [https://docs.aws.amazon.com/cli/latest/reference/cloudformation/update-stack.html](https://docs.aws.amazon.com/cli/latest/reference/cloudformation/update-stack.html).
  prefs: []
  type: TYPE_NORMAL
- en: 'If this operation is executed successfully, you can check the current operation
    status using the `describe-stacks` command. Type the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'You should see the status of the StackStatus option, as shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00043.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.30: Editing a CloudFormation stack from the CLI'
  prefs: []
  type: TYPE_NORMAL
- en: If successful, you should see the changes on CloudFormation and the AWS resources
    that you have modified.
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we will learn how to delete an existing CloudFormation
    project.
  prefs: []
  type: TYPE_NORMAL
- en: Deleting a CloudFormation project
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you don't use a CloudFormation stack, you can remove it from CloudFormation.
    Since you are probably charged for all of the AWS resources that you use, I recommend
    removing all resources related to the CloudFormation stack. We can also remove
    a CloudFormation stack because of a design error in IaC. Removing a CloudFormation
    stack will delete all the resources related to that stack.
  prefs: []
  type: TYPE_NORMAL
- en: In this section, we will learn how to remove a CloudFormation stack using the
    management console and the AWS CLI.
  prefs: []
  type: TYPE_NORMAL
- en: Deleting CloudFormation using the management console
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you want to delete your CloudFormation stack, you can visit the CloudFormation
    management console, where you should see your CloudFormation stacks.
  prefs: []
  type: TYPE_NORMAL
- en: 'To remove a CloudFormation stack, select the stack to be removed. Then, click
    on Actions and you should see the menu shown in the following screenshot. Select
    the Delete Stack option to delete the selected stack:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00044.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.31: Deleting a stack'
  prefs: []
  type: TYPE_NORMAL
- en: 'After selecting the Delete Stack option from the menu, you should see a confirmation
    dialog, as shown in the following screenshot. Click on Yes, Delete to continue
    the deletion of the stack:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00045.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.32: Confirmation for deleting a stack'
  prefs: []
  type: TYPE_NORMAL
- en: Once done, your CloudFormation stack is deleted, including all the AWS resources
    that were used in your stack.
  prefs: []
  type: TYPE_NORMAL
- en: Next, we will perform this operation through the AWS CLI.
  prefs: []
  type: TYPE_NORMAL
- en: Deleting CloudFormation Stack using the AWS CLI
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you prefer to delete a CloudFormation stack through the AWS CLI, you can
    use `delete-stack` from CloudFormation. You can find this command at [https://docs.aws.amazon.com/cli/latest/reference/cloudformation/delete-stack.html](https://docs.aws.amazon.com/cli/latest/reference/cloudformation/delete-stack.html).
  prefs: []
  type: TYPE_NORMAL
- en: 'To delete a CloudFormation stack, you can use the `delete-stack` command by
    passing in your stack name. For instance, to delete the CloudFormation stack named `mystackcli1`,
    type the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'If you want to get a verbose message, you can add the  `--debug` parameter
    to the command. My program output can be seen in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00046.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.33: Deleting a stack from the CLI'
  prefs: []
  type: TYPE_NORMAL
- en: 'To verify your deleted stack, you can use the `describe-stacks` command by
    passing in your stack name. For instance, for the stack name `mystackcli1`, type
    the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'A sample of the program output can be seen in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00047.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.34: Checking a stack and the deletion process status from the CLI'
  prefs: []
  type: TYPE_NORMAL
- en: We have now reached the end of this chapter, having learned how to build and
    deploy a CloudFormation project on Amazon AWS.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We learned how to build a simple CloudFormation project utilizing Amazon S3\.
    We built a CloudFormation project using the CloudFormation management console
    and the AWS CLI. The demo operations included creating, editing, and deleting.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will learn how to build AWS CloudFormation templates.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What is a CloudFormation stack?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What are the benefits of building CloudFormation using the management console?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What are the advantages of building CloudFormation using the AWS CLI?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
