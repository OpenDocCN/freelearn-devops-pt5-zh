- en: Robust Networking Implementations
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous chapter, we covered the serverless and microservices objectives.
    We covered how to design serverless computing and which features Azure provides
    for creating them. We also covered microservices-based solutions, and the differences
    between all the different Azure features and when to use them.
  prefs: []
  type: TYPE_NORMAL
- en: This chapter introduces the networking objectives. It starts with how to design
    Azure Virtual Networks. This consists of designing solutions that use Azure networking
    services, such as designs for load balancing using Azure Load Balancer and Azure
    Traffic Manager, defining DNS, DHCP, and IP strategies, determining when to use
    Azure Application Gateway, and when to use multi-node application gateways, Traffic
    Manager, and Load Balancers.
  prefs: []
  type: TYPE_NORMAL
- en: After that, it covers designing external connectivity for Azure Virtual Networks.
    In this chapter, you will learn how to determine when to use Azure VPN, ExpressRoute,
    virtual network peering architecture, when to use **User Defined Routes** (**UDRs**),
    and when to use VPN gateway site-to-site failover for ExpressRoute.
  prefs: []
  type: TYPE_NORMAL
- en: Lastly, this chapter covers how to design security strategies by determining
    when to use network virtual appliances, how to design a perimeter network (DMZ),
    and determine when to use a **Web Application Firewall** (**WAF**), **Network
    Security Group** (**NSG**), and virtual network service tunneling.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following topics will be covered in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Designing Azure Virtual Networks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When to use Azure Application Gateway
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When to use multi-node application gateways, Azure Traffic Manager, and Load
    Balancers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Designing external connectivity for Azure Virtual Networks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Designing security strategies
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This chapter uses the following tools for the examples:'
  prefs: []
  type: TYPE_NORMAL
- en: Azure PowerShell: [https://docs.microsoft.com/en-us/powershell/azure/install-azurerm-ps?view=azurermps-5.1.1](https://docs.microsoft.com/en-us/powershell/azure/install-azurerm-ps?view=azurermps-5.1.1)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The source code for this chapter can be downloaded here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://github.com/SjoukjeZaal/AzureArchitectureBook/tree/master/Chapter%205](https://github.com/SjoukjeZaal/AzureArchitectureBook/tree/master/Chapter%205)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Azure Virtual Network
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: An **Azure Virtual Network** (**VNet**) is a virtual representation of a traditional
    network, hosted in the cloud. It is totally software-based, where traditional
    networks use cables, routers, and more. VNets provide a secure and isolated environment
    and they connect Azure resources with each other. By default, the different resources
    are not reachable from outside of the virtual network. You can, however, connect
    multiple VNets to each other or connect a VNet to your on-premises network as
    well. All the Azure resources that are connected inside the same VNet must reside
    in the same region and subscription.
  prefs: []
  type: TYPE_NORMAL
- en: When you create a VNet, one subnet is automatically created as well. You can
    create multiple subnets inside the same VNet (there is a maximum of 1000 subnets
    allowed per VNet). Connecting multiple VNets to each other is called **virtual
    network peering**. There is a maximum of 10 peerings allowed per Azure subscription.
  prefs: []
  type: TYPE_NORMAL
- en: The smallest subnet that can be used in Azure is the /29 subnet, which consists
    of eight addresses and the largest is /8, which consists of 16 million addresses.
  prefs: []
  type: TYPE_NORMAL
- en: For more information on subnetting, you can refer to the Subnet Mask Cheat Sheet: [https://www.aelius.com/njh/subnet_sheet.html](https://www.aelius.com/njh/subnet_sheet.html).
  prefs: []
  type: TYPE_NORMAL
- en: IP addresses
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A virtual network in Azure can have private and public IP addresses. Private
    IP addresses are only accessible from within the virtual network and public IP
    addresses can be accessed from the internet as well. You can access private IP
    addresses from a VPN Gateway or an ExpressRoute connection. Both private and public
    IP addresses can be static or dynamic, but when you create a new VNet, the IP
    address is static by default. You can change the IP address to static from the
    Azure Portal, PowerShell, and CLI.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/bb8a5384-a8a3-4dff-958c-d8a7df199da1.png)'
  prefs: []
  type: TYPE_IMG
- en: Dynamic and static IP address configuration in the Azure Portal
  prefs: []
  type: TYPE_NORMAL
- en: '**Dynamic**: Dynamic IP addresses are assigned by Azure automatically and are
    selected from the configured subnet''s address range from the virtual network
    where the Azure resource resides. The IP address is assigned to the Azure resource
    upon creation or start. The IP address will then be released when the resource
    is stopped and deallocated (when you stop the VM from the Azure Portal, the VM
    is deallocated automatically as well) and added back to the pool of available
    addresses inside the subnet by Azure.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Static**: Static IP addresses (private and public) are pre-assigned and will
    remain the same until you delete the assignment. You can select a static private
    IP address manually. They can only be assigned to non-internet facing connections,
    such as an internal Load Balancer. You can assign a private IP address to a connection
    to your on-premises network or to an ExpressRoute circuit as well. Public static
    IP addresses are created by Azure automatically and they can be assigned to internet
    facing connections, such as an external Load Balancer.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Public IP address
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Public IP addresses can be used for internal communication between Azure services
    and external communication over the internet. You can use IPv4 and IPv6 for public
    IP addresses, but the support for IPv6 is limited. At the time of writing, you
    can only assign IPv6 addresses to external Load Balancers.
  prefs: []
  type: TYPE_NORMAL
- en: Azure assigns the public IP address to the network interface when the Azure
    resource is started or created. When a outbound connection is initiated, Azure
    will map the private IP address to the public IP address (SNAT). Return traffic
    to the resource is allowed as well.
  prefs: []
  type: TYPE_NORMAL
- en: Public IP addresses are typically used for VMs, internet-facing Load Balancers,
    VPN gateways, and application gateways. There is a maximum of 60 dynamic public
    IP addresses and 20 static public IP addresses per subscription. The first five
    static IP address are free, the rest have a cost.
  prefs: []
  type: TYPE_NORMAL
- en: The following document is beyond the scope of this book, but definitely interesting—*Understanding
    outbound connections in Azure*: [https://docs.microsoft.com/en-us/azure/load-balancer/load-balancer-outbound-connections?toc=%2fazure%2fvirtual-network%2ftoc.json](https://docs.microsoft.com/en-us/azure/load-balancer/load-balancer-outbound-connections?toc=%2fazure%2fvirtual-network%2ftoc.json).
  prefs: []
  type: TYPE_NORMAL
- en: Private IP address
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Private IP addresses support IPv4 and IPv6 as well, but support for IPv6 is
    also limited. They can only be assigned dynamically and IPv6 addresses cannot
    communicate with each other inside a VNet. The only way to use IPv6 addresses
    is by assigning them to an internet-facing Load Balancer, where the frontend IP
    address is an IPv4 address and the backend is an IPV6 address.
  prefs: []
  type: TYPE_NORMAL
- en: Private IP addresses are typically used for VMs, internal Load Balancers, and
    application gateways. A VPN cannot have a private IP address because it is always
    internet-facing. There is a maximum of 4096 private IP addresses per VNet. You
    can, however, create multiple VNets (50 per subscription).
  prefs: []
  type: TYPE_NORMAL
- en: These limits are based on the default limits from the following page: [https://docs.microsoft.com/en-us/azure/azure-subscription-service-limits?toc=%2fazure%2fvirtual-network%2ftoc.json#networking-limits](https://docs.microsoft.com/en-us/azure/azure-subscription-service-limits?toc=%2fazure%2fvirtual-network%2ftoc.json#networking-limits).
    You can open a support request to raise the limits. The limits can't be raised
    above the maximum limit, as described in the limit table.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a public IP address
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In the following example, we are going to create a static public IP address
    using PowerShell:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to the Azure Portal by opening [https://portal.azure.com/](https://portal.azure.com/).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Open the Azure Cloud Shell and make sure PowerShell is selected.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Add the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'If necessary, select the right subscription:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Create the IP address:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: This is the easiest way to create a static IP address. However, you still have
    to assign it to a Azure resource. It is only created now. I've used an existing
    resource group for this example. If you don't have one, you need to create it
    before creating the IP address.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: DNS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Besides IP addresses, VMs can also be addressed by using hostnames or **fully
    qualified domain names** (**FQDN**). You can configure a DNS label for this on
    a public IP address. For Azure services that are all hosted inside the same VNet,
    Azure internal DNS can be used for name resolving. If you want to use DNS for
    multiple VNets, you have to set up your own DNS server. For instance, if you add
    the DNS label `packtuniquedns`, the FQDN will become packtuniquedns.westeurope.cloudapp.azure.com.
    This FQDN will then map to the public IP address of the Azure resource.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9761561e-d4f5-4a9f-97ee-bd078ea86f83.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Built-in DNS name resolving
  prefs: []
  type: TYPE_NORMAL
- en: You can point your DNS to the Azure resource by adding a CNAME record as well.
    So instead of using the default DNS suffix, you can use Azure DNS to assign a
    custom hostname to the resource. If you want your Azure resource to be reached
    with a hostname without the `www` prefix, you need to add an A record. CNAME will
    only work with the `www` prefix.
  prefs: []
  type: TYPE_NORMAL
- en: For more information on this, you can refer to the following articles—*Create
    a fully qualified domain name in the Azure Portal for a Linux VM*: [https://docs.microsoft.com/en-us/azure/virtual-machines/linux/portal-create-fqdn](https://docs.microsoft.com/en-us/azure/virtual-machines/linux/portal-create-fqdn)
    and *Use Azure DNS to provide custom domain settings for an Azure service*: [https://docs.microsoft.com/en-us/azure/dns/dns-custom-domain?toc=%2fazure%2fvirtual-network%2ftoc.json#public-ip-address](https://docs.microsoft.com/en-us/azure/dns/dns-custom-domain?toc=%2fazure%2fvirtual-network%2ftoc.json#public-ip-address).
  prefs: []
  type: TYPE_NORMAL
- en: Creating a VNet with two subnets
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this example, we are going to create a VNet with two subnets from the Azure
    Portal. You can use PowerShell, CLI, and an ARM template as well. We are going
    to create a VNet and subnets according to the following diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/5c3360aa-ebf1-45ef-9bbd-3a52ded71f39.png)'
  prefs: []
  type: TYPE_IMG
- en: A VNet with two subnets
  prefs: []
  type: TYPE_NORMAL
- en: 'Take the following steps to create the VNet:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to the Azure Portal by opening [https://portal.azure.com/](https://portal.azure.com/).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on New and type `virtual network` in the search bar to create a new virtual
    network:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/6eeb8780-d483-40dd-9582-3ab1880f233c.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Creating a new virtual network
  prefs: []
  type: TYPE_NORMAL
- en: 'A new blade opens up, where you can fill in the settings. Add the following
    values:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/b1947b66-332a-400b-a827-803d933934fa.png)'
  prefs: []
  type: TYPE_IMG
- en: VNet and subnet settings
  prefs: []
  type: TYPE_NORMAL
- en: Click on Create. You can only create one subnet when creating a VNet from the
    Azure Portal. So, the second one needs to be added after creating the VNet.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Go to the VNet Settings and choose Subnets from the left-hand menu and click
    + Subnet in the top menu, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/59ebdf64-0c4b-476f-aeb1-a9d47bd7749a.png)'
  prefs: []
  type: TYPE_IMG
- en: Adding a second subnet
  prefs: []
  type: TYPE_NORMAL
- en: 'A new blade will open up. Enter the following values and click on OK:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/faf67320-4bd8-4cc3-82d5-c59f8699a03b.png)'
  prefs: []
  type: TYPE_IMG
- en: Second subnet settings
  prefs: []
  type: TYPE_NORMAL
- en: Azure Load Balancer
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Azure Load Balancer is a Load Balancer which can be used for VMs, containers,
    and apps. It works at the transport layer (layer four in the OSI network reference
    stack) by distributing network traffic in the same Azure data center. It offers
    an external and an internal Load Balancer.
  prefs: []
  type: TYPE_NORMAL
- en: The external Load Balancer provides a single endpoint with a public IP address
    that is called by all client applications and services, and then distributes the
    incoming traffic over multiple healthy VMs, containers, or apps to provide scaling,
    high availability, and performance. The internal Load Balancer has the same features
    as the external, but it uses a private IP address.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/afbd59bb-d956-4461-98a3-0fec6dce30a7.png)'
  prefs: []
  type: TYPE_IMG
- en: External and internal Load Balancer
  prefs: []
  type: TYPE_NORMAL
- en: 'There are two versions of Azure Load Balancer:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Basic**: The basic Load Balancer is free to use. It can be configured as
    an internet-facing Load Balancer, as an internal Load Balancer, and it can forward
    traffic to a specific VM. For the internet-facing Load Balancer, the public IP
    address is mapped to the private IP address by the Load Balancer. When traffic
    comes in, Azure distributes it to the Azure resource by using the internal IP
    address.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It offers hashed-based distribution, port forwarding, automatic reconfiguration
    when you scale down or up, service monitoring, and source NAT.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Standard**: At the time of writing, the standard Load Balancer is still in
    preview. On top of all the features that the basic Load Balancer offers, the standard
    version offers enterprise scale. You can use standalone VMs or VMs up to 1000
    instances using the standard Load Balancer. It also offers diagnostic insights
    for public and internal Load Balancer configurations, high reliability by using
    HA ports, and rules for individual ports. You can use NSGs (which we will discuss
    later in this chapter) and availability zones.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For more information on the standard Load Balancer, you can refer to the following
    article: [https://docs.microsoft.com/en-us/azure/load-balancer/load-balancer-standard-overview](https://docs.microsoft.com/en-us/azure/load-balancer/load-balancer-standard-overview).
  prefs: []
  type: TYPE_NORMAL
- en: Probes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Azure Load Balancer uses probes to define the health of your servers and
    services that are leveraging the Load Balancer. There are two different types
    of probes: the HTTP and the TCP Probe.'
  prefs: []
  type: TYPE_NORMAL
- en: For cloud services (such as VMs, web apps, APIs, and more), it uses a **guest
    agent probe**. In this scenario, there is a guest agent installed on your VM that
    responds with an HTTP 200 OK response. Every 15 seconds, the Load Balancer sends
    a message to the cloud service to which the agent responds. You can also create
    a custom HTTP Probe with your own logic that overrrides the  logic of the default
    guest agent. The TCP Probe uses a three-way handshake to set up the connection.
  prefs: []
  type: TYPE_NORMAL
- en: When health logging is enabled, the data is stored in an Azure storage account.
    You can view this log data by using different Azure tools, such as PowerShell
    or CLI, the REST API, or the Azure Portal. You can also use Power BI to visualize
    and analyze the data using pre-defined dashboards provided by the *Azure Audit
    Logs content pack for Power BI*.
  prefs: []
  type: TYPE_NORMAL
- en: For more information and to download the Azure Audit Logs content pack for Power
    BI, you can refer to [https://docs.microsoft.com/en-us/power-bi/service-connect-to-azure-audit-logs](https://docs.microsoft.com/en-us/power-bi/service-connect-to-azure-audit-logs).
  prefs: []
  type: TYPE_NORMAL
- en: Azure Traffic Manager
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Azure Traffic Manager spreads the workload over multiple regions and data centers
    in the world. It will handle the load and locate the closest geographical region
    or most suitable region at the DNS level. The client makes a DNS request and,
    based on the location of the DNS, Azure Traffic Manager will locate the nearest
    region in Azure and sends that location back to the client via a DNS response.
    The client then calls the location directly, without any further interference
    of Azure Traffic Manager. Traffic Manager also monitors the endpoints, so in case
    of a failure inside one region, the Traffic Manager will send back the endpoint
    of a different healthy region.
  prefs: []
  type: TYPE_NORMAL
- en: This differs from the Azure Load Balancer, where the client calls the IP address
    of the Load Balancer and the Load Balancer distributes the traffic over multiple
    cloud services, such as VMs, containers, or web apps. Also, the Azure Load Balancer
    spreads traffic over multiple instances in the same region and data center, whereas
    Traffic Manager can span over multiple regions and data centers.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can use both the Azure Load Balancer and Azure Traffic Manager in a highly
    available and high-performing architecture, such as the one shown in the following
    diagram:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/4a3baf05-758b-4913-a977-ee22896a672e.png)'
  prefs: []
  type: TYPE_IMG
- en: Azure Traffic Manager
  prefs: []
  type: TYPE_NORMAL
- en: Azure Traffic Manager was also discussed in [Chapter 3](de2f1b21-edb1-4616-a8ff-8fbf484459a0.xhtml),
    *Designing Web Applications*, in the section about high availability and performance
    for your web apps. The different routing methods that are available for Azure
    Traffic Manager are also described there.
  prefs: []
  type: TYPE_NORMAL
- en: Azure Application Gateway
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Azure Application Gateway offers an **Application Delivery Controller**
    (**ADC**), which operates on the application layer (layer seven in the OSI network
    reference stack).
  prefs: []
  type: TYPE_NORMAL
- en: It provides web load balancing, so it provides load balancing on layer seven,
    which is for HTTP(S) only. It also provides a web application firewall, which
    can be leveraged to protect your apps from common web-based attacks, such as cross-site
    scripting, SQL injection, and session-hijacking (this is described in more detail
    in the *Network Security Strategies* section in this chapter). It can decrypt
    HTTPS traffic, so you can install your SSL certificates on the application gateway
    instead of onto the different web servers. This way, the web servers don't have
    to take care of this and management will be easier because it is all in one place.
    Application Gateway will then encrypt the response before it is sent back to the
    client. It can also provide URL-based content routing, so traffic can be routed
    to specific backends. For example, a call to a CDN that is hosted on a dedicated
    backend can be called directly, which reduces unnecessary routing. It also provides
    health monitoring and advanced diagnostics.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/1e5bfc48-a3df-49fd-b4f5-f1a46075da6d.png)'
  prefs: []
  type: TYPE_IMG
- en: Azure Application Gateway
  prefs: []
  type: TYPE_NORMAL
- en: For more information on Azure Application Gateway and the different features,
    you can refer to [https://docs.microsoft.com/en-us/azure/traffic-manager/traffic-manager-overview](https://docs.microsoft.com/en-us/azure/traffic-manager/traffic-manager-overview).
    This page also gives an overview of all the differences between the Azure Load
    Balancer, Azure Traffic Manager, and the Azure Application Gateway.
  prefs: []
  type: TYPE_NORMAL
- en: External connectivity for Azure Virtual Networks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The cloud is becoming more popular everyday, but for the next few years, most
    organizations will still have an on-premises infrastructure that will be used
    and maintained. In fact, some organizations will never move to the cloud completely
    because of business requirements or some sort of legacy system that is still in
    use and cannot be moved for some reason or other. Also, security requirements
    could be a reason for keeping a part of your data on-premises. So, there will
    always be a need for hybrid environments. From a networking perspective, Azure
    offers various features to set up seamless connections from your on-premises infrastructure
    to Azure and vice versa.
  prefs: []
  type: TYPE_NORMAL
- en: Azure VPN
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Azure VPN provides a secure gateway that can be used to connect your on-premises
    infrastructure with Azure and to connect multiple VNets with each other by sending
    an encrypted message from one location to the other. Most organizations use VPN
    connections to let remote workers connect to their private network.
  prefs: []
  type: TYPE_NORMAL
- en: 'Azure VPN offers multiple ways to set up a secure connection, such as site-to-site
    VPN, point-to-site VPN, and ExpressRoute. They are described in the following
    sections. When setting up an Azure network gateway for one of these connection
    types, you have to choose between the different SKUs that Azure offers. Azure
    VPN offers the following SKUs:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Basic**: Provides a maximum of 10 site-to-site/VNet-to-VNet tunnels and a
    maximum of 128 point-to-site connections. The average bandwidth is 100 Mbps.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**VpnGw1**: Provides a maximum of 30 site-to-site/VNet-to-VNet tunnels and
    a maximum of 128 point-to-site connections. The average bandwidth is 650 Mbps.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**VpnGw2**: Provides a maximum of 30 site-to-site/VNet-to-VNet tunnels and
    a maximum of 128 point-to-site connections. The average bandwidth is 1 Gbps.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**VpnGw3**: Provides a  maximum of 30 site-to-site/VNet-to-VNet tunnels and
    a maximum of 128 point-to-site connections. The average bandwidth is 1.25 Gbps.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can set up route-based or policy-based VPN types. Which one to use depends
    on the compatibility of your VPN device and the VPN connection type you want to
    use.
  prefs: []
  type: TYPE_NORMAL
- en: Policy-based means that you have to write your own routing-table entries. This
    can be suitable for small organizations, but most will rather do this dynamically. Policy-based
    routing also has some restrictions; you can only set up one site-to-site VPN tunnel
    using IKEv1 and no point-to-site tunnel.
  prefs: []
  type: TYPE_NORMAL
- en: Route-based means that the routing-table entries are added dynamically and that
    you can use all the VPN connection types and IKEv2.
  prefs: []
  type: TYPE_NORMAL
- en: Site-to-site VPN
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A **site-to-site** (**S2S**) VPN  is designed to create secure connections between
    a location, such as an office for instance, and Azure over the internet. You can
    then connect from every server or computer from that location using the same VPN
    connection. It requires a compatible VPN device or **Routing and Remote Access
    Service** (**RRAS**) and a public IP address for your VPN device. The RRAS can
    be deployed on a Windows server by activating the remote access server role.
  prefs: []
  type: TYPE_NORMAL
- en: The S2S VPN gateway creates a connection over a IPsec/IKE (IKEv1 or IKEv2) VPN
    tunnel. **Internet Protocol Security** (**IPSec**) is an open standard for securing
    connections over the internet and **Internet Key Exchange** (**IKE**) is a key
    management protocol standard used in conjunction with IPSec. It is a method for exchanging
    keys for encryption and authentication.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/7715e2d5-e331-4673-ab5d-58ed4755e6ea.png)'
  prefs: []
  type: TYPE_IMG
- en: Site-to-site VPN connection
  prefs: []
  type: TYPE_NORMAL
- en: For a list of compatible VPN devices and the supported VPN types, you can refer
    to the following overview: [https://docs.microsoft.com/en-us/azure/vpn-gateway/vpn-gateway-about-vpn-devices](https://docs.microsoft.com/en-us/azure/vpn-gateway/vpn-gateway-about-vpn-devices).
  prefs: []
  type: TYPE_NORMAL
- en: VNet-to-VNet VPN
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: VNet-to-VNet is a connection type that can be set up as well. In this case,
    you are creating a connection between multiple Azure VNets. A typical reason for
    setting up this type of connection, could be for geo-redundancy. This connection
    type is the same as the S2S connection type.
  prefs: []
  type: TYPE_NORMAL
- en: Point-to-site VPN
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A **point-to-site** (**P2S**) VPN is designed to create secure connections between
    an individual client computer over IKEv2 or SSTP. The connection is established
    by starting it from the client computer using a script. These connections are
    used for remote workers that log on to the private network from a different location
    or they can be used when you have a few clients that need to connect to the VPN.
  prefs: []
  type: TYPE_NORMAL
- en: '**Secure Socket Tunneling Protocol** (**SSTP**) is a VPN tunnel that creates
    a connection through an SSL/TLS channel. By using SSL/TLS over port `443`, the
    connection can pass through all firewalls and proxy servers.'
  prefs: []
  type: TYPE_NORMAL
- en: P2S connections don't require a VPN device or a public IP address for the client
    computer. They can be used in conjunction with the S2S connection as well as through
    the same VPN gateway, as long as the requirements for both the connections are
    the same.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/8ec66b5d-7f4c-42d2-95fb-2eb83b0fb1f6.png)'
  prefs: []
  type: TYPE_IMG
- en: Point-to-site VPN connection
  prefs: []
  type: TYPE_NORMAL
- en: ExpressRoute
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ExpressRoute is the most advanced type of VPN connection. It offers a fast connection
    from your on-premises infrastructure to the Azure via your internal WAN, unlike
    S2S connections, which go over the internet. By using your WAN, ExpressRoute can
    provide faster speeds, lower latency, and higher security than an S2S connection.
    The maximum bandwidth that can be provided per ExpressRoute circuit is 10 GBps.
    With ExpressRoute, you can also set up hybrid connections with Office 365 and
    Dynamics 365. ExpressRoute also guarantees a connection uptime SLA, whereas S2S
    doesn't.
  prefs: []
  type: TYPE_NORMAL
- en: 'ExpressRoute offers the following connection models:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Any-to-any (IPVPN)**: With this type of connection, you integrate your WAN
    with Azure using an IPVPN provider. The provider is then responsible for setting
    up the secure connection between your on-premises network and Azure. WAN providers
    typically offer a layer three connection.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Point-to-point Ethernet**: With this type of connection, you connect through
    point-to-point Ethernet links. Point-to-point providers typically provide a layer
    two connection.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Co-located at a Cloud Exchange**: With this type of connection, you can order
    connections through the provider''s Ethernet exchange. These providers typically
    offer layer two cross-connections and managed layer three cross-connections.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/f52f570a-b378-4990-9ad2-7c8c647e3726.jpg)'
  prefs: []
  type: TYPE_IMG
- en: ExpressRoute VPN connection
  prefs: []
  type: TYPE_NORMAL
- en: Network security strategies
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With all the hacking incidents nowadays, a strong network security strategy
    is key. It is not secure to just create a public IP address and expose your Azure
    resource to the internet. This will make you vulnerable for attacks. Design your
    networks with security in mind and reduce what is exposed to the internet. You
    can use the features that Azure provides for securing your networks. Azure offers
    support for different security strategies, which are described in the following
    section.
  prefs: []
  type: TYPE_NORMAL
- en: DMZ
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A **demilitarized zone** (**DMZ**) or perimeter network is a physical or logical
    boundary between the internal and the external network of an organization. The
    external network can be the internet. The purpose is to add an additional security
    layer to the internal network. You don't open any ports from the internal network
    to the internet, but only to the DMZ. Azure offers multiple features that you
    can use to create a DMZ, such as **Network Security Groups** (**NSGs**), firewalls,
    and **User Defined Routes** (**UDRs**).
  prefs: []
  type: TYPE_NORMAL
- en: The following diagram shows an example of a physical DMZ created using a frontend
    VNet with two VMs in it. Only this VNet is connected to the internet.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a4b47dfc-600c-4445-ad0a-941547a2a2bf.png)'
  prefs: []
  type: TYPE_IMG
- en: Simple DMZ example
  prefs: []
  type: TYPE_NORMAL
- en: Network Security Groups
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A NSG is an access control list inside Azure where you can add inbound and outbound
    rules. When a connection is established between VMS, VNets, or other cloud services,
    this list is checked to see whether the connection is allowed or denied.
  prefs: []
  type: TYPE_NORMAL
- en: NSGs can be applied to one or more subnets or individual **network interfaces**
    (**NIC**). This means that all resources that are associated with this subnet
    or NIC will automatically have all the rules applied.
  prefs: []
  type: TYPE_NORMAL
- en: NSG rules are processed in priority order, with lower numbers before higher
    numbers, and they can be applied to inbound or outbound traffic.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a NSG
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Follow these steps to create a NSG:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to the Azure Portal by opening [https://portal.azure.com/](https://portal.azure.com/).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click New, type `Network Security Group` in the search bar, and create a new
    one:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/111c8b2d-105a-434b-a6e2-6bc789b25068.png)'
  prefs: []
  type: TYPE_IMG
- en: New NSG
  prefs: []
  type: TYPE_NORMAL
- en: 'A new blade opens up. Add the following settings and click on Create:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/cb721549-3fa5-4dc3-ad9d-925983941516.png)'
  prefs: []
  type: TYPE_IMG
- en: New NSG settings
  prefs: []
  type: TYPE_NORMAL
- en: 'A NSG is created with some default inbound and outbound security rules. They
    are low-priority rules, as they have a high number, so there is a lot of room
    to add custom rules. To add a custom rule, click on Inbound security rules in
    the left-hand menu:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/33a6dd01-fe7f-42cb-8113-03d65f2dc43b.jpg)'
  prefs: []
  type: TYPE_IMG
- en: NSG default Inbound and Outbound rules
  prefs: []
  type: TYPE_NORMAL
- en: 'Click the Addbutton and add the following values to create rules that allow
    traffic from port `80`:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/ce8a42ac-82e5-487f-b0e8-764cc59f0db6.jpg)'
  prefs: []
  type: TYPE_IMG
- en: New rule
  prefs: []
  type: TYPE_NORMAL
- en: 'You can now associate this NSG with an NIC or a subnet by clicking on Network
    Interfaces or Subnets from the left-hand menu:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/88ea5cb2-4d7f-4061-bffe-c672e2489431.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Associate the NSG with a NIC or subnet
  prefs: []
  type: TYPE_NORMAL
- en: User Defined Routes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When you create subnets, Azure creates system routes that enable all resources
    in a subnet to communicate with each other. You can override the system routes
    by creating UDRs. This way, you can force traffic to follow a particular route.
  prefs: []
  type: TYPE_NORMAL
- en: For instance, you have a network that consists of two subnets and you want to
    add a VM that is used as a DMZ and has a firewall installed on it. You want traffic
    only to go through the firewall and not between the two subnets.
  prefs: []
  type: TYPE_NORMAL
- en: To create UDRs and enable IP forwarding, you have to create a routing table
    in Azure. When this table is created and there are custom routes in there, Azure
    prefers the custom routes over the default system routes.
  prefs: []
  type: TYPE_NORMAL
- en: Creating User Defined Routes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To create UDRs, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to the Azure Portal by opening [https://portal.azure.com/](https://portal.azure.com/).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on New, type `Routing Table` in the search bar, and create a new one.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/4a1e9208-a18d-405d-ab95-155e7942bfbc.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Create a new routing table
  prefs: []
  type: TYPE_NORMAL
- en: 'Add the following values:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/90af0ec4-b471-4ee1-932a-bd31e38c31db.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Route table settings
  prefs: []
  type: TYPE_NORMAL
- en: 'A new and empty route table is created. To add custom routes, click on Routes in
    the left-hand menu:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/0deb9af8-7766-4486-ad30-1e910fd7cc09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Empty route table
  prefs: []
  type: TYPE_NORMAL
- en: 'Click the Add button in the top menu and add the following values to create
    a custom route. In this example, we want all internet traffic to go through the
    firewall. So, add a `0.0.0.0/0` as the Address prefix. The Next hop type is a
    `Virtual appliance`; this is the firewall. And last, the Next hop address; this
    will be the internal IP address of the firewall:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/a67cdb65-9b8d-41b9-9fb7-b6c54edc7bf1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Add custom route
  prefs: []
  type: TYPE_NORMAL
- en: For more detailed instructions on how to create UDPs and a virtual appliance,
    you can refer to the following tutorial: [https://docs.microsoft.com/en-us/azure/virtual-network/create-user-defined-route-portal](https://docs.microsoft.com/en-us/azure/virtual-network/create-user-defined-route-portal).
  prefs: []
  type: TYPE_NORMAL
- en: Virtual network service tunneling
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With **virtual network service tunneling,** all your external traffic is forced
    to go through a site-to-site VPN tunnel. Without this, external traffic will always
    go directly from Azure to the internet. This gives you the opportunity to audit
    the traffic.
  prefs: []
  type: TYPE_NORMAL
- en: 'Forced tunneling uses the UDRs to define the routing. Instead of choosing the
    virtual appliance, you now choose the virtual network gateway:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/066341b9-ff33-4598-a2b4-b10da7b19b35.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Virtual network service tunneling
  prefs: []
  type: TYPE_NORMAL
- en: For more information about virtual network service tunneling and an example
    on how to create it using PowerShell, you can refer to the following tutorial: [https://docs.microsoft.com/en-us/azure/vpn-gateway/vpn-gateway-forced-tunneling-rm](https://docs.microsoft.com/en-us/azure/vpn-gateway/vpn-gateway-forced-tunneling-rm).
  prefs: []
  type: TYPE_NORMAL
- en: Web Application Firewall
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The WAF is part of the application gateway and it provides a firewall to protect
    your web apps from hacking attacks. It is based on rules from the OWASP core rule
    set 3.0\. It can protect a maximum of 20 applications behind an application gateway
    and it provides monitoring for your applications using Azure Monitor (in the future,
    monitoring will be added to the Azure Security Center as well).
  prefs: []
  type: TYPE_NORMAL
- en: OWASP is an open standard for application security. For more information on
    the rule set, you can refer to the OWASP website: [https://www.owasp.org/index.php/Category:OWASP_ModSecurity_Core_Rule_Set_Project](https://www.owasp.org/index.php/Category:OWASP_ModSecurity_Core_Rule_Set_Project).
  prefs: []
  type: TYPE_NORMAL
- en: 'By default, it protects your application from the following:'
  prefs: []
  type: TYPE_NORMAL
- en: From SQL injection attacks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: From cross-site scripting attacks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: From command injection, HTTP request smuggling, HTTP response splitting, and
    remote file inclusion attacks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Against HTTP protocol violations and anomalies
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Against bots, crawlers, and scanners
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It detects common application misconfigurations
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can also add or customize the rules and rule group to suit the needs of
    your application. You can refer to the following tutorial to customize rules: [https://docs.microsoft.com/en-us/azure/application-gateway/application-gateway-customize-waf-rules-portal](https://docs.microsoft.com/en-us/azure/application-gateway/application-gateway-customize-waf-rules-portal).
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we have covered the networking objectives. We've covered how
    to design Azure Virtual Networks. We've discussed IP addresses and Azure DNS.
    We also covered when to use the Azure Application Gateway, Azure Traffic Manager,
    and Azure Load Balancer. We then looked at designing external connectivity for
    Azure VNets using different VPN connections, and finally, we talked about designing
    different security strategies.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will cover hybrid applications.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Answer the following questions to test your knowledge of the information in
    this chapter. You can find the answers in the *Assessments* section at the end
    of this book:'
  prefs: []
  type: TYPE_NORMAL
- en: When you create a new routing table in Azure, is the system routing table deleted?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Yes'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 'No'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Are NSG rules processed by priority number from high to low?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Yes'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 'No'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Does DMZ consist of a firewall?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Yes'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: 'No'
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You can check out the following links for more information on the topics that
    are covered in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Azure Virtual Network**: [https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-overview](https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-overview)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Virtual Network Peering**: [https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-peering-overview](https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-peering-overview)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Azure Load Balancer overview**: [https://docs.microsoft.com/en-us/azure/load-balancer/load-balancer-overview](https://docs.microsoft.com/en-us/azure/load-balancer/load-balancer-overview)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Overview of Traffic Manager**: [https://docs.microsoft.com/en-us/azure/traffic-manager/traffic-manager-overview](https://docs.microsoft.com/en-us/azure/traffic-manager/traffic-manager-overview)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Overview of Application Gateway**: [https://docs.microsoft.com/en-us/azure/application-gateway/application-gateway-introduction](https://docs.microsoft.com/en-us/azure/application-gateway/application-gateway-introduction)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**About VPN Gateway**: [https://docs.microsoft.com/en-us/azure/vpn-gateway/vpn-gateway-about-vpngateways](https://docs.microsoft.com/en-us/azure/vpn-gateway/vpn-gateway-about-vpngateways)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**ExpressRoute overview**: [https://docs.microsoft.com/en-us/azure/expressroute/expressroute-introduction](https://docs.microsoft.com/en-us/azure/expressroute/expressroute-introduction)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Filter network traffic with network security groups**: [https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-nsg](https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-nsg)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**User Defined Routes**: [https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-udr-overview#custom-routes](https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-udr-overview#custom-routes)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Web Application Firewall**: [https://docs.microsoft.com/en-us/azure/application-gateway/application-gateway-web-application-firewall-overview](https://docs.microsoft.com/en-us/azure/application-gateway/application-gateway-web-application-firewall-overview)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
