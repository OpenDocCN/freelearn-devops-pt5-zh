["```\nvagrant up cd proxy\n\n```", "```\n- hosts: proxy\n remote_user: vagrant\n serial: 1\n sudo: yes\n roles:\n - common\n - docker\n - docker-compose\n - consul\n - registrator\n - consul-\n```", "```\n- name: Directories are present\n  file:\n    dest: \"{{ item }}\"\n    state: directory\n  with_items: directories\n  tags: [nginx]\n- name: Container is running\n  docker:\n    image: nginx\n    name: nginx\n    state: running\n    ports: \"{{ ports }}\"\n    volumes: \"{{ volumes }}\"\n  tags: [nginx]\n- name: Files are present\n  copy:\n    src: \"{{ item.src }}\"\n    dest: \"{{ item.dest }}\"\n  with_items: files\n  register: result\n  tags: [nginx]\n- name: Container is reloaded\n  shell: docker kill -s HUP nginx\n  when: result|changed\n  tags: [nginx]\n- name: Info is sent to Consul\n  uri:\n    url: http://localhost:8500/v1/kv/proxy/ip\n    method: PUT\n    body: \"{{ ip }}\"\n  ignore_errors: yes\n  tags: [nginx]\n```", "```\nlog_format upstreamlog\n    '$remote_addr - $remote_user [$time_local] '\n    '\"$request\" $status $bytes_sent '\n    '\"$http_referer\" \"$http_user_agent\" \"$gzip_ratio\" '\n    '$upstream_addr';\nserver {\n  listen 80;\n  server_name _;\n  access_log /var/log/nginx/access.log upstreamlog;\n  include includes/*.conf;\n}\ninclude upstreams/*.conf;\n```", "```\nvagrant ssh cd\nansible-playbook /vagrant/ansible/nginx.yml \\\n -i /v\nagrant/ansible/hosts/proxy\n\n```", "```\nwget https://raw.githubusercontent.com/vfarcic\\/books-ms/master/docker-compose.yml\nexport DOCKER_HOST=tcp://proxy:2375\ndocker-compose up -d app\ndocker-compose ps\ncurl http://proxy/api/v1/books\n\n```", "```\n<html>\n<head><title>404 Not Found</title></head>\n<body bgcolor=\"white\">\n<center><h1>404 Not Found</h1></center>\n<hr><center>nginx/1.9.9</center>\n</body>\n</html>\n```", "```\ncurl http://10.100.193.200:8500/v1/catalog/service/books-ms | jq '.'\n\n```", "```\n[\n  {\n    \"ModifyIndex\": 42,\n    \"CreateIndex\": 42,\n    \"Node\": \"proxy\",\n    \"Address\": \"10.100.193.200\",\n    \"ServiceID\": \"proxy:vagrant_app_1:8080\",\n    \"ServiceName\": \"books-ms\",\n    \"ServiceTags\": [],\n    \"ServiceAddress\": \"10.100.193.200\",\n    \"ServicePort\": 32768,\n    \"ServiceEnableTagOverride\": false\n  }\n]\n```", "```\nPORT=$(docker inspect \\\n --format='{{(index (index .NetworkSettings.Ports \"8080/tcp\") 0).HostPort}}' \\\n vagrant_app_1)\necho $PORT\ncurl http://proxy:$PORT/api/v1/books | jq '.'\n\n```", "```\necho \"\nlocation /api/v1/books {\n proxy_pass http://10.100.193.200:$PORT/api/v1/books;\n}\n\" | tee books-ms.conf\nscp books-ms.conf \\\n proxy:/data/nginx/includes/books-ms.conf # pass: vagrant\ndocker kill -s HUP nginx\n\n```", "```\ncurl -H 'Content-Type: application/json' -X PUT -d \\\n \"{\\\"_id\\\": 1,\n \\\"title\\\": \\\"My First Book\\\",\n \\\"author\\\": \\\"John Doe\\\",\n \\\"description\\\": \\\"Not a very good book\\\"}\" \\\n http://proxy/api/v1/books | jq '.'\ncurl http://proxy/api/v1/books | jq '.'\n\n```", "```\ndocker-compose scale app=2\ndocker-compose ps\n\n```", "```\n Name               Command          State            Ports\n-----------------------------------------------------------------------\nvagrant_app_1   /run.sh                 Up      0.0.0.0:32768->8080/tcp\nvagrant_app_2   /run.sh                 Up      0.0.0.0:32769->8080/tcp\nvagrant_db_1    /entrypoint.sh mongod   Up      27017/tcp\n\n```", "```\nlocation /api/v1/books {\n proxy_pass http://books-ms/api/v1/books;\n proxy_next_upstream error timeout invalid_header http_500;\n}\n\n```", "```\nupstream books-ms {\n {{range service \"books-ms\" \"any\"}}\n server {{.Address}}:{{.Port}};\n {{end}}\n}\n\n```", "```\nwget http://raw.githubusercontent.com/vfarcic\\\n/books-ms/master/nginx-includes.conf\nwget http://raw.githubusercontent.com/vfarcic\\\n/books-ms/master/nginx-upstreams.ctmpl\n\n```", "```\nconsul-template \\\n -consul proxy:8500 \\\n -template \"nginx-upstreams.ctmpl:nginx-upstreams.conf\" \\\n -once\ncat nginx-upstreams.conf\n\n```", "```\nupstream books-ms {\n server 10.100.193.200:32768;\n server 10.100.193.200:32769;\n}\n\n```", "```\nscp nginx-includes.conf \\\n proxy:/data/nginx/includes/books-ms.conf # Pass: vagrant\nscp nginx-upstreams.conf \\\n proxy:/data/nginx/upstreams/books-ms.conf # Pass: vagrant\ndocker kill -s HUP nginx\n\n```", "```\ncurl http://proxy/api/v1/books | jq '.'\ncurl http://proxy/api/v1/books | jq '.'\ncurl http://proxy/api/v1/books | jq '.'\ncurl http://proxy/api/v1/books | jq '.'\ndocker logs nginx\n\n```", "```\n\"GET /api/v1/books HTTP/1.1\" 200 268 \"-\" \"curl/7.35.0\" \"-\" 10.100.193.200:32768\n\"GET /api/v1/books HTTP/1.1\" 200 268 \"-\" \"curl/7.35.0\" \"-\" 10.100.193.200:32769\n\"GET /api/v1/books HTTP/1.1\" 200 268 \"-\" \"curl/7.35.0\" \"-\" 10.100.193.200:32768\n\"GET /api/v1/books HTTP/1.1\" 200 268 \"-\" \"curl/7.35.0\" \"-\" 10.100.193.200:32769\n\n```", "```\ndocker stop vagrant_app_2\ncurl http://proxy/api/v1/books | jq '.'\ncurl http://proxy/api/v1/books | jq '.'\ncurl http://proxy/api/v1/books | jq '.'\ncurl http://proxy/api/v1/books | jq '.'\n\n```", "```\ndocker logs nginx\n\n```", "```\n\"GET /api/v1/books HTTP/1.1\" 200 268 \"-\" \"curl/7.35.0\" \"-\" 10.100.193.200:32768\n[error] 12#12: *98 connect() failed (111: Connection refused) while connecting to upstream, client: 172.17.42.1, server: _, request: \"GET /api/v1/books HTTP/1.1\", upstream: \"http://10.100.193.200:32769/api/v1/books\", host: \"localhost\"\n[warn] 12#12: *98 upstream server temporarily disabled while connecting to upstream, client: 172.17.42.1, server: _, request: \"GET /api/v1/books HTTP/1.1\", upstream: \"http://10.100.193.200:32768/api/v1/books\", host: \"localhost\"\n\"GET /api/v1/books HTTP/1.1\" 200 268 \"-\" \"curl/7.35.0\" \"-\" 10.100.193.200:32768, 10.100.193.200:32768\n\"GET /api/v1/books HTTP/1.1\" 200 268 \"-\" \"curl/7.35.0\" \"-\" 10.100.193.200:32768\n\"GET /api/v1/books HTTP/1.1\" 200 268 \"-\" \"curl/7.35.0\" \"-\" 10.100.193.200:32768\n\n```", "```\ndocker stop nginx\n\n```", "```\n- name: Directories are present\n file:\n dest: \"{{ item }}\"\n state: directory\n with_items: directories\n tags: [haproxy]\n- name: Files are present\n copy:\n src: \"{{ item.src }}\"\n dest: \"{{ item.dest }}\"\n with_items: files\n register: result\n tags: [haproxy]\n- name: Container is running\n docker:\n image: million12/haproxy\n name: haproxy\n state: running\n ports: \"{{ ports }}\"\n volumes: /data/haproxy/config/:/etc/haproxy/\n tags: [haproxy]\n\n```", "```\nansible-playbook /vagrant/ansible/haprox\ny.yml \\\n -i /vagrant/ansible/hosts/proxy\n\n```", "```\nexport DOCKER_HOST=tcp://proxy:2375\ndocker ps -a\ndocker logs haproxy\n\n```", "```\n[2015-10-16 08:55:40] /usr/local/sbin/haproxy -f /etc/haproxy/haproxy.cfg -D -p /var/run/haproxy.pid\n[2015-10-16 08:55:40] Current HAProxy config /etc/haproxy/haproxy.cfg:\n====================================================================================================\ncat: /etc/haproxy/haproxy.cfg: No such file or directory\n====================================================================================================\n[ALERT] 288/085540 (9) : Could not open configuration file /etc/haproxy/haproxy.cfg : No such file or directory\n[ALERT] 288/085540 (10) : Could not open configuration file /etc/haproxy/haproxy.cfg : No such file or directory\n\n```", "```\nPORT=$(docker inspect \\\n --format='{{(index (index .NetworkSettings.Ports \"8080/tcp\") 0).HostPort}}' \\\n vagrant_app_1)\necho $PORTecho \"\nfrontend books-ms-fe\n bind *:80\n option http-server-close\n acl url_books-ms path_beg /api/v1/books\n use_backend books-ms-be if url_books-ms\nbackend books-ms-be\n server books-ms-1 10.100.193.200:$PORT check\n\" | tee books-ms.service.cfg\n\n```", "```\ncat /vagrant/ansible/roles/haproxy/files/haproxy.cfg.orig \\\n *.service.cfg | tee haproxy.cfg\nscp haproxy.cfg proxy:/data/haproxy/config/haproxy.cfg\n\n```", "```\ncurl http://proxy/api/v1/books | jq '.'\ndocker start haproxy\ndocker logs haproxy\ncurl http://proxy/api/v1/books | jq '.'\n\n```", "```\ndocker-compose scale \ncompose ps\n\n```", "```\nfrontend books-ms-fe\n bind *:80\n option http-server-close\n acl url_books-ms path_beg /api/v1/books\n use_backend books-ms-be if url_books-ms\nbackend books-ms-be\n {{range service \"books-ms\" \"any\"}}\n server {{.Node}}_{{.Port}} {{.Address}}:{{.Port}} check\n {{end}}\n\n```", "```\nwget http://raw.githubusercontent.com/vfarcic\\\n/books-ms/master/haproxy.ctmpl \\\n -O haproxy.ctmpl\nsudo consul-template \\\n -consul proxy:8500 \\\n -template \"haproxy.ctmpl:books-ms.service.cfg\" \\\n -once\ncat books-ms.service.cfg\n\n```", "```\ncat /vagrant/ansible/roles/haproxy/files/haproxy.cfg.orig \\\n *.service.cfg | tee haproxy.cfg\nscp haproxy.cfg proxy:/data/haproxy/config/haproxy.cfg\ndocker logs haproxy\ncurl http://proxy/api/v1/books | jq '.'\n\n```", "```\ncurl http://proxy/api/v1/books | jq '.'\ncurl http://proxy/api/v1/books | jq '.'\ncurl http://proxy/api/v1/books | jq '.'\ncurl http://proxy/api/v1/books | jq '.'\n\n```", "```\ndocker stop vagrant_app_1\ncurl http://proxy/api/v1/books | jq '.'\ncurl http://proxy/api/v1/books | jq '.'\ncurl http://proxy/api/v1/books | jq '.'\ncurl http://proxy/api/v1/books | jq '.'\n\n```", "```\nexit\nvagrant destroy -f\n\n```"]