- en: DevSecOps - Challenges, Tips, and FAQs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The adoption of DevSecOps is a continuous learning process and takes a lot of
    stakeholder involvement, process optimization, business priority conflicts, and
    customization of security tools, as well as a security knowledge learning curve.
    The intention of this chapter is to give you some hands-on tips, challenges, and
    FAQs based on a functional roles perspective.
  prefs: []
  type: TYPE_NORMAL
- en: 'We will cover the following topics in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: DevSecOps FAQs for security management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DevSecOps FAQs for the development team
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DevSecOps FAQs for the testing team
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DevSecOps FAQs for the operations team
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DevSecOps for security management
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Q: Are there any suggested industry best practices for secure development
    and deployment in** **DevOps?**'
  prefs: []
  type: TYPE_NORMAL
- en: The OWASP SAMM (Software Assurance Maturity Model), Microsoft Security Development
    Lifecycle (SDL) and the SafeCode provide practical security practices for the
    DevOps or agile development.
  prefs: []
  type: TYPE_NORMAL
- en: OWASP SAMM: [https://github.com/OWASP/samm](https://github.com/OWASP/samm)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Microsoft SDL for Agile: [https://www.microsoft.com/en-us/SDL/Discover/sdlagile.aspx](https://www.microsoft.com/en-us/SDL/Discover/sdlagile.aspx)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SafeCode: [https://safecode.org/publications/](https://safecode.org/publications/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Q: What are the security risks of a cloud service?**'
  prefs: []
  type: TYPE_NORMAL
- en: 'The CSA has defined the top threats to cloud computing on their website ([https://cloudsecurityalliance.org/group/top-threats/](https://cloudsecurityalliance.org/group/top-threats/)),
    which are listed as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Data Breaches
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Insufficient identity, credential, and access management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Insecure interfaces and APIs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: System vulnerabilities
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Account hijacking
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Malicious insiders
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Advanced persistent threats
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data loss
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Insufficient due diligence
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Abuse and nefarious use of cloud services
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Denial of service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shared technology vulnerabilities
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Q: What are the security requirements in terms of GDPR compliance?**'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following table lists the GDPR security requirements for a software/service
    of the data processor and data controller:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **GDPR requirements** | **Data processor** | **Data controller** |'
  prefs: []
  type: TYPE_TB
- en: '| Provide a data privacy declaration | Must | Must |'
  prefs: []
  type: TYPE_TB
- en: '| Data collection requires a user''s explicit consent to allow data collection
    and also to allow the user to disable the data collection | Must | Must |'
  prefs: []
  type: TYPE_TB
- en: '| For the purposes of error troubleshooting, the user must be informed whether
    the collection of logs includes personal information | Must | Must |'
  prefs: []
  type: TYPE_TB
- en: '| The collection of a user''s cookies requires the user''s consent.Refer to [https://www.cookielaw.org/the-cookie-law/ ](https://www.cookielaw.org/the-cookie-law/)for
    more details. | Must | Must |'
  prefs: []
  type: TYPE_TB
- en: '| If the data is collected for marketing analysis purposes, the application
    must allow users to disable the analysis | Recommended | Must |'
  prefs: []
  type: TYPE_TB
- en: '| Provide the ability to remove data securely after the data expires | Must
    | Must |'
  prefs: []
  type: TYPE_TB
- en: '| If the data will be provided to third-party partners, it must have the user''s
    explicit consent | Recommended | Must |'
  prefs: []
  type: TYPE_TB
- en: '| Provide the ability for the user to query and update the data | Recommended
    | Must |'
  prefs: []
  type: TYPE_TB
- en: '| Delete any temporary data that is no longer in use | Recommended | Must |'
  prefs: []
  type: TYPE_TB
- en: '| Provide the ability to export the data | Recommended | Must |'
  prefs: []
  type: TYPE_TB
- en: '| Secure data transmission | Must | Must |'
  prefs: []
  type: TYPE_TB
- en: '| Secure local data storage with encryption, access control, and logging security
    controls | Must | Must |'
  prefs: []
  type: TYPE_TB
- en: DevSecOps for the development team
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Q: What are the recommended security architecture patterns?**'
  prefs: []
  type: TYPE_NORMAL
- en: Open Security Architecture Patterns: [http://www.opensecurityarchitecture.org/cms/library/patternlandscape](http://www.opensecurityarchitecture.org/cms/library/patternlandscape)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Security and privacy reference architecture: [http://security-and-privacy-reference-architecture.readthedocs.io/en/latest/index.html](http://security-and-privacy-reference-architecture.readthedocs.io/en/latest/index.html)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shiro: [http://shiro.apache.org/](http://shiro.apache.org/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: OWASP Cheat Sheet Series: [https://www.owasp.org/index.php/OWASP_Cheat_Sheet_Series](https://www.owasp.org/index.php/OWASP_Cheat_Sheet_Series)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Q: What are the common security frameworks that are used to build secure
    software?**'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Security improvement area** | **Open source security and privacy framework**
    |'
  prefs: []
  type: TYPE_TB
- en: '| Authentication |'
  prefs: []
  type: TYPE_TB
- en: Gluu for multiple-factor authentication and social login
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ReCAPTCHA
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Git-Secret for the protection of sensitive information in the source code
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Authorization |'
  prefs: []
  type: TYPE_TB
- en: Gluu for the user consent management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Apache Shiro Session Management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: OWASP CSRF Guard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| API manager |'
  prefs: []
  type: TYPE_TB
- en: Kong
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: API umbrella
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: WSO2 API manager
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Data input/output |'
  prefs: []
  type: TYPE_TB
- en: OWASP HTML Sanitizer Project
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Commons validator
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ValidateJS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: OWASP Java Encoder
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Privacy |'
  prefs: []
  type: TYPE_TB
- en: ARX De-Identifier data anonymization tool
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Apache Atlas for data governance
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: PrivacyScore for the web privacy assessment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CookieConsent
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '**Q: There are lots of third-party components and dependencies that are released
    and deployed with a software package. Are there any recommended tools to assess
    the security risks?**'
  prefs: []
  type: TYPE_NORMAL
- en: RetireJS:  [https://retirejs.github.io/retire.js/](https://retirejs.github.io/retire.js/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: OWASP Dependency Check: [https://www.owasp.org/index.php/OWASP_Dependency_Check](https://www.owasp.org/index.php/OWASP_Dependency_Check)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cuckoo Sandbox: [https://cuckoosandbox.org/](https://cuckoosandbox.org/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Q: What are the recommended security deliverables in the design and coding
    stage?**'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Stage** | **Deliverables** |'
  prefs: []
  type: TYPE_TB
- en: '| Requirement |'
  prefs: []
  type: TYPE_TB
- en: Customer security requirement analysis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Security standards compliance analysis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Security industry best practices (that is, OWASP ASVS, CSA CCM)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Design |'
  prefs: []
  type: TYPE_TB
- en: Threat modeling analysis report
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Secure design checklist self-assessment report
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Coding |'
  prefs: []
  type: TYPE_TB
- en: Static secure coding scanning report
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: High-risk module security assessment report
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Secure compiler and linker flags status
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Forbidden or unsafe uses of APIs scanning report
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '**Q: What are the recommended resources for the secure coding best practices?**'
  prefs: []
  type: TYPE_NORMAL
- en: OWASP Secure Code Review: [https://www.owasp.org/index.php/Category:OWASP_Code_Review_Project](https://www.owasp.org/index.php/Category:OWASP_Code_Review_Project)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Common Weakness Enumeration (CWE): [https://cwe.mitre.org/data/index.html](https://cwe.mitre.org/data/index.html)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CERT Secure Coding: [https://www.securecoding.cert.org/confluence/display/seccode/SEI+CERT+Coding+Standards](https://www.securecoding.cert.org/confluence/display/seccode/SEI+CERT+Coding+Standards)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Android Secure Coding: [https://www.jssec.org/dl/android_securecoding_en.pdf](https://www.jssec.org/dl/android_securecoding_en.pdf)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Q: What are the secure compiler and link flags that are used to mitigate
    the buffer overflow exploit attack?**'
  prefs: []
  type: TYPE_NORMAL
- en: Refer to the secure compiling table in [Chapter 8](part0145.html#4A91I0-993778ed0b7e4894800dd46a3f389a65), *Secure
    Coding Best Practices*.
  prefs: []
  type: TYPE_NORMAL
- en: DevSecOps for the testing team
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Q: What testing tools are suggested for data privacy assessment?**'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Data life cycle** | **Testing key points** | **Suggested testing tools**
    |'
  prefs: []
  type: TYPE_TB
- en: '| Transmission of data |'
  prefs: []
  type: TYPE_TB
- en: Ensure that the sensitive information is not transmitted by GET
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The secure communication protocol, such as TLS v1.2, SSH V2, SFTP, SNMP V3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| SSLyze, NMAP, Wireshark |'
  prefs: []
  type: TYPE_TB
- en: '| Storage of data |'
  prefs: []
  type: TYPE_TB
- en: Check whether sensitive information is encrypted
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Check that the permissions of the files are properly configured
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| TruffleHog: [https://github.com/dxa4481/truffleHog](https://github.com/dxa4481/truffleHog)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Encryption of data | No uses of weak encryption algorithms, such as MD5,
    RC4, Jackfish, and Tripple DES | Code-scanning tools: [https://github.com/floyd-fuh/crass/blob/master/grep-it.sh](https://github.com/floyd-fuh/crass/blob/master/grep-it.sh)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Data access and auditing |'
  prefs: []
  type: TYPE_TB
- en: Logging any sensitive data query
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CL permissions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| AuthMatrix: [https://github.com/SecurityInnovation/AuthMatrix](https://github.com/SecurityInnovation/AuthMatrix)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Removal of data |'
  prefs: []
  type: TYPE_TB
- en: Check that there is no sensitive information in temp, exception files, and cookies
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Check any plain-text sensitive information in the memory and cache
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| GCOREWinHex: [https://www.x-ways.net/winhex/](https://www.x-ways.net/winhex/)LaZagne: [https://github.com/AlessandroZ/LaZagne](https://github.com/AlessandroZ/LaZagne)
    |'
  prefs: []
  type: TYPE_TB
- en: Refer to [Chapter 10](part0172.html#5410O0-993778ed0b7e4894800dd46a3f389a65),*Security-Testing
    Plan and Practices*, for more details.
  prefs: []
  type: TYPE_NORMAL
- en: '**Q: What are the industry security testing guides of each security domain?**'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Security domain** | **Security testing guide** |'
  prefs: []
  type: TYPE_TB
- en: '| Web security testing |'
  prefs: []
  type: TYPE_TB
- en: OWASP Testing Guide: **[https://www.owasp.org/index.php/OWASP_Testing_Project](https://www.owasp.org/index.php/OWASP_Testing_Project)**
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Virtualization security testing |'
  prefs: []
  type: TYPE_TB
- en: NIST 800-125 Guide to Security for Full Virtualization Technologies: [https://csrc.nist.gov/publications/detail/sp/800-125/final](https://csrc.nist.gov/publications/detail/sp/800-125/final)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: PCI DSS Virtualization Guidelines: [https://www.pcisecuritystandards.org/documents/Virtualization_InfoSupp_v2.pdf](https://www.pcisecuritystandards.org/documents/Virtualization_InfoSupp_v2.pdf)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Red Hat Virtualization Security Guide: [https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html-single/virtualization_security_guide/index](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html-single/virtualization_security_guide/index)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SANS Top Virtualization Security Mistakes: [https://www.sans.org/reading-room/whitepapers/analyst/top-virtualization-security-mistakes-and-avoid-them-34800](https://www.sans.org/reading-room/whitepapers/analyst/top-virtualization-security-mistakes-and-avoid-them-34800)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ISCACA Virtualization Security Checklist: [http://www.isaca.org/Knowledge-Center/Research/Documents/Virtualization-Security-Checklist_res_Eng_1010.pdf](http://www.isaca.org/Knowledge-Center/Research/Documents/Virtualization-Security-Checklist_res_Eng_1010.pdf)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Firmware security testing |'
  prefs: []
  type: TYPE_TB
- en: GitHub Awesome Firmware Security: [https://github.com/PreOS-Security/awesome-firmware-security](https://github.com/PreOS-Security/awesome-firmware-security)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GitHub Security of BIOS/UEFI System Firmware from Attacker and Defender Perspectives: [https://github.com/rmusser01/Infosec_Reference/blob/master/Draft/BIOS%20UEFI%20Attacks%20Defenses.md](https://github.com/rmusser01/Infosec_Reference/blob/master/Draft/BIOS%20UEFI%20Attacks%20Defenses.md)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Big data security testing |'
  prefs: []
  type: TYPE_TB
- en: NIST 1500-4 Big Data Interoperability Framework: [https://www.nist.gov/publications/nist-big-data-interoperability-framework-volume-4-security-and-privacy](https://www.nist.gov/publications/nist-big-data-interoperability-framework-volume-4-security-and-privacy)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: CSA Big Data Security and Privacy Handbook: [https://downloads.cloudsecurityalliance.org/assets/research/big-data/BigData_Security_and_Privacy_Handbook.pdf](https://downloads.cloudsecurityalliance.org/assets/research/big-data/BigData_Security_and_Privacy_Handbook.pdf)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Privacy |'
  prefs: []
  type: TYPE_TB
- en: GDPR Checklist: [https://gdprchecklist.io/](https://gdprchecklist.io/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: NIST SP 800-122  Guide to Protecting the Confidentiality of **Personally Identifiable
    Information** (**PII**): [https://csrc.nist.gov/publications/detail/sp/800-122/final](https://csrc.nist.gov/publications/detail/sp/800-122/final)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| IoT security |'
  prefs: []
  type: TYPE_TB
- en: ENISA Baseline Security Recommendations for IoT: [https://www.enisa.europa.eu/publications/baseline-security-recommendations-for-iot/](https://www.enisa.europa.eu/publications/baseline-security-recommendations-for-iot/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GSMA IOT Security Assessment: [https://www.gsma.com/iot/future-iot-networks/iot-security-guidelines/](https://www.gsma.com/iot/future-iot-networks/iot-security-guidelines/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Container security |'
  prefs: []
  type: TYPE_TB
- en: NIST 800-190 Application Container Security Guide: [https://nvlpubs.nist.gov/nistpubs/specialpublications/nist.sp.800-190.pdf](https://nvlpubs.nist.gov/nistpubs/specialpublications/nist.sp.800-190.pdf)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Mobile security |'
  prefs: []
  type: TYPE_TB
- en: OWASP **Mobile Security Testing Guide** (**MSTG**): [https://github.com/OWASP/owasp-mstg](https://github.com/OWASP/owasp-mstg)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Refer to [Chapter 10](part0172.html#5410O0-993778ed0b7e4894800dd46a3f389a65),
    *Security-Testing Plan and Practices*, for more details.
  prefs: []
  type: TYPE_NORMAL
- en: '**Q: What are the suggested white box review tools that use regular expressions
    or string patterns to search for high-risk source code?**'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Tools** | **References** |'
  prefs: []
  type: TYPE_TB
- en: '| DREK | Tool: [https://github.com/chrisallenlane/drek](https://github.com/chrisallenlane/drek)Signature: [https://github.com/chrisallenlane/drek-signatures/tree/master/signatures](https://github.com/chrisallenlane/drek-signatures/tree/master/signatures) 
    (refer to the `*.yml` file) |'
  prefs: []
  type: TYPE_TB
- en: '| GrAudit     | Tool: [https://github.com/wireghoul/graudit](https://github.com/wireghoul/graudit)Signature: [https://github.com/wireghoul/graudit/tree/master/signatures](https://github.com/wireghoul/graudit/tree/master/signatures) (refer
    to the `*.db` file) |'
  prefs: []
  type: TYPE_TB
- en: '| **Visual Code Grepper** (**VCG**) | Tool: [https://github.com/nccgroup/VCG](https://github.com/nccgroup/VCG)Signature: [https://github.com/nccgroup/VCG/tree/master/VisualCodeGrepper/bin/Release](https://github.com/nccgroup/VCG/tree/master/VisualCodeGrepper/bin/Release) (refer
    to the `*.conf` file) |'
  prefs: []
  type: TYPE_TB
- en: '| CRASS Grep It  | The CRASS Grep IT tool is recommended because it requires
    no dependencies. All it needs is one shell script to execute.Tool: [https://github.com/floyd-fuh/crass/blob/master/grep-it.sh](https://github.com/floyd-fuh/crass/blob/master/grep-it.sh)Signature: [https://github.com/floyd-fuh/crass/blob/master/grep-it.sh](https://github.com/floyd-fuh/crass/blob/master/grep-it.sh) 
    |'
  prefs: []
  type: TYPE_TB
- en: Refer to the tips shown in [Chapter 11](part0192.html#5N3C00-993778ed0b7e4894800dd46a3f389a65), *Whitebox
    Testing Tips*, for more details.
  prefs: []
  type: TYPE_NORMAL
- en: '**Q: What are the recommended open source tools for BDD security frameworks?**'
  prefs: []
  type: TYPE_NORMAL
- en: '| **BDD security frameworks** | **Default security tools included** |'
  prefs: []
  type: TYPE_TB
- en: '| BDD-Security | OWASP ZAP, SSLyze, NessusBDD-Security is based on Java and
    Cucumber. BDD-Security: [https://www.continuumsecurity.net/bdd-security/](https://www.continuumsecurity.net/bdd-security/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| MITTN | BurpSuite, SSlyze, and Radamsa API fuzzingMITTN is based on Python
    and Behave. MITTN: [https://github.com/F-Secure/mittn](https://github.com/F-Secure/mittn)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Gauntlt | CURL, NMAP, SSLyze, SQLmap, Garmr, Heartbleed, dirb, Arachni Gauntlt: [http://gauntlt.org/](http://gauntlt.org/)
    |'
  prefs: []
  type: TYPE_TB
- en: Refer to [Chapter 12](part0206.html#64EJS0-993778ed0b7e4894800dd46a3f389a65),
    *Security Testing Toolkits*, for more details.
  prefs: []
  type: TYPE_NORMAL
- en: '**Q: What are the suggested open source Docker security scanning tools?**'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Docker security tools** | **Purpose and reference** |'
  prefs: []
  type: TYPE_TB
- en: '| Docker Bench | Docker Bench is an automated script that checks whether the
    system is compliant with Docker security best practices.The scanning rules are
    based on the CIS Docker Security Benchmark.Docker Bench:[ https://github.com/docker/docker-bench-security/](https://github.com/docker/docker-bench-security/)CIS
    Docker Security Benchmark:[ https://benchmarks.cisecurity.org/](https://benchmarks.cisecurity.org/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Actuary | Actuary works in a similar way to Docker Bench. Additionally, Actuary
    can do the scanning based on user-defined security profiles provided by the Docker
    security community. Actuary: [https://github.com/diogomonica/actuary/](https://github.com/diogomonica/actuary/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Clair | Clair is a container image security static analyzer for CVEs. Clair: [https://github.com/coreos/clair](https://github.com/coreos/clair)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Anchor Engine | The Anchor Engine scan the  Docker images for known vulnerable
    CVEs.Anchor Engine: [Https://github.com/anchore/anchore-engine](https://github.com/anchore/anchore-engine)In
    addition, the Anchor also provides cloud version, refer to the ''Anchor Cloud''
    |'
  prefs: []
  type: TYPE_TB
- en: '| Falco | Falco is a Docker container runtime security tool that can detect
    anomalous activities.  Falco: [https://sysdig.com/opensource/falco/](https://sysdig.com/opensource/falco/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Dagda | Dagda is an integrated Docker security tool that provides runtime
    anomalous activities detection (Sysdig Falco), vulnerability (CVE) analysis (OWASP
    dependency check, Retire.JS), and malware scanning (CalmAV). Dagda: [https://github.com/eliasgranderubio/dagda/](https://github.com/eliasgranderubio/dagda/)
    |'
  prefs: []
  type: TYPE_TB
- en: Refer to [Chapter 12](part0206.html#64EJS0-993778ed0b7e4894800dd46a3f389a65),
    *Security Testing Toolkits*, for more details.
  prefs: []
  type: TYPE_NORMAL
- en: '**Q: What are the integrated security testing tools that can consolidate the
    various testing tool results?**'
  prefs: []
  type: TYPE_NORMAL
- en: Faraday
  prefs: []
  type: TYPE_NORMAL
- en: Faraday is an integrated penetration testing environment and provides a dashboard
    for all the testing results. It integrates with over 50 security tools.
  prefs: []
  type: TYPE_NORMAL
- en: Faraday: [https://www.faradaysec.com/#why-faraday](https://www.faradaysec.com/#why-faraday) Refer
    to [https://github.com/infobyte/faraday/wiki/Plugin-List ](https://github.com/infobyte/faraday/wiki/Plugin-List)for
    a list of the available plugins.
  prefs: []
  type: TYPE_NORMAL
- en: '| **Tools** | **Tools included by default** |'
  prefs: []
  type: TYPE_TB
- en: '| JackHammer | JackHammer, provided by Ola, is an integrated security testing
    tool. It provides a dashboard to consolidate all the testing results. The key
    difference is that JackHammer includes mobile app security scanning and source
    code static analysis tools. The supported open source security scanners include
    Brakeman, Bundler-Audit, Dawnscanner, FindSecurityBugs, PMD, RetireJS, Arachni,
    Trufflehog, Androbugs, Androguard, and NMAP. JackHammer: [https://github.com/olacabs/jackhammer](https://github.com/olacabs/jackhammer) [Ola: ](https://github.com/olacabs/jackhammer)[https://jch.olacabs.com/userguide/](https://jch.olacabs.com/userguide/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Mozilla Minion | Mozilla Minion is also an integrated security testing tool
    that includes the following plugins by default:'
  prefs: []
  type: TYPE_NORMAL
- en: ZAP
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nmap
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Skipfish
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SSLScan
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mozilla Minion: [https://github.com/mozilla/minion/](https://github.com/mozilla/minion/)
    |
  prefs: []
  type: TYPE_NORMAL
- en: '| Penetration Testing Toolkit | The Penetration Testing Toolkit provides a unified web
    interface for many Linux scanning tools, such as Nmap, nikto, WhatWeb, SSLyze, fping,
    URLCrazy, lynx, mtr, nbtscan, automater, and shellinabox. Penetration Testing
    Toolkit: [https://github.com/veerupandey/Penetration-Testing-Toolkit](https://github.com/veerupandey/Penetration-Testing-Toolkit)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Seccubus | The key advantage of using Seccubus is that it integrates with
    various kinds of vulnerability scanner testing results and also compares the differences
    between each scan. It includes the following scanners:'
  prefs: []
  type: TYPE_NORMAL
- en: Nessus
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: OpenVAS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: NMAP
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nikto
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Medusa
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SSLyze
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SSL Labs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: TestSSL.sh
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SkipFish
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ZAP
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Seccubus: [https://github.com/schubergphilis/Seccubus](https://github.com/schubergphilis/Seccubus)
    |
  prefs: []
  type: TYPE_NORMAL
- en: '| OWTF | **Offensive Web Testing Framework** (**OWTF**) is an integrated security
    testing cases which include the  OWASP testing guide, PTES and NIST testing standards. OWTF: [https://owtf.github.io/](https://owtf.github.io/)OWTF
    guide: [https://owtf.github.io/online-passive-scanner/](https://owtf.github.io/online-passive-scanner/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| RapidScan | RapidScan is a multi-tool that contains a web-vulnerability scanner.
    The security scanning tools that it contains include Nmap, dnsrecon, uniscan, sslyze,
    fierce, theharvester, and golismero. |'
  prefs: []
  type: TYPE_TB
- en: '| DefectDojo | The OWASP DefectDojo is a security tool that can import and
    consolidate various security testing tool outputs into one management dashboard. DefectDojo: [https://github.com/DefectDojo/django-DefectDojo](https://github.com/DefectDojo/django-DefectDojo)
    |'
  prefs: []
  type: TYPE_TB
- en: Refer to [Chapter 12](part0206.html#64EJS0-993778ed0b7e4894800dd46a3f389a65), *Security
    Testing Toolkits*, for more details
  prefs: []
  type: TYPE_NORMAL
- en: '**Q: What are the common security Jenkins plugins?**'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Jenkins plugins** | **Description** |'
  prefs: []
  type: TYPE_TB
- en: '| ZAP | ZAP is a dynamic web scanning tool. ZAP: [https://plugins.jenkins.io/zap](https://plugins.jenkins.io/zap)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Arachni Scanner | Arachni Scanner is a dynamic web-scanning tool. Arachni
    Scanner: [https://plugins.jenkins.io/arachni-scanner](https://plugins.jenkins.io/arachni-scanner)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Dependency Check plugin | The Dependency Check plugin detects vulnerable
    dependency components. Dependency Check plugin: [https://plugins.jenkins.io/dependency-check-jenkins-plugin](https://plugins.jenkins.io/dependency-check-jenkins-plugin)
    |'
  prefs: []
  type: TYPE_TB
- en: '| FindBugs | FindBugs is a static code analysis tool for Java. FindBugs: [https://plugins.jenkins.io/findbugs](https://plugins.jenkins.io/findbugs)
    |'
  prefs: []
  type: TYPE_TB
- en: '| SonarQube | SonarQube is a code quality analysis tool. SonarQube: [https://plugins.jenkins.io/sonar](https://plugins.jenkins.io/sonar)
    |'
  prefs: []
  type: TYPE_TB
- en: '| 360 FireLine | 360 FireLine is a static code scanning tool for Java. 360
    FireLine: [https://plugins.jenkins.io/fireline](https://plugins.jenkins.io/fireline)
    |'
  prefs: []
  type: TYPE_TB
- en: '| HTML Publisher plugin | The HTML Publisher plugin generates the testing results
    in HTML. HTML Publisher plugin: [https://plugins.jenkins.io/htmlpublisher](https://plugins.jenkins.io/htmlpublisher)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Log Parser plugin | The Log Parse plugin parses the testing results of security
    testing tools, such as the number of XSS detected or the number of errors. Log
    Parse plugin: [https://plugins.jenkins.io/log-parser](https://plugins.jenkins.io/log-parser)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Static Analysis Collector | The Static Analysis Collector plugin can consolidate
    the results from all other static code analysis plugins, such as Checkstyle, Dry,
    FindBugs, PMD, and Android Lin. Static Analysis Collector: [https://plugins.jenkins.io/analysis-collector](https://plugins.jenkins.io/analysis-collector)
    |'
  prefs: []
  type: TYPE_TB
- en: Refer to [Chapter 13](part0217.html#6EUA20-993778ed0b7e4894800dd46a3f389a65),
    *Security Automation with the CI Pipeline*, for more details.
  prefs: []
  type: TYPE_NORMAL
- en: DevSecOps for the operations team
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Q. What are the suggested open source security monitoring tools corresponding
    to the 20 CIS Critical Security Controls for Effective Cyber Defense?**'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Cyber security controls** | **Examples of security techniques** |'
  prefs: []
  type: TYPE_TB
- en: '| CSC1: Inventory of Authorized and Unauthorized Devices | Endpoint security,
    asset management |'
  prefs: []
  type: TYPE_TB
- en: '| CSC2: Inventory of Authorized and Unauthorized Software | Endpoint security,
    asset management |'
  prefs: []
  type: TYPE_TB
- en: '| CS3: Secure Configurations for Hardware and Software on Mobile Devices, Laptops,
    Workstations, and Servers. | CIS Security Benchmark, OpenSCAP |'
  prefs: []
  type: TYPE_TB
- en: '| CSC4: Continuous Vulnerability Assessment and Remediation | OpenVAS: [http://www.openvas.org/](http://www.openvas.org/)Nmap: [https://nmap.org/](https://nmap.org/)OWASP Dependency
    Check: [https://www.owasp.org/index.php/OWASP_Dependency_Check](https://www.owasp.org/index.php/OWASP_Dependency_Check)
    |'
  prefs: []
  type: TYPE_TB
- en: '| CSC 5: Controlled Use of Administrative Privileges | Strong password complexityAuditing
    logs for root and administrator activities |'
  prefs: []
  type: TYPE_TB
- en: '| CSC 6: Maintenance, Monitoring, and Analysis of Audit Logs | Syslog, event
    logs, SIEMELK: [https://bitnami.com/stack/elk](https://bitnami.com/stack/elk)GrayLog: [https://www.graylog.org/security](https://www.graylog.org/security)Security
    Onion: [https://github.com/Security-Onion-Solutions](https://github.com/Security-Onion-Solutions)Malicious
    Traffic Detection: [https://github.com/stamparm/](https://github.com/stamparm/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| CSC 7: Email and Web Browser Protections | Email protection, antispam, web
    application firewallModSecurity: [https://www.modsecurity.org/](https://www.modsecurity.org/)Email
    Encryption Scramble: [https://dcposh.github.io/scramble/](http://dcposch.github.io/scramble/)Linux
    Malware Detection: [https://github.com/rfxn/linux-malware-detect](https://github.com/rfxn/linux-malware-detect)
    |'
  prefs: []
  type: TYPE_TB
- en: '| CSC 8: Malware Defenses | Endpoint protection, antivirus, HIDS/HIPSOSSEC: [https://github.com/ossec/](https://github.com/ossec/)ClamAV: [https://www.clamav.net/](https://www.clamav.net/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| CSC 9: Limitation and Control of Network Ports, Protocols, and Services |
    NMAP, OpenSCAP |'
  prefs: []
  type: TYPE_TB
- en: '| CSC 10: Data Recovery Capability | Bacula: [https://blog.bacula.org/](https://blog.bacula.org/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| CSC 11: Secure Configurations for Network Devices such as Firewalls, Routers,
    and Switches | CIS Security Benchmark: [https://www.cisecurity.org/cis-benchmarks/](https://www.cisecurity.org/cis-benchmarks/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| CSC 12: Boundary Defense | Firewall, IPS, HoneyPotSecurity Onion: [https://github.com/Security-Onion-Solutions](https://github.com/Security-Onion-Solutions)
    |'
  prefs: []
  type: TYPE_TB
- en: '| CSC 13: Data Protection | OSQuery: [https://github.com/facebook/osquery/](https://github.com/facebook/osquery/)Data
    Vault:  [https://github.com/hashicorp/vault](https://github.com/hashicorp/vault)
    |'
  prefs: []
  type: TYPE_TB
- en: '| CSC 14: Controlled Access Based on the Need to Know | Data classification,
    firewalls, VLAN, logging |'
  prefs: []
  type: TYPE_TB
- en: '| CSC 15: Wireless Access Control | VPN, SSL certificate, WAP2 |'
  prefs: []
  type: TYPE_TB
- en: '| CSC 16: Account Monitoring and Control | Log analysis toolsFail2ban: [https://github.com/fail2ban/fail2ban/](https://github.com/fail2ban/fail2ban/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| CSC 17: Security Skills Assessment and Appropriate Training to Fill Gaps
    | Security training and labs resourcesCybrary: [https://www.cybrary.it/](https://www.cybrary.it/)Git
    Awesome information security resource collections: [https://github.com/onlurking/awesome-infosec](https://github.com/onlurking/awesome-infosec)
    |'
  prefs: []
  type: TYPE_TB
- en: '| CSC 18: Application Software Security | OWASP: [https://www.owasp.org/index.php/Category:OWASP_Project](https://www.owasp.org/index.php/Category:OWASP_Project) 
    |'
  prefs: []
  type: TYPE_TB
- en: '| CSC 19: Incident Response and Management | NIST SP800-61 Computer Security
    Incident Handling Guide**Fast Incident Response** (**FIR**): [https://github.com/certsocietegenerale/FIR](https://github.com/certsocietegenerale/FIR)
    |'
  prefs: []
  type: TYPE_TB
- en: '| CSC 20: Penetration Tests and Red Team Exercises | Refer to some of the open
    source tools we suggested in the [Chapter 12](part0206.html#64EJS0-993778ed0b7e4894800dd46a3f389a65),
    *Security Testing Toolkits*. |'
  prefs: []
  type: TYPE_TB
- en: '**Q: What are the recommended open source tools that can simulate the hacking
    attacks to test the effectiveness of the security monitoring?**'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Tools** | **Simulation of APT** |'
  prefs: []
  type: TYPE_TB
- en: '| DumpsterFire   | DumpsterFire includes various kinds of simulated attack
    scenarios, such as account attacks, file downloads, drop files, command executions,
    and web access in Python. It provides a user-friendly menu to customize the security
    incidents, even for those who don’t understand Python. DumpsterFire: [https://github.com/TryCatchHCF/DumpsterFire](https://github.com/TryCatchHCF/DumpsterFire)
    |'
  prefs: []
  type: TYPE_TB
- en: '| METTA  | METTA allows the security team to customize the simulation of APT
    attacks based on MITRE ATT&CK. The simulated APT behaviors defined by YAML includes
    credential access, evasion, discovery, execution, exfiltration, lateral movement,
    persistence, and privilege escalation.METTA: [https://github.com/uber-common/metta](https://github.com/uber-common/metta)MITRE
    ATT&CK: [https://attack.mitre.org/wiki/Main_Page](https://attack.mitre.org/wiki/Main_Page)
    |'
  prefs: []
  type: TYPE_TB
- en: '| **Red Team Automation** (**RTA**) | RTA is a collection of Python and PowerShell
    scripts that can simulate over 50 malicious behaviors based on ATT&CK. RTA: [https://github.com/endgameinc/RAT](https://github.com/endgameinc/RAT)
    |'
  prefs: []
  type: TYPE_TB
- en: '| **Atomic Red Team**(**ART**) | ART provides Windows, macOS, and Linux shell
    scripts to simulate a MITRE ATT&CK. ART: [https://github.com/redcanaryco/atomic-red-team](https://github.com/redcanaryco/atomic-red-team)
    |'
  prefs: []
  type: TYPE_TB
- en: '| APT Simulator | APT Simulator is a collection of Windows BAT scripts that
    simulate APT behaviors. APT Simulator: [https://github.com/NextronSystems/APTSimulator](https://github.com/NextronSystems/APTSimulator)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Network Flight Simulator | Network Flight Simulator can be used to generate
    malicious network traffic, such as DNS tunneling, C2 communication, DGA traffic,
    and port scans. Network Flight Simulator: [https://github.com/alphasoc/flightsim](https://github.com/alphasoc/flightsim)
    |'
  prefs: []
  type: TYPE_TB
- en: '**Q: What are the recommended industry references for the security incident
    responses?**'
  prefs: []
  type: TYPE_NORMAL
- en: NIST SP 800-62 Computer Security Incident Handling Guide: [https://csrc.nist.gov/publications/detail/sp/800-61/rev-2/final](https://csrc.nist.gov/publications/detail/sp/800-61/rev-2/final)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SANS Incident Handler Handbook: [https://www.sans.org/reading-room/whitepapers/incident/incident-handlers-handbook-33901](https://www.sans.org/reading-room/whitepapers/incident/incident-handlers-handbook-33901)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: ENISA Cloud Computing—benefits, risks, and recommendations for information security: [https://resilience.enisa.europa.eu/cloud-security-and-resilience/publications/cloud-computing-benefits-risks-and-recommendations-for-information-security](https://resilience.enisa.europa.eu/cloud-security-and-resilience/publications/cloud-computing-benefits-risks-and-recommendations-for-information-security)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MITRE Ten Strategies of a World-Class Cyber Security Operations Center: [https://www.mitre.org/sites/default/files/publications/pr-13-1028-mitre-10-strategies-cyber-ops-center.pdf](https://www.mitre.org/sites/default/files/publications/pr-13-1028-mitre-10-strategies-cyber-ops-center.pdf)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: FIRST: [https://www.first.org/education/FIRST_PSIRT_Service_Framework_v1.0](https://www.first.org/education/FIRST_PSIRT_Service_Framework_v1.0)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Q: What are the typical functions in a security operation team structure?**'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Key functions** | **Description** |'
  prefs: []
  type: TYPE_TB
- en: '| Security Incident Analysis and Forensic Analysis (Call Center) | The security
    incident analysis and forensic analysis team may include the Tier 1 case handling
    in the 24 x 7 security monitoring center. A Tier 1 case is typically handled by
    following the predefined checklist or SOP to perform an initial root-cause analysis
    or mitigation based on the incident. |'
  prefs: []
  type: TYPE_TB
- en: '| Security Operations and Administration | The security operations and administration
    team involves the following routine security activities. These are regular security
    activities for checking the production environments:'
  prefs: []
  type: TYPE_NORMAL
- en: Network scanning (Weekly)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Vulnerability scanning (Weekly)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Penetration testing (Monthly)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Security awareness training (Bi-monthly)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Security log trending analysis (Monthly)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Security administration and monitoring (Daily)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Patch or security signature update (Daily/weekly)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Security Tools Engineering | The security tools engineering team implements
    security tools for the security call center or security operations team. The security
    tools can be security automation, suspicious behavior detectors, forensic analysis
    tools, security configuration checkers, threat intelligence integration, threat
    signature creators, and so on. |'
  prefs: []
  type: TYPE_TB
- en: '**Q:  What are the recommended open source tools for the security forensics?**'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Category** | **Tools** | **Purpose and usage scenario** |'
  prefs: []
  type: TYPE_TB
- en: '| Log collection | OSX Collector | The macOS X Log Collector is an automated
    forensic evidence collector for macOS X. The Python script, `osxcollector.py`,
    is the code phrase that does all the collection jobs. The tool will generate a
    JSON file for the summary of the collected information. OSX Collector: [https://github.com/Yelp/osxcollector](https://github.com/Yelp/osxcollector)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Log collection | IR Rescue | IR Rescue is a Windows and Linux script for
    collecting host forensic data.  IR Rescue: [https://github.com/diogo-fernan/ir-rescue/](https://github.com/diogo-fernan/ir-rescue/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Log collection | FastIR Collector | FastIR Collector for Linux only requires
    one Python script to collect all related logs in Linux. FastIR Collector: [https://github.com/SekoiaLab/Fastir_Collector_Linux](https://github.com/SekoiaLab/Fastir_Collector_Linux)For
    Windows versions, it will require additional modules and tools.  Refer to [https://github.com/SekoiaLab/Fastir_Collector ](https://github.com/SekoiaLab/Fastir_Collector)for
    more information. |'
  prefs: []
  type: TYPE_TB
- en: '| Malware detector | Linux Malware Scanner | The Linux Malware Scanner is a
    free malware scanner for Linux.CalmAV: [https://www.calmav.net/downloads](https://www.calmav.net/downloads)**Linux
    Malware Detect** (**LMD**): [https://github.com/rfxn/linux-maware-detect](https://github.com/rfxn/linux-maware-detect)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Suspicious files analysis | Cuckoo | Cuckoo is an automated malware analysis
    system. Cuckoo: [https://cuckoosandbox.org/](https://cuckoosandbox.org/) |'
  prefs: []
  type: TYPE_TB
- en: '| Client/server log collector and analysis | GRR Rapid Response | Google Remote
    Live forensics for incident response will require the installation of a Python
    agent on the target hosts to collect the logs and the Python server to do the
    analysis. GRR Rapid Response: [https://github.com/google/grr](https://github.com/google/grr)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Client/server log collector and analysis | OSQuery | The OSQuery works in
    a similar way to GRR. The key difference is that OSQuery provides an SQL query
    to do the endpoint analysis. OSQuery: [https://osquery.io/](https://osquery.io/)Additional
    information: [https://osquery.readthedocs.io/en/stable/deployment/anomaly-detection/](https://osquery.readthedocs.io/en/stable/deployment/anomaly-detection/)
    |'
  prefs: []
  type: TYPE_TB
- en: '**Q: What are the toolsets that can help to build a threat intelligence solution?**'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Category** | **Open source security tools** |'
  prefs: []
  type: TYPE_TB
- en: '| Log collector/sensor | Syslog-NG: [https://github.com/balabit/syslog-ng](https://github.com/balabit/syslog-ng)Rsyslog: [https://github.com/rsyslog/rsyslog](https://github.com/rsyslog/rsyslog)FileBeat: [https://www.elastic.co/products/beats/filebeat](https://www.elastic.co/products/beats/filebeat)LogStash: [https://www.elastic.co/products/logstash](https://www.elastic.co/products/logstash)
    |'
  prefs: []
  type: TYPE_TB
- en: '| SIEM/visualization | Kibana: [https://www.elastic.co/products/kibana](https://www.elastic.co/products/kibana)ElasticSearch: [https://www.elastic.co/](https://www.elastic.co/)AlienValut
    OSSIM: [https://www.alienvault.com/products/ossim](https://www.alienvault.com/products/ossim)Grafana: [https://grafana.com/](https://grafana.com/)GrayLog: [https://www.graylog.org/](https://www.graylog.org/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Threat intelligence platform | MISP - Open source threat intelligence platform MISP: [http://www.misp-project.org](http://www.misp-project.org)Additional
    information: [http://csirtgadgets.org/collective-intelligence-framework/](http://csirtgadgets.org/collective-intelligence-framework/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Threat intelligence feeds | External threat feeds for blacklised IPs and
    firewall rule suggestions:[https://rules.emergingthreats.net/fwrules/](https://rules.emergingthreats.net/fwrules/)[https://www.spamhaus.org/drop/](https://www.spamhaus.org/drop/)[https://rules.emergingthreats.net/fwrules/emerging-Block-IPs.txt](https://rules.emergingthreats.net/fwrules/emerging-Block-IPs.txt)[https://check.torproject.org/exit-addresses](https://check.torproject.org/exit-addresses)[http://iplists.firehol.org/](http://iplists.firehol.org/)
    |'
  prefs: []
  type: TYPE_TB
- en: '**Q: What are the open source tools that can help us to perform security scanning?**'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Category** | **Open source security tools** |'
  prefs: []
  type: TYPE_TB
- en: '| All-in-one security scanning (host, network, visualization) | Security Onion
    includes several open source security tools, such as  Elasticsearch, Logstash,
    Kibana, Snort, Suricata, Bro, OSSEC, Sguil, Squert, and NetworkMiner.Security
    Onion: [https://github.com/Security-Onion-Solutions](https://github.com/Security-Onion-Solutions)
    |'
  prefs: []
  type: TYPE_TB
- en: '| All-in-one host-based IDS, secure configuration, and visualization | The
    Wazuh integrates the OSSEC (host-based IDS), OpenSCAP (secure configuration scanning),
    and Elastic Stack (threat visualization). Wazuh: [https://github.com/wazuh/wazuh](https://github.com/wazuh/wazuh)Rules: [https://github.com/wazuh/wazuh-ruleset/tree/master/rules](https://github.com/wazuh/wazuh-ruleset/tree/master/rules)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Secure configuration | OpenSCAP: [https://www.open-scap.org/](https://www.open-scap.org/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Vulnerability | OpenVAS: [http://www.openvas.org/](http://www.openvas.org/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Antivirus | CalmAV: [https://www.clamav.net/](https://www.clamav.net/)LMD: [https://github.com/rfxn/linux-malware-detect](https://github.com/rfxn/linux-malware-detect)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Host IDS/IPS | OSSEC: [https://github.com/ossec/ossec-hids](https://github.com/ossec/ossec-hids)OSSEC
    host IDS rules:  [https://github.com/ossec/ossec-hids/tree/master/etc/rules](https://github.com/ossec/ossec-hids/tree/master/etc/rules)Samhain:  [https://www.la-samhna.de/samhain/](https://www.la-samhna.de/samhain/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| **Web application firewall** (**WAF**) | ModSecurity: [https://github.com/SpiderLabs/ModSecurity](https://github.com/SpiderLabs/ModSecurity)Rules: [https://github.com/SpiderLabs/owasp-modsecurity-crs/tree/v3.0/master/rules](https://github.com/SpiderLabs/owasp-modsecurity-crs/tree/v3.0/master/rules)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Network IDS/IPS | Snort: [https://www.snort.org/](https://www.snort.org/)Snort
    rules: [https://snort.org/advisories/talos-rules-2018-06-05](https://snort.org/advisories/talos-rules-2018-06-05)Suricata: [https://suricata-ids.org/](https://suricata-ids.org/)Suricata
    rules: [https://github.com/OISF/suricata/tree/master/rules](https://github.com/OISF/suricata/tree/master/rules)
    |'
  prefs: []
  type: TYPE_TB
- en: '| MySQL AUDITt | AUDIT Plugin for MySQL: [https://github.com/mcafee/mysql-audit](https://github.com/mcafee/mysql-audit)Security
    Plugins for MySQL: [https://dev.mysql.com/doc/mysql-security-excerpt/5.7/en/security-plugins.html](https://dev.mysql.com/doc/mysql-security-excerpt/5.7/en/security-plugins.html)
    |'
  prefs: []
  type: TYPE_TB
- en: '**Q: What are the security checklists and tools that are needed for every new
    release?**'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Security category** | **Security testing approaches** | **Suggested security
    testing tools** |'
  prefs: []
  type: TYPE_TB
- en: '| Hidden communication ports or channels |'
  prefs: []
  type: TYPE_TB
- en: Ensure there are no hidden communication ports or backdoors.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ensure there are no hidden hard-coded secrets, passwords, or hard keys.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ensure there are no unnecessary system maintenance tools.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Initiate a source code review for networking communication, such as Java-related
    API `connect()`, `getPort()`, `getLocalPort()`, `Socket()`, `bind()`, `accept()`,
    and `ServerSocket()`.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Listening to 0.0.0.0 is forbidden.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| NMAPGrauditTruffleHogSnallygasterHpingmasscan |'
  prefs: []
  type: TYPE_TB
- en: '| Privacy information |'
  prefs: []
  type: TYPE_TB
- en: Search for the plaintext password and key in the source code.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Search for the personal information for GDPR compliance.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Check that the personal information can be modified and removed by the end user.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Check that the personal information can be removed within a defined period.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| TruffleHogBlueflowerYARAPrivacyScoreSnallygaster |'
  prefs: []
  type: TYPE_TB
- en: '| Secure communication |'
  prefs: []
  type: TYPE_TB
- en: SSH v2 instead of Telnet
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SFTP instead of FTP
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: TLS 1.2 instead of SSL, TLS 1.1
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| NMAPWireSharkSSLyzeSSL/TLS tester |'
  prefs: []
  type: TYPE_TB
- en: '| Third-party components. |'
  prefs: []
  type: TYPE_TB
- en: CVE check
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Known vulnerabilities check
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hidden malicious code or secrets check
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| OWASP Dependency checkLMD (Linux Malware Detection)OpenVASNMAPCVEChecker
    |'
  prefs: []
  type: TYPE_TB
- en: '| Cryptography |'
  prefs: []
  type: TYPE_TB
- en: Ensure there is no weak encryption algorithm
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ensure there are no secret files on the public web interfaces
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| GrauditSSLyzeSnallygaster |'
  prefs: []
  type: TYPE_TB
- en: '| Audit logging | Ensure the operation and security team can log the following
    scenarios:'
  prefs: []
  type: TYPE_NORMAL
- en: Nonquery operations, including success and failure actions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nonquery scheduled tasks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: API access or tool connections to execute administration tasks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| GREP |'
  prefs: []
  type: TYPE_TB
- en: '| DoS attacks | The testing of the DOS is to ensure whether the application
    failure occurred as expected. The DOS scenario may cover the following:'
  prefs: []
  type: TYPE_NORMAL
- en: TCP Sync flooding
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: HTTP Slow
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: HTTP Post flooding
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: NTP DOS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: SSL DOS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| PwnlorisSlowlorisSynfloodThc-sll-dosWreckuestsntpDOS |'
  prefs: []
  type: TYPE_TB
- en: '| Web security | This can refer to the OWASP Testing Guide, and OWASP Top 10:'
  prefs: []
  type: TYPE_NORMAL
- en: Injection
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Broken authentication
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sensitive data exposure
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: XXE
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Broken access control
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Security misconfiguration
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: XSS
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Insecure deserialization
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Known vulnerabilities
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Insufficient logging and monitoring
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| Refer to the OWASP Testing Guide v4.OWASP ZAPBurpSuiteArachni ScannerSQLMap
    |'
  prefs: []
  type: TYPE_TB
- en: '| Secure configuration | Ensure the configurations of the applications, web
    services, databases, and OS are secure. The secure configurations are based on
    the CIS Security Benchmark and OpenSCAP. | OpenSCAPDocker Bench SecurityClair
    |'
  prefs: []
  type: TYPE_TB
- en: '| Fuzz testing | The purpose of fuzz testing is to generate dynamic testing
    data as input to check whether the application will fail unexpectedly. | API FuzzerRadamsaAmerican
    Fuzzy lopFuzzDBWfuzz |'
  prefs: []
  type: TYPE_TB
- en: '| Mobile app security | Refer to the OWASP Mobile App Security Testing Guide.
    | Mobile Security Framework |'
  prefs: []
  type: TYPE_TB
- en: '| Top common issue | The list of the most common security issues based on the
    project''s historical data. | CWE/SANS Top 25 Most Dangerous Software Errors |'
  prefs: []
  type: TYPE_TB
- en: '| Security compliance | The security compliance based on business needs may
    also be included, such as the GDPR or PCI DSS. | Refer to the specific security
    compliance requirements.  |'
  prefs: []
  type: TYPE_TB
- en: '**Q. What are the open source tools that can be used to build a security analysis
    by a big data framework?**'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Project** | **Key features** |'
  prefs: []
  type: TYPE_TB
- en: '| TheHive Project | TheHive provides threat incident response case management,
    which allows security analysts to flag IOCs.The Cortex can analyze the issues
    using threat intelligence services such as VirtusTotal, MaxMind, and DomainTools.
    It supports over 80 threat intelligence services.The Hippocampe provides a query
    interface through a REST API or a Web UI. TheHive: [https://thehive-project.org/](https://thehive-project.org/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| MISP  | MISP is mainly a threat intelligence platform to share the IoC and
    indicators of malware. The correlation engine helps to identify the relationships
    between the attributes and indicators of malware.MISP: [https://www.misp-project.org/](https://www.misp-project.org/documentation/)The
    MISP provides over 40 threat intelligence feeds. Refer to  [https://www.misp-project.org/feeds/ ](https://www.misp-project.org/feeds/)for
    more information. |'
  prefs: []
  type: TYPE_TB
- en: '| Apache Metron | The Apache Metron is an SIEM (containing threat intel, security
    data parsers, alerts, dashboard) and also a security analysis (anomaly detection
    and machine learning) framework based on the Hadoop big data framework. Apache
    Metron: [https://metron.apache.org/](https://metron.apache.org/)The typical technology
    components that are required to build a big data framework include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Apache Flume
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Apache Kafka
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Apache Storm or Spark
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Apache Hadoop
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Apache Hive
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Apache Hbase
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Elastic Search
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MySQL
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Refer to [Chapter 18](part0270.html#81FNS0-993778ed0b7e4894800dd46a3f389a65),
    *Business Fraud and Services Abuses*, for further details.
  prefs: []
  type: TYPE_NORMAL
- en: '**Q. What are the common indicators of compromise and the detection techniques
    that are used to identify them?**'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Abnormal host behaviors** | **Potential threats** |'
  prefs: []
  type: TYPE_TB
- en: '| Multiple compromised hosts'' data communication to external hosts. | The
    compromised hosts are sending data to external C and C servers. |'
  prefs: []
  type: TYPE_TB
- en: '| The host connects to an external known APT IP address or URL. The host downloads
    a known malicious file. | The host shows an indication of compromise from an APT
    or malware attack. |'
  prefs: []
  type: TYPE_TB
- en: '| Several unsuccessful login attempts. | One of the internal compromised hosts
    is trying to log in to access critical information. |'
  prefs: []
  type: TYPE_TB
- en: '| An email message that includes a dangerous URL or malicious file. | The attackers
    may be using social engineering to send an email for targeted attacks. Enter the
    email senders into the watch list. |'
  prefs: []
  type: TYPE_TB
- en: '| Rare and unusual filenames | The malware installs itself during the startup
    to continue to act even after reboot.Here are some of the common ways for malware
    to achieve persistence.'
  prefs: []
  type: TYPE_NORMAL
- en: Program start
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Services
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Process injection
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Login Script
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For Windows, it's suggested that you use AutoRuns to check whether the host
    is compromised with suspicious malware. AutoRuns: [https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns](https://docs.microsoft.com/en-us/sysinternals/downloads/autoruns)
    |
  prefs: []
  type: TYPE_NORMAL
- en: '| Unusual event and audit logs alert | The following system event or audit
    logs may need further analysis:'
  prefs: []
  type: TYPE_NORMAL
- en: Account lockouts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: User added to the privileged group
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Failed user account login
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Application error
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Windows error reporting
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: BSOD log
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Event log was cleared
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Audit log was cleared
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Firewall rule change
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: 'The following table lists the detection abnormalities in the web access logs:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Web access analysis** | **Detection techniques** |'
  prefs: []
  type: TYPE_TB
- en: '| External source client IP | The source of the IP address can help to identify
    the following:'
  prefs: []
  type: TYPE_NORMAL
- en: A known bad IP or Tor exit node.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Abnormal geolocation changes.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The concurrent connection from different geolocations.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The MaxMind GeoIP2 database can be used to translate the IP address to a geolocation. MaxMind
    GeoIP2: [https://dev.maxmind.com/geoip/geoip2/geolite2/#Downloads](https://dev.maxmind.com/geoip/geoip2/geolite2/#Downloads)
    |
  prefs: []
  type: TYPE_NORMAL
- en: '| Client fingerprint (OS, browser, user agent, devices, and so on) | The client
    fingerprint can be used to identify whether there are any unusual client or non-browser
    connections. The open source `clientJS `is a pure JavaScript that can be used
    to collect client fingerprint information. The JA3 tool provided by Salesforce
    uses SSL/TLS connection profiling to identify the malicious client.ClientJS: [https://clientjs.org/](https://clientjs.org/)JA3: [https://github.com/salesforce/ja3](https://github.com/salesforce/ja3)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Website reputation | When there is an outbound connection to an external
    website, we can check the threat reputation of that particular website. This can
    be done by a web application firewall or web gateway security solutions. VirusTotal: [https://www.virustotal.com/](https://www.virustotal.com/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| Random domain name by DGA (domain generation algorithm) | The domain name
    of the C and C server can be generated by DGA. The key characteristics of the
    DGA domain can be high entropy, high consonant count, and long domain length.
    Based on these indicators, we can analyze whether the domain name is generated
    by DGA, and therefore be a potential C and C server.DGA detector: [https://github.com/exp0se/dga_detector/](https://github.com/exp0se/dga_detector/)In
    addition, to reduce false positives, we may also use the Alexa Top 1,000,000 sites
    as a website whitelist. Refer to  [https://s3.amazonaws.com/alexa-static/top-1m.csv.zip ](https://s3.amazonaws.com/alexa-static/top-1m.csv.zip)for
    more information. |'
  prefs: []
  type: TYPE_TB
- en: '| Suspicious files download | Cuckoo Sandbox is useful for suspicious file
    analysis. Cuckoo Sandbox: [https://cuckoosandbox.org/](https://cuckoosandbox.org/)
    |'
  prefs: []
  type: TYPE_TB
- en: '| DNS Query | For the analysis of a DNS query, the following are the key indicators
    of compromises:'
  prefs: []
  type: TYPE_NORMAL
- en: DNS query to unauthorized DNS servers.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Unmatched DNS replies can be an indicator of DNS spoofing.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Clients connect to multiple DNS servers.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Long DNS query (for example, over 150 characters), which is an indicator of
    DNS tunneling.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Domain name with high entropy. This is an indicator of DNS tunneling or a C
    and C server.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Refer to [Chapter 18](part0270.html#81FNS0-993778ed0b7e4894800dd46a3f389a65),
    *Business Fraud and Services Abuses*, for further details.
  prefs: []
  type: TYPE_NORMAL
- en: '**Q: What are the common cybercriminal activities in business scenarios?**'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Business scenario** | **Cybercriminal activities** |'
  prefs: []
  type: TYPE_TB
- en: '| For the promotion of new user registration, the e-commerce site may give
    a $10 coupon or certain discounts. | **Account cheating:**Cybercriminals may register
    massive numbers of accounts to gain the coupon and discounts, and then, resell
    those coupons. |'
  prefs: []
  type: TYPE_TB
- en: '| The shopping site may sell a limited number of special edition goods. | **Scalper:**The
    cybercriminals may register massive numbers of accounts to purchase the goods
    and resell them at higher prices. |'
  prefs: []
  type: TYPE_TB
- en: '| The shopping search query results are sorted by the ratings and volume of
    sales of the online seller. | **Unreal orders:**The online sellers may make a
    deal with the cybercriminals to manipulate massive numbers of unreal orders and
    ratings in order to be listed in the top rankings of the query results. |'
  prefs: []
  type: TYPE_TB
- en: '| A shopping site account is normally registered with an email address, phone
    number, and ID. | **Account takeover:**A computer criminal poses as a genuine
    user and gains control of an account to make unauthorized transactions.In addition,
    the cybercriminals may do brute-force attacks on the accounts and re-register
    with other email or phone details to gain financial benefits. |'
  prefs: []
  type: TYPE_TB
- en: Refer to [Chapter 19](part0277.html#885BQ0-993778ed0b7e4894800dd46a3f389a65),
    *GDPR Compliance Case Study*, for further details.
  prefs: []
  type: TYPE_NORMAL
- en: '**Q. How can "profiling" help to detect business fraud and abuses?**'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Profiling** | **Description** |'
  prefs: []
  type: TYPE_TB
- en: '| IP profiling | IP profiling is used to identify the IP behaviors of the account
    and the device. IP profiling involves the following attributes:'
  prefs: []
  type: TYPE_NORMAL
- en: Geolocation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VPN, Proxy, Gateway, or Tor (these IPs will require the user to do further verification)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Known blacklisted IP address
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Device fingerprints | A device fingerprint is the information collected about
    a remote client device or browser for the purpose of identification. We use device
    fingerprints to know whether the remotely connected device is the usual one that
    is used by the user/account. For example, for the same account, a login to the
    e-commerce service with a different mobile phone every day is definitely a sign
    of abnormality. Here are some common device fingerprints:'
  prefs: []
  type: TYPE_NORMAL
- en: Machine type, CPU, virtualization
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: OS version, software plugin, fonts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Concurrent connection for the same device fingerprints
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Geolocation for the same devices on the same day
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The same device fingerprints used by a number of different accounts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Multiple different device fingerprints used by the same user account
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Machine versus human behaviors | The objective of the behavior analysis is
    to identify whether the source of the request is manipulated by a malicious program
    or a real human. There are several clues that are used to analyze the behavior
    of a user to determine whether they are a human or a machine:'
  prefs: []
  type: TYPE_NORMAL
- en: Usage of keyboard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mouse movement
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: User agent HTTPS fingerprints
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Account profiling | The following attributes are related to the account.
    If one of the attributes is identified as suspicious, such as the email address,
    it’s very likely that all the other accounts related to the email address may
    be suspicious as well. Therefore, we will build a watch list of the following
    privacy information:'
  prefs: []
  type: TYPE_NORMAL
- en: Email address
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shipping address
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bank account number
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Telephone number
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Social networking friends
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Payment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: '| Usage profiling | Based on the historical usage, we can also identify whether
    it''s a normal user or just a one-time user that is abusing the services or business promotion
    code:'
  prefs: []
  type: TYPE_NORMAL
- en: Page-visit historical records
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Historical communication with sellers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Purchase history and habits
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  prefs: []
  type: TYPE_NORMAL
- en: Refer to [Chapter 19](part0277.html#885BQ0-993778ed0b7e4894800dd46a3f389a65),
    *GDPR Compliance Case Study*, for further details.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this final chapter, we have summarized the key FAQs of the DevSecOps practices
    from different roles, such as security management, development, testing, IT, and
    the operations team.
  prefs: []
  type: TYPE_NORMAL
- en: Security management identifies the security requirements, and the need for security
    compliance to support the business's success. To achieve this goal, the security
    manager may define security awareness programs, security assurance programs, security
    guidelines, and processes or tools for the development, testing, and security
    monitoring team.
  prefs: []
  type: TYPE_NORMAL
- en: The objective of a development team is to build secure software and services
    with rapid delivery. The principles of security and privacy by design will apply
    to the whole development cycle, from the security requirements, secure architecture
    frameworks, hardening compiler options, secure coding, and the secure third-party
    dependencies. We have listed lots of industry best practices, suggested frameworks,
    and secure code scanning tools for the development team. The development team
    may apply security practices.
  prefs: []
  type: TYPE_NORMAL
- en: The security testing team ensures the security quality using several approaches,
    such as a white box code review, penetration testing, secure configuration, secure
    communication, sensitive information review, and so on. We have introduced several
    open source tools and testing methodologies to do the security testing. The security testing
    tools can also be used by other teams. For example, the development team may also
    use the code scanning tool to ensure secure coding in the construction stage and
    the operation team may also apply the secure configuration scanning tools during
    the deployment stage. The security is not just the testing team's responsibility
    but also requires the collaboration between the development and operation teams.
  prefs: []
  type: TYPE_NORMAL
- en: The security operation team needs to ensure the security of the cloud services
    24/7\. The security activities in the security operation team include security
    monitoring, security incident response, secure environment, vulnerabilities management,
    and service abuse monitoring. In addition to this, we also introduced the threat
    intelligence that provides the threat feeds to detect the known bad IP, file hash,
    or DNS. The security operation team is the frontier defense against threats and
    can give the development and testing team the most valuable feedback to improve
    security. Again, an effective loop also requires high collaboration between each
    functional team.
  prefs: []
  type: TYPE_NORMAL
- en: Moving toward DevSecOps requires high collaboration between the development,
    testing, IT, operation, and security monitoring teams. For example, the infrastructure
    operation team may apply the technology of Docker containers for their deployment.
    The security testing team will help to provide the secure configuration assessment
    tools, and the development team may define the security configurations of the
    Dockerfile. The security management will define the security requirements for
    the whole life cycle of the Docker adoption. Shifting security to the left—that
    is, the earlier stages of the process—requires a culture of collaboration and
    security awareness of every role. A well-defined role, responsibility matrix,
    and SOP (Standard Operating Procedure) may help to execute tasks with efficiency.
    However, the functional team barriers and the KPIs of each role may have a negative
    impact on everyone in taking an extra mile to move forward toward DevSecOps. The
    understanding of the importance of security and privacy for each functional team
    and the collaboration between each teams are key to the success of DevSecOps.
  prefs: []
  type: TYPE_NORMAL
- en: Further reading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Visit the following URLs for more information:'
  prefs: []
  type: TYPE_NORMAL
- en: '**SANS DevSecOps PlayBook**: [https://www.sans.org/reading-room/whitepapers/analyst/devsecops-playbook-36792](https://www.sans.org/reading-room/whitepapers/analyst/devsecops-playbook-36792)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**CSA Security Guidance for Critical Areas of Focus in Cloud Computing v4.0**: [https://cloudsecurityalliance.org/guidance/#_overview](https://cloudsecurityalliance.org/guidance/#_overview)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Awesome Information Security courses and training resources**: [https://github.com/onlurking/awesome-infosec](https://github.com/onlurking/awesome-infosec)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Cybrary Security training courses**: [https://www.cybrary.it/](https://www.cybrary.it/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Open Security Training**: [http://opensecuritytraining.info/](http://opensecuritytraining.info/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Security 101 for SaaS Startups**: [https://github.com/forter/security-101-for-saas-startups/blob/english/security.md](https://github.com/forter/security-101-for-saas-startups/blob/english/security.md)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Firmware Security Training**: [https://github.com/advanced-threat-research/firmware-security-training](https://github.com/advanced-threat-research/firmware-security-training)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Awesome Incident Response**: [https://github.com/meirwah/awesome-incident-response](https://github.com/meirwah/awesome-incident-response)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Awesome AI Security**: [https://github.com/RandomAdversary/Awesome-AI-Security](https://github.com/RandomAdversary/Awesome-AI-Security)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Awesome Penetration Testing**: [https://github.com/wtsxDev/Penetration-Testing](https://github.com/wtsxDev/Penetration-Testing)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Awesome Pentest**: [https://github.com/enaqx/awesome-pentest](https://github.com/enaqx/awesome-pentest)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
