["```\n#!/bin/sh\n./start-mosca.sh\n./start-mongodb.sh\n./start-redis.sh\ncd subscriber && ./start-subscriber.sh & cd ..\ncd publisher && ./start-publisher.sh & cd ..\n```", "```\n# Example Docker Compose file for our chapter 4 application\nversion: '3'\nservices:\n```", "```\n  redis:\n    image: redis\n    volumes:\n      - /tmp/redis:/data\n    ports:\n      - 6379:6379\n```", "```\n  mongodb:\n    image: mongo\n    volumes:\n      - /tmp/mongo:/data/db\n    ports:\n      - 27017:27017\n```", "```\n  mosca:\n    image: matteocollina/mosca\n    volumes:\n      - /tmp/mosca:/db\n    ports:\n      - 1883:1883\n      - 80:80\n```", "```\n  publisher:\n    build: publisher\n    environment:\n    - MQTT_HOST=${HOSTIP}\n    - REDIS_HOST=${HOSTIP}\n    - MONGO_HOST=${HOSTIP}\n    ports:\n      - 3000:3000\n```", "```\n  subscriber:\n    build: subscriber\n    environment:\n    - MQTT_HOST=${HOSTIP}\n    - REDIS_HOST=${HOSTIP}\n    - MONGO_HOST=${HOSTIP}\n```", "```\n% docker-compose -f docker-compose-example.yml up\n```", "```\n% docker-compose -f docker-compose-example.yml up -d\n```", "```\n% docker-compose -f docker-compose-example.yml down\n```", "```\n% docker-compose -f docker-compose-example.yml up mongodb redis\n```", "```\n% docker-compose -f docker-compose-example.yml build publisher\n```", "```\nversion: '3'\nservices:\n  redis:\n    image: redis\n  mongodb:\n    image: mongo\n    volumes:\n      - /tmp/mongo:/data/db\n  mosca:\n    image: matteocollina/mosca\n    volumes:\n      - /tmp/mosca:/db\n  publisher:\n    build: publisher\n\n    depends_on:\n      - \"mosca\"\n      - \"subscriber\"\n  subscriber:\n    build: subscriber\n    depends_on:\n      - \"redis\"\n      - \"mongodb\"\n      - \"mosca\"\n```", "```\n/**\n * wait_for_services\n *\n * This method is called at startup to wait for any dependent containers to be running.\n */\nconst waitOn = require(\"wait-on\"),\n  wait_for_services = async () => {\n  try {\n    await waitOn({ resources: [`tcp:${mqtt_host}:${mqtt_port}`] });\n  } catch (e) {\n    debug(\"waitOn exception\", e.stack);\n  }\n};\n```", "```\n/**\n * wait_for_services\n *\n * This method is called at startup to wait for any dependent containers to be running.\n */\nconst waitOn = require(\"wait-on\"),\n  wait_for_services = async () => {\n  try {\n    debug(`waiting for mqtt (${mqtt_host}:${mqtt_port})`);\n    await waitOn({ resources: [`tcp:${mqtt_host}:${mqtt_port}`] });\n    debug(`waiting for redis (${redis_host}:${redis_port})`);\n    await waitOn({ resources: [`tcp:${redis_host}:${redis_port}`] });\n    debug(`waiting for mongo (${mongo_host}:${mongo_port})`);\n    await waitOn({ resources: [`tcp:${mongo_host}:${mongo_port}`] });\n  } catch (e) {\n    debug(\"***** exception \", e.stack);\n  }\n};\n```", "```\nversion: '3'\nservices:\n  redis:\n    ports:\n      - 6379:6379\n  mongodb:\n    ports:\n      - 27017:27017\n  mosca:\n    ports:\n      - 1883:1883\n      - 80:80\n  publisher:\n    environment:\n    - MQTT_HOST=${HOSTIP}\n    - REDIS_HOST=${HOSTIP}\n    - MONGO_HOST=${HOSTIP}\n    ports:\n      - 3000:3000\n  subscriber:\n    environment:\n    - MQTT_HOST=${HOSTIP}\n    - REDIS_HOST=${HOSTIP}\n    - MONGO_HOST=${HOSTIP}\n```", "```\n% HOSTIP=192.168.0.21 docker-compose -f docker-compose.yml -f docker-compose-simple.yml up\n```", "```\n% HOSTIP=192.168.0.21 docker-compose -f docker-compose.yml -f docker-compose-simply.yml up -d\n```", "```\n% HOSTIP=192.168.0.21 docker-compose -f docker-compose.yml -f docker-compose-simple.yml down\n```", "```\nversion: '3'\nservices:\n  publisher:\n    volumes:\n      - ./publisher:/home/app\n  subscriber:\n    volumes:\n      - ./subscriber:/home/app \n```", "```\n% HOSTIP=192.168.0.21 docker-compose -f docker-compose.yml -f docker-compose-simple.yml -f dockercompose-simple-dev.yml up -d\n```", "```\npublisher_1   | [nodemon] restarting due to changes...\npublisher_1   | [nodemon] starting `node ./index.js`\npublisher_1   | 2020-03-30T18:03:39.537Z publisher publisher microservice, about to wait for MQTT host(192.168.0.21, 1883\npublisher_1   | 2020-03-30T18:03:39.546Z publisher ---> wait succeeded\npublisher_1   | 2020-03-30T18:03:39.587Z publisher publisher connecting to MQTT mqtt://192.168.0.21\npublisher_1   | 2020-03-30T18:03:39.591Z publisher connected to  192.168.0.21 port 1883\npublisher_1   | 2020-03-30T18:03:39.638Z publisher listening on port  3000\n```", "```\n% docker network create chapter4\n```", "```\n% docker network rm chapter4\n```", "```\n#!/bin/sh\n./stop-all.sh\n```", "```\ndocker network create chapter4\n```", "```\n./start-mosca.sh\n./start-mongodb.sh\n```", "```\n###### SUBSCRIBER\ncd subscriber\n./run.sh\n```", "```\n###### PUBLISHER\n# publisher needs to expose port 3000 \n# so we can access the WWW interface\ncd ../publisher\n./run.sh\n```", "```\ndocker run \\\n  --name $SERVICE \\\n  -d \\\n  --restart always \\\n  -e TITLE=$SERVICE \\\n  --network chapter4 \\\n  -v /tmp/mosca:/db \\\n  matteocollina/mosca\n```", "```\ndocker run \\\n  --name $SERVICE \\\n  -d \\\n  --restart always \\\n  -e TITLE=$SERVICE \\\n  --network chapter4 \\\n  dockerfordevelopers/$SERVICE\n```", "```\nconst debug = require(\"debug\")(\"subscriber\"),\n  mongo_host = process.env.MONGO_HOST || \"mongodb\",\n  mongo_port = 27017,\n  mongoUrl = `mongodb://${mongo_host}:${mongo_port}`,\n  mqtt_host = process.env.MQTT_HOST || \"mosca\",\n  mqtt_port = 1883,\n  mqttUrl = `mqtt://${mqtt_host}`,\n  redis_host = process.env.REDIS_HOST || \"redis\",\n  redis_port = 6379,\n  redisUrl = `redis://${redis_host}`;\n```", "```\n#!/bin/sh\ndocker stop publisher\ndocker stop subscriber\ndocker stop redis\ndocker stop mongodb\ndocker stop mosca\ndocker network rm chapter4\n```", "```\nversion: '3'\nservices:\n  redis:\n    networks:\n      - chapter4\n  mongodb:\n    networks:\n      - chapter4\n  mosca:\n    networks:\n      - chapter4\n  publisher:\n    ports:\n      - 3000:3000\n    networks:\n      - chapter4\n  subscriber:\n    networks:\n      - chapter4\nnetworks:\n  chapter4:\n```", "```\n% docker-compose up\n```", "```\nversion: '3'\nservices:\n  publisher:\n    volumes:\n      - ./publisher:/home/app\n  subscriber:\n    volumes:\n      - ./subscriber:/home/app\n```", "```\n% docker-compose -f docker-compose.yml -f docker-compose.override.yml -f docker-compose-dev.yml up\n```", "```\n% docker images | grep pub\nchapter4_publisher                latest              15f3a84d348d        24 minutes ago      987MB\n```", "```\nFROM node:12-alpine\n```", "```\nENV TZ=America/Los_Angeles\nWORKDIR /home/app\n# add a user - this user will own the files in /home/app\nRUN adduser -S app\nENV HOME=/home/app\nCOPY . /home/app\n```", "```\nCMD  [\"yarn\", \"start\"]\n```", "```\n# docker images | grep pub\nchapter4_publisher                   latest              080efb97e0d3        About a minute ago   89.5MB\n```", "```\n# docker-compose run publisher yarn install\n```", "```\n# cd /var/lib/docker/volumes/\n# ls -1 chapter4_node_modules_publisher/_data/\nabbrev\naccepts\najv\nansi-align\nansi-regex\nansi-styles\nanymatch\n```", "```\n# screen ~/Library/Containers/com.docker.docker/Data/vms/0/tty\n```", "```\n# time docker-compose build publisher\nSuccessfully built e50ec5f4d53b\nSuccessfully tagged chapter4_publisher:latest\ndocker-compose build publisher  0.36s user 0.09s system 2% cpu 16.187 total\n```", "```\n# time docker-compose build publisher\nSuccessfully tagged chapter4_publisher:latest\ndocker-compose build publisher  0.34s user 0.08s system 74% cpu 0.568 total\n```", "```\n# time docker-compose build publisher\nSuccessfully tagged chapter4_publisher:latest\ndocker-compose build publisher  0.34s user 0.08s system 49% cpu 0.842 total\n```", "```\n#!/bin/sh\n# build.sh\n# build publisher and subscriber and install node_modules in each\ndocker-compose build --force-rm --no-cache\ndocker-compose run publisher yarn install\ndocker-compose run subscriber yarn install\n```"]