["```\nsudo apt-get install docker.io\n\n```", "```\ncd /tmp\ngit clone https://github.com/progrium/dokku.git\ncd dokku\nsudo make install\ndokku version\n\n```", "```\ncd ~/.ssh\nssh-keygen –t rsa\n#I named my key pair id_rsa\ncat id_rsa.pub\n#copy the output so you have it in your clipboard\n\n```", "```\n#As your ubuntu user\n#Replace <publickey> with the key you just copied\n#<remoteuser> can be replaced with anything, like \"remoteuser\".\necho \"<publickey>\" | sudo sshcommand acl-add dokku <remoteuser>\n\n```", "```\n#Clone the repo\ngit clone git@github.com:heroku/node-js-sample.git\ncd node-js-sample\n#Add a Dokku git remote\ngit remote add dokku dokku@server.com:first-app\n\n#Push to Dokku\ngit push dokku master\n\n```", "```\n=====> Application deployed:\n http://54.191.69.5:49154\n\n```", "```\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Hello</title>   </head>\n  <body>\n    <h1>First edit!</h1>\n  </body>\n</html>\n```", "```\nnano public/index.html\n#paste the HTML\n#save the file\n\n#commit your changes\ngit add public/index.html\ngit commit –m \"Added first HTML page.\"\n\n#push to dokku\ngit push dokku master\n\n```", "```\ncase \"$1\" in\n  receive)\n    APP=\"$2\"; IMAGE=\"dokku/$APP\"\n    echo \"-----> Cleaning up ...\"\n    dokku cleanup\n    echo \"-----> Building $APP ...\"\n    cat | dokku build $APP\n    echo \"-----> Releasing $APP ...\"\n    dokku release $APP\n    echo \"-----> Deploying $APP ...\"\n    dokku deploy $APP\n    echo \"=====> Application deployed:\"\n         dokku urls $APP | sed \"s/^/       /\"\n    echo\n    ;;\n```", "```\ncase \"$1\" in\n  nginx:build-config)\n    APP=\"$2\"; DOKKU_APP_LISTEN_PORT=\"$3\"; DOKKU_APP_LISTEN_IP=\"${4}\"\n    VHOST_PATH=\"$DOKKU_ROOT/$APP/VHOST\"\n    WILDCARD_SSL=\"$DOKKU_ROOT/tls\"\n    SSL=\"$DOKKU_ROOT/$APP/tls\"\n\n    if [[ -z \"$DOKKU_APP_LISTEN_PORT\" ]] && [[ -f \"$DOKKU_ROOT/$APP/PORT\" ]]; then\n      DOKKU_APP_LISTEN_PORT=$(< \"$DOKKU_ROOT/$APP/PORT\")\n    fi\n    if [[ -z \"$DOKKU_APP_LISTEN_IP\" ]] && [[ -f \"$DOKKU_ROOT/$APP/IP\" ]]; then\n      DOKKU_APP_LISTEN_IP=$(< \"$DOKKU_ROOT/$APP/IP\")\n    fi\n\n    [[ -f \"$DOKKU_ROOT/$APP/ENV\" ]] && source $DOKKU_ROOT/$APP/ENV\n\n    if [[ ! -n \"$NO_VHOST\" ]] && [[ -f \"$DOKKU_ROOT/$APP/VHOST\" ]]; then\n      ...\n      NGINX_CONF=\"$PLUGIN_PATH/nginx-vhosts/templates/nginx.conf\"\n      SCHEME=\"http\"\n      ...\n      APP_NGINX_TEMPLATE=\"$DOKKU_ROOT/$APP/nginx.conf.template\"\n      if [[ -f $APP_NGINX_TEMPLATE ]]; then\n        echo \"-----> Overriding default nginx.conf with detected nginx.conf.template\"\n        NGINX_CONF=$APP_NGINX_TEMPLATE\n      fi\n\n      xargs -i echo \"-----> Configuring {}...\" < $VHOST_PATH\n      # Include SSL_VHOSTS so we can redirect http to https on that hostname as well\n      NOSSL_SERVER_NAME=$(echo $NONSSL_VHOSTS $SSL_VHOSTS| tr '\\n' ' ')\n\n      if [[ -n \"$DOKKU_APP_LISTEN_PORT\" ]] && [[ -n \"$DOKKU_APP_LISTEN_IP\" ]]; then\n        echo \"-----> Creating $SCHEME nginx.conf\"\n        echo \"upstream $APP { server $DOKKU_APP_LISTEN_IP:$DOKKU_APP_LISTEN_PORT; }\" > $DOKKU_ROOT/$APP/nginx.conf\n        eval \"cat <<< \\\"$(< $NGINX_CONF)\\\" >> $DOKKU_ROOT/$APP/nginx.conf\"\n\n        echo \"-----> Running nginx-pre-reload\"\n        pluginhook nginx-pre-reload $APP $DOKKU_APP_LISTEN_PORT $DOKKU_APP_LISTEN_IP\n\n        echo \"       Reloading nginx\"\n        restart_nginx\n      fi\n    else\n      if [[ -f \"$DOKKU_ROOT/$APP/VHOST\" ]]; then\n        echo \"-----> VHOST support disabled, deleting $APP/VHOST\"\n        rm \"$DOKKU_ROOT/$APP/VHOST\"\n      fi\n      if [[ -f \"$DOKKU_ROOT/$APP/nginx.conf\" ]]; then\n        echo \"-----> VHOST support disabled, deleting nginx.conf\"\n        rm \"$DOKKU_ROOT/$APP/nginx.conf\"\n\n        echo \"-----> VHOST support disabled, reloading nginx after nginx.conf deletion\"\n        restart_nginx\n      fi\n    fi\n    ;;\n```", "```\nserver {\n  listen      [::]:80;\n  listen      80;\n  server_name $NOSSL_SERVER_NAME;\n  location    / {\n    proxy_pass  http://$APP;\n    proxy_http_version 1.1;\n    proxy_set_header Upgrade \\$http_upgrade;\n    proxy_set_header Connection \"upgrade\";\n    proxy_set_header Host \\$http_host;\n    proxy_set_header X-Forwarded-Proto \\$scheme;\n    proxy_set_header X-Forwarded-For \\$remote_addr;\n    proxy_set_header X-Forwarded-Port \\$server_port;\n    proxy_set_header X-Request-Start \\$msec;\n  }\n  include $DOKKU_ROOT/$APP/nginx.conf.d/*.conf;\n}\n```", "```\ndokku domains:set myawesomeapp.com www.myawesomeapp.com\n\n```", "```\ndokku docker-options:add myapp \"-v /host/path:/container/path\"\ndokku docker-options:add myapp \"-link container_name:alias\"\n```", "```\ndokku volume:add foo /path/in/container\ndokku volume:dump foo /path/in/container > foo.tar.gz\n\n```", "```\ndokku link:create <app> NAME [ALIAS]\ndokku link:delete <app> NAME [ALIAS]\n\n```", "```\ndokku mariadb:create <app>\ndokku mariadb:link <app> <db>\ndokku mariadb:dumpraw <app>\n\n```", "```\n#Download Wordpress\ncurl -O https://wordpress.org/latest.zip\nunzip latest.zip\nmv wordpress wp1\ncd wp1\n\n#Create a new Git repo\ngit init\ngit add .\ngit commit –m \"Initial commit.\"\n\n#Create a composer.json file to tell Dokku we are using php\necho '{}' > composer.json\ngit add .\ngit commit -am \"Add composer.json for PHP app detection.\"\n\n#Add a remote so we can push to Dokku\ngit remote add dokku dokku@ohdokku.com:wp1\n\n```", "```\ncd /var/lib/dokku/plugins\nsudo git clone --recursive https://github.com/Kloadut/dokku-md-plugin mariadb\ncd mariadb/dockerfiles/\ngit checkout master\ncd ../../\nsudo dokku plugins-install\n\n```", "```\ngit push dokku master\n\n```", "```\nssh dokku@ohdokku.com mariadb:create wp1_db\nssh dokku@ohdokku.com mariadb:link wp1 wp1_db\n\n```", "```\n// ** MySQL settings - You can get this info from your web host ** //\n/** The name of the database for Wordpress */\ndefine('DB_NAME', getenv('DB_NAME'));\n\n/** MySQL database username */\ndefine('DB_USER', 'root');\n\n/** MySQL database password */\ndefine('DB_PASSWORD', getenv('DB_PASSWORD'));\n\n/** MySQL hostname */\ndefine('DB_HOST', getenv('DB_HOST').\":\".getenv('DB_PORT'));\n```", "```\ngit add –A .\ngit commit –m \"Add wp-config.php and add credentials.\"\ngit push dokku master\n\n```", "```\ngit remote add dokku dokku@ohdokku.com:wp1\n\n```", "```\nsudo nano /etc/hosts\n\n#Add this line to the file\n54.191.69.5 ohdokku.com\n#Save and exit\n\n```"]