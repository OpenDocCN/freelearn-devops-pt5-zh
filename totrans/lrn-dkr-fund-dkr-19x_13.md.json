["```\n$ docker network ls\n```", "```\n$ docker network inspect bridge\n```", "```\n$ docker network create --driver bridge sample-net\n```", "```\n$ docker network inspect sample-net | grep Subnet\n```", "```\n\"Subnet\": \"172.18.0.0/16\",\n```", "```\n$ docker network create --driver bridge --subnet \"10.1.0.0/16\" test-net\n```", "```\n$ docker container run --name c1 -it --rm alpine:latest /bin/sh\n```", "```\n$ docker container inspect c1\n```", "```\n/ # ip addr show eth0\n195: eth0@if196: <BROADCAST,MULTICAST,UP,LOWER_UP,M-DOWN> mtu 1500 qdisc noqueue state UP\n link/ether 02:42:ac:11:00:02 brd ff:ff:ff:ff:ff:ff\n inet 172.17.0.2/16 brd 172.17.255.255 scope global eth0\n valid_lft forever preferred_lft forever\n```", "```\n/ # ip route\ndefault via 172.17.0.1 dev eth0\n172.17.0.0/16 dev eth0 scope link src 172.17.0.2\n```", "```\n$ docker container run --name c2 -d alpine:latest ping 127.0.0.1\n```", "```\n$ docker container inspect --format \"{{.NetworkSettings.IPAddress}}\" c2\n172.17.0.3\n```", "```\n$ docker network inspect bridge\n```", "```\n$ docker container run --name c3 -d --network test-net \\\n alpine:latest ping 127.0.0.1\n$ docker container run --name c4 -d --network test-net \\\n alpine:latest ping 127.0.0.1\n```", "```\n$ docker network inspect test-net\n```", "```\n$ docker container exec -it c3 /bin/sh\n```", "```\n/ # ping c4\nPING c4 (10.1.0.3): 56 data bytes\n64 bytes from 10.1.0.3: seq=0 ttl=64 time=0.192 ms\n64 bytes from 10.1.0.3: seq=1 ttl=64 time=0.148 ms\n...\n```", "```\n/ # ping 10.1.0.3\nPING 10.1.0.3 (10.1.0.3): 56 data bytes\n64 bytes from 10.1.0.3: seq=0 ttl=64 time=0.200 ms\n64 bytes from 10.1.0.3: seq=1 ttl=64 time=0.172 ms\n...\n```", "```\n/ # ping c2\nping: bad address 'c2'\n```", "```\n/ # ping 172.17.0.3\nPING 172.17.0.3 (172.17.0.3): 56 data bytes \n^C\n--- 172.17.0.3 ping statistics ---\n43 packets transmitted, 0 packets received, 100% packet loss\n```", "```\n$ docker container run --name c5 -d \\\n --network sample-net \\\n --network test-net \\\n alpine:latest ping 127.0.0.1\n```", "```\n$ docker network rm test-net\nError response from daemon: network test-net id 863192... has active endpoints\n```", "```\n$ docker container rm -f $(docker container ls -aq)\n```", "```\n$ docker network rm sample-net\n$ docker network rm test-net \n```", "```\n$ docker network prune --force\n```", "```\n$ docker container run --rm -it --network host alpine:latest /bin/sh\n```", "```\n/ # ip addr show eth0\n2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP qlen 1000\n    link/ether 02:50:00:00:00:01 brd ff:ff:ff:ff:ff:ff\n    inet 192.168.65.3/24 brd 192.168.65.255 scope global eth0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::c90b:4219:ddbd:92bf/64 scope link\n       valid_lft forever preferred_lft forever\n```", "```\n/ # ip route\ndefault via 192.168.65.1 dev eth0 src 192.168.65.3 metric 202\n10.1.0.0/16 dev cni0 scope link src 10.1.0.1\n127.0.0.0/8 dev lo scope host\n172.17.0.0/16 dev docker0 scope link src 172.17.0.1\n...\n192.168.65.0/24 dev eth0 scope link src 192.168.65.3 metric 202\n```", "```\n$ docker container run --rm -it --network none alpine:latest /bin/sh\n```", "```\n/ # ip addr show eth0\nip: can't find device 'eth0'\n```", "```\n/ # ip route\n```", "```\n$ docker network create --driver bridge test-net\n```", "```\n$ docker container run --name web -d \\\n --network test-net nginx:alpine\n```", "```\n$ docker container run -it --rm --network container:web \\\nalpine:latest /bin/sh\n```", "```\n/ # wget -qO - localhost\n<!DOCTYPE html>\n<html>\n<head>\n<title>Welcome to nginx!</title>\n...\n</html>\n```", "```\n$ docker container rm --force web\n$ docker network rm test-net\n```", "```\n$ docker container run --name web -P -d nginx:alpine\n```", "```\n$ docker container port web\n80/tcp -> 0.0.0.0:32768\n```", "```\n$ docker container inspect web | grep HostPort\n32768\n```", "```\n$ docker container ls\nCONTAINER ID    IMAGE         ...   PORTS                  NAMES\n56e46a14b6f7    nginx:alpine  ...   0.0.0.0:32768->80/tcp  web\n```", "```\n$ docker container run --name web2 -p 8080:80 -d nginx:alpine\n```", "```\n$ cd ~/fod/ch10/e-shop/monolith\n$ pip install -r requirements.txt\n$ export FLASK_APP=main.py \n$ flask run\n```", "```\n$ curl localhost:5000/catalog?category=bicycles [{\"id\": 1, \"name\": \"Mountanbike Driftwood 24\\\"\", \"unitPrice\": 199}, {\"id\": 2, \"name\": \"Tribal 100 Flat Bar Cycle Touring Road Bike\", \"unitPrice\": 300}, {\"id\": 3, \"name\": \"Siech Cycles Bike (58 cm)\", \"unitPrice\": 459}]\n```", "```\n127.0.0.1 acme.com \n```", "```\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=5000)\n```", "```\nFROM python:3.7-alpine\nWORKDIR /app\nCOPY requirements.txt ./\nRUN pip install -r requirements.txt\nCOPY . .\nEXPOSE 5000\nCMD python main.py\n```", "```\n$ docker image build -t acme/eshop:1.0 .\n```", "```\n$ docker container run --rm -it \\\n --name eshop \\\n -p 5000:5000 \\\n acme/eshop:1.0\n```", "```\n$ docker image build -t acme/catalog:1.0 .\n```", "```\n$ docker run --rm -it --name catalog -p 3000:3000 acme/catalog:1.0\n```", "```\n$ curl http://acme.com:3000/catalog?type=bicycle\n```", "```\n$ docker container run --rm -d \\\n --name catalog \\\n --label traefik.enable=true \\\n --label traefik.port=3000 \\\n --label traefik.priority=10 \\\n --label traefik.http.routers.catalog.rule=\"Host(\\\"acme.com\\\") && PathPrefix(\\\"/catalog\\\")\" \\\n acme/catalog:1.0\n```", "```\n$ docker container run --rm -d \\\n    --name eshop \\\n    --label traefik.enable=true \\\n    --label traefik.port=5000 \\\n    --label traefik.priority=1 \\\n    --label traefik.http.routers.eshop.rule=\"Host(\\\"acme.com\\\")\" \\\n    acme/eshop:1.0\n```", "```\n$ docker run -d \\\n --name traefik \\\n -p 8080:8080 \\\n -p 80:80 \\\n -v /var/run/docker.sock:/var/run/docker.sock \\\n traefik:v2.0 --api.insecure=true --providers.docker\n\n```", "```\n$ curl http://acme.com/catalog?type=bicycles\n$ curl http://acme.com/checkout\n```", "```\n$ docker container rm -f traefik eshop catalog\n```"]