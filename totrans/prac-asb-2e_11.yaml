- en: '11'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Container and Cloud Management
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Ansible is a very flexible automation tool and can be easily used to automate
    any aspect of your infrastructure. In the last few years, container-based workloads
    and cloud workloads have become more and more popular, and for this reason, we
    will look at how you can automate tasks related to those kinds of workloads with
    Ansible. This chapter will start by designing and building containers with Ansible.
    We will then look at how to run those containers, and finally, we will look at
    ways to manage various cloud platforms with Ansible.
  prefs: []
  type: TYPE_NORMAL
- en: 'Specifically, we will be covering the following topics in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Automating Docker and Podman with Ansible
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Managing Kubernetes with Ansible
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exploring container-focused modules
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Automating against Amazon Web Services
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Complementing Google Cloud Platform with automation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Seamless automation integration with Azure
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Expanding your environment with Rackspace Cloud
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using Ansible to orchestrate OpenStack
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s get started!
  prefs: []
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter assumes that you have set up your control host with Ansible, as
    detailed in [*Chapter 1*](B20846_01.xhtml#_idTextAnchor015), *Getting Started
    with Ansible*, and are using the most recent version available – the examples
    in this chapter were tested with Ansible 2.15\. Although we will give specific
    examples of hostnames in this chapter, you are free to substitute them with your
    own hostname and/or IP address. Details of how to do this will be provided in
    the appropriate places. This chapter also assumes you have access to Docker, Podman,
    Kubernetes, and the different clouds. Since the majority of processes will be
    very similar across the different clouds, you will be able to gain the majority
    of the information even if you will read the whole chapter and just test those
    playbooks on the couple of environments you have access to.
  prefs: []
  type: TYPE_NORMAL
- en: All the examples in this chapter can be found in this book’s GitHub repository
    at [https://github.com/PacktPublishing/Practical-Ansible-Second-Edition/tree/main/Chapter%2011](https://github.com/PacktPublishing/Practical-Ansible-Second-Edition/tree/main/Chapter%2011).
  prefs: []
  type: TYPE_NORMAL
- en: Automating Docker and Podman with Ansible
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In today’s world, simply being able to run an image is not considered a production-ready
    setup.
  prefs: []
  type: TYPE_NORMAL
- en: To be able to call a deployment **production-ready**, you need to demonstrate
    that the service your application delivers will run reasonably, even in the case
    of a single application crash, as well as hardware failure. Often, you’ll have
    even more reliability constraints from your customer.
  prefs: []
  type: TYPE_NORMAL
- en: Luckily, your software is not the only one that has those requirements, so orchestration
    solutions have been developed for this purpose.
  prefs: []
  type: TYPE_NORMAL
- en: Today, the most successful one is Kubernetes, due to its various distributions/versions,
    so we are going to focus on it primarily.
  prefs: []
  type: TYPE_NORMAL
- en: The idea of Kubernetes is that you inform the Kubernetes control plane that
    you want *X* number of instances of *Y* application. Kubernetes will count how
    many instances of *Y* application are running on the Kubernetes Nodes to ensure
    that the number of instances is *X*. If there are too few instances, Kubernetes
    will take care of starting more instances. At the same time, if there are too
    many instances, the exceeding instances will be stopped.
  prefs: []
  type: TYPE_NORMAL
- en: Since Kubernetes constantly checks that the requested amount of instances is
    running, in the case of an application failure or a node failure, Kubernetes will
    start new instances to replace the lost instances.
  prefs: []
  type: TYPE_NORMAL
- en: Due to the complexity of installing and managing Kubernetes, multiple companies
    have started to sell distributions of Kubernetes that simplify their operations
    and that they are willing to support.
  prefs: []
  type: TYPE_NORMAL
- en: Every Kubernetes node runs an instance of a container engine. For this reason,
    we will start to see how the two most widely used standalone containers engine
    can be automated.
  prefs: []
  type: TYPE_NORMAL
- en: Managing Docker
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Docker is now a very common, ubiquitous tool for development usage and you
    can leverage Ansible to easily manage your Docker instance. Since we are going
    to manage a Docker instance, we need to make sure we have one at hand and that
    the Docker command on our machine is configured correctly. We need to do this
    to ensure this is enough to run `docker images` on the terminal. Let’s say you
    get a result similar to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: This means that everything is working properly. More lines may be provided as
    output if you have already-cloned images.
  prefs: []
  type: TYPE_NORMAL
- en: 'On the other hand, let’s say it returns something like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: This means that we don’t have a Docker daemon running or that our Docker console
    has been configured incorrectly.
  prefs: []
  type: TYPE_NORMAL
- en: 'Also, it’s important to ensure that you have the `docker` Python module installed
    since Ansible tries to use it to communicate with the Docker daemon. Let’s take
    a look:'
  prefs: []
  type: TYPE_NORMAL
- en: 'First of all, we need to create a playbook called `start-docker-container.yaml`
    that contains the following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Now that we have the Ansible playbook, we just need to execute it:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'As you may expect, it will give you an output similar to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'We can now check that our command executed properly, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'This will show the container that was run:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: This proves that a container was executed.
  prefs: []
  type: TYPE_NORMAL
- en: 'To check that the `echo` command was executed, we can run the following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'This will return the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'bash: podman: command not found'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '---'
  prefs: []
  type: TYPE_NORMAL
- en: '- hosts: localhost'
  prefs: []
  type: TYPE_NORMAL
- en: 'tasks:'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Start a container with a command'
  prefs: []
  type: TYPE_NORMAL
- en: 'containers.podman.podman_container:'
  prefs: []
  type: TYPE_NORMAL
- en: 'name: test-container'
  prefs: []
  type: TYPE_NORMAL
- en: 'image: alpine'
  prefs: []
  type: TYPE_NORMAL
- en: 'command:'
  prefs: []
  type: TYPE_NORMAL
- en: '- echo'
  prefs: []
  type: TYPE_NORMAL
- en: '- "Hello, World!"'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: $ ansible-playbook start-podman-container.yaml
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: PLAY [localhost] *******************************************************************************************************************************************************************************
  prefs: []
  type: TYPE_NORMAL
- en: TASK [Gathering Facts] *************************************************************************************************************************************************************************
  prefs: []
  type: TYPE_NORMAL
- en: 'ok: [localhost]'
  prefs: []
  type: TYPE_NORMAL
- en: TASK [Start a container with a command] ********************************************************************************************************************************************************
  prefs: []
  type: TYPE_NORMAL
- en: 'changed: [localhost]'
  prefs: []
  type: TYPE_NORMAL
- en: PLAY RECAP *************************************************************************************************************************************************************************************
  prefs: []
  type: TYPE_NORMAL
- en: 'localhost                  : ok=2    changed=1    unreachable=0    failed=0
        skipped=0    rescued=0    ignored=0'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: $ podman container list -a
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: CONTAINER ID  IMAGE                                                 COMMAND               CREATED        STATUS                    PORTS
           NAMES96531f2f960e  docker.io/library/alpine:latest                        echo
    Hello, World...  2 minutes ago  Exited (0) 2 minutes ago              test-container
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: $ ansible-galaxy collection install kubernetes.core
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: '---'
  prefs: []
  type: TYPE_NORMAL
- en: '- hosts: localhost'
  prefs: []
  type: TYPE_NORMAL
- en: 'tasks:'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Get information from K8s'
  prefs: []
  type: TYPE_NORMAL
- en: 'kubernetes.core.k8s_info:'
  prefs: []
  type: TYPE_NORMAL
- en: 'api_version: v1'
  prefs: []
  type: TYPE_NORMAL
- en: 'kind: Namespace'
  prefs: []
  type: TYPE_NORMAL
- en: 'register: ns'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Print info'
  prefs: []
  type: TYPE_NORMAL
- en: 'ansible.builtin.debug:'
  prefs: []
  type: TYPE_NORMAL
- en: 'var: ns'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: $ ansible-playbook k8s-ns-show.yaml
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: '---'
  prefs: []
  type: TYPE_NORMAL
- en: '- hosts: localhost'
  prefs: []
  type: TYPE_NORMAL
- en: 'tasks:'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Ensure the myns namespace exists'
  prefs: []
  type: TYPE_NORMAL
- en: 'kubernetes.core.k8s:'
  prefs: []
  type: TYPE_NORMAL
- en: 'api_version: v1'
  prefs: []
  type: TYPE_NORMAL
- en: 'kind: Namespace'
  prefs: []
  type: TYPE_NORMAL
- en: 'name: myns'
  prefs: []
  type: TYPE_NORMAL
- en: 'state: present'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: $ kubectl get ns
  prefs: []
  type: TYPE_NORMAL
- en: NAME STATUS AGE
  prefs: []
  type: TYPE_NORMAL
- en: default Active 69m
  prefs: []
  type: TYPE_NORMAL
- en: kube-node-lease Active 69m
  prefs: []
  type: TYPE_NORMAL
- en: kube-public Active 69m
  prefs: []
  type: TYPE_NORMAL
- en: kube-system Active 69m
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: $ ansible-playbook k8s-ns.yaml
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: PLAY [localhost] *******************************************************************
  prefs: []
  type: TYPE_NORMAL
- en: TASK [Gathering Facts] *************************************************************
  prefs: []
  type: TYPE_NORMAL
- en: 'ok: [localhost]'
  prefs: []
  type: TYPE_NORMAL
- en: TASK [Ensure the myns namespace exists] ********************************************
  prefs: []
  type: TYPE_NORMAL
- en: 'changed: [localhost]'
  prefs: []
  type: TYPE_NORMAL
- en: PLAY RECAP *************************************************************************
  prefs: []
  type: TYPE_NORMAL
- en: 'localhost : ok=2 changed=1 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: $ kubectl get ns
  prefs: []
  type: TYPE_NORMAL
- en: NAME STATUS AGE
  prefs: []
  type: TYPE_NORMAL
- en: default Active 74m
  prefs: []
  type: TYPE_NORMAL
- en: kube-node-lease Active 74m
  prefs: []
  type: TYPE_NORMAL
- en: kube-public Active 74m
  prefs: []
  type: TYPE_NORMAL
- en: kube-system Active 74m
  prefs: []
  type: TYPE_NORMAL
- en: myns Active 22s
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: '---'
  prefs: []
  type: TYPE_NORMAL
- en: '- hosts: localhost'
  prefs: []
  type: TYPE_NORMAL
- en: 'tasks:'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Ensure the Service mysvc is present'
  prefs: []
  type: TYPE_NORMAL
- en: 'kubernetes.core.k8s:'
  prefs: []
  type: TYPE_NORMAL
- en: 'state: present'
  prefs: []
  type: TYPE_NORMAL
- en: 'definition:'
  prefs: []
  type: TYPE_NORMAL
- en: 'apiVersion: v1'
  prefs: []
  type: TYPE_NORMAL
- en: 'kind: Service'
  prefs: []
  type: TYPE_NORMAL
- en: 'metadata:'
  prefs: []
  type: TYPE_NORMAL
- en: 'name: mysvc'
  prefs: []
  type: TYPE_NORMAL
- en: 'namespace: myns'
  prefs: []
  type: TYPE_NORMAL
- en: 'spec:'
  prefs: []
  type: TYPE_NORMAL
- en: 'selector:'
  prefs: []
  type: TYPE_NORMAL
- en: 'app: myapp'
  prefs: []
  type: TYPE_NORMAL
- en: 'service: mysvc'
  prefs: []
  type: TYPE_NORMAL
- en: 'ports:'
  prefs: []
  type: TYPE_NORMAL
- en: '- protocol: TCP'
  prefs: []
  type: TYPE_NORMAL
- en: 'targetPort: 800'
  prefs: []
  type: TYPE_NORMAL
- en: 'name: port-80-tcp'
  prefs: []
  type: TYPE_NORMAL
- en: 'port: 80'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: $ kubectl get svc
  prefs: []
  type: TYPE_NORMAL
- en: No resources found in myns namespace.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: $ ansible-playbook k8s-svc.yaml
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: PLAY [localhost] *******************************************************************
  prefs: []
  type: TYPE_NORMAL
- en: TASK [Gathering Facts] *************************************************************
  prefs: []
  type: TYPE_NORMAL
- en: 'ok: [localhost]'
  prefs: []
  type: TYPE_NORMAL
- en: TASK [Ensure the myns namespace exists] ********************************************
  prefs: []
  type: TYPE_NORMAL
- en: 'changed: [localhost]'
  prefs: []
  type: TYPE_NORMAL
- en: PLAY RECAP *************************************************************************
  prefs: []
  type: TYPE_NORMAL
- en: 'localhost : ok=2 changed=1 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: $ kubectl get svc
  prefs: []
  type: TYPE_NORMAL
- en: NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE
  prefs: []
  type: TYPE_NORMAL
- en: mysvc ClusterIP 10.0.0.84 <none> 80/TCP 10s
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: $ pip install boto3
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: $ ansible-galaxy collection install community.aws amazon.aws
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: '[default]'
  prefs: []
  type: TYPE_NORMAL
- en: aws_access_key_id = [YOUR_KEY_HERE]
  prefs: []
  type: TYPE_NORMAL
- en: aws_secret_access_key = [YOUR_SECRET_ACCESS_KEY_HERE]
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: '---'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- hosts: localhost'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'tasks:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- name: Ensure key pair is present'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'amazon.aws.ec2_key:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'name: fale'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'key_material: "{{ lookup(''file'', ''~/.ssh/fale.pub'') }}"'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- name: Gather information of the EC2 VPC net in eu-west-1'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'amazon.aws.ec2_vpc_net_info:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'region: eu-west-1'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'register: aws_simple_net'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- name: Gather information of the EC2 VPC subnet in eu-west-1'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'amazon.aws.ec2_vpc_subnet_info:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'region: eu-west-1'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'filters:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'vpc-id: ''{{ aws_simple_net.vpcs.0.id }}'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'register: aws_simple_subnet'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- name: Ensure wssg Security Group is present'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'amazon.aws.ec2_security_group:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'name: wssg'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'description: Web Security Group'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'region: eu-west-1'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'vpc_id: ''{{ aws_simple_net.vpcs.0.id }}'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'rules:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- proto: tcp'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'from_port: 22'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'to_port: 22'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'cidr_ip: 0.0.0.0/0'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- proto: tcp'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'from_port: 80'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'to_port: 80'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'cidr_ip: 0.0.0.0/0'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- proto: tcp'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'from_port: 443'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'to_port: 443'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'cidr_ip: 0.0.0.0/0'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'rules_egress:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- proto: all'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'cidr_ip: 0.0.0.0/0'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'register: aws_simple_wssg'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- name: Setup instance'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'amazon.aws.ec2_instance:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'assign_public_ip: true'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'image: ami-3548444c'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'region: eu-west-1'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'exact_count: 1'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'key_name: fale'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'count_tag:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Name: ws01.ansible2cookbook.com'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'instance_tags:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Name: ws01.ansible2cookbook.com'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'instance_type: t2.micro'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'group_id: ''{{ aws_simple_wssg.group_id }}'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'vpc_subnet_id: ''{{ aws_simple_subnet.subnets.0.id }}'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'volumes:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- device_name: /dev/sda1'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'volume_type: gp2'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'volume_size: 10'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'delete_on_termination: True'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: $ ansible-playbook aws.yaml
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: PLAY [localhost] **********************************************************************************
  prefs: []
  type: TYPE_NORMAL
- en: TASK [Gathering Facts] ****************************************************************************
  prefs: []
  type: TYPE_NORMAL
- en: 'ok: [localhost]'
  prefs: []
  type: TYPE_NORMAL
- en: TASK [Ensure key pair is present] *****************************************************************
  prefs: []
  type: TYPE_NORMAL
- en: 'ok: [localhost]'
  prefs: []
  type: TYPE_NORMAL
- en: TASK [Gather information of the EC2 VPC net in eu-west-1] *****************************************
  prefs: []
  type: TYPE_NORMAL
- en: 'ok: [localhost]'
  prefs: []
  type: TYPE_NORMAL
- en: TASK [Gather information of the EC2 VPC subnet in eu-west-1] **************************************
  prefs: []
  type: TYPE_NORMAL
- en: 'ok: [localhost]'
  prefs: []
  type: TYPE_NORMAL
- en: TASK [Ensure wssg Security Group is present] ******************************************************
  prefs: []
  type: TYPE_NORMAL
- en: 'ok: [localhost]'
  prefs: []
  type: TYPE_NORMAL
- en: TASK [Setup instance] *****************************************************************************
  prefs: []
  type: TYPE_NORMAL
- en: 'changed: [localhost]'
  prefs: []
  type: TYPE_NORMAL
- en: PLAY RECAP ****************************************************************************************
  prefs: []
  type: TYPE_NORMAL
- en: 'localhost : ok=6 changed=1 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: $ pip install requests google-auth
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: $ ansible-galaxy collection install google.cloud
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: '---'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- hosts: localhost'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'tasks:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- name: create a instance'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'google.cloud.gcp_compute_instance:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'name: TestMachine'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'machine_type: n1-standard-1'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'disks:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- auto_delete: ''true'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'boot: ''true'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'initialize_params:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'source_image: family/centos-stream-9'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'disk_size_gb: 10'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'zone: eu-west1-c'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'auth_kind: serviceaccount'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'service_account_file: "~/sa.json"'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'state: present'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: $ ansible-playbook gce.yaml
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: PLAY [localhost] **********************************************************************************
  prefs: []
  type: TYPE_NORMAL
- en: TASK [Gathering Facts] ****************************************************************************
  prefs: []
  type: TYPE_NORMAL
- en: 'ok: [localhost]'
  prefs: []
  type: TYPE_NORMAL
- en: TASK [create a instance] **************************************************************************
  prefs: []
  type: TYPE_NORMAL
- en: 'changed: [localhost]'
  prefs: []
  type: TYPE_NORMAL
- en: PLAY RECAP ****************************************************************************************
  prefs: []
  type: TYPE_NORMAL
- en: 'localhost : ok=2 changed=1 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: $ pip install -r ~/.ansible/collections/ansible_collections/azure/azcollection/requirements-azure.txt
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: $ ansible-galaxy collection install azure.azcollection
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: '[default]'
  prefs: []
  type: TYPE_NORMAL
- en: subscription_id = [YOUR_SUBSCIRPTION_ID_HERE]
  prefs: []
  type: TYPE_NORMAL
- en: client_id = [YOUR_CLIENT_ID_HERE]
  prefs: []
  type: TYPE_NORMAL
- en: secret = [YOUR_SECRET_HERE]
  prefs: []
  type: TYPE_NORMAL
- en: tenant = [YOUR_TENANT_HERE]
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: '[default]'
  prefs: []
  type: TYPE_NORMAL
- en: ad_user = [YOUR_AD_USER_HERE]
  prefs: []
  type: TYPE_NORMAL
- en: password = [YOUR_AD_PASSWORD_HERE]
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: '[default]'
  prefs: []
  type: TYPE_NORMAL
- en: ad_user = [YOUR_AD_USER_HERE]
  prefs: []
  type: TYPE_NORMAL
- en: password = [YOUR_AD_PASSWORD_HERE]
  prefs: []
  type: TYPE_NORMAL
- en: client_id = [YOUR_CLIENT_ID_HERE]
  prefs: []
  type: TYPE_NORMAL
- en: tenant = [YOUR_TENANT_HERE]
  prefs: []
  type: TYPE_NORMAL
- en: adfs_authority_url = [YOUR_ADFS_AUTHORITY_URL_HERE]
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: '---'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- hosts: localhost'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'tasks:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- name: Ensure the Storage Account is present'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'azure.azcollection.azure_rm_storageaccount:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'resource_group: Testing'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'name: mysa'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'account_type: Standard_LRS'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- name: Ensure the Virtual Network is present'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'azure.azcollection.azure_rm_virtualnetwork:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'resource_group: Testing'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'name: myvn'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'address_prefixes: "10.10.0.0/16"'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- name: Ensure the Subnet is present'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'azure.azcollection.azure_rm_subnet:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'resource_group: Testing'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'name: mysn'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'address_prefix: "10.10.0.0/24"'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'virtual_network: myvn'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- name: Ensure that the Public IP is set'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'azure.azcollection.azure_rm_publicipaddress:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'resource_group: Testing'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'allocation_method: Static'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'name: myip'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- name: Ensure a Security Group allowing SSH is present'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'azure.azcollection.azure_rm_securitygroup:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'resource_group: Testing'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'name: mysg'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'rules:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- name: SSH'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'protocol: Tcp'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'destination_port_range: 22'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'access: Allow'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'priority: 101'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'direction: Inbound'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- name: Ensure the NIC is present'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'azure.azcollection.azure_rm_networkinterface:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'resource_group: Testing'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'name: mynic'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'virtual_network: myvn'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'subnet: mysn'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'public_ip_name: myip'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'security_group: mysg'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- name: Ensure the Virtual Machine is present'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'azure.azcollection.azure_rm_virtualmachine:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'resource_group: Testing'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'name: myvm01'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'vm_size: Standard_D1'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'storage_account: mysa'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'storage_container: myvm01'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'storage_blob: myvm01.vhd'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'admin_username: admin'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'admin_password: Password!'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'network_interfaces: mynic'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'image:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'offer: CentOS'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'publisher: OpenLogic'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'sku: ''8.4'''
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'version: latest'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: $ ansible-playbook azure.yaml
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: PLAY [localhost] **********************************************************************************
  prefs: []
  type: TYPE_NORMAL
- en: TASK [Gathering Facts] ****************************************************************************
  prefs: []
  type: TYPE_NORMAL
- en: 'ok: [localhost]'
  prefs: []
  type: TYPE_NORMAL
- en: TASK [Ensure the Storage Account is present] ******************************************************
  prefs: []
  type: TYPE_NORMAL
- en: 'changed: [localhost]'
  prefs: []
  type: TYPE_NORMAL
- en: TASK [Ensure the Virtual Network is present] ******************************************************
  prefs: []
  type: TYPE_NORMAL
- en: 'changed: [localhost]'
  prefs: []
  type: TYPE_NORMAL
- en: TASK [Ensure the Subnet is present] ***************************************************************
  prefs: []
  type: TYPE_NORMAL
- en: 'changed: [localhost]'
  prefs: []
  type: TYPE_NORMAL
- en: TASK [Ensure that the Public IP is set] ***********************************************************
  prefs: []
  type: TYPE_NORMAL
- en: 'changed: [localhost]'
  prefs: []
  type: TYPE_NORMAL
- en: TASK [Ensure a Security Group allowing SSH is present] ********************************************
  prefs: []
  type: TYPE_NORMAL
- en: 'changed: [localhost]'
  prefs: []
  type: TYPE_NORMAL
- en: TASK [Ensure the NIC is present] ******************************************************************
  prefs: []
  type: TYPE_NORMAL
- en: 'changed: [localhost]'
  prefs: []
  type: TYPE_NORMAL
- en: TASK [Ensure the Virtual Machine is present] ******************************************************
  prefs: []
  type: TYPE_NORMAL
- en: 'changed: [localhost]'
  prefs: []
  type: TYPE_NORMAL
- en: PLAY RECAP ****************************************************************************************
  prefs: []
  type: TYPE_NORMAL
- en: 'localhost : ok=8 changed=7 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: $ pip install openstacksdk
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: $ ansible-galaxy collection install openstack.cloud
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: 'clouds:'
  prefs: []
  type: TYPE_NORMAL
- en: 'test_cloud:'
  prefs: []
  type: TYPE_NORMAL
- en: 'region_name: MyRegion'
  prefs: []
  type: TYPE_NORMAL
- en: 'auth:'
  prefs: []
  type: TYPE_NORMAL
- en: 'auth_url: http://[YOUR_AUTH_URL_HERE]:5000/v2.0/'
  prefs: []
  type: TYPE_NORMAL
- en: 'username: [YOUR_USERNAME_HERE]'
  prefs: []
  type: TYPE_NORMAL
- en: 'password: [YOUR_PASSWORD_HERE]'
  prefs: []
  type: TYPE_NORMAL
- en: 'project_name: myProject'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: '---'
  prefs: []
  type: TYPE_NORMAL
- en: '- hosts: localhost'
  prefs: []
  type: TYPE_NORMAL
- en: 'tasks:'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Ensure the SSH key is present on OpenStack'
  prefs: []
  type: TYPE_NORMAL
- en: 'openstack.cloud.keypair:'
  prefs: []
  type: TYPE_NORMAL
- en: 'state: present'
  prefs: []
  type: TYPE_NORMAL
- en: 'name: ansible_key'
  prefs: []
  type: TYPE_NORMAL
- en: 'public_key_file: "{{ ''~'' | expanduser }}/.ssh/id_rsa.pub"'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Ensure we have a CentOS image'
  prefs: []
  type: TYPE_NORMAL
- en: 'ansible.builtin.get_url:'
  prefs: []
  type: TYPE_NORMAL
- en: 'url: http://cloud.centos.org/centos/9-stream/x86_64/images/CentOS-Stream-GenericCloud-9-20230424.0.x86_64.qcow2'
  prefs: []
  type: TYPE_NORMAL
- en: 'dest: /tmp/CentOS-Stream-GenericCloud-9-20230424.0.x86_64.qcow2'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Ensure the CentOS image is in OpenStack'
  prefs: []
  type: TYPE_NORMAL
- en: 'openstack.cloud.image:'
  prefs: []
  type: TYPE_NORMAL
- en: 'name: centos'
  prefs: []
  type: TYPE_NORMAL
- en: 'container_format: bare'
  prefs: []
  type: TYPE_NORMAL
- en: 'disk_format: qcow2'
  prefs: []
  type: TYPE_NORMAL
- en: 'state: present'
  prefs: []
  type: TYPE_NORMAL
- en: 'filename: /tmp/CentOS-Stream-GenericCloud-9-20230424.0.x86_64.qcow2'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Ensure the Network is present'
  prefs: []
  type: TYPE_NORMAL
- en: 'openstack.cloud.network:'
  prefs: []
  type: TYPE_NORMAL
- en: 'state: present'
  prefs: []
  type: TYPE_NORMAL
- en: 'name: mynet'
  prefs: []
  type: TYPE_NORMAL
- en: 'external: False'
  prefs: []
  type: TYPE_NORMAL
- en: 'shared: False'
  prefs: []
  type: TYPE_NORMAL
- en: 'register: net_out'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Ensure the Subnetwork is present'
  prefs: []
  type: TYPE_NORMAL
- en: 'openstack.cloud.subnet:'
  prefs: []
  type: TYPE_NORMAL
- en: 'state: present'
  prefs: []
  type: TYPE_NORMAL
- en: 'network_name: "{{ net_out.id }}"'
  prefs: []
  type: TYPE_NORMAL
- en: 'name: mysubnet'
  prefs: []
  type: TYPE_NORMAL
- en: 'ip_version: 4'
  prefs: []
  type: TYPE_NORMAL
- en: 'cidr: 192.168.0.0/24'
  prefs: []
  type: TYPE_NORMAL
- en: 'gateway_ip: 192.168.0.1'
  prefs: []
  type: TYPE_NORMAL
- en: 'enable_dhcp: yes'
  prefs: []
  type: TYPE_NORMAL
- en: 'dns_nameservers:'
  prefs: []
  type: TYPE_NORMAL
- en: '- 8.8.8.8'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Ensure the Router is present'
  prefs: []
  type: TYPE_NORMAL
- en: 'openstack.cloud.router:'
  prefs: []
  type: TYPE_NORMAL
- en: 'state: present'
  prefs: []
  type: TYPE_NORMAL
- en: 'name: myrouter'
  prefs: []
  type: TYPE_NORMAL
- en: 'network: nova'
  prefs: []
  type: TYPE_NORMAL
- en: 'external_fixed_ips:'
  prefs: []
  type: TYPE_NORMAL
- en: '- subnet: nova'
  prefs: []
  type: TYPE_NORMAL
- en: 'interfaces:'
  prefs: []
  type: TYPE_NORMAL
- en: '- mysubnet'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Ensure the Security Group is present'
  prefs: []
  type: TYPE_NORMAL
- en: 'openstack.cloud.security_group:'
  prefs: []
  type: TYPE_NORMAL
- en: 'state: present'
  prefs: []
  type: TYPE_NORMAL
- en: 'name: mysg'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Ensure the Security Group allows ICMP traffic'
  prefs: []
  type: TYPE_NORMAL
- en: 'openstack.cloud.security_group_rule:'
  prefs: []
  type: TYPE_NORMAL
- en: 'security_group: mysg'
  prefs: []
  type: TYPE_NORMAL
- en: 'protocol: icmp'
  prefs: []
  type: TYPE_NORMAL
- en: 'remote_ip_prefix: 0.0.0.0/0'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Ensure the Security Group allows SSH traffic'
  prefs: []
  type: TYPE_NORMAL
- en: 'openstack.cloud.security_group_rule:'
  prefs: []
  type: TYPE_NORMAL
- en: 'security_group: mysg'
  prefs: []
  type: TYPE_NORMAL
- en: 'protocol: tcp'
  prefs: []
  type: TYPE_NORMAL
- en: 'port_range_min: 22'
  prefs: []
  type: TYPE_NORMAL
- en: 'port_range_max: 22'
  prefs: []
  type: TYPE_NORMAL
- en: 'remote_ip_prefix: 0.0.0.0/0'
  prefs: []
  type: TYPE_NORMAL
- en: '- name: Ensure the Instance exists'
  prefs: []
  type: TYPE_NORMAL
- en: 'openstack.cloud.server:'
  prefs: []
  type: TYPE_NORMAL
- en: 'state: present'
  prefs: []
  type: TYPE_NORMAL
- en: 'name: myInstance'
  prefs: []
  type: TYPE_NORMAL
- en: 'image: centos'
  prefs: []
  type: TYPE_NORMAL
- en: 'flavor: m1.small'
  prefs: []
  type: TYPE_NORMAL
- en: 'security_groups: mysg'
  prefs: []
  type: TYPE_NORMAL
- en: 'key_name: ansible_key'
  prefs: []
  type: TYPE_NORMAL
- en: 'nics:'
  prefs: []
  type: TYPE_NORMAL
- en: '- net-id: "{{ net_out.id }}"'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
- en: $ ansible-playbook openstack.yaml
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs: []
  type: TYPE_PRE
- en: PLAY [localhost] **********************************************************************************
  prefs: []
  type: TYPE_NORMAL
- en: TASK [Gathering Facts] ****************************************************************************
  prefs: []
  type: TYPE_NORMAL
- en: 'ok: [localhost]'
  prefs: []
  type: TYPE_NORMAL
- en: TASK [Ensure the SSH key is present on OpenStack] *************************************************
  prefs: []
  type: TYPE_NORMAL
- en: 'changed: [localhost]'
  prefs: []
  type: TYPE_NORMAL
- en: TASK [Ensure we have a CentOS image] **************************************************************
  prefs: []
  type: TYPE_NORMAL
- en: 'changed: [localhost]'
  prefs: []
  type: TYPE_NORMAL
- en: TASK [Ensure the CentOS image is in OpenStack] ****************************************************
  prefs: []
  type: TYPE_NORMAL
- en: 'changed: [localhost]'
  prefs: []
  type: TYPE_NORMAL
- en: TASK [Ensure the Network is present] **************************************************************
  prefs: []
  type: TYPE_NORMAL
- en: 'changed: [localhost]'
  prefs: []
  type: TYPE_NORMAL
- en: TASK [Ensure the Subnetwork is present] ***********************************************************
  prefs: []
  type: TYPE_NORMAL
- en: 'changed: [localhost]'
  prefs: []
  type: TYPE_NORMAL
- en: TASK [Ensure the Router is present] ***************************************************************
  prefs: []
  type: TYPE_NORMAL
- en: 'changed: [localhost]'
  prefs: []
  type: TYPE_NORMAL
- en: TASK [Ensure the Security Group is present] *******************************************************
  prefs: []
  type: TYPE_NORMAL
- en: 'changed: [localhost]'
  prefs: []
  type: TYPE_NORMAL
- en: TASK [Ensure the Security Group allows ICMP traffic] **********************************************
  prefs: []
  type: TYPE_NORMAL
- en: 'changed: [localhost]'
  prefs: []
  type: TYPE_NORMAL
- en: TASK [Ensure the Security Group allows SSH traffic] ***********************************************
  prefs: []
  type: TYPE_NORMAL
- en: 'changed: [localhost]'
  prefs: []
  type: TYPE_NORMAL
- en: TASK [Ensure the Instance exists] *****************************************************************
  prefs: []
  type: TYPE_NORMAL
- en: 'changed: [localhost]'
  prefs: []
  type: TYPE_NORMAL
- en: PLAY RECAP ****************************************************************************************
  prefs: []
  type: TYPE_NORMAL
- en: 'localhost : ok=11 changed=10 unreachable=0 failed=0 skipped=0 rescued=0 ignored=0'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs: []
  type: TYPE_PRE
