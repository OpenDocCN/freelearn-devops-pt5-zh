["```\n$ docker container ls -a\n```", "```\n$ docker image ls\n```", "```\n$ docker container ls -a\n```", "```\n$ docker container ls --format {{.Names}}\n```", "```\n$ docker image ls\n```", "```\n$ docker container ls --format {{.Image}}\n```", "```\n$ kubectl version\n```", "```\n$ kubectl get nodes\n```", "```\n$ kubectl get namespaces\n```", "```\n$ kubectl get pods --namespace kube-system \n```", "```\n$ kubectl describe pods kube-scheduler-docker-desktop \n--namespace kube-system \n```", "```\nName:                 kube-scheduler-docker-desktop\nNamespace:            kube-system\nPriority:             2000000000\nPriority Class Name:  system-cluster-critical\nNode:                 docker-desktop/192.168.65.3\nStart Time:           Sun, 03 May 2020 12:11:02 +0100\n```", "```\nLabels:               component=kube-scheduler\n                      tier=control-plane\nAnnotations:          kubernetes.io/config.hash: 131c3f63daec7c\n0750818f64a2f75d20\n                      kubernetes.io/config.mirror: 131c3f63daec\n7c0750818f64a2f75d20\n                      kubernetes.io/config.seen: \n2020-05-03T11:10:56.315367593Z\n                      kubernetes.io/config.source: file\nStatus:               Running\nIP:                   192.168.65.3\n```", "```\nContainers:\n  kube-scheduler:\n    Container ID:  docker://1b7ca730cd85941a5550d816239edc14953\nf07b98763751ecb1caf7dfcced087\n    Image:         k8s.gcr.io/kube-scheduler:v1.15.5\n    Image ID:      docker-pullable://k8s.gcr.io/kube-scheduler@\nsha256:ec985e27f41e3ceec552440502dbfa723924d5e6d72fc9193d140972\ne24b8b77\n    Port:          <none>\n    Host Port:     <none>\n```", "```\n    Command:\n      kube-scheduler\n      --bind-address=127.0.0.1\n      --kubeconfig=/etc/kubernetes/scheduler.conf\n      --leader-elect=true\n```", "```\n    State:          Running\n      Started:      Sun, 03 May 2020 12:11:03 +0100\n    Ready:          True\n    Restart Count:  0\n```", "```\n    Requests:\n      cpu:        100m\n    Liveness:     http-get http://127.0.0.1:10251/healthz \ndelay=15s timeout=15s period=10s #success=1 #failure=8\n    Environment:  <none>\n    Mounts:\n      /etc/kubernetes/scheduler.conf from kubeconfig (ro)\n```", "```\nConditions:\n  Type              Status\n  Initialized       True\n  Ready             True\n  ContainersReady   True\n  PodScheduled      True\n```", "```\nVolumes:\n  kubeconfig:\n    Type:          HostPath (bare host directory volume)\n    Path:          /etc/kubernetes/scheduler.conf\n    HostPathType:  FileOrCreate\nQoS Class:         Burstable\nNode-Selectors:    <none>\nTolerations:       :NoExecute\n```", "```\nEvents:\n  Type    Reason   Age   From                     Message\n  ----    ------   ----  ----                     -------\n  Normal  Pulled   39m   kubelet, docker-desktop  Container \nimage 'k8s.gcr.io/kube-scheduler:v1.15.5' already present on \nmachine\n  Normal  Created  39m   kubelet, docker-desktop  Created \ncontainer kube-scheduler\n  Normal  Started  39m   kubelet, docker-desktop  Started \ncontainer kube-scheduler\n```", "```\n$ kubectl logs kube-scheduler-docker-desktop -c kube-scheduler \n--namespace kube-system \n```", "```\n$ kubectl logs --namespace kube-system kube-scheduler-docker-\ndesktop\n```", "```\n$ kubectl exec --namespace kube-system kube-scheduler-docker-\ndesktop -c kube-scheduler -- uname -a\n$ kubectl exec --namespace kube-system kube-scheduler-docker-\ndesktop -- uname -a\n```", "```\n$ kubectl apply -f https://raw.githubusercontent.com/\nkubernetes/dashboard/v2.0.0/aio/deploy/recommended.yaml\n```", "```\n$ kubectl get namespaces\n$ kubectl get deployments --namespace kubernetes-dashboard\n$ kubectl get services --namespace kubernetes-dashboard\n```", "```\n$ kubectl proxy\n```", "```\n$ kubectl create serviceaccount dashboard-admin-sa\n```", "```\n$ kubectl create clusterrolebinding dashboard-admin-sa --clusterrole=cluster-admin --serviceaccount=default:dashboard-admin-sa\n```", "```\n$ kubectl get secrets\n```", "```\n$ kubectl describe secret dashboard-admin-sa-token-z9x4g\n```", "```\nversion: '3'\nservices:\n  cluster:\n    image: russmckendrick/cluster\n    ports:\n      - '80:80' deploy:\n    replicas: 6\n    restart_policy:\n      condition: on-failure\n    placement:\n      constraints:\n        - node.role == worker\n```", "```\nversion: '3'\nservices:\n  cluster:\n    image: russmckendrick/cluster\n    ports:\n      - '80:80' deploy:\n    replicas: 6\n    restart_policy:\n      condition: on-failure\n```", "```\n$ docker stack deploy --compose-file=docker-compose.yml cluster\n```", "```\n$ docker stack ls\n$ docker stack services cluster\n$ docker stack ps cluster\n```", "```\n$ kubectl get deployments\n$ kubectl get services\n```", "```\n$ docker stack rm cluster\n```", "```\n$ brew install kompose\n```", "```\n$ choco install kubernetes-kompose\n```", "```\n$ kompose up\n```", "```\n$ kubectl get deployment,svc,pods,pvc\n```", "```\n$ kompose down\n```", "```\n$ kompose convert\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  creationTimestamp: null\n  labels:\n    io.kompose.service: cluster\n  name: cluster\nspec:\n  containers:\n  - image: russmckendrick/cluster\n    name: cluster\n    ports:\n    - containerPort: 80\n    resources: {}\n  restartPolicy: OnFailure\nstatus: {}\nAnd the cluster-service.yaml file contains the following:\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    kompose.cmd: kompose convert\n    kompose.version: 1.21.0 ()\n  creationTimestamp: null\n  labels:\n    io.kompose.service: cluster\n  name: cluster\nspec:\n  ports:\n  - name: '80'\n    port: 80\n    targetPort: 80\n  selector:\n    io.kompose.service: cluster\nstatus:\n  loadBalancer: {}\n```", "```\n$ kubectl create -f cluster-pod.yaml\n$ kubectl create -f cluster-service.yaml\n$ kubectl get deployment,svc,pods,pvc\n```", "```\n$ kubectl delete service/cluster pod/cluster\n```"]