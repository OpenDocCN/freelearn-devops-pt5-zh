["```\n$ cat Vagrantfile\nVagrant.configure(2) do |config| \n  config.vm.define \"openshift\" do |conf| \n    conf.vm.box = \"centos/7\" \n    conf.vm.network \"private_network\", ip: \"172.24.0.11\" \n    conf.vm.hostname = 'openshift.example.com' \n    conf.vm.network \"forwarded_port\", guest: 80, host: 1080\n    conf.vm.network \"forwarded_port\", guest: 443, host: 9443\n    conf.vm.network \"forwarded_port\", guest: 8080, host: 8080\n    conf.vm.network \"forwarded_port\", guest: 8443, host: 8443\n    conf.vm.provider \"virtualbox\" do |v| \n      v.memory = 4096 \n      v.cpus = 2 \n    end\n    conf.vm.provision \"shell\", inline: $lab_main \n  end \nend\n$lab_main = <<SCRIPT\ncat <<EOF >> /etc/hosts\n172.24.0.11 openshift.example.com openshift\n172.24.0.12 storage.example.com storage nfs\nEOF\nsystemctl disable firewalld\nsystemctl stop firewalld\nyum update -y\nyum install -y epel-release\nyum install -y docker\ncat << EOF >/etc/docker/daemon.json\n{\n   \"insecure-registries\": [\n     \"172.30.0.0/16\"\n   ]\n}\nEOF\nsystemctl restart docker\nsystemctl enable docker\nyum -y install centos-release-openshift-origin39\nyum -y install origin-clients\noc cluster up\nSCRIPT\n```", "```\n$ vagrant up\n```", "```\n$ vagrant ssh\n$ sudo -i\n#\n```", "```\n# oc login -u developer\nServer [https://localhost:8443]:\nThe server uses a certificate signed by an unknown authority.\nYou can bypass the certificate check, but any data you send to the server could be intercepted by others.\nUse insecure connections? (y/n): y\n\nAuthentication required for https://localhost:8443 (openshift)\nUsername: developer\nPassword: <ANY PASSWORD>\nLogin successful.\n\nYou have one project on this server: \"myproject\"\n\nUsing project \"myproject\".\nWelcome! See 'oc help' to get started.\n```", "```\n# cat mytemplate.yaml\napiVersion: v1\nkind: Template \nmetadata:\n  name: template1\nobjects: \n- apiVersion: v1\n  kind: Pod\n  metadata:\n    name: app1\n  spec:\n    containers:\n    - env:\n      - name: SHOW_DATA\n        value: ${SHOW_DATA} \n      image: example/appimage\n      name: app1\n      ports:\n      - containerPort: 8080\n        protocol: TCP\nparameters: \n- description: Myapp configuration data\n  name: SHOW_DATA\n  required: true\nlabels: \n  mylabel: app1\n```", "```\nparameters: \n- description: Myapp configuration data\n  name: SHOW_DATA\n  required: true\n  value: Example value\n```", "```\nparameters:\n  - description: Password used for Redis authentication\n    from: '[A-Z0-9]{8}'\n    generate: expression\n    name: REDIS_PASSWORD\n```", "```\n# oc create -f mytemplate.yaml\ntemplate \"template1\" created\n\n# oc get template\nNAME        DESCRIPTION    PARAMETERS    OBJECTS\ntemplate1                  1 (1 blank)   1\n```", "```\n# oc login -u system:admin \n# oc create -f mytemplate.json -n openshift\ntemplate \"template1\" created\n\n# oc get template -n openshift|grep temp\ntemplate1\n```", "```\n# oc get template mariadb-persistent -n openshift\nNAME  DESCRIPTION  PARAMETERS OBJECTS\nmariadb-persistent MariaDB database service, with persistent storage. For more information about... 8 (3 generated) 4\n```", "```\n# oc process --parameters -n openshift mariadb-persistent\nNAME DESCRIPTION GENERATOR VALUE\n...\n<output omitted>\n...\nVOLUME_CAPACITY Volume space available for data, e.g. 512Mi, 2Gi. 1Gi\n```", "```\n# oc process --parameters -f mytemplate.yaml\nNAME        DESCRIPTION  GENERATOR    VALUE\nSHOW_DATA   Myapp configuration data\n```", "```\n# oc describe template template1\nName:        template1\nNamespace:    myproject\n...\n<output omitted>\n...\nParameters:\n    Name:        SHOW_DATA\n    Description:    Myapp configuration data\n    Required:        true\n    Value:        <none>\n...\n<output omitted>\n...\n```", "```\n# oc new-app jenkins-persistent -p JENKINS_SERVICE_NAME=myjenkins\n--> Deploying template \"openshift/jenkins-persistent\" to project myproject\n...\n<output omitted>\n...\n--> Creating resources ...\n    route \"myjenkins\" created\n    deploymentconfig \"myjenkins\" created\n    serviceaccount \"myjenkins\" created\n    rolebinding \"myjenkins_edit\" created\n    service \"jenkins-jnlp\" created\n    service \"myjenkins\" created\n--> Success\n...\n<output omitted>\n...\n    Access your application via route 'myjenkins-myproject.127.0.0.1.nip.io'\n    Run 'oc status' to view your app\n```", "```\n# oc get all\nNAME                         REVISION  DESIRED  CURRENT  TRIGGERED BY\ndeploymentconfigs/myjenkins  1         1         1       config,image(jenkins:latest)\n\nNAME             HOST/PORT               PATH      SERVICES PORT   TERMINATION \nWILDCARD\nroutes/myjenkins myjenkins-templates.example.com myjenkins <all>    edge/Redirect \nNone\n\nNAME                      READY     STATUS    RESTARTS  AGE\npo/myjenkins-1-h2mxx      1/1       Running   0         1m\n\nNAME                      DESIRED   CURRENT   READY     AGE\nrc/myjenkins-1            1         1         1         1m\n\nNAME                      CLUSTER-IP     EXTERNAL-IP  PORT(S)    AGE\nsvc/jenkins-jnlp          172.30.33.180  <none>       50000/TCP  1m\nsvc/myjenkins             172.30.107.99  <none>       80/TCP     1m\n```", "```\n# oc delete all --all\ndeploymentconfig \"myjenkins\" deleted\nroute \"myjenkins\" deleted\npod \"myjenkins-1-zg4km\" deleted\nservice \"jenkins-jnlp\" deleted\nservice \"myjenkins\" deleted\n```", "```\n# oc explain\nYou must specify the type of resource to explain. Valid resource types include:\n\n    * all\n    * buildconfigs (aka 'bc')\n    * builds\n    * certificatesigningrequests (aka 'csr')\n    * clusterrolebindings\n    * clusterroles\n...\n<output omitted>\n...\n    error: Required resource not specified.\nSee 'oc explain -h' for help and examples.\n```", "```\n# oc explain svc\n...\n<output omitted>\n...\nFIELDS:\n   metadata    <Object>\n     Standard object's metadata. More info:\n     https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\n...\n<output omitted>\n...\n```", "```\n# oc explain svc.metadata\nRESOURCE: metadata <Object>\n ...\n <output omitted>\n ...\n\nFIELDS:\n ...\n <output omitted>\n ...\n\n   uid    <string>\n     UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations. Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\n```", "```\n$ oc explain svc.metadata.uid\nFIELD: uid <string>\n\nDESCRIPTION:\n     UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations. Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids\n```", "```\n$ oc new-app httpd\n--> Found image 9fd201d (10 days old) in image stream \"openshift/httpd\" under tag \"2.4\" for \"httpd\"\n...\n<output omitted>\n...\n--> Success\n    Application is not exposed. You can expose services to the outside world by executing one or more of the commands below:\n     'oc expose svc/httpd'\n    Run 'oc status' to view your app.\n\n$ oc get all\nNAME             READY     STATUS    RESTARTS   AGE\nhttpd-1-dcm2d    1/1       Running   0          2s\nhttpd-1-deploy   1/1       Running   0          3s\n[root@openshift ~]# oc get all\nNAME                      REVISION   DESIRED   CURRENT   TRIGGERED BY\ndeploymentconfigs/httpd   1          1         1         config,image(httpd:2.4)\n\nNAME                 DOCKER REPO                       TAGS      UPDATED\nimagestreams/httpd   172.30.1.1:5000/myproject/httpd   2.4\n\nNAME               READY     STATUS    RESTARTS   AGE\npo/httpd-1-dcm2d   1/1       Running   0          15s\n\nNAME         DESIRED   CURRENT   READY     AGE\nrc/httpd-1   1         1         1         17s\n\nNAME        TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)             AGE\nsvc/httpd   ClusterIP   172.30.18.224   <none>        8080/TCP,8443/TCP   17s\n\n$ oc export dc,svc,route --as-template=myhttpd > myhttpd_template.yaml \n```", "```\n$ cat myhttpd_template.yaml | head -n 20\napiVersion: v1\nkind: Template\nmetadata:\n  creationTimestamp: null\n  name: myhttpd\nobjects:\n- apiVersion: v1\n  kind: DeploymentConfig\n  metadata:\n    annotations:\n      openshift.io/generated-by: OpenShiftNewApp\n    creationTimestamp: null\n    generation: 1\n    labels:\n      app: httpd\n    name: httpd\n  spec:\n    replicas: 1\n    revisionHistoryLimit: 10\n    selector:\n```", "```\n$ oc new-app httpd -o yaml | head -n 20\napiVersion: v1\nitems:\n- apiVersion: v1\n  kind: DeploymentConfig\n  metadata:\n    annotations:\n      openshift.io/generated-by: OpenShiftNewApp\n    creationTimestamp: null\n    labels:\n      app: httpd\n    name: httpd\n  spec:\n    replicas: 1\n    selector:\n      app: httpd\n      deploymentconfig: httpd\n    strategy:\n      resources: {}\n    template:\n      metadata:\n```", "```\n# oc delete all --all\ndeploymentconfig \"httpd\" deleted\nimagestream \"httpd\" deleted\npod \"httpd-1-dcm2d\" deleted\nservice \"httpd\" deleted\n```", "```\n# curl -O https://raw.githubusercontent.com/OpenShiftDemos/gogs-openshift-docker/master/openshift/gogs-template.yaml\n```", "```\n# oc process --parameters -f gogs-template.yaml\nNAME DESCRIPTION GENERATOR VALUE\nAPPLICATION_NAME The name for the application. gogs\n...\n <output omitted>\n... \n```", "```\n# oc new-project gogs\nNow using project \"gogs\" on server \"https://localhost:8443\".\n```", "```\n# oc new-app -f gogs-template.yaml\nerror: error processing template \"templats/gogs\": Template.template.openshift.io \"gogs\" is invalid: template.parameters[1]: Required value: template.parameters[1]: parameter HOSTNAME is required and must be specified\n```", "```\n# oc new-app -f gogs-template.yaml -p HOSTNAME=gogs.example.com\n--> Deploying template \"gogs/gogs\" for \"gogs-template.yaml\" to project gogs\n...\n<output omitted>\n...\n--> Success\n    Access your application via route 'gogs.example.com'\n    Run 'oc status' to view your app.\n```", "```\n# oc get all\nNAME DOCKER REPO TAGS        UPDATED\nimagestreams/gogs 172.30.1.1:5000/gogs/gogs 0.9.97 About a minute ago\n\nNAME REVISION DESIRED CURRENT TRIGGERED BY\ndeploymentconfigs/gogs 1 1 1 config,image(gogs:0.9.97)\ndeploymentconfigs/gogs-postgresql 1 1 1 config,image(postgresql:9.5)\n\nNAME HOST/PORT PATH SERVICES PORT TERMINATION WILDCARD\nroutes/gogs gogs.example.com gogs <all> None\n\nNAME READY STATUS RESTARTS AGE\npo/gogs-1-vc5g5 1/1 Running 1 1m\npo/gogs-postgresql-1-hfxlf 1/1 Running 0 1m\n\nNAME DESIRED CURRENT READY AGE\nrc/gogs-1 1 1 1 1m\nrc/gogs-postgresql-1 1 1 1 1m\n\nNAME CLUSTER-IP EXTERNAL-IP PORT(S) AGE\nsvc/gogs 172.30.196.109 <none> 3000/TCP 1m\nsvc/gogs-postgresql 172.30.196.38 <none> 5432/TCP 1m\n```", "```\necho \"127.0.0.1 gogs.example.com\" >> /etc/hosts\n```", "```\n$ oc delete all --all\ndeploymentconfig \"mariadb\" deleted\nimagestream \"mariadb\" deleted\npod \"mariadb-1-9qcsp\" deleted\nservice \"mariadb\" deleted\n\n$ oc delete project gogs\nproject \"gogs\" deleted\n\n$ oc project myproject\nNow using project \"myproject\" on server \"https://localhost:8443\".\n```"]