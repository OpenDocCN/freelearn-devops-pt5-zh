- en: Jira Software for Scrum
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Scrum is one of the agile methodologies supported by Jira Software. Unlike the
    old days, when a single project manager would use either a spreadsheet or Microsoft
    Project to keep track of a project's progress, with Jira Software and Scrum, team
    participation is encouraged to improve collaboration between different project
    stakeholders. In this chapter, we will look at how we can use Jira Software to
    unlock the power of Scrum.
  prefs: []
  type: TYPE_NORMAL
- en: 'By the end of the chapter, you will have learned about the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: An overview of Scrum
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up a Scrum board
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Managing an issue backlog
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Estimating work and team velocities
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Running the Scrum sprint
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tracking and reviewing sprint progress
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Scrum
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Unlike the traditional waterfall methodology, where every task or project phase
    is sequential, Scrum prescribes the notion of iteration. At a high level, with
    Scrum, a project is broken up into a number of iterations called sprints. Each
    sprint is usually one or two weeks long. The project team completes a portion
    of the overall project, and the project is completed when all the sprints are
    finished. With this approach, the project team is able to do the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Continuously deliver with each sprint so that feedback can be gathered early
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Accommodate changes during the project life cycle
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Identify issues early on rather than at the very end, which is costly
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Continuously improve the process with retrospective meetings at the end of each
    sprint
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Roles in Scrum
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In any Scrum team, there are three primary roles. Although each role has its
    own specific functions and responsibilities, you need all three to work together
    as a cohesive team in order to be successful at Scrum.
  prefs: []
  type: TYPE_NORMAL
- en: The product owner
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The product owner is usually the product or project manager who is responsible
    for owning the overall vision and the direction of the product that the team is
    working on. As the product owner, they are in charge of the features that will
    be added to the backlog list, the priority of each feature, and planning the delivery
    of these features through sprints. Essentially, the product owner is the person
    who makes sure that the team is delivering the most value for the stakeholders
    in each sprint.
  prefs: []
  type: TYPE_NORMAL
- en: The Scrum master
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Scrum master''s job is to make sure that the team is running and using
    Scrum effectively and efficiently, so they should be very knowledgeable and experienced
    in using Scrum. The Scrum master has the following two primary responsibilities:'
  prefs: []
  type: TYPE_NORMAL
- en: To coach and help everyone on the team to understand Scrum; this includes the
    product owner and delivery team, as well as external people that the project team
    interacts with. In the role of a coach, the Scrum master may help the product
    owner to understand and better manage the backlog and plan for sprints, as well
    as explain the process to the delivery team.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To improve the team's Scrum process by removing any obstacles in the way. Obstacles,
    also known as **impediments**, are anything that may block or negatively affect
    the team's adoption of Scrum. These can include things such as a poorly organized
    product backlog or the lack of support from other teams/management. It is the
    responsibility of the Scrum master either remove to these impediments directly, or
    work with the team to find a solution.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Overall, the Scrum master is the advocate for Scrum, responsible for educating,
    facilitating, and helping people adopt and realize the advantages of using it.
  prefs: []
  type: TYPE_NORMAL
- en: The delivery team
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The delivery team is primarily responsible for executing and delivering the
    final product. However, the team is also responsible for providing estimates on
    tasks and assisting the product owner in better planning sprints and delivery.
  prefs: []
  type: TYPE_NORMAL
- en: Ideally, the team should consist of cross-functional members required for the
    project, such as developers, testers, and business analysts. Since each sprint
    can be viewed as a mini project by itself, it is critical to have all the necessary
    resources available at all times, as tasks are being worked on and passed along
    the workflow.
  prefs: []
  type: TYPE_NORMAL
- en: Last but not least, the team is also responsible for retrospectively reviewing
    their performance at the end of each sprint, along with the product owner and
    Scrum master. This helps the team review what they have done and reveals how they
    can improve on their performance for the upcoming sprints.
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the Scrum process
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now, we will give you a brief introduction to Scrum and an overview of the various
    roles that Scrum prescribes. Let's take a look at how a typical project is run
    with Scrum and some of the key activities.
  prefs: []
  type: TYPE_NORMAL
- en: First, we have the backlog, which is a one-dimensional list of the features
    and requirements that need to be implemented by the team. The item's backlogs
    are listed from top to bottom by priority. While the product owner is the person
    in charge of the backlog, defining the priority based on their vision, everyone
    in the team can contribute by adding new items to the backlog, discussing priorities,
    and estimating efforts required for implementation.
  prefs: []
  type: TYPE_NORMAL
- en: The team will then start planning their next immediate sprint. During this sprint
    planning meeting, the team will decide on the scope of the sprint. Usually, top-priority
    items from the backlog will be included. The key here is that by the end of the
    sprint, the team should have produced a fully tested, potentially shippable product
    containing all the committed features.
  prefs: []
  type: TYPE_NORMAL
- en: During the sprint, the team will have daily Scrum meetings, usually at the start
    of each day, where every member of the team will give a quick overview of what
    they have done, plan to do, and any impediments they may have encountered. The
    goal is to make sure that everyone is on the same page, so meetings should be
    short and sweet.
  prefs: []
  type: TYPE_NORMAL
- en: At the end of the sprint, the team will have a sprint review meeting, where
    the team will present what they have produced to the stakeholder. During this
    meeting, new changes will often emerge as the product starts to take shape, and
    these changes will be added to the backlog, which the team will reprioritize before
    the next sprint commences.
  prefs: []
  type: TYPE_NORMAL
- en: Another meeting called the sprint retrospective meeting will also take place
    at the end of the sprint, where the team will come together to discuss what they
    have done right, what they have done wrong, and how they can improve.
  prefs: []
  type: TYPE_NORMAL
- en: Throughout this process, the Scrum master will act as the referee, where they
    will make sure all these activities are done correctly. For example, the Scrum
    master will guide the product owner and the team during the backlog and sprint
    planning meetings to make sure the items they have are scoped and described correctly.
    The Scrum master will also ensure that the meetings stay focused, productive,
    do not run over time, and that the team members remain respectful without trying
    to talk over each other.
  prefs: []
  type: TYPE_NORMAL
- en: So, now you have seen some of the advantages of using Scrum and the different
    roles, as well as a simple Scrum process. Let's see how we can use Jira Software
    to run projects with Scrum.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a new Scrum board
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The first step to start using Jira Software for Scrum is to create a Scrum board
    for your project. If you created your project by using the Scrum project template,
    as shown in [Chapter 1](part0018.html#H5A40-afcd22ce7063477f98fa024bc0dcef11),
    *Jira Software Basics*, a Scrum board is automatically created for you, along
    with the project.
  prefs: []
  type: TYPE_NORMAL
- en: 'However, if you want to create a board for existing projects, or if you want
    your board to span across multiple projects, you will need to create it separately.
    To create a new board, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Click on the Boards menu item from the top navigation bar and select the View
    all boards option.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the Create board button. This will bring up the Create an Agile board
    dialog.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Select the Create a Scrum board option, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00018.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Select the way you want to create your board. There are three options to choose
    from, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Board created with new Software project: This is the same as creating a project
    using the Scrum project template. A new project will be created, along with a
    new Scrum board dedicated to the project. Use this option if you want to create
    a new Scrum project from scratch.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Board from an existing project: This option allows you to create a board that
    can span across multiple existing projects. Use this option if you have an existing
    project and would like to add a new Scrum board to it.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Board from an existing Saved Filter: This option is similar to the existing
    project option, but lets you use a filter to define which issues will be included.
    Use this option if you want to create a board for multiple projects and have finer
    control over which issues to include.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: If you have many issues in your project, you can also use filters to limit the
    number of issues to be included.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00019.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: 'Fill in the required information for the board. Depending on the option you
    have selected, you will either need to provide the project details or select a
    filter to use. The following screenshot shows an example of how to create a board
    from two existing projects. Click on the Create board button to finish:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00020.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Understanding the Scrum board
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Scrum board is what you and your team will be using to plan and run your
    project. It is both your backlog as well as your sprint activity board. A Scrum
    board has the following major modes:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Backlog: The Backlog mode is where you will plan your sprints, organize your
    backlog, and create issues.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Active sprints: The Active sprints mode is where your team will be working
    in a sprint.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Releases: The Releases mode shows you all the versions (see the later section
    in this chapter) you have for the project, and the progress for each.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Reports: The Reports mode is where you can track the progress of your sprint.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Issues: The Issues mode is the search mode, where you can search for issues
    in the project with a variety of filter options and advanced search queries.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Components: The Components mode lists all the components in the project. With
    Scrum, epics are often used instead of components.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following screenshot shows a typical Scrum board in the Backlog mode. In
    the center of the page, you have the backlog, listing all the issues. You can
    drag them up and down to reorder their priorities. On the right-hand side, you
    have the issue details panel, which will be displayed when you click on an issue
    in the backlog:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00021.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: During the backlog planning meetings, the product owner and the team will use
    this Backlog mode to add new items to the backlog, as well as decide on their
    priorities.
  prefs: []
  type: TYPE_NORMAL
- en: Creating new issues
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'When a Scrum board is first created, all the issues, if any (also known as
    user stories, or stories for short), are placed in the backlog. During your sprint
    planning meetings, you can create more issues and add them to the backlog as you
    translate requirements into user stories. To create a new issue, perform the following
    steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Browse to your Scrum board.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the Create button from the navigation bar at the top or press *C* on
    your keyboard. This will bring up the Create Issue dialog.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the type of issue (for example, Story) you want to create from the Issue
    Type field.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Provide additional information for the issue, such as Summary and Description.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on the Create button to create the issue, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00022.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: The Create Issue screen can be customized to have additional fields. We will
    look at field and screen customization in [Chapter 5](part0091.html#2MP360-afcd22ce7063477f98fa024bc0dcef11),
    *Customizing Jira Software*.
  prefs: []
  type: TYPE_NORMAL
- en: Once you have created the issue, it will be added to the backlog. You can then
    assign it to epics or version and schedule it to be completed by adding it to
    sprints.
  prefs: []
  type: TYPE_NORMAL
- en: 'When creating and refining your user stories, you will want to break them down
    as much as possible so that when it comes to deciding on the scope of a sprint,
    it will be much easier for the team to provide an estimate. One approach is by
    using the **INVEST** characteristics defined by Bill Wake:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Independent**: It is preferable if each story can be done independently.
    While this is not always possible, independent tasks make implementation easier.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Negotiable**: The developers and product owners need to work together so
    that both parties are fully aware of what the story entails.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Valuable**: The story needs to provide value to the customer.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Estimable**: If a story is too big or complicated for the development team
    to provide an estimate, then it needs to be broken down further.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Small**: Each story needs to be small, often addressing a single feature
    that will fit into a single sprint (roughly 2 weeks).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Testable**: The story needs to describe the expected end result so that after
    it is implemented it can be verified.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating new epics
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Epics are big user stories, or a big piece of work that would often need to
    be broken down into smaller, more manageable user stories. For example, an epic
    might be called Performance Improvement, which would contain numerous user stories,
    such as diagnosing performance problems and implementing various fixes. Epics
    can be, but are not required to be, completed in a single sprint, and they are
    usually delivered through several sprints, in the same order that the user stories
    they contain are prioritized. In Jira Software, epics are issues with the issue
    type set to Epic.
  prefs: []
  type: TYPE_NORMAL
- en: 'To create a new epic from your Scrum board, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Expand the EPICS panel, if it is hidden, by clicking on EPICS from the left-hand
    side panel.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on the Create Epic link from the EPICS panel. The link will appear when
    you hover your mouse over the panel. This will bring up the Create Epic dialog,
    with the Project and Issue Type fields already preselected for you:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00023.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: You can also open the Create Issue dialog, as shown in the previous section,
    and select the Issue Type as Epic.
  prefs: []
  type: TYPE_NORMAL
- en: Provide a name for the epic in the Epic Name field.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Provide a quick summary in the Summary field.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the Create button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once you have created the epic, it will be added to the Epics panel.
  prefs: []
  type: TYPE_NORMAL
- en: Epics do not show up as cards in sprints or in the backlog.
  prefs: []
  type: TYPE_NORMAL
- en: After you have created your epic, you can start adding issues under it. Doing
    this helps you organize issues that are related to the same functionality or feature.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are two ways in which you can add issues to an epic:'
  prefs: []
  type: TYPE_NORMAL
- en: By creating new issues directly in the epic, expanding the epic you want, and
    clicking on the Create issue in epic link
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'By dragging existing issues into the epic, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00024.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Estimating your work
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Estimation is an art and is a big part of Scrum. Being able to estimate well
    as a team will directly impact how successful your sprints will be. When it comes
    to Scrum, estimation means velocity, or, in other words, how much work your team
    can deliver in a sprint. This is different from the traditional idea of measuring
    and estimating by man-hours.
  prefs: []
  type: TYPE_NORMAL
- en: The concept of measuring velocity is based around decoupling estimation from
    time tracking. So, instead of estimating the work based on how many hours it will
    take to complete a story, which will inadvertently make people work long hours
    trying to keep the estimates accurate, it can be easily done by using an arbitrary
    number for measurement, which will help us avoid this pitfall.
  prefs: []
  type: TYPE_NORMAL
- en: A common approach is to use what are known as story points. Story points are
    used to measure the complexity or level of effort required to complete a story,
    not how long it will take to complete it. For example, a complex story may have
    eight story points, while a simpler story will have only two. This does not mean
    that the complex story will take 8 hours to complete. It is simply a way to measure
    its complexity in relation to others.
  prefs: []
  type: TYPE_NORMAL
- en: After you have estimated all your issues with story points, you need to figure
    out how many story points your team can deliver in a sprint. Of course, you will
    not know this for your first sprint, so you will have to estimate this again.
    Let's say your team is able to deliver 10 story points worth of work in a one-week
    sprint. Then you can create sprints with any number of issues that add up to 10
    story points. As your team starts working on the sprint, you will likely find
    that the estimate of 10 story points is too much or not enough, so you will need
    to adjust this for your second sprint. Remember that the goal here is not to get
    it right the first time, but to continuously improve your estimates to a point
    where the team can consistently deliver the same amount of story points' worth
    of work—that is, your team's velocity. Once you accurately start predicting your
    team's velocity, it will become easier to manage the workload for each sprint.
  prefs: []
  type: TYPE_NORMAL
- en: Now that you know how estimates work in Scrum, let's look at how Jira Software
    lets you estimate work.
  prefs: []
  type: TYPE_NORMAL
- en: 'Jira Software provides several ways for you to estimate issues, and the default
    approach is to use story points. Each story in your backlog has a field called
    Estimate, as shown in the following screenshot. To provide an estimate for the
    story, you just need to hover over the field, click on it, and enter the story
    point value:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00025.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Consistency is the most important thing when it comes to estimates. It is better
    to be consistently wrong than inconsistently right and wrong. Of course, the goal
    is to go from being consistently wrong and improve to become consistently right.
  prefs: []
  type: TYPE_NORMAL
- en: 'Remember that the estimate value you provide here is arbitrary, as long as
    it can reflect the issues'' complexity in relation to each other. Here are a few
    more points for estimation:'
  prefs: []
  type: TYPE_NORMAL
- en: Be consistent in how you estimate issues.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Involve the team during estimation.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If the estimates turn out to be incorrect, that is fine. The goal here is to
    improve and adjust.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ranking and prioritizing your issues
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: During the planning session, it is important to rank your issues so that the
    list reflects their importance relative to each other. For those who are familiar
    with Jira, there is a priority field, but since it allows you to have more than
    one issue sharing the same priority value, it becomes confusing when you have
    two issues both marked as critical.
  prefs: []
  type: TYPE_NORMAL
- en: With Scrum, you should prioritize issues by dragging an issue up and down the
    list according to its importance. This is usually done when you are grooming your
    backlog. By having the most important issues at the top of the backlog, when it
    comes to sprint planning, you can easily add issues to your sprint by dragging
    the sprint footer, as we will see later.
  prefs: []
  type: TYPE_NORMAL
- en: Creating new versions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In a software development team, you will likely be using versions to plan your
    releases. Using versions allows you to plan and organize issues in your backlog
    and schedule when they will be completed. You can create multiple versions and
    plan your roadmap accordingly.
  prefs: []
  type: TYPE_NORMAL
- en: 'To create a new version, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Expand the Versions panel, if it is hidden, by clicking on VERSIONS from the
    left-hand side panel.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on the Create Version link from the Versions panel. The link will appear
    when you hover your mouse over the panel. This will bring up the Create Version
    dialog with the Project field preselected for you, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00026.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Provide a name for the version in the Name field.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can also specify the start and release dates for the version. These fields
    are optional, and you can change them later.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the Create button.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the version is created, it will be added to the Versions panel. Just like
    epics, you can add issues to a version by dragging and dropping the issue over
    onto the target version. In Scrum, a version can span across many sprints. Clicking
    on a version will display the issues that are part of the version. As shown in
    the following screenshot, Version 2.0 spans across three sprints:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00027.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Planning sprints
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The sprint planning meeting is where the project team comes together at the
    start of each sprint and decides what they should focus and work on next. With
    Jira, you will be using the Backlog mode of your board to create and plan the
    new sprint's scope.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now we illustrate some of the key components during sprint planning:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Backlog: This includes all the issues that are not in any sprint yet. In other
    words, it includes the issues that are not yet scheduled for completion. For a
    new board, all existing issues will be placed in the backlog.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Sprints: These are displayed above the backlog. You can have multiple sprints
    and plan ahead.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Issue details: This is the panel on the right-hand side. It displays details
    of the issue you are clicking on.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Epics: This is one of the panels on the left-hand side. It displays all the
    epics you have.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Versions: This is the other panel on the left-hand side. It displays all the
    versions you have.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The highlighted area in the following screenshot is the new sprint, and the
    issues inside the sprint are what the team has committed to deliver at the end
    of the sprint:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00028.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Starting a sprint
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Once all the epics and issues have been created, it is time to start preparing
    a sprint. The first step is to create a new sprint by clicking on the Create Sprint
    button.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are three ways to add issues to a sprint:'
  prefs: []
  type: TYPE_NORMAL
- en: By dragging the issues you want from the backlog and dropping them into the
    sprint.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: By editing the issues' sprint fields and selecting the sprint you want to add
    the issues to.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: By dragging the sprint footer down to include all the issues from the backlog
    that you want to be part of the sprint. This is a quick way if you have groomed
    your backlog so that the issues you want to focus on are at the top.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00029.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: You can create multiple sprints and plan beyond the current one by filling each
    sprint with issues from your backlog.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you have all the issues you want in the sprint, click on the Start Sprint
    button. As shown in the following screenshot, you will be asked to set the start
    and end dates of the sprint. By default, Jira will automatically set the start
    date to the current date and the end date to one week after that. You can change
    these dates, of course. The general best practices include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Keeping your sprints short, usually one or two weeks long.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Keeping the length of your sprints consistent; this way, you will be able to
    predict your team''s velocity accurately:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](img/00030.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Once you have started your sprint, you will be taken to the Active Sprints mode
    for the board.
  prefs: []
  type: TYPE_NORMAL
- en: 'Note that for you to start a sprint, you have to take the following things
    into consideration:'
  prefs: []
  type: TYPE_NORMAL
- en: There must be no sprint already active. You can only have one active sprint
    per board at any time. There is, however, an option that allows you to run parallel
    sprints, which we will talk about in the next section.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You must have the Administer Projects permission for all projects included in
    the board. We will cover permissions in [Chapter 5](part0091.html#2MP360-afcd22ce7063477f98fa024bc0dcef11),
    *Customizing Jira Software*.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Running parallel sprints
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'By default, you can only have one active sprint at one time. However, sometimes
    you may have multiple teams working on the same project, but in unrelated areas.
    In these cases, you may want to have multiple sprints running for the project,
    one for each team. You can enable parallel sprints using the following method:'
  prefs: []
  type: TYPE_NORMAL
- en: Log into Jira as an administrator, such as the user we created during installation.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Browse to the Applications section of the administration console.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the Jira Software configuration option from the left panel.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Check the Parallel Sprints option to enable it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once this option is enabled, you will be able to start multiple sprints in the
    same project. Note that this is a global option, so all projects will be allowed
    to have parallel sprints.
  prefs: []
  type: TYPE_NORMAL
- en: Working on a sprint
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You will enter the Active Sprints mode once you have started a sprint; all the
    issues that are part of the sprint will then be displayed. In the Active Sprints
    mode, the board will be divided into two major sections.
  prefs: []
  type: TYPE_NORMAL
- en: 'The main section will contain all the issues in the current sprint. You will
    notice that it is divided into several columns. These columns represent the various
    states or statuses that an issue can be in, and they should reflect your team''s
    workflow. By default, there are three columns:'
  prefs: []
  type: TYPE_NORMAL
- en: 'To Do: The issue is waiting to start'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'In Progress: The issue is currently being worked on'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Done: The issue has been completed'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As we will see in the next chapter, you can customize these columns by mapping
    them to Jira workflow statuses.
  prefs: []
  type: TYPE_NORMAL
- en: If you are using epics to organize your issues, this section will also be divided
    into several horizontal swimlanes. Swimlanes help you group similar issues together
    on the board. Swimlanes group issues by criteria, such as assignee, story, or
    epic. By default, swimlanes are grouped by stories.
  prefs: []
  type: TYPE_NORMAL
- en: 'So, you can see that columns group issues by statuses, while swimlanes group
    issues by similarity. As shown in the following screenshot, we have three columns
    and two swimlanes:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00031.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Both the swimlanes and workflow columns can be customized to suit the way your
    team works best, and we will cover this in [Chapter 4](part0074.html#26I9K0-afcd22ce7063477f98fa024bc0dcef11),
    *Using Jira Software Your Way*.
  prefs: []
  type: TYPE_NORMAL
- en: The second section will appear on the right-hand side after you have clicked
    on an issue, and it will display the issue's details, such as its summary and
    description, comments, and attachments.
  prefs: []
  type: TYPE_NORMAL
- en: 'In a typical scenario, at the start of a sprint, all the issues will be in
    the left-most To Do column. During the daily Scrum meetings, team members will
    review the current status of the board and decide what to focus on for the day.
    For example, each member of the team may take on an issue and move it to the In
    Progress column by simply dragging and dropping the issue cards into the column.
    Once they have finished working on the issues, they can drag them into the Done
    column. The team will continue this cycle throughout the sprint until all the
    issues are completed:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00032.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: During the sprint, the Scrum master, as well as the product owner, will need
    to make sure that they do not interrupt the team unless it is urgent. The Scrum
    master should also assist with removing impediments that are preventing team members
    from completing their assigned tasks.
  prefs: []
  type: TYPE_NORMAL
- en: The product owner should also ensure that no additional stories are added to
    the sprint and that any new feature requests are added to the backlog for future
    sprints instead. Jira will alert you if you try to add a new issue to the currently
    active sprint.
  prefs: []
  type: TYPE_NORMAL
- en: Completing a sprint
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'On the day the sprint ends, you will need to complete the sprint by performing
    the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to your Scrum board and click on Active Sprints.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on the Complete Sprint link. This will bring up the Complete Sprint dialog,
    summarizing the current status of the sprint. As shown in the following screenshot,
    we have a total of six issues in this sprint. Three issues are completed and three
    are not:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00033.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Click on the Complete button to complete the sprint.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: When you complete a sprint, any unfinished issues will be automatically moved
    back to the top of the backlog. Sometimes, it might be tempting to extend your
    sprint if you only have one or two issues outstanding, but you should not do this.
    Remember that the goal here is not to make your estimates appear accurate by extending
    sprints or to force your team to work harder in order to complete everything.
    You want to get to a point where the team is consistently completing the same
    amount of work in each sprint. If you have leftovers from a sprint, it means that
    your team's velocity should be lowered. Therefore, for the next sprint, you should
    plan to include less work.
  prefs: []
  type: TYPE_NORMAL
- en: Reporting a sprint's progress
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As your team busily works through the issues in the sprint, you need to have
    a way to track the progress. Jira provides a number of useful reports via the
    Report mode. You can access the Report mode anytime during the sprint. These reports
    are also very useful during sprint retrospective meetings as they provide detailed
    insights on how the sprint progressed.
  prefs: []
  type: TYPE_NORMAL
- en: The sprint report
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The sprint report gives you a quick snapshot of how the sprint is progressing.
    It includes a burndown chart (see the next section) and a summary table that lists
    all the issues in the sprint and their statuses, as shown here:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00034.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: As shown in the preceding sprint report, we have completed six issues in the
    sprint. One issue was not completed and was placed back in the backlog.
  prefs: []
  type: TYPE_NORMAL
- en: The burndown chart
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The burndown chart shows you a graphical representation of the estimated or
    ideal work that is left to be done versus the actual progress. The gray line acts
    as a guideline for the projected progress of the project and the red line is the
    actual progress. In an ideal world, both lines should be as close to each other
    as possible as the sprint progresses each day:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00035.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: The velocity chart
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The velocity chart shows you the amount of work originally committed to the
    sprint (the gray bar) versus the actual amount of work completed (the green bar)
    based on how you decide to estimate, such as in the case of story points.
  prefs: []
  type: TYPE_NORMAL
- en: The chart will include past sprints, so you can get an idea of the trend and
    be able to predict the team's velocity. As shown in the following screenshot,
    from sprints 1 to 3, we have overcommitted the amount of work, and for Sprint
    4, we have completed all our committed work. So, one way to work out your team's
    velocity is to calculate the average based on the Completed column, and this should
    give you an indication of your team's true velocity.
  prefs: []
  type: TYPE_NORMAL
- en: 'Of course, this requires:'
  prefs: []
  type: TYPE_NORMAL
- en: That your sprints stay consistent in their duration
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: That your team members stay consistent in their efficiency
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: That your estimation stays consistent in its formulation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'As your team starts using Scrum, you can expect to see improvements to the
    team''s velocity as you continuously refine your process. Over time, you will
    get to a point where the team''s velocity becomes consistent and can be used as
    a reliable indicator for work estimation. This will allow you to avoid over- and
    under committing to work delivery, as shown in the following velocity chart:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00036.jpeg)'
  prefs: []
  type: TYPE_IMG
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we looked at how to use Jira for Scrum. We looked at the Scrum
    board and how you can use it to organize your issue backlog, plan and run your
    sprint, and review and track its progress with reports and charts. Remember that
    the key elements to focus on for a successfully running sprint are consistency,
    review, and continuous improvement. It is fine if you find your estimates are
    incorrect, especially for the first few sprints; just make sure that you review,
    adjust, and improve.
  prefs: []
  type: TYPE_NORMAL
- en: Now that you have seen how to use a Scrum board, in the next chapter, we will
    look at how you can use Jira for Kanban.
  prefs: []
  type: TYPE_NORMAL
