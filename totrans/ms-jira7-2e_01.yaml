- en: Chapter 1. Planning Your JIRA Installation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Atlassian JIRA is a proprietary issue tracking system. It is used to track bugs,
    resolve issues, and manage project functions. There are many such tools available
    in the market, but the best thing about JIRA is that it can be easily configured
    and it offers a wide range of customizations. Out of the box, JIRA offers defect/bug
    tracking functionalities, but it can also be customized to act like a helpdesk
    system, a simple test management suite, or a project management system with end-to-end
    traceability.
  prefs: []
  type: TYPE_NORMAL
- en: This chapter offers a brief introduction to JIRA and the new features of JIRA
    7, mainly the three variants **JIRA Core**, **JIRA** **Software**, and **JIRA Service
    Desk**. Emphasis is given to planning, installing, and setting up JIRA. After
    reading this chapter, you should understand how to plan your JIRA installation
    and ensure the longevity of its installation so that it can accommodate more users
    and data in the future. We will begin with a questionnaire that needs to be answered
    before you can deploy a JIRA instance in your company. You will learn about the
    system and hardware requirements to run JIRA for an enterprise. The installation
    procedure for Windows and Linux operating systems is discussed briefly and the
    setup wizard is explained in detail in this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: 'Topics covered in this chapter include:'
  prefs: []
  type: TYPE_NORMAL
- en: What is new in JIRA 7?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Planning your JIRA installation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: System requirements
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Setting up the MySQL database
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The JIRA setup wizard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JIRA directory structure, startup/shutdown scripts, and log files
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Planning your upgrade
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Updating JIRA add-ons
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Applications, uses, and examples
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JIRA core concepts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What is new in JIRA 7?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The much awaited JIRA 7 was released in October 2015 and it is now offered
    in three different application variants:'
  prefs: []
  type: TYPE_NORMAL
- en: JIRA Core
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JIRA Software
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: JIRA Service Desk
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let us discuss each one of them separately.
  prefs: []
  type: TYPE_NORMAL
- en: JIRA Core
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This comprises of the base application of JIRA that you might be familiar with,
    of course with some new features. JIRA Core is a simplified version of JIRA features
    that we have been using up until the 6.x versions.
  prefs: []
  type: TYPE_NORMAL
- en: JIRA Software
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This comprises of all the features of JIRA Core and JIRA Agile. From JIRA 7
    onwards, JIRA Agile will no longer be offered as an add-on. You will not be able
    to install JIRA Agile from the marketplace.
  prefs: []
  type: TYPE_NORMAL
- en: JIRA Service Desk
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This comprises of all the features of JIRA Core and JIRA Service Desk. Just
    like JIRA Software, JIRA Service Desk will no longer be offered as an add-on and
    you cannot install it from the marketplace.
  prefs: []
  type: TYPE_NORMAL
- en: This split of applications was done by Atlassian, keeping in mind the usage
    of JIRA in various organizations across the globe, and it makes it very simple
    for the companies to choose the right application suitable for their needs. However,
    it doesn't mean that all three applications (JIRA Core, JIRA Agile, and JIRA Service
    Desk) can't be used on the same instance. You can certainly buy JIRA Software
    and later install the JIRA Service Desk application on it.
  prefs: []
  type: TYPE_NORMAL
- en: Apart from this split, JIRA 7 brings new features such as **Release Hub**, with
    real-time status of the versions, an improved sidebar where you can add your own
    shortcuts, better reporting, and visibility of development tools. We will discuss
    and highlight these improvements in the relevant chapters in this book.
  prefs: []
  type: TYPE_NORMAL
- en: In this book, we will install JIRA Software that comes in-built with JIRA Agile,
    and later we will install JIRA Service Desk on top of it.
  prefs: []
  type: TYPE_NORMAL
- en: Planning your JIRA installation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are certain points to be kept in mind before you install JIRA in the production
    phase and deploy it. The points that are discussed here should ideally be a part
    of your JIRA questionnaire, which you will prepare and fill in after discussion
    with the product owners and project managers. This will not only help you to plan
    your installation for now, but it will also give you a good idea about the future
    usage of the tool.
  prefs: []
  type: TYPE_NORMAL
- en: 'From the very beginning, start preparing the documents to store all the following
    information:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Number of users**: This is the most important thing that the JIRA administrator
    should worry about. If you are using a limited user license in JIRA, then you
    should know the number of users who are using JIRA currently and who will be using
    it a few months down the line. In enterprise systems, there is no limit defined
    in the license on the number of active users accessing the system, but it''s important
    to worry about various aspects that are discussed here:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Are users part of a single team or several teams? It's also possible to give
    limited access of your JIRA instance to clients and third-party vendors.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: If users are part of several teams working with different groups, then is there
    a need to limit the visibility of projects within these groups?
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Number of projects**: The JIRA license will not put any limit on the number
    of projects. You can create any number of projects irrespective of whether you
    use 10 users'' licenses or 100 users'' licenses. The more the number of projects
    means a lot of issues will be stored in the database and a lot of schemes will
    have to be managed by administrators. It''s good to know the tentative number
    of projects that will be stored in JIRA.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**JIRA server hardware recommendation**: The hardware required to run JIRA
    depends on the number of variables, such as the number of users, number of projects,
    traffic, and number of schemes used in JIRA:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For approximately 50 projects and 100 users, with less than 5,000 issues—16
    GB RAM and a multicore CPU.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: For approximately 100 projects and 3,000 users, with less than 100,000 issues—32
    GB RAM, 2 Intel (R) Xeon (R), and CPU E5520 @ 2.27 GHz (16 logical cores) processors.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Atlassian has a recommended sizing guide. Refer to the following URL for more
    information: [https://confluence.atlassian.com/enterprise/jira-sizing-guide-461504623.html](https://confluence.atlassian.com/enterprise/jira-sizing-guide-461504623.html).'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Will you need mail notifications in JIRA?**: Do you want e-mail notifications
    sent to users? JIRA has the capability to send e-mails to users on various events,
    such as issue creating, updating, and resolving. In order to send e-mails, an
    SMTP server is required. JIRA can also be configured with Google Apps for Work;
    just enter your username and password to enable notifications. It''s also possible
    to create issues and post comments using a dedicated e-mail. This functionality
    can be configured using e-mail handlers in JIRA so that users won''t need to launch
    JIRA to post a comment on the ticket they are assigned to; they can just reply
    to the e-mail received from JIRA.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Authentication**: JIRA has its own internal directory user management system
    where the information of a user is stored in an internal database. By default,
    it''s enabled when you install JIRA. It''s also possible to use directory servers
    such as LDAP for authentication, user, and group management. In huge organizations
    where a lot of tools are used, it''s important to have such integrated authentication
    mechanisms so that end users don''t have to remember multiple passwords.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Can JIRA be used from multiple locations?**: It''s important to know the
    geographical location of the user and from where they will be accessing the JIRA
    instance. The choice of a JIRA server becomes important here; latency checks should
    be done from all such locations and the server location should be in such a way
    that it offers the best performance to everyone accessing it. As a JIRA administrator,
    your responsibility will be to do performance routine maintenance activities,
    such as indexing in JIRA. You should know the time window when there are a less
    number of users connected to the system.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**How many concurrent users will access the system?**:If you have thousands
    of users in a geographical location, they may access the system simultaneously.
    This will result in a degraded performance. Although it''s important to know the
    peak usage during the day beforehand, there are various performance improvement
    measures that can be worked on.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Tentatively, how many issues per project can be stored?**: Discuss with all
    the product stakeholders about the usage of the tool. You should have plenty of
    storage to accommodate the huge amount of data. Of course, as an administrator,
    you will have a fair understanding of the usage. A project can have thousands
    of issues and these can have file attachments. From time to time, keep a check
    on the free disk space.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Tentatively, how many total issues can be stored?**:JIRA indexing helps in
    improved search results. However, it can take several minutes to finish and it
    should ideally be done when there is less usage of the tool. A JIRA instance with
    less than 100,000 issues may take 10-15 minutes to finish and you should keep
    this in mind before announcing a downtime. Knowing how many issues will be present
    in the system will help you to make better decisions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Will users also upload attachments in their projects?**: The out-of-the-box
    concept of JIRA has a provision to attach files along with issues. Of course,
    it''s a desirable feature and everyone wants this. All the attachments are stored
    on the disk. Maybe, for some good reason, there is no need to have this feature
    and it''s always good to discuss this first with the product stakeholders.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**How many custom fields do you intend to create?**: Ideally, all the schemes
    and configurations should be documented before implementing it, but it''s always
    good to have a clear understanding of the number of custom fields that you need
    to create in the system.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Choice of platform and database**: JIRA (being a pure Java-based application)
    can be installed either on the Windows or Linux operating system. It needs a JDK
    or JRE environment to run. If your IT team is more comfortable with Windows and
    SQL, then use it. Linux has some advantages (such as SSH) and is more suitable
    for open source tools (such as Postgres or MySQL).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Integration with other tools**: JIRA can be integrated into a lot of other
    tools from Atlassian and other commonly used tools in software development. Will
    you need integration with Confluence, FishEye/Crucible, Bamboo, Git, or SVN? Keep
    these possible integrations in mind at the beginning.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Generally, for best performance, most people prefer Linux-RedHat or CentOS as
    the first choice of distribution. The preferred database is MySQL and Postgres.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For further information on supported platforms, visit the following documentation
    on Atlassian at [https://confluence.atlassian.com/display/JIRA/Supported+Platforms](https://confluence.atlassian.com/display/JIRA/Supported+Platforms).
  prefs: []
  type: TYPE_NORMAL
- en: Installation of JIRA on Windows
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'JIRA can be easily installed using the automated Windows Installer. If you
    are using this method, there is no need to set up the JDK; the installer will
    configure it for you. The following are the steps to install JIRA on Windows:'
  prefs: []
  type: TYPE_NORMAL
- en: Download the **JIRA Windows Installer** (`.exe`) file for your platform and
    architecture from [https://www.atlassian.com/software/jira/download](https://www.atlassian.com/software/jira/download).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Run the executable file and in the next step, select **Express Install** to
    install JIRA with its default settings; however, a custom installation is recommended,
    where you can specify the destination directory to install JIRA, the `JIRA HOME`
    directory, and TCP ports. We recommend the **Custom Installation**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You will also get an option to install JIRA as a service.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After the JIRA installation, it will launch automatically in the browser to
    run the setup wizard.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Refer to [https://confluence.atlassian.com/display/JIRA/Installing+JIRA+on+Windows](https://confluence.atlassian.com/display/JIRA/Installing+JIRA+on+Windows)
    for detailed steps to install JIRA on Windows.
  prefs: []
  type: TYPE_NORMAL
- en: Installation of JIRA on Linux
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Just like Windows Installer, JIRA can also be installed easily on your Linux
    operating system using the console wizard:'
  prefs: []
  type: TYPE_NORMAL
- en: Download the appropriate JIRA Linux 64-bit/32-bit installer (`.bin`) file for
    your platform and architecture from [https://www.atlassian.com/software/jira/download](https://www.atlassian.com/software/jira/download).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Open a Linux console and change the (`cd`) directory to the `.bin` file's directory.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If not already done, make the `.bin` file executable using the `chmod a+x atlassian-jira-X.Y.bin`
    command.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Execute the `./atlassian-jira-X.Y.bin` file.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the next step, select **Express Install** to install JIRA with its default
    settings. However, we recommend **Custom Install**, where you can specify the
    destination directory to install JIRA, the `JIRA HOME` directory, and TCP ports.
    We recommend **Custom Install**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You will also get an option to install JIRA as a service.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After the installation process, JIRA will launch automatically in the browser
    to run the setup wizard.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Refer to [https://confluence.atlassian.com/display/JIRA/Installing+JIRA+on+Linux](https://confluence.atlassian.com/display/JIRA/Installing+JIRA+on+Linux)
    for detailed steps to install JIRA on Linux.
  prefs: []
  type: TYPE_NORMAL
- en: Installation of JIRA as a service
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you run either the Windows or Linux installer with system administrator rights,
    then you will get an option to install JIRA as a service. This makes it really
    easy for JIRA administrators, as the service can be configured to start automatically
    when the server boots; otherwise, you will need to start JIRA manually every time
    you start your server.
  prefs: []
  type: TYPE_NORMAL
- en: Installation of JIRA from an archive file
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'If you want to install JIRA on Solaris, there is no automatic installation
    for it and JIRA needs to be installed from an archive file using the following
    steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Download and extract the JIRA archive file.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set the JIRA home directory.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a dedicated user account on the operating system to run JIRA.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Start JIRA using the `start-jira.sh` file.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Run the setup wizard.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For detailed instructions on how to install JIRA from an archive file, refer
    to [https://confluence.atlassian.com/display/JIRA/Installing+JIRA+from+an+Archive+File+on+Windows%2C+Linux+or+Solaris](https://confluence.atlassian.com/display/JIRA/Installing+JIRA+from+an+Archive+File+on+Windows%2C+Linux+or+Solaris).
  prefs: []
  type: TYPE_NORMAL
- en: System requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: JIRA requires a **Java Developers Kit** (**JDK**) or **Java Runtime Environment**
    (**JRE**) platform to be installed on your server's operating system.
  prefs: []
  type: TYPE_NORMAL
- en: Procedure to install the JDK
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you install JIRA from an archive file then the JDK needs to be installed
    and set up separately on your system. The Windows Installer and Linux Installer
    don't need to install the JDK as these installers come with the JDK in-built.
  prefs: []
  type: TYPE_NORMAL
- en: You can download the JDK from [http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html](http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html).
  prefs: []
  type: TYPE_NORMAL
- en: Select the version relevant to your operating system and architecture. JIRA
    7 requires JDK 1.8 to run smoothly.
  prefs: []
  type: TYPE_NORMAL
- en: 'The steps to install the JDK on Windows are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Uninstall any earlier version of Java that was installed on your system.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Restart your system.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Using the downloaded installer, you can install the JDK at `C:\java` (don't
    install it in `C:\Program Files\`). The JDK specific directory, such as `C:\Java\jdk1.8.0_92`,
    will be created.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Set the `JAVA_HOME` windows environment variable. It should point to the directory
    where JDK is installed, `C:\Java\jdk1.8.0_92`, on the Windows machine.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Restart your system.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Steps to install the JDK on Linux
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Using the link given in the preceding section, download the JDK RPM installer,
    `jdk-8u92-linux-x64.rpm`, and install it at a location of your choice.
  prefs: []
  type: TYPE_NORMAL
- en: Set the `JAVA_HOME` variable as `export JAVA_HOME = /path/to/java`.
  prefs: []
  type: TYPE_NORMAL
- en: Setting up the MySQL database
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: JIRA needs to store its data in a database. For this, we will set up a MySQL
    database. JIRA 7 requires MySQL 5.1 up until 5.6 to run smoothly. You should refer
    to the preferred MySQL server configurations as described on the following page: [https://confluence.atlassian.com/jira/connecting-jira-to-mysql-185729489.html](https://confluence.atlassian.com/jira/connecting-jira-to-mysql-185729489.html).
  prefs: []
  type: TYPE_NORMAL
- en: 'It''s also possible to use PostgreSQL, Oracle, or Microsoft SQL Server with
    JIRA, but here we will discuss how to set up the MySQL database:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Log in to your MySQL Server with the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Enter the password.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a new database to be used by JIRA using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Create a new user and give it permissions on the database:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Flush the privileges using the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: We have created a MySQL database name as `jiradb`, a database username as `jirauser`,
    and a database password as `password`. Keep this information on hand because we
    will need it when we set up JIRA.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To use MySQL with JIRA, you need to download a `mysql-connector-java-5.1.32-bin.jar`
    database driver and copy it to the `lib` folder under JIRA's installation directory.
    The driver can be downloaded from [http://dev.mysql.com/downloads/connector/j](http://dev.mysql.com/downloads/connector/j).
  prefs: []
  type: TYPE_NORMAL
- en: The JIRA setup wizard
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let''s take a look at the steps involved in the installation of JIRA:'
  prefs: []
  type: TYPE_NORMAL
- en: Whether you install JIRA using the custom installer or an archive file, JIRA
    will first launch itself in the browser with the setup wizard.![The JIRA setup
    wizard](img/image_01_001.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The wizard will give you two options—**Set it up for me** or **I'll set it myself**.
    Select **I'll set it myself** and press the **Next** button.![The JIRA setup wizard](img/image_01_002.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the **Database setup** screen, select **Database Connection** as **My Own
    Database**.![The JIRA setup wizard](img/image_01_003.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: As we want to use the MySQL database, select **MySQL** as **Database Type**.
    If you want to evaluate JIRA, then you can also use **Built In (for evaluation
    or demonstration)** as **Database**; JIRA uses **HyperSQL Database **(**HSQLDB**),
    which is only used for testing purposes.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter your MySQL server **Hostname**, **Port**, **Database** name, database
    **Username**, and **Password**. You may click on the **Test Connection** button
    to check whether the credentials are correct or not. Press the **Next** button
    to continue.![The JIRA setup wizard](img/image_01_004.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, enter the **Application Title** for this instance. Select **Private** as
    **Mode**, where only administrators can create accounts. Select **Public** if
    you want users to sign up themselves. Enter the **Base URL**, which users will
    use to access this instance. You can also change it later on and use the domain
    name or subdomain such as `jira.company.com` as the **Base URL**. Press the **Next**
    button to continue.![The JIRA setup wizard](img/image_01_005.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the **Specify your license key** section, you need to enter your license
    key that you can generate from [my.atlassian.com](http://my.atlassian.com) or
    simply click on the **generate a JIRA trial license** link and you will be taken
    to the Atlassian website where you can generate a **New Evaluation License** for
    your instance's **Server ID**. After that you will be taken back to your instance
    with the license key filled in. Press the **Next** button to continue.![The JIRA
    setup wizard](img/image_01_006.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now we need to **Set up administrator account**. Enter your **Full name**, **Email
    Address**, **Username**, and **Password**. Don't forget this credential because
    this account will have the full admin access of the JIRA instance.![The JIRA setup
    wizard](img/image_01_007.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Finally, we have the option to **Set up email notifications**. If you have the
    SMTP server in your company, then you can use it. For this example, we have used
    **Service Provider** as **Google Apps Mail / Gmail**. It's quite simple to configure.
    Just enter your Google Apps **Username** and **Password**. There is no need to
    change any other setting. You can click on the **Test Connection** button to verify
    your credentials and communicate with the e-mail server.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Finish** button to complete the setup wizard and JIRA installation.![The
    JIRA setup wizard](img/image_01_008.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the next screen, the wizard will ask you to select your preferred language.
    Select the language and press the **Continue** button.![The JIRA setup wizard](img/image_01_009.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the next set of screens, you will be presented with **A quick tour of JIRA**.
    You can either click on the **Next** button several times to go through the quick
    tour or click on the **Skip quick tour link** in the top-right corner.![The JIRA
    setup wizard](img/image_01_010.jpg)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now; you will be logged in automatically and presented with the **System Dashboard**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: JIRA directory structure, startup/shutdown scripts, and log files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: It's important for a JIRA administrator to know the JIRA directory structure
    really well because you will often need to take backups, make changes in the configuration
    files, and restore the system. All such activities need to be done on the server
    and have to be done through its respective directories.
  prefs: []
  type: TYPE_NORMAL
- en: The JIRA installation directory
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The JIRA installation directory is the directory in which the JIRA application
    files and libraries are extracted. JIRA does not make changes nor does it save
    any data here.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you have installed JIRA using automated Windows or Linux installers, then
    the JIRA installation directory is stored in the following locations:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Windows**: `C:\Program Files\Atlassian\JIRA`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Linux**: `/opt/atlassian/jira`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The startup and shutdown scripts are available in the `bin` directory under
    the JIRA installation directory:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Startup script**: `bin/start-jira.bat or bin/start-jira.sh`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Shutdown script**: `bin/stop-jira.bat or bin/stop-jira.sh`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The JIRA home directory
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The JIRA home directory has important files that JIRA requires to work properly.
    *Do not modify these files*.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you install JIRA using automated Windows or Linux installers, the default
    location of the JIRA home directory is stored in the following locations:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Windows**: `C:\Program Files\Atlassian\Application Data\JIRA`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Linux**: `/var/atlassian/application-data/jira/`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Subdirectories under the JIRA home directory
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following are the list of subdirectories under the JIRA home directory:'
  prefs: []
  type: TYPE_NORMAL
- en: '`data`: The application data of the JIRA instance is stored here. Attachments
    and all its versions are stored under a subdirectory called `attachments import`.
    If you want to restore JIRA, the backfile needs to be placed in this directory.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`export`: This directory is used to store automated backup files.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`log`: The log files are stored here.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`cache`: The cache files are stored here.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`tmp`: During various runtime operations, such as import, export, and indexing,
    there are some temporary files that are generated. All such files are stored here.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Planning your upgrade
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'You should expect issues in the upgrade process, and for this reason, follow
    these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Set up the staging environment. This could be a clone of your production. Make
    sure the license of your JIRA instance is valid.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a compatibility matrix of the plugins used. Check whether an upgrade
    of these plugins is available in the new version. Also, check the licenses of
    your add-ons.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Check the release notes for bug fixes and possible issues.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Perform the upgrade on staging first.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Perform **user acceptance testing** (**UAT**) with limited users first, preferably
    with the managers or the stakeholders of the company.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Collect the feedback and review it.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: For any issues, raise a ticket with Atlassian. If you have a valid license,
    they will help you out.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Always perform a backup of your JIRA installation directory, JIRA home directory,
    and your database before upgrading.
  prefs: []
  type: TYPE_NORMAL
- en: Upgrading your JIRA instance
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There are several different ways to upgrade JIRA. The method you choose to use
    depends on the version of JIRA you use and the type of environment you use it
    in.
  prefs: []
  type: TYPE_NORMAL
- en: The fallback method for mission-critical applications
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'When JIRA is used in companies where it''s mission-critical for the business,
    then it''s recommended to use this method because it will let you roll back safely
    to your previous working version. Prepare the production instance as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Prepare a proxy server.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Install and test the upgraded version.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Refer to [https://confluence.atlassian.com/display/JIRA/Upgrading+JIRA+with+a+Fallback+Method](https://confluence.atlassian.com/display/JIRA/Upgrading+JIRA+with+a+Fallback+Method)
    for further information on upgrading JIRA using a fallback method.
  prefs: []
  type: TYPE_NORMAL
- en: The rapid method using the installer
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If you can afford to have a downtime of several minutes and there is no impact
    on the business due to the downtime, then it''s recommended to use this method,
    which is quite easy. It just needs you to run the installer again on top of the
    existing installed application:'
  prefs: []
  type: TYPE_NORMAL
- en: Keep a note of custom changes.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Take a backup of your database.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Run the JIRA installer and select the upgrade option.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you have made any changes in some of the files (such as `setenv.bat`) or
    have your own CSS and JavaScript files or codes, then you need to redo those changes
    again in the upgraded system.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Refer to [https://confluence.atlassian.com/display/JIRA/Upgrading+JIRA+Using+a+Rapid+Upgrade+Method](https://confluence.atlassian.com/display/JIRA/Upgrading+JIRA+Using+a+Rapid+Upgrade+Method)
    for further information on upgrading JIRA using an RAD method.
  prefs: []
  type: TYPE_NORMAL
- en: Manual upgrade method for Solaris
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'With the rapid method, you can easily upgrade JIRA. However, there are certain
    cases where you cannot use the installation binary. For example, if you want to
    install JIRA on Solaris, then there are no supported binaries from Atlassian,
    but you can use the following method with the **Web Application Archive** (**WAR**) distribution
    file to install JIRA on Solaris:'
  prefs: []
  type: TYPE_NORMAL
- en: Take a backup of your database and the JIRA installation directory.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Install the new version.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Point your newly installed JIRA instance to a copy of JIRA's existing home directory.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Configure the new version of JIRA to use a new blank database.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Finally, import your JIRA's old data with the restore feature in the newly installed
    JIRA's instance.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Refer to [https://confluence.atlassian.com/display/JIRA/Upgrading+JIRA+Manually](https://confluence.atlassian.com/display/JIRA/Upgrading+JIRA+Manually)
    for further information on upgrading JIRA manually.
  prefs: []
  type: TYPE_NORMAL
- en: Updating JIRA add-ons
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: JIRA has a lot of add-ons that can be installed from the marketplace. Add-ons
    extend the functionalities of JIRA. There are a lot of good add-ons available
    from Atlassian and other providers. Due to the rapid development in JIRA, this
    could be a new feature development. To fix bugs, these providers keep on releasing
    version updates of their add-ons. It's a good idea to update these add-ons from
    time to time. However, it's recommended to test the upgrades first on your staging
    environment.
  prefs: []
  type: TYPE_NORMAL
- en: Go to the **Manage Add-ons** section to check for the updates that are available
    for your add-ons. The built-in notifications in JIRA will also let you know whenever
    there is an update available for an add-on. However, these updates should ideally
    be performed on a test environment first, that is, ideally a staging server identical
    to your production environment.
  prefs: []
  type: TYPE_NORMAL
- en: 'Only if the new version of the add-on works on your staging environment will
    you be able to update it on your production environment. Try using one of the
    following methods to update the add-ons described:'
  prefs: []
  type: TYPE_NORMAL
- en: Updating an add-on to a new version
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Updating all add-ons
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Updating an add-on by uploading a file
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Enabling automatic add-on updates
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The detailed steps to update the add-ons can be found at [https://confluence.atlassian.com/display/UPM/Updating+add-ons](https://confluence.atlassian.com/display/UPM/Updating+add-ons).
  prefs: []
  type: TYPE_NORMAL
- en: We recommend updating the add-ons one by one. There might be an issue in updating
    all the add-ons simultaneously. Also, you might not know which add-on update caused
    this problem.
  prefs: []
  type: TYPE_NORMAL
- en: The JIRA add-ons compatibility matrix
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: As a good practice, always keep track of all the add-ons currently installed,
    their current version, their compatibility with currently installed JIRA, and
    any known issues.
  prefs: []
  type: TYPE_NORMAL
- en: 'Before you plan to update any add-on, always update the compatibility matrix:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Add-ons** | **Installed version** | **Paid or free** | **Compatible with
    JIRA 6.3.6?** | **Remarks** |'
  prefs: []
  type: TYPE_TB
- en: '| JIRA Agile | 6.6.0 | Paid | Yes |  |'
  prefs: []
  type: TYPE_TB
- en: '| Clone Plus Plugin | 4.0.0 | Paid | Yes |  |'
  prefs: []
  type: TYPE_TB
- en: '| JIRA Suite Utilities | 1.4.9 | Free | Yes |  |'
  prefs: []
  type: TYPE_TB
- en: There are a lot of add-ons available on the Atlassian marketplace, but don't
    install too many add-ons for no reason. If you are looking for a new feature in
    JIRA, which is provided as an add-on, always check for how many people are using
    it by verifying the download count; there is also a user rating that will give
    you a good idea about this add-on. If you decide to purchase an add-on, then check
    the provider as well.
  prefs: []
  type: TYPE_NORMAL
- en: Applications, uses, and examples
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The ability to customize JIRA is what makes it popular among various companies
    who use it. There are various applications of JIRA:'
  prefs: []
  type: TYPE_NORMAL
- en: Defect/bug tracking
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Change requests
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Helpdesk/support tickets
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Project management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Test case management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Requirements management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Process management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Let''s take a look at the implementation of test case management:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Issue types:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Test campaign**: This will be the standard issue type'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Test case**: This will be a subtask'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Workflow for test campaign:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Applications, uses, and examples](img/B0568_01_11-1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'New States:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Published**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**UnderExecution**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Condition:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A test campaign will only pass when all the test cases are passed
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Only the reporter can move this test campaign to **Closed**
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Post-function:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When the test campaign is closed, send an e-mail to everyone in a particular
    group
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Workflow for a test case:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Applications, uses, and examples](img/B0568_01_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'New states:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Blocked**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Passed**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Failed**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**In Review**'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Condition:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Only the assigned user can move the test case to the **Passed** state
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Post-function:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When the test case is moved to the **Failed** state, change the issue priority
    to major
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Custom fields:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '| **Name** | **Type** | **Values** | **Field configuration** |'
  prefs: []
  type: TYPE_TB
- en: '| `Category` | Select List |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| `Customer Name` | Select List |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| `Steps to Reproduce` | Text area |  | Mandatory |'
  prefs: []
  type: TYPE_TB
- en: '| `Expected input` | Text area |  | Mandatory |'
  prefs: []
  type: TYPE_TB
- en: '| `Expected output` | Text area |  | Mandatory |'
  prefs: []
  type: TYPE_TB
- en: '| `Pre-Condition` | Text area |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| `Post-Condition` | Text area |  |  |'
  prefs: []
  type: TYPE_TB
- en: '| `Campaign Type` | Select List | UnitFunctionalEnduranceBenchmarkRobustnessSecurityBackward
    compatibilityCertification with baseline |  |'
  prefs: []
  type: TYPE_TB
- en: '| `Automation Status` | Select List | AutomaticManualPartially automatic |  |'
  prefs: []
  type: TYPE_TB
- en: JIRA core concepts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let''s take a look at the architecture of JIRA; it will help you to understand
    the core concepts:'
  prefs: []
  type: TYPE_NORMAL
- en: '![JIRA core concepts](img/image_01_013.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '**Project Categories**: When there are too many projects in JIRA, it becomes
    important to segregate them into various categories. JIRA will let you create
    several categories that could represent the business units, clients, or teams
    in your company.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Projects**: A JIRA project is a collection of issues. Your team can use a
    JIRA project to coordinate the development of a product, track a project, manage
    a help desk, and so on, depending on your requirements.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Components**: Components are subsections of a project. They are used to group
    issues within a project to smaller parts.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Versions**: Versions are a point-in-time for a project. They help you schedule
    and organize your releases.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Issue Types**: JIRA will let you create several issue types that are different
    from each other in terms of what kind of information they store. JIRA comes with
    default issue types, such as bug, task, and subtask, but you can create more issue
    types that can follow their own workflow as well as have different sets of fields.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Sub-Tasks**: Issue types are of two types—standard and subtasks, which are
    children of a standard task. For instance, you can have test campaign as a standard
    issue type and test cases as subtasks.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we discussed things that you plan before implementing JIRA
    in your company, understood how JIRA is intended to be used in the future, and
    how it helps JIRA administrators to choose the right hardware. We also discussed
    the JIRA installation in detail and various ways to upgrade it. Finally, we briefly
    discussed some possible use cases of JIRA.
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we will understand how to search the issues. JIRA comes
    with a powerful search mechanism that helps users to easily find the information
    they are looking for. JIRA has a query language called **JIRA Query Language** (**JQL**),
    which is used for advanced searching. We will also discuss how to save your search
    queries as filters, which can be referred to again in the future.
  prefs: []
  type: TYPE_NORMAL
