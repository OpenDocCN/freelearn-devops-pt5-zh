["```\n$ cd ~/The-Ultimate-Docker-Container-Book\n```", "```\n$ mkdir ch08 && cd ch08\n```", "```\n$ docker image prune -f\n```", "```\n$ docker container rm <container-id|container-name>\n```", "```\n$ docker container prune --force\n```", "```\n$ docker volume prune   WARNING! This will remove all local volumes not used by at least one container.\n   Are you sure you want to continue? [y/N]\n```", "```\n$ docker volume rm <volume-name>\n```", "```\n# Ignore everything**\n# Allow specific directories\n!my-app/\n!scripts/\n# Ignore specific files within allowed directories\nmy-app/*.log\nscripts/temp/\n```", "```\n$ cat sample.txt | perl -lpe 's/^\\s*//'\n```", "```\n    $ cd ~/The-Ultimate-Docker-Container-Book/ch08\n    ```", "```\n    $ mkdir simple-task && cd simple-task\n    ```", "```\n    $ code .\n    ```", "```\n               1234567890              This is some text               another line of text         more textfinal line\n    ```", "```\n    $ docker container run --rm -it \\    -v $(pwd):/usr/src/app \\    -w /usr/src/app \\    perl:slim sh -c \"cat sample.txt | perl -lpe 's/^\\s*//'\"\n    ```", "```\nsh -c \"cat sample.txt | perl -lpe 's/^\\s*//'\"\n```", "```\n    1234567890This is some textanother line of textmore textfinal line\n    ```", "```\n    $ docker container run --rm -it \\    -v $(pwd):/usr/src/app \\    -w /usr/src/app \\     python:3-alpine python stats.py sample.txt\n    ```", "```\n    Lines: 5Words: 13Letters: 121\n    ```", "```\n$ docker container run --rm -it \\       --name stress-test \\\n       --memory 512M \\\n       ubuntu:22.04 /bin/bash\n```", "```\n/# apt-get update && apt-get install -y stress\n```", "```\n/# stress -m 3\n```", "```\ndemo@dev $ sudo su   Password: <root password>\n   root@dev $\n```", "```\nroot@dev $ echo \"You should not see this.\" > top-secret.txtroot@dev $ chmod 600 ./top-secret.txt\nroot@dev $ exit\ndemo@dev $\n```", "```\ncat: ./top-secret.txt: Permission denied\n```", "```\nFROM ubuntu:22.04COPY ./top-secret.txt /secrets/\n# simulate use of restricted file\nCMD cat /secrets/top-secret.txt\n```", "```\ndemo@dev $ sudo suPassword: <root password>\nroot@dev $ docker image build -t demo-image .\nroot@dev $ exit\ndemo@dev $\n```", "```\ndemo@dev $ docker container run demo-image\n```", "```\nYou should not see this.\n```", "```\nFROM ubuntu:22.04RUN groupadd -g 3000 demo-group |\n       && useradd -r -u 4000 -g demo-group demo-user\nUSER demo-user\nCOPY ./top-secret.txt /secrets/\n# simulate use of restricted file\nCMD cat /secrets/top-secret.txt\n```", "```\ndemo@dev $ sudo suPassword: <root password>\nroot@dev $ docker image build -t demo-image .\nroot@dev $ exit\ndemo@dev $ docker container run demo-image \\\n     cat: /secrets/top-secret.txt:\nPermission denied\n```", "```\n    $ cd ~/The-Ultimate-Docker-Container-Book/ch08\n    ```", "```\n    $ cp -r ../ch07/library .\n    ```", "```\n    $ code library\n    ```", "```\n    $ chmod +x ./pipeline.sh\n    ```", "```\n    $ docker image build -f Dockerfile.builder -t builder .\n    ```", "```\nPS> docker container run `       --name jenkins `\n       -p 8080:8080 `\n       -v \\\\.\\pipe\\docker_engine:\\\\.\\pipe\\docker_engine `\n       friism/jenkins\n```", "```\n    $ npm install -g snyk\n    ```", "```\n    $ snyk auth\n    ```", "```\n    $ snyk test --docker <image-name>\n    ```", "```\n    $ snyk test --file=path/to/Dockerfile\n    ```", "```\n    $ snyk test --docker <image-name> --org=my-org\n    ```", "```\n    $ snyk protect --docker <image-name>\n    ```", "```\n    $ docker scan --version\n    ```", "```\nVersion:    v0.22.0Git commit: af9ca12\nProvider:   Snyk (1.1054.0)\n```", "```\n    $ docker image pull gnschenker/whoami:1.0\n    ```", "```\n    $ docker scan gnschenker/whoami:1.0\n    ```", "```\n    Docker Scan relies upon access to Snyk, a third party provider, do you consent to proceed using Snyk? (y/N)\n    ```", "```\n    $ docker image build -t gnschenker/whoami:1.0.1 .\n    ```", "```\n    $ docker scan gnschenker/whoami:1.0.1\n    ```", "```\n    Dev Container: Existing Dockerfile @ <folder-path>\n    ```", "```\n    root@c96b82891be7:/workspaces/.../ch08/library#\n    ```", "```\n$ ./mvnw spring-boot:run\n```"]