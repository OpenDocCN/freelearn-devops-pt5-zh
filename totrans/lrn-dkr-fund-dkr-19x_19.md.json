["```\n$ minikube start\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx\nspec:\n  containers:\n  - name: nginx\n    image: nginx:alpine\n    ports:\n    - containerPort: 80\n    - containerPort: 443\n```", "```\n$ cd ~/fod/ch15\n```", "```\n$ kubectl create -f sample-pod.yaml\npod/nginx created\n```", "```\n$ kubectl get pods\nNAME    READY   STATUS    RESTARTS   AGE\nnginx   1/1     Running   0          51s\n```", "```\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx-service\nspec:\n  type: LoadBalancer\n  ports:\n  - port: 8080\n    targetPort: 80\n    protocol: TCP\n  selector:\n    app: nginx\n```", "```\n$ kubectl create -f sample-service.yaml\n```", "```\n$ curl -4 http://localhost\n```", "```\n$ kubectl delete po/nginx\n$ kubectl delete svc/nginx-service\n```", "```\n$ docker stack deploy -c docker-compose.yml app\n```", "```\n$ docker stack rm app\n```", "```\n$ kubectl config use-context minikube\n```", "```\n$ docker container create --net container:pause ... \n```", "```\n$ docker container run -d --name pause nginx:alpine\n```", "```\n$ docker container run --name main -dit \\\n --net container:pause \\\n alpine:latest /bin/sh\n```", "```\n$ docker exec -it main /bin/sh\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: web-pod\nspec:\n  containers:\n  - name: web\n    image: nginx:alpine\n    ports:\n    - containerPort: 80\n```", "```\n$ kubectl create -f pod.yaml\n```", "```\n$ kubectl get pods\nNAME      READY   STATUS    RESTARTS   AGE\nweb-pod   1/1     Running   0          2m\n```", "```\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: my-data-claim\nspec:\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 2Gi\n```", "```\n$ kubectl create -f volume-claim.yaml\n```", "```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: web-pod\nspec:\n  containers:\n  - name: web\n    image: nginx:alpine\n    ports:\n    - containerPort: 80\n    volumeMounts:\n    - name: my-data\n      mountPath: /data\n  volumes:\n  - name: my-data\n    persistentVolumeClaim:\n      claimName: my-data-claim\n```", "```\n$ kubectl create -f pod-with-vol.yaml\n```", "```\n$ kubectl exec -it web-pod -- /bin/sh\n/ # cd /data\n/data # echo \"Hello world!\" > sample.txt\n/data # exit\n```", "```\napiVersion: apps/v1\nkind: ReplicaSet\nmetadata:\n  name: rs-web\nspec:\n  selector:\n    matchLabels:\n      app: web\n  replicas: 3\n  template: \n    metadata:\n      labels:\n        app: web\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:alpine\n        ports:\n        - containerPort: 80\n```", "```\n$ kubectl create -f replicaset.yaml\nreplicaset \"rs-web\" created\n```", "```\n$ kubectl get rs\nNAME     DESIRED   CURRENT   READY   AGE\nrs-web   3         3         3       51s\n```", "```\n$ kubectl get pods\nNAME           READY   STATUS    RESTARTS   AGE\nrs-web-6qzld   1/1     Running   0          4m\nrs-web-frj2m   1/1     Running   0          4m\nrs-web-zd2kt   1/1     Running   0          4m\n```", "```\n$ kubectl delete po/rs-web-6qzld\npod \"rs-web-6qzld\" deleted\n```"]