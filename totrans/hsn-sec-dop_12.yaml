- en: Security Testing Toolkits
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安全测试工具包
- en: In the previous chapter, we looked at white box testing tips. In this chapter,
    we will learn about a common (but not a comprehensive) set of security testing
    tools. The major elements of a network that involve security testing include web
    and mobile connections, configuration, communication, third-party components,
    and sensitive information. We will look at the testing tips and tools for each
    element. Furthermore, we will also learn how these tools can be executed both
    automatically and as tools that are built into continuous integration.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们讨论了白盒测试的技巧。本章将介绍一套常见的（但不是全面的）安全测试工具。涉及安全测试的网络主要包括网页和移动连接、配置、通信、第三方组件以及敏感信息。我们将逐一探讨每个元素的测试技巧和工具。此外，我们还将学习如何自动执行这些工具，以及如何将它们作为集成到持续集成中的工具。
- en: 'We will cover the following topics in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下内容：
- en: General security testing toolkits
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通用安全测试工具包
- en: Automation testing criteria
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动化测试标准
- en: Behavior-driven security testing frameworks
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于行为的安全测试框架
- en: Android security testing
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Android安全测试
- en: Secure infrastructure configuration
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安全基础设施配置
- en: Docker security scanning
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker安全扫描
- en: Integrated security tools
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集成安全工具
- en: General security testing toolkits
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通用安全测试工具包
- en: 'The objective of providing security testing toolkits is for project teams to
    understand what tools are available and apply the tools that they judge to be
    appropriate based on the business application scenario. There are many kinds of
    security testing tools. An organization may define one general testing toolkit
    for all projects, and also suggest other security testing tools based on those
    specific domains, such as automation, infrastructure, Docker, and BDD:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 提供安全测试工具包的目的是让项目团队了解可用的工具，并根据业务应用场景判断并应用他们认为合适的工具。安全测试工具有很多种。一些组织可能会为所有项目定义一个通用的测试工具包，并根据特定领域（如自动化、基础设施、Docker、BDD等）推荐其他安全测试工具：
- en: '![](img/00038.jpeg)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00038.jpeg)'
- en: 'There are many kinds of Linux security distributions that have been installed
    and preconfigured with security tools. Kali, BlackArch, and PentestBox are the
    common Linux security distributions. PenetestBox is recommended because it doesn''t
    need a Linux virtual machine environment to execute Linux utilities, and it can
    be executed natively on Windows. PenetestBox also includes many security tools,
    as does Kali Linux. For more information on each tool, go to the following links:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多种Linux安全发行版，它们已经预装并配置了安全工具。Kali、BlackArch和PentestBox是常见的Linux安全发行版。推荐使用PenetestBox，因为它不需要Linux虚拟机环境来执行Linux实用工具，并且可以原生在Windows上执行。PenetestBox也包含许多安全工具，就像Kali
    Linux一样。关于每个工具的更多信息，请访问以下链接：
- en: Kali Linux: [https://www.kali.org/](https://www.kali.org/)
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Kali Linux: [https://www.kali.org/](https://www.kali.org/)'
- en: BlackArch: [https://blackarch.org/](https://blackarch.org/)
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'BlackArch: [https://blackarch.org/](https://blackarch.org/)'
- en: PentestBox: [https://pentestbox.org/](https://pentestbox.org/)
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'PentestBox: [https://pentestbox.org/](https://pentestbox.org/)'
- en: As there can be hundreds of security tools in Kali or BlackArch Linux, it may
    not be feasible to require the security testing team to execute the security testing
    with all of the tools. It's suggested that you familiarize yourself with some
    of the key and common security tools.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Kali或BlackArch Linux中可能有数百个安全工具，要求安全测试团队使用所有工具进行安全测试可能不可行。建议你熟悉一些关键的常见安全工具。
- en: 'The following table shows the recommended minimum security testing toolset
    (only open source or free tools are listed here):'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 以下表格显示了推荐的最小安全测试工具集（这里只列出了开源或免费工具）：
- en: '| **Area that is being security checked** | **Common open source security tools**
    |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| **正在进行安全检查的区域** | **常见的开源安全工具** |'
- en: '| WhiteBox review | GraudIT or GREP-ITThese tools are recommended because they
    don''t require a whole buildable source code to identify the security issue for
    different programming languages:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '| 白盒审查 | GraudIT或GREP-IT这些工具推荐使用，因为它们不需要完整的可构建源代码来识别不同编程语言的安全问题：'
- en: GraudIT: [https://github.com/wireghoul/graudit](https://github.com/wireghoul/graudit)
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'GraudIT: [https://github.com/wireghoul/graudit](https://github.com/wireghoul/graudit)'
- en: GREP-IT:[ ](https://github.com/floyd-fuh/crass/blob/master/grep-it.sh)[https://github.com/floyd-fuh/crass/blob/master/grep-it.sh](https://github.com/floyd-fuh/crass/blob/master/grep-it.sh)
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'GREP-IT: [https://github.com/floyd-fuh/crass/blob/master/grep-it.sh](https://github.com/floyd-fuh/crass/blob/master/grep-it.sh)'
- en: '|'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Web | BurpSuite, OWASP ZAP, Vega, SQLmap, Arachni |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| Web | BurpSuite, OWASP ZAP, Vega, SQLmap, Arachni |'
- en: '| Vulnerability | Nessus, OpenVAS, OpenSCAP, NMAP |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| 漏洞 | Nessus, OpenVAS, OpenSCAP, NMAP |'
- en: '| Networking | NMAP, WireShark, TCPDump, Hping, SSLScan, SSLyze, masscan |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| 网络 | NMAP, WireShark, TCPDump, Hping, SSLScan, SSLyze, masscan |'
- en: Automation testing criteria
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自动化测试标准
- en: 'We would like most basic and obvious web security testing cases to be done
    automatically while human testing is focused on deeper security issue reviews.
    The objective of automated web security testing is to integrate the security testing
    tools with a continuous integration framework, such as Jenkins. The web security
    testing can be automatically triggered every time the build is submitted. To be
    able to integrate web security testing tools with Jenkins, there are several key
    criteria that we need to consider:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望大多数基本和显而易见的网页安全测试案例能够自动执行，而人工测试则集中在更深入的安全问题审查上。自动化网页安全测试的目标是将安全测试工具与持续集成框架（如
    Jenkins）集成。每当构建提交时，可以自动触发网页安全测试。为了能够将网页安全测试工具与 Jenkins 集成，我们需要考虑几个关键标准：
- en: '**Command console**: Most security testing tools provide a command console
    or GUI interface to operate the security testing procedures. It would be ideal
    for the tool to provide both interfaces. The command console can be used for Jenkins
    to trigger the execution of the security testing, and the GUI can help the human
    testing. From the automated testing point of view, the **command-line interface**
    (**CLI**) is a minimum requirement to integrate with Jenkins. The CLI interface
    also helps us to integrate with the unit test framework or BDD framework.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**命令行控制台**：大多数安全测试工具提供命令行控制台或 GUI 接口来操作安全测试程序。理想情况下，工具应提供这两种接口。命令行控制台可用于 Jenkins
    触发安全测试的执行，而 GUI 则可以辅助人工测试。从自动化测试的角度看，**命令行接口**（**CLI**）是与 Jenkins 集成的最低要求。CLI
    接口还帮助我们与单元测试框架或 BDD 框架进行集成。'
- en: '**API interface**: The web security testing can be executed in a standalone
    attacker mode or a proxy mode. The API interface will allow us to interact with
    the testing tool programmatically during runtime. For example, the OWASP ZAP provides
    a REST API to automate all the operations using Python and also the ZAP CLI to
    interact with ZAP from the command line.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**API 接口**：网页安全测试可以在独立攻击者模式或代理模式下执行。API 接口将允许我们在运行时通过编程方式与测试工具进行交互。例如，OWASP
    ZAP 提供了一个 REST API，可以使用 Python 自动化所有操作，也提供了 ZAP CLI 以从命令行与 ZAP 进行交互。'
- en: '**Output formats**: Most web security testing tools provide different kinds
    of reporting formats, such as HTML, PDF, XML, CSV, JSON, or console output. CSV,
    JSON, and XML are considered the basics if we would like to import the testing
    results together. Because of the various security tools and large quantities of
    results in the daily report, it''s suggested that you apply integrated security
    testing tools, such as OWASP DefectDojo, to consolidate all the testing results
    in one dashboard (this option will be discussed later). In addition, some tools
    may provide the Jenkins plugin, which can help you to output the results in the
    Jenkins management console.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**输出格式**：大多数网页安全测试工具提供不同种类的报告格式，如 HTML、PDF、XML、CSV、JSON 或控制台输出。如果我们希望将测试结果汇总在一起，CSV、JSON
    和 XML 是基本的格式。由于不同的安全工具和每日报告中大量的结果，建议使用集成安全测试工具，如 OWASP DefectDojo，将所有测试结果汇总在一个仪表盘中（这个选项稍后会讨论）。此外，一些工具可能提供
    Jenkins 插件，帮助您将结果输出到 Jenkins 管理控制台。'
- en: Based on these criteria, the suggested web security testing tools for automation
    are summarized in the following table. OWASP ZAP, Arachni, and W3af are three
    open source web security testing tools that provide CLI, API, and web GUI interfaces.
    Nikto and Wapiti are also good choices if you are looking for lightweight command-line
    tools. For web security testing, we also suggest using one additional tool to
    do the scanning because of the false positive rate of each tool.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 基于这些标准，建议用于自动化的网页安全测试工具总结在下表中。OWASP ZAP、Arachni 和 W3af 是三款开源网页安全测试工具，提供 CLI、API
    和 Web GUI 接口。如果您需要轻量级的命令行工具，Nikto 和 Wapiti 也是不错的选择。由于每种工具的误报率，我们建议额外使用一种工具进行扫描。
- en: 'Just be aware that the web security automated test can''t complete all web
    security tasks. Some testing scenarios still require a human security tester to
    guide the tool and perform further verification, such as authentication, web page
    authorization, business logic-related tests, and multiple order submissions. The
    following table displays the tools and their features:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，Web 安全自动化测试无法完成所有 Web 安全任务。某些测试场景仍然需要人工安全测试人员来引导工具并进行进一步验证，如身份验证、网页授权、与业务逻辑相关的测试和多次订单提交。下表显示了这些工具及其特点：
- en: '|  | **Web GUI** | **CLI** | **REST API** |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '|  | **Web GUI** | **CLI** | **REST API** |'
- en: '| **OWASP ZAP** | Yes | ZAP CLI | ZAP API  |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| **OWASP ZAP** | Yes | ZAP CLI | ZAP API |'
- en: '| **Arachni** | Yes | Yes | Yes(It also provides Ruby libraries.) |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| **Arachni** | Yes | Yes | Yes（它还提供 Ruby 库。）|'
- en: '| **W3af** | Yes | Yes | Yes |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| **W3af** | Yes | Yes | Yes |'
- en: '| **Nikto** | n/a | Yes | n/a |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| **Nikto** | n/a | Yes | n/a |'
- en: '| **Wapiti** | n/a | Yes | n/a |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| **Wapiti** | n/a | Yes | n/a |'
- en: Behavior-driven security testing framework
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行为驱动安全测试框架
- en: BDD security testing is very suitable when your security testing reports will
    be shared with external vendors, or even internal, cross-team communication to
    understand what security testing cases are being executed. In addition, BDD security
    tests can help you to integrate all of the various kinds of security testing tools
    and consolidate testing reports based on the framework.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: BDD 安全测试非常适合在您的安全测试报告需要与外部供应商共享，或者甚至在内部跨团队沟通时使用，以了解正在执行哪些安全测试用例。此外，BDD 安全测试还可以帮助您将各种安全测试工具整合起来，并根据框架汇总测试报告。
- en: 'Let''s look at a simple example to understand what behavior-driven security
    testing is. Under the behavior-driven security testing framework, the security
    testing scripts are the testing cases that are written in a human-readable language.
    It makes the security testing cases, and testing results, easily understood by
    non-security professionals. Here is an example of this human-readable script:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过一个简单的例子来了解什么是行为驱动的安全测试。在行为驱动的安全测试框架下，安全测试脚本是用人类可读的语言编写的测试用例。它使得安全测试用例和测试结果能够被非安全专业人员轻松理解。以下是这个人类可读脚本的一个例子：
- en: '| **Scenario: The attack may execute a system command to gain valuable information.****Precondition:
    Given the "ping" command line binary is available on the OS.****When I launch
    a "ping" attack with:**    "Ping 127.0.0.1"**Then it should pass with regexp:**   
    "<1ms TTL=128"    |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| **场景：攻击者可能会执行系统命令来获取有价值的信息。** **前提条件：假设操作系统中有 "ping" 命令行二进制文件。** **当我发起一个
    "ping" 攻击时：** **"Ping 127.0.0.1"** **那么它应该通过正则表达式：** **"<1ms TTL=128"**'
- en: The preceding example is a re-edited version based on GauntIT testing scripts.
    You may also refer to [https://github.com/gauntIT/gauntIt/tree/master/examples/](https://github.com/gauntIT/gauntIt/tree/master/examples/) for
    more examples of defining security testing cases.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 上述示例是基于 GauntIT 测试脚本重新编辑的版本。您还可以参考[https://github.com/gauntIT/gauntIt/tree/master/examples/](https://github.com/gauntIT/gauntIt/tree/master/examples/)获取更多定义安全测试用例的示例。
- en: 'There are three open source tools in the BDD security testing framework. If
    you are familiar with Java BDD cucumber, then BDD security will be your best choice.
    If you would like to use Python with a BDD framework, refer to MITTN. GauntIT
    is programming-language independent, and can be easily extended to execute any
    tools and verify the results by defining a regular expression. GauntIT allows
    security testers to focus on the definition of the testing script, and is suitable
    for testers who have little knowledge of Java or Python. The BDD security frameworks
    and their featured tools are listed in the following table:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在 BDD 安全测试框架中有三个开源工具。如果您熟悉 Java BDD cucumber，那么 BDD 安全将是您的最佳选择。如果您想使用 Python
    与 BDD 框架，可以参考 MITTN。GauntIT 是独立于编程语言的，可以通过定义正则表达式轻松扩展以执行任何工具并验证结果。GauntIT 使安全测试人员可以专注于测试脚本的定义，适合那些对
    Java 或 Python 知之甚少的测试人员。BDD 安全框架及其特色工具列在以下表格中：
- en: '| **BDD security frameworks** | **Default security tools included** |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| **BDD 安全框架** | **默认包含的安全工具** |'
- en: '| BDD security | OWASP ZAP, SSLyze, NessusBDD Security is based on Java and
    Cucumber.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '| BDD 安全 | OWASP ZAP、SSLyze、NessusBDD 安全基于 Java 和 Cucumber。'
- en: BDD Security: [https://www.continuumsecurity.net/bdd-security/](https://www.continuumsecurity.net/bdd-security/)
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: BDD 安全：[https://www.continuumsecurity.net/bdd-security/](https://www.continuumsecurity.net/bdd-security/)
- en: '|'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| MITTN | BurpSuite, SSlyze, and Radamsa API fuzzingMITTN is based on Python
    and Behave.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '| MITTN | BurpSuite、SSlyze 和 Radamsa API fuzzingMITTN 基于 Python 和 Behave。 |'
- en: MITTN: [https://github.com/F-Secure/mittn](https://github.com/F-Secure/mittn)
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'MITTN: [https://github.com/F-Secure/mittn](https://github.com/F-Secure/mittn)'
- en: '|'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| GauntIT | CURL, NMAP, SSLyze, SQLmap, Garmr, heartbleed, dirb, Arachni'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '| GauntIT | CURL, NMAP, SSLyze, SQLmap, Garmr, heartbleed, dirb, Arachni'
- en: GauntIT: [http://gauntlt.org/](http://gauntlt.org/)
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'GauntIT: [http://gauntlt.org/](http://gauntlt.org/)'
- en: '|'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Android security testing
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Android 安全测试
- en: 'Android security testing requires the reverse engineering analysis using APK
    files, permission analysis using Manifest, and internal components analysis using
    intents, services, broadcast, and content providers. Generally, the following
    are considered common testing tools when it comes to Android security testing:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: Android 安全测试需要使用 APK 文件进行逆向工程分析，使用 Manifest 进行权限分析，以及使用意图、服务、广播和内容提供者进行内部组件分析。通常，在进行
    Android 安全测试时，以下工具被认为是常用的测试工具：
- en: '| **Tools** | **Description** |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| **工具** | **描述** |'
- en: '| ApkTool | ApkTool is used to perform reverse engineering for Android APK
    files. |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| ApkTool | ApkTool 用于对 Android APK 文件进行逆向工程。 |'
- en: '| ByteCode View | ByteCode View is a Java Bytecode viewer and GUI Java decompiler.
    |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| ByteCode View | ByteCode View 是一个 Java 字节码查看器和 GUI Java 反编译器。 |'
- en: '| Dex2JAR | Dex2JAR converts the DEX to a CLASS file. |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| Dex2JAR | Dex2JAR 将 DEX 文件转换为 CLASS 文件。 |'
- en: '| JADX | JADX converts the DEX to a Java decompiler. |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| JADX | JADX 将 DEX 文件转换为 Java 反编译器。 |'
- en: '| JD-GUI | JD-GUI is a GUI viewer that is used to read the source code of CLASS
    files. |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| JD-GUI | JD-GUI 是一个 GUI 查看器，用于读取 CLASS 文件的源代码。 |'
- en: '| Drozer | Drozer is an interactive security and attacks framework for the
    Android app. |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| Drozer | Drozer 是一个交互式安全和攻击框架，用于 Android 应用程序。 |'
- en: '| Baksmali | Baksmali is an assembler/disassembler for the DEX format. |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| Baksmali | Baksmali 是一个 DEX 格式的汇编器/反汇编器。 |'
- en: '| AndroBugs | AndroBugs takes an APK file as input and performs an APK security
    vulnerabilities scan. |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| AndroBugs | AndroBugs 接受 APK 文件作为输入，并执行 APK 安全漏洞扫描。 |'
- en: '| AndroGuard | AndroGuard is a Python framework that can perform reverse engineering
    and malware analysis of the APK. |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| AndroGuard | AndroGuard 是一个 Python 框架，能够执行 APK 的逆向工程和恶意软件分析。 |'
- en: '| QARK | **Quick Android Review Kit** (**QARK**) works similarly to AndroBugs.
    It detects security vulnerabilities for APK files. |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| QARK | **Quick Android Review Kit**（**QARK**）的工作原理类似于 AndroBugs，能够检测 APK
    文件中的安全漏洞。 |'
- en: '| AppMon | AppMon can monitor API calls for both iOS and Android apps. |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| AppMon | AppMon 可以监控 iOS 和 Android 应用的 API 调用。 |'
- en: 'To install and configure the tools separately can be very time-consuming, so
    it is suggested that you use the following toolkits, which have most of the Android
    security testing tools preinstalled:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 单独安装和配置这些工具可能非常耗时，因此建议使用以下工具包，这些工具包已预安装了大多数 Android 安全测试工具：
- en: '| **Toolkit** | **Description** |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| **工具包** | **描述** |'
- en: '| AndroL4b | AndroL4b is an Unbuntu-based virtual machine that includes not
    only security testing tools, but also vulnerable APK labs for practice.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '| AndroL4b | AndroL4b 是一个基于 Ubuntu 的虚拟机，不仅包括安全测试工具，还包括供实践使用的易受攻击 APK 实验室。 |'
- en: AndroL4b: [https://github.com/sh4hin/Androl4b/](https://github.com/sh4hin/Androl4b/)
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'AndroL4b: [https://github.com/sh4hin/Androl4b/](https://github.com/sh4hin/Androl4b/)'
- en: '|'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Appie | Appie is a portal for Android testing toolkits that can be executed
    in Windows without any installation and virtual machines.'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '| Appie | Appie 是一个 Android 测试工具包门户，可以在 Windows 上运行，无需任何安装和虚拟机。 |'
- en: Appie: [https://manifestsecurity.com/appie/](https://manifestsecurity.com/appie/)
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Appie: [https://manifestsecurity.com/appie/](https://manifestsecurity.com/appie/)'
- en: '|'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| PentestBox | PentestBox is similar to Appie, but also includes lots of other
    non Android-related security testing tools.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '| PentestBox | PentestBox 类似于 Appie，但还包括许多与 Android 无关的其他安全测试工具。 |'
- en: PentestBox: [https://tools.pentestbox.org/](https://tools.pentestbox.org/)
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'PentestBox: [https://tools.pentestbox.org/](https://tools.pentestbox.org/)'
- en: '|'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Last but not least, if you would like a fully automated APK and iOS security
    analysis that you can use by dragging and dropping an APK file to the Android
    security analysis platform, the MobSF (Mobile Security Framework) is what you
    will need, as shown in the following screenshots:  Source: [http://github.com/MobSF/Mobile-Security-Framework-MobSF/](http://github.com/MobSF/Mobile-Security-Framework-MobSF/)
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '最后，如果你希望进行完全自动化的 APK 和 iOS 安全分析，并且可以通过拖放 APK 文件到 Android 安全分析平台上使用，那么 MobSF（移动安全框架）就是你需要的工具，具体见以下截图：
    来源: [http://github.com/MobSF/Mobile-Security-Framework-MobSF/](http://github.com/MobSF/Mobile-Security-Framework-MobSF/)'
- en: MobSF/Mobile-Security-Framework-MobSF is licensed under the GNU General Public
    License v3.0.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: MobSF/Mobile-Security-Framework-MobSF 采用 GNU 通用公共许可证 v3.0 授权。
- en: The following screenshot shows the basic uses of MobSF.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了 MobSF 的基本使用方法。
- en: '![](img/00039.jpeg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00039.jpeg)'
- en: The following screenshot shows the MobSF security assessment results for the
    Manifest Analysis and the Code Analysis.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了Manifest分析和代码分析的MobSF安全评估结果。
- en: '![](img/00040.jpeg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00040.jpeg)'
- en: 'Source : https://github.com/MobSF/Mobile-Security-Framework-MobSF'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 源代码：https://github.com/MobSF/Mobile-Security-Framework-MobSF
- en: Securing infrastructure configuration
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 确保基础设施配置安全
- en: 'Securing the infrastructure configuration is vital in ensuring that the infrastructure
    configurations and system hardening are compliant with industry security best
    practices, such as CIS benchmarks, PCI-DSS, and the **National Checklist Program**
    (**NCP**). If the DevOps team have applied infrastructure tools, such as Chef
    or Puppet, it''s highly recommended that you define the security configuration
    on top of these tools to achieve the goal of **infrastructure security as code**.
    This helps to move the infrastructure security from the operation stage to the
    development stage. The Inspec, Hardening Framework, and ServerSpec tools are tools
    that are used for checking infrastructure security configurations. You can learn
    more about them at the following links:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 确保基础架构配置的安全对于确保基础架构配置和系统硬化符合行业安全最佳实践（如CIS基准、PCI-DSS以及**国家检查清单计划**（**NCP**））至关重要。如果DevOps团队已应用基础设施工具，如Chef或Puppet，强烈建议您在这些工具之上定义安全配置，以实现**基础设施安全即代码**的目标。这有助于将基础设施安全从运维阶段转移到开发阶段。Inspec、Hardening
    Framework和ServerSpec工具用于检查基础设施安全配置。您可以在以下链接了解更多信息：
- en: Inspec: [https://www.inspec.io/](https://www.inspec.io/)
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Inspec：[https://www.inspec.io/](https://www.inspec.io/)
- en: Hardening Framework: [https://Dev-Sec.io](https://Dev-Sec.io)
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hardening Framework：[https://Dev-Sec.io](https://Dev-Sec.io)
- en: Serverspec: [https://serverSpec.org/](https://serverSpec.org/)
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Serverspec：[https://serverSpec.org/](https://serverSpec.org/)
- en: 'For an infrastructure environment that is not deployed with configuration management
    tools (Puppet, Chef, Ansible, or SaltStack), the following scanning tools are
    suggested:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 对于未使用配置管理工具（Puppet、Chef、Ansible或SaltStack）部署的基础设施环境，建议使用以下扫描工具：
- en: Lynis Security Auditing: [https://github.com/CISOfy/lynis](https://github.com/CISOfy/lynis)
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Lynis安全审计：[https://github.com/CISOfy/lynis](https://github.com/CISOfy/lynis)
- en: OpenSCAP: [https://www.open-scap.org/](https://www.open-scap.org/)
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenSCAP：[https://www.open-scap.org/](https://www.open-scap.org/)
- en: CIS Benchmarks: [https://www.cisecurity.org/cis-benchmarks/](https://www.cisecurity.org/cis-benchmarks/)
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CIS基准：[https://www.cisecurity.org/cis-benchmarks/](https://www.cisecurity.org/cis-benchmarks/)
- en: These infrastructure security configuration review tools will reduce the operation
    team's and security team's efforts. The operation team may apply these tools before
    services deployment, and they may also do a regular check on the production environment.
    The development and testing team may use these tools to know whether any secure
    configurations are missing or incorrectly configured.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 这些基础设施安全配置审查工具将减少运维团队和安全团队的工作量。运维团队可以在服务部署之前应用这些工具，并且可能会定期检查生产环境。开发和测试团队可以使用这些工具了解是否缺少任何安全配置或配置不正确。
- en: For a sample of the scanning result of OpenSCAP, go to [https://www.open-scap.org/wp-content/uploads/2015/09/ssg-rhel7-ds-xccdf.report.html](https://www.open-scap.org/wp-content/uploads/2015/09/ssg-rhel7-ds-xccdf.report.html).
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: OpenSCAP 的扫描结果示例，请访问 [https://www.open-scap.org/wp-content/uploads/2015/09/ssg-rhel7-ds-xccdf.report.html](https://www.open-scap.org/wp-content/uploads/2015/09/ssg-rhel7-ds-xccdf.report.html)。
- en: Docker security scanning
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Docker安全扫描
- en: 'Docker technology is widely used for software deployment and cloud infrastructure.
    For Docker-specific security testing, the Docker Bench defines several security
    best practices and configurations for Docker containers deployment. The "CIS Docker
    Community Edition Benchmark" defines a security recommendation on the Docker host,
    daemon, container images, and container runtime. Generally speaking, there are
    three kinds of Docker security tools that do one of three different things:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: Docker技术广泛用于软件部署和云基础设施。针对Docker的安全测试，Docker Bench定义了几项Docker容器部署的安全最佳实践和配置。《CIS
    Docker社区版基准》定义了有关Docker主机、守护程序、容器镜像和容器运行时的安全建议。总的来说，有三种Docker安全工具执行三种不同的功能：
- en: Scan for Docker security best practices based on CIS (Docker Bench, Actuary)
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于CIS的Docker安全最佳实践扫描（Docker Bench、Actuary）
- en: Scan for known common vulnerabilities and exposures (CVEs) (Claire, Anchor Engine)
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扫描已知的常见漏洞和曝光（CVEs）（Claire、Anchor Engine）
- en: Runtime threat analysis (Falco, Dagda)
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行时威胁分析（Falco、Dagda）
- en: 'Here are the open source security testing tools for Docker security:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是用于 Docker 安全性的开源安全测试工具：
- en: '| **Docker security tools** | **Purpose and reference** |'
  id: totrans-105
  prefs: []
  type: TYPE_TB
  zh: '| **Docker 安全工具** | **目的与参考** |'
- en: '| Docker Bench | Docker Bench is an automated script that checks the Docker
    security best practices compliance. The scanning rules are based on the CIS Docker
    Security Benchmark.'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '| Docker Bench | Docker Bench 是一个自动化脚本，用于检查 Docker 安全最佳实践的合规性。扫描规则基于 CIS Docker
    安全基准。'
- en: Docker Bench Security: [https://github.com/docker/docker-bench-security/](https://github.com/docker/docker-bench-security/)
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker Bench Security: [https://github.com/docker/docker-bench-security/](https://github.com/docker/docker-bench-security/)
- en: Docker Benchmark: [https://benchmarks.cisecurity.org/](https://benchmarks.cisecurity.org/)
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker Benchmark: [https://benchmarks.cisecurity.org/](https://benchmarks.cisecurity.org/)
- en: '|'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Actuary | Actuary works similarly to Docker Bench. Additionally, Actuary
    can scan based on user-defined security profiles from the Docker security community.'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '| Actuary | Actuary 的工作原理类似于 Docker Bench。此外，Actuary 可以根据 Docker 安全社区定义的安全配置文件进行扫描。'
- en: Actuary: [https://github.com/diogomonica/actuary/](https://github.com/diogomonica/actuary/)
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Actuary: [https://github.com/diogomonica/actuary/](https://github.com/diogomonica/actuary/)
- en: '|'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Clair | Clair is a container image security static analyzer for CVEs. Clair: [https://github.com/coreos/clair](https://github.com/coreos/clair)
    |'
  id: totrans-113
  prefs: []
  type: TYPE_TB
  zh: '| Clair | Clair 是一个容器镜像安全静态分析器，用于 CVE（公共漏洞与暴露）。 Clair: [https://github.com/coreos/clair](https://github.com/coreos/clair)
    |'
- en: '| Anchor EngineAnchor Cloud | Anchor Cloud and Anchor Engine scan the Docker
    images for CVEs. Anchor Engine is a hosted tool and Anchor Cloud is a cloud-based
    tool.'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '| Anchor EngineAnchor Cloud | Anchor Cloud 和 Anchor Engine 扫描 Docker 镜像中的 CVE（公共漏洞与暴露）。Anchor
    Engine 是一个托管工具，Anchor Cloud 是一个基于云的工具。'
- en: Anchor Engine: [https://github.com/anchore/anchore-engine](https://github.com/anchore/anchore-engine)
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Anchor Engine: [https://github.com/anchore/anchore-engine](https://github.com/anchore/anchore-engine)
- en: Anchor Cloud: [https://Anchore.com/cloud/](https://Anchore.com/cloud/)
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Anchor Cloud: [https://Anchore.com/cloud/](https://Anchore.com/cloud/)
- en: '|'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Falco | Falco is a Docker container runtime security tool that can detect
    anomalous activities.'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '| Falco | Falco 是一个 Docker 容器运行时安全工具，能够检测异常活动。'
- en: Falco: [https://sysdig.com/opensource/falco/](https://sysdig.com/opensource/falco/)
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Falco: [https://sysdig.com/opensource/falco/](https://sysdig.com/opensource/falco/)
- en: '|'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Dagda | Dagda is an integrated Docker security tool that provides runtime
    anomalous activities detection (Sysdig Falco), vulnerabilities (CVEs) analysis
    (OWASP dependency check, Retire.JS), and malware scanning (CalmAV).'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '| Dagda | Dagda 是一个集成的 Docker 安全工具，提供运行时异常活动检测（Sysdig Falco）、漏洞（CVE）分析（OWASP
    依赖检查、Retire.JS）以及恶意软件扫描（CalmAV）。'
- en: Dagda:[ https://github.com/eliasgranderubio/dagda/](https://github.com/eliasgranderubio/dagda/)
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Dagda:[ https://github.com/eliasgranderubio/dagda/](https://github.com/eliasgranderubio/dagda/)
- en: '|'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Integrated security tools
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 集成安全工具
- en: 'As there are many security testing tools, we may like the testing results to
    be integrated into one dashboard, or to execute the tool through a unified interface.
    If you are looking for such an integrated security testing management tool, here
    are some of the open source and free tools to consider:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 由于有许多安全测试工具，我们可能希望将测试结果集成到一个仪表板中，或通过统一的界面执行这些工具。如果你在寻找这样的集成安全测试管理工具，以下是一些开源且免费的工具可供参考：
- en: '| **Tools** | **Tools included by default** |'
  id: totrans-126
  prefs: []
  type: TYPE_TB
  zh: '| **工具** | **默认包含的工具** |'
- en: '| JackHammer | JackHammer, provided by Ola, is an integrated security testing
    tool. It provides you with a dashboard to consolidate all the testing results.
    The key difference is that JackHammer includes mobile app security scanning and
    source code static analysis tools. The supported open source security scanners
    include Brakeman, Bundler-Audit, Dawnscanner, FindSecurityBugs, PMD, RetireJS,
    Arachni, Trufflehog, Androbugs, Androguard, and NMAP. The following screenshots
    show a typical example of its integrated interface.'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '| JackHammer | JackHammer 由 Ola 提供，是一个集成的安全测试工具。它为您提供一个仪表板，整合所有的测试结果。其主要区别在于
    JackHammer 包含移动应用安全扫描和源代码静态分析工具。支持的开源安全扫描工具包括 Brakeman、Bundler-Audit、Dawnscanner、FindSecurityBugs、PMD、RetireJS、Arachni、Trufflehog、Androbugs、Androguard
    和 NMAP。以下截图展示了其集成界面的典型示例。'
- en: JackHammer: [https://github.com/olacabs/jackhammer](https://github.com/olacabs/jackhammer)
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: JackHammer: [https://github.com/olacabs/jackhammer](https://github.com/olacabs/jackhammer)
- en: Additional information: [https://jch.olacabs.com/userguide/](https://jch.olacabs.com/userguide/)
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他信息: [https://jch.olacabs.com/userguide/](https://jch.olacabs.com/userguide/)
- en: '![](img/00041.jpeg) |'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/00041.jpeg) |'
- en: '| Faraday | Faraday is an integrated penetration testing environment, and provides
    a dashboard for all the testing results. It integrates with over 50 security tools.'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '| Faraday | Faraday 是一个集成的渗透测试环境，提供了一个管理所有测试结果的仪表板。它集成了超过 50 个安全工具。'
- en: Faraday: [https://www.faradaysec.com/#why-faraday](https://www.faradaysec.com/#why-faraday)
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'Faraday: [https://www.faradaysec.com/#why-faraday](https://www.faradaysec.com/#why-faraday)'
- en: Additional information: [https://github.com/infobyte/faraday/wiki/Plugin-List](https://github.com/infobyte/faraday/wiki/Plugin-List)
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他信息：[https://github.com/infobyte/faraday/wiki/Plugin-List](https://github.com/infobyte/faraday/wiki/Plugin-List)
- en: '|'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Mozilla Minion | Mozilla Minion is also an integrated security testing tool
    that includes the following plugins by default:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '| Mozilla Minion | Mozilla Minion 也是一款集成的安全测试工具，默认包含以下插件：'
- en: ZAP
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ZAP
- en: Nmap
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nmap
- en: Skipfish
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Skipfish
- en: SSLScan
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SSLScan
- en: You can find Mozilla Minion at [https://github.com/mozilla/minion/](https://github.com/mozilla/minion/).
    |
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在 [https://github.com/mozilla/minion/](https://github.com/mozilla/minion/)
    找到 Mozilla Minion。 |
- en: '| Penetration testing toolkit | Penetration testing toolkit provides a unified
    web interface for many Linux scanning tools, such as nmap, nikto, WhatWeb, SSLyze,
    fping, URLCrazy, lynx, mtr, nbtscan, automater, and shellinabox.'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '| 渗透测试工具包 | 渗透测试工具包为许多 Linux 扫描工具提供了统一的 Web 界面，例如 nmap、nikto、WhatWeb、SSLyze、fping、URLCrazy、lynx、mtr、nbtscan、automater
    和 shellinabox。'
- en: Penetration testing toolkit: [https://github.com/veerupandey/Penetration-Testing-Toolkit](https://github.com/veerupandey/Penetration-Testing-Toolkit)
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 渗透测试工具包：[https://github.com/veerupandey/Penetration-Testing-Toolkit](https://github.com/veerupandey/Penetration-Testing-Toolkit)
- en: '|'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| Seccubus | The key advantage of using Seccubus is that it integrates with
    various kinds of vulnerability scanner testing results, and also compares the
    differences between each scan. It includes the following scanners:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '| Seccubus | 使用 Seccubus 的主要优势在于它能够与各种漏洞扫描器的测试结果集成，并且还可以比较每次扫描之间的差异。它包括以下扫描器：'
- en: Nessus
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nessus
- en: OpenVAS
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenVAS
- en: NMAP
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NMAP
- en: Nikto
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Nikto
- en: Medusa
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Medusa
- en: SSLyze
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SSLyze
- en: SSL Labs
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SSL Labs
- en: TestSSL.sh
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TestSSL.sh
- en: SkipFish
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SkipFish
- en: ZAP
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ZAP
- en: You can find Seccubus at [https://github.com/schubergphilis/Seccubus](https://github.com/schubergphilis/Seccubus). 
    |
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在 [https://github.com/schubergphilis/Seccubus](https://github.com/schubergphilis/Seccubus)
    找到 Seccubus。  |
- en: '| OWTF | **Offensive Web Testing Framework** (**OWTF**) is an integrated security
    testing standards OWASP testing guide and includes PTES and NIST tools.'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '| OWTF | **进攻性 Web 测试框架** (**OWTF**) 是一个集成的安全测试标准，符合 OWASP 测试指南，并包含 PTES 和
    NIST 工具。'
- en: OWTF: [https://owtf.github.io/](https://owtf.github.io/)
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'OWTF: [https://owtf.github.io/](https://owtf.github.io/)'
- en: Additional information: [https://owtf.github.io/online-passive-scanner/](https://owtf.github.io/online-passive-scanner/)
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他信息：[https://owtf.github.io/online-passive-scanner/](https://owtf.github.io/online-passive-scanner/)
- en: '|'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: '| RapidScan | RapidScan is a mult-itool that includes a web-vulnerability scanner.
    The security scanning tools that it contains include nmap, dnsrecon, uniscan,
    sslyze, fierce, theharvester, and golismero. |'
  id: totrans-160
  prefs: []
  type: TYPE_TB
  zh: '| RapidScan | RapidScan 是一款多功能工具，包含 Web 漏洞扫描器。它包含的安全扫描工具包括 nmap、dnsrecon、uniscan、sslyze、fierce、theharvester、golismero。'
- en: '| DefectDojo | The OWASP DefectDojo is a security tool that can import and
    consolidate various security testing tool outputs into one management dashboard. DefectDojo: [https://github.com/DefectDojo/django-DefectDojo](https://github.com/DefectDojo/django-DefectDojo)
    |'
  id: totrans-161
  prefs: []
  type: TYPE_TB
  zh: '| DefectDojo | OWASP DefectDojo 是一款安全工具，可以将各种安全测试工具的输出导入并汇总到一个管理仪表板中。DefectDojo:
    [https://github.com/DefectDojo/django-DefectDojo](https://github.com/DefectDojo/django-DefectDojo)
    |'
- en: Summary
  id: totrans-162
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we learned about security testing toolkits. Based on the elements
    that are to be tested, there are Kali Linux, BlackArch, and PentestBox, which
    are the Linux security distributions that provide general security testing toolkits.
    As there are many tools, we suggested a minimum set of security tools to cover
    the white box review, web connection, vulnerability, and network security.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了安全测试工具包。根据需要测试的元素，有 Kali Linux、BlackArch 和 PentestBox，它们是提供通用安全测试工具包的
    Linux 安全发行版。由于工具种类繁多，我们建议了一套最小化的安全工具集，以覆盖白盒审查、网络连接、漏洞和网络安全。
- en: We also showed the key factors of security automation tools and compared the
    capabilities of some web security tools for supporting the CLI and REST API interfaces.
    The BDD Security framework was also introduced for the support of an automated
    framework. We looked at BDD Security, MITTN, and GauntIT.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还展示了安全自动化工具的关键因素，并比较了一些 Web 安全工具在支持 CLI 和 REST API 接口方面的能力。我们还介绍了 BDD 安全框架，它支持自动化框架。我们考察了
    BDD Security、MITTN 和 GauntIT。
- en: Some other security testing tools were also discussed. For Android security
    testing, MobSF (Mobile Security Framework) was recommended for a quick-win, fully
    automated analysis platform. For infrastructure security, we looked at the Lynis
    Security Auditing, OpenSCAP, or CIS Benchmarks security scanning tools to detect
    insecure configurations. For Docker security, there are three kinds of security
    tools—namely, the CIS security configuration best practices, the scan for known
    vulnerabilities, and the runtime threat analysis. Finally, we introduced the integrated
    security tools, which can help you to integrate and consolidate all the testing
    results.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 还讨论了其他一些安全测试工具。对于Android安全测试，推荐使用MobSF（移动安全框架）作为一个快速获胜、完全自动化的分析平台。对于基础设施安全，我们介绍了Lynis安全审计、OpenSCAP或CIS基准安全扫描工具，用于检测不安全的配置。对于Docker安全，有三类安全工具——即CIS安全配置最佳实践、已知漏洞扫描和运行时威胁分析。最后，我们介绍了集成安全工具，它们可以帮助您整合和合并所有的测试结果。
- en: In the next chapter, we will discuss security automation with continuous integration.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将讨论与持续集成结合的安全自动化。
- en: Questions
  id: totrans-167
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: 'Which one of the following is not a Linux distribution for security testing?
    Ans: d'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪个不是用于安全测试的Linux发行版？ 答案：d
- en: Kali Linux
  id: totrans-169
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Kali Linux
- en: BlackArch
  id: totrans-170
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: BlackArch
- en: PentestBox
  id: totrans-171
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: PentestBox
- en: OSSEC
  id: totrans-172
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: OSSEC
- en: The OWASP ZAP, Vega, and Arachni tools are used for which of the following security
    tests?
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: OWASP ZAP、Vega和Arachni工具用于以下哪种安全测试？
- en: Web security
  id: totrans-174
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Web安全
- en: Network security
  id: totrans-175
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 网络安全
- en: Intrusion detection
  id: totrans-176
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 入侵检测
- en: Integrity monitoring
  id: totrans-177
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完整性监控
- en: Which one of the following tools is used for vulnerability scanning?
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪个工具用于漏洞扫描？
- en: WireShark
  id: totrans-179
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: WireShark
- en: OpenVAS
  id: totrans-180
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: OpenVAS
- en: TCPDump
  id: totrans-181
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: TCPDump
- en: Hping
  id: totrans-182
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Hping
- en: Which one of the following is not a minimum criterion for automated testing?
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪个不是自动化测试的最低标准？
- en: GUI interface
  id: totrans-184
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: GUI界面
- en: CLI interface
  id: totrans-185
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: CLI接口
- en: API interface
  id: totrans-186
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: API接口
- en: Output formats
  id: totrans-187
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输出格式
- en: What're the benefits of using BDD security?
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用BDD安全的好处是什么？
- en: Integration with all tools
  id: totrans-189
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 与所有工具的集成
- en: Consolidated testing results
  id: totrans-190
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 整合测试结果
- en: Easy to communicate across the team
  id: totrans-191
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 团队之间沟通容易
- en: All of the above
  id: totrans-192
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以上所有
- en: Which one of the following is not used for Docker security?
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪个不是用于Docker安全的？
- en: Scanning for Docker security best practices based on CIS (Docker Bench, Actuary)
  id: totrans-194
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 基于CIS的Docker安全最佳实践扫描（Docker Bench，Actuary）
- en: Appie
  id: totrans-195
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Appie
- en: Scanning for known CVEs. (Claire, Anchor Engine)
  id: totrans-196
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 扫描已知的CVE。（Claire，Anchor Engine）
- en: Runtime threats analysis. (Falco, Dagda)
  id: totrans-197
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行时威胁分析。（Falco，Dagda）
- en: Which of the following is not mainly focused on infrastructure security?
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下哪个主要不是专注于基础设施安全？
- en: Inspec
  id: totrans-199
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Inspec
- en: Hardening Framework
  id: totrans-200
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 加固框架
- en: Serverspec
  id: totrans-201
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Serverspec
- en: PentestBox
  id: totrans-202
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: PentestBox
- en: Further reading
  id: totrans-203
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 深入阅读
- en: 'For more information visit the following URLs:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 欲了解更多信息，请访问以下网址：
- en: '**GauntIT examples**: [https://github.com/gauntIT/gauntIt/tree/master/examples/](https://github.com/gauntIT/gauntIt/tree/master/examples/)'
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GauntIT示例**: [https://github.com/gauntIT/gauntIt/tree/master/examples/](https://github.com/gauntIT/gauntIt/tree/master/examples/)'
- en: '**United States Government Configuration Baseline (USGCB)**: [https://csrc.nist.gov/projects/united-states-government-configuration-baseline/](https://csrc.nist.gov/projects/united-states-government-configuration-baseline/)'
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**美国政府配置基准（USGCB）**: [https://csrc.nist.gov/projects/united-states-government-configuration-baseline/](https://csrc.nist.gov/projects/united-states-government-configuration-baseline/)'
- en: '**National Checklist Program Repository**: [https://nvd.nist.gov/ncp/repository](https://nvd.nist.gov/ncp/repository)'
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**国家检查表程序库**: [https://nvd.nist.gov/ncp/repository](https://nvd.nist.gov/ncp/repository)'
- en: '**Docker Secure Deployment Guidelines**: [https://github.com/GDSSecurity/Docker-Secure-Deployment-Guidelines](https://github.com/GDSSecurity/Docker-Secure-Deployment-Guidelines)'
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Docker安全部署指南**: [https://github.com/GDSSecurity/Docker-Secure-Deployment-Guidelines](https://github.com/GDSSecurity/Docker-Secure-Deployment-Guidelines)'
- en: '**Vulscan**: [https://github.com/scipag/vulscan](https://github.com/scipag/vulscan)'
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Vulscan**: [https://github.com/scipag/vulscan](https://github.com/scipag/vulscan)'
- en: '**AttifyOS distribution for IoT security testing**: [https://github.com/adi0x90/attifyos](https://github.com/adi0x90/attifyos)'
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**AttifyOS物联网安全测试分发版**: [https://github.com/adi0x90/attifyos](https://github.com/adi0x90/attifyos)'
- en: '**Attify Firmware Analysis Toolkit**: [https://github.com/attify/firmware-analysis-toolkit](https://github.com/attify/firmware-analysis-toolkit)'
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Attify固件分析工具包**: [https://github.com/attify/firmware-analysis-toolkit](https://github.com/attify/firmware-analysis-toolkit)'
- en: '**CHIPSEC Platform Security Assessment Framework**: [https://github.com/chipsec/chipsec](https://github.com/chipsec/chipsec)'
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CHIPSEC平台安全评估框架**: [https://github.com/chipsec/chipsec](https://github.com/chipsec/chipsec)'
- en: '**List of penetration testing resources**: [https://github.com/enaqx/awesome-pentest](https://github.com/enaqx/awesome-pentest)'
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**渗透测试资源列表**: [https://github.com/enaqx/awesome-pentest](https://github.com/enaqx/awesome-pentest)'
- en: '**List of penetration testing resources**: [https://github.com/wtsxDev/Penetration-Testing](https://github.com/wtsxDev/Penetration-Testing)'
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**渗透测试资源列表**: [https://github.com/wtsxDev/Penetration-Testing](https://github.com/wtsxDev/Penetration-Testing)'
