["```\nvagrant up cd prod logging\nvagrant \nssh cd\n\n```", "```\nansible-playbook /vagrant/ansible/elk.yml \\\n -i /vagrant/ansible/hosts/prod \\\n --extra-vars \"logstash_config=file.conf\"\n\n```", "```\n- hosts: logging\n remote_user: vagrant\n serial: 1\n roles:\n - common\n - docker\n - elasticsearch\n - logstash\n - kibana\n\n```", "```\n- name: Container is running\n docker:\n name: elasticsearch\n image: elasticsearch\n state: running\n ports:\n - 9200:9200\n volumes:\n /data/elasticsearch:/usr/share/elasticsearch/data\n tags: [elasticsearch]\n\n```", "```\n- name: Directory is present\n file:\n path: \"{{ item.path }}\"\n recurse: yes\n state: directory\n mode: \"{{ item.mode }}\"\n with_items: directories\n tags: [logstash]\n\n- name: File is copied\n copy:\n src: \"{{ item.src }}\"\n dest: \"{{ item.dest }}\"\n with_items: files\n tags: [logstash]\n\n- name: Container is running\n docker:\n name: logstash\n image: logstash\n state: running\n expose:\n - 5044\n - 25826\n - 25826/udp\n - 25827\n - 25827/udp\n ports:\n - 5044:5044\n - 5044:5044/udp\n - 25826:25826\n - 25826:25826/udp\n - 25827:25827\n - 25827:25827/udp\n volumes:\n - /data/logstash/conf:/conf\n - /data/logstash/logs:/logs\n links:\n - elasticsearch:db\n command: logstash -f /conf/{{ logstash_config }}\n tags: [logstash]\n\n```", "```\ninput {\n file {\n path => \"/logs/**/*\"\n }\n}\n\noutput {\n stdout {\n codec => rubydebug\n }\n elasticsearch {\n hosts => db\n }\n}\n\n```", "```\n- name: Container is running\n docker:\n image: kibana\n name: kibana\n links:\n - elasticsearch:elasticsearch\n ports:\n - 5601:5601\n tags: [kibana]\n\n```", "```\nexit\n\nvagrant ssh logging\n\n```", "```\necho \"my first log entry\" \\\n >/data/logstash/logs/my.log\n\n```", "```\ndocker logs logstash\n\n```", "```\n{\n       \"message\" => \"my first log entry\",\n      \"@version\" => \"1\",\n    \"@timestamp\" => \"2016-02-01T18:01:04.044Z\",\n          \"host\" => \"logging\",\n          \"path\" => \"/logs/my.log\"\n}\n```", "```\necho \"my second log entry\" \\\n >>/data/logstash/logs/my.log\n\necho \"my third log entry\" \\\n >>/data/logstash/logs/my.log\n\ndocker logs logstash\n\n```", "```\n{\n       \"message\" => \"my first log entry\",\n      \"@version\" => \"1\",\n    \"@timestamp\" => \"2016-02-01T18:01:04.044Z\",\n          \"host\" => \"logging\",\n          \"path\" => \"/logs/my.log\"\n}\n{\n       \"message\" => \"my second log entry\",\n      \"@version\" => \"1\",\n    \"@timestamp\" => \"2016-02-01T18:02:06.141Z\",\n          \"host\" => \"logging\",\n          \"path\" => \"/logs/my.log\"\n}\n{\n       \"message\" => \"my third log entry\",\n      \"@version\" => \"1\",\n    \"@timestamp\" => \"2016-02-01T18:02:06.150Z\",\n          \"host\" => \"logging\",\n          \"path\" => \"/logs/my.log\"\n}\n```", "```\n127.0.0.1 - - [11/Dec/2015:00:01:45 -0800] \"GET /2016/01/11/the-devops-2-0-toolkit/ HTTP/1.1\" 200 3891 \"http://technologyconversations.com\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:25.0) Gecko/20100101 Firefox/25.0\"\n127.0.0.1 - - [11/Dec/2015:00:01:57 -0800] \"GET /2016/01/18/clustering-and-scaling-services/ HTTP/1.1\" 200 3891 \"http://technologyconversations.com\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:25.0) Gecko/20100101 Firefox/25.0\"\n127.0.0.1 - - [11/Dec/2015:00:01:59 -0800] \"GET /2016/01/26/self-healing-systems/ HTTP/1.1\" 200 3891 \"http://technologyconversations.com\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:25.0) Gecko/20100101 Firefox/25.0\"\n\n```", "```\ncat /tmp/apache.log \\\n >>/data/logstash/logs/apache.log\n\n```", "```\ndocker logs logstash\n\n```", "```\n{\n       \"message\" => \"127.0.0.1 - - [11/Dec/2015:00:01:45 -0800] \\\"GET /2016/01/11/the-devops-2-0-toolkit/ HTTP/1.1\\\" 200 3891 \\\"http://technologyconversations.com\\\" \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:25.0) Gecko/20100101 Firefox/25.0\\\"\",\n      \"@version\" => \"1\",\n    \"@timestamp\" => \"2016-02-01T19:06:21.940Z\",\n          \"host\" => \"logging\",\n          \"path\" => \"/logs/apache.log\"\n}\n{\n       \"message\" => \"127.0.0.1 - - [11/Dec/2015:00:01:57 -0800] \\\"GET /2016/01/18/clustering-and-scaling-services/ HTTP/1.1\\\" 200 3891 \\\"http://technologyconversations.com\\\" \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:25.0) Gecko/20100101 Firefox/25.0\\\"\",\n      \"@version\" => \"1\",\n    \"@timestamp\" => \"2016-02-01T19:06:21.949Z\",\n          \"host\" => \"logging\",\n          \"path\" => \"/logs/apache.log\"\n}\n{\n       \"message\" => \"127.0.0.1 - - [11/Dec/2015:00:01:59 -0800] \\\"GET /2016/01/26/self-healing-systems/ HTTP/1.1\\\" 200 3891 \\\"http://technologyconversations.com\\\" \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:25.0) Gecko/20100101 Firefox/25.0\\\"\",\n      \"@version\" => \"1\",\n    \"@timestamp\" => \"2016-02-01T19:06:21.949Z\",\n          \"host\" => \"logging\",\n          \"path\" => \"/logs/apache.log\"\n}\n```", "```\ninput {\n  file {\n    path => \"/logs/**/*\"\n  }\n}\n\nfilter {\n  grok {\n    match => { \"message\" => \"%{COMBINEDAPACHELOG}\" }\n  }\n  date {\n    match => [ \"timestamp\" , \"dd/MMM/yyyy:HH:mm:ss Z\" ]\n  }\n}\n\noutput {\n  stdout {\n    codec => rubydebug\n  }\n  elasticsearch {\n    hosts => db\n  }\n}\n```", "```\nsudo cp /data/logstash/conf/file-with-filters.conf \\\n /data/logstash/conf/file.conf\n\ndocker restart logstash\n\n```", "```\ncat /tmp/apache2.log \\\n >>/data/logstash/logs/apache.log\n\ndocker logs logstash\n\n```", "```\n{\n        \"message\" => \"127.0.0.1 - - [12/Dec/2015:00:01:59 -0800] \\\"GET /api/v1/books/_id/5 HTTP/1.1\\\" 200 3891 \\\"http://cadenza/xampp/navi.php\\\" \\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:25.0) Gecko/20100101 Firefox/25.0\\\"\",\n       \"@version\" => \"1\",\n     \"@timestamp\" => \"2015-12-12T08:01:59.000Z\",\n           \"host\" => \"logging\",\n           \"path\" => \"/logs/apache.log\",\n       \"clientip\" => \"127.0.0.1\",\n          \"ident\" => \"-\",\n           \"auth\" => \"-\",\n      \"timestamp\" => \"12/Dec/2015:00:01:59 -0800\",\n           \"verb\" => \"GET\",\n        \"request\" => \"/api/v1/books/_id/5\",\n    \"httpversion\" => \"1.1\",\n       \"response\" => \"200\",\n          \"bytes\" => \"3891\",\n       \"referrer\" => \"\\\"http://cadenza/xampp/navi.php\\\"\",\n          \"agent\" => \"\\\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:25.0) Gecko/20100101 Firefox/25.0\\\"\"\n}\n```", "```\ndocker rm -f lo\ngstash\n\nexit\n\nvagrant ssh cd\n\n```", "```\ninput {\n  beats {\n    port => 5044\n  }\n}\n\noutput {\n  stdout {\n    codec => rubydebug\n  }\n  elasticsearch {\n    hosts => db\n  }\n}\n```", "```\nansible-playbook /vagrant/ansible/elk.yml \\\n -i /vagrant/ansible/hosts/prod \\\n --extra-vars \"logstash_config=beats.conf\"\n\n```", "```\n- hosts: prod\n remote_user: vagrant\n serial: 1\n roles:\n - common\n - docker\n - docker-compose\n - consul\n - registrator\n - consul-template\n - nginx\n - file\n\n```", "```\n- name: Download the package\n get_url:\n url: https://download.elastic.co/beats/filebeat/filebeat_1.0.1_amd64.deb\n dest: /tmp/filebeat.deb\n tags: [filebeat]\n\n- name: Install the package\n apt:\n deb: /tmp/filebeat.deb\n tags: [filebeat]\n\n- name: Configuration is present\n template:\n src: filebeat.yml\n dest: /etc/filebeat/filebeat.yml\n tags: [filebeat]\n\n- name: Service is started\n service:\n name: filebeat\n state: started\n tags: [filebeat]\n\n```", "```\nfilebeat:\n prospectors:\n -\n paths:\n - \"/var/log/**/*.log\"\n\noutput:\n logstash:\n hosts: [\"{{ elk_ip }}:5044\"]\n\n```", "```\nansible-playbook /vagrant/ansible/prod3.yml \\\n -i /vagrant/ansible/hosts/prod\n\n```", "```\ndocker -H tcp://logging:2375 \\\n logs logstash\n\n```", "```\n...\n{\n       \"message\" => \"ttyS0 stop/pre-start, process 1301\",\n      \"@version\" => \"1\",\n    \"@timestamp\" => \"2016-02-02T14:50:45.557Z\",\n          \"beat\" => {\n        \"hostname\" => \"prod\",\n            \"name\" => \"prod\"\n    },\n         \"count\" => 1,\n        \"fields\" => nil,\n    \"input_type\" => \"log\",\n        \"offset\" => 0,\n        \"source\" => \"/var/log/upstart/ttyS0.log\",\n          \"type\" => \"log\",\n          \"host\" => \"prod\"\n}\n```", "```\ndocker -H \ntcp://logging:2375 \\\n rm -f logstash\n\n```", "```\ninput {\n  syslog {\n    type => syslog\n    port => 25826\n  }\n}\n```", "```\nfilter {\n  if \"docker/\" in [program] {\n    mutate {\n      add_field => {\n        \"container_id\" => \"%{program}\"\n      }\n    }\n    mutate {\n      gsub => [\n        \"container_id\", \"docker/\", \"\"\n      ]\n    }\n    mutate {\n      update => [\n        \"program\", \"docker\"\n      ]\n    }\n  }\n  if [container_id] == \"nginx\" {\n    grok {\n      match => [ \"message\" , \"%{COMBINEDAPACHELOG} %{HOSTPORT:upstream_address} %{NOTSPACE:upstream_response_time}\"]\n    }\n    mutate {\n      convert => [\"upstream_response_time\", \"float\"]\n    }\n  }\n}\n```", "```\noutput {\n  stdout {\n    codec => rubydebug\n  }\n  elasticsearch {\n    hosts => db\n  }\n}\n```", "```\nansible-playbook /vagrant/ansible/elk.yml \\\n -i /vagrant/ansible/hosts/prod \\\n --extra-vars \"logstash_config=syslog.conf\"\n\n```", "```\n- hosts: prod\n remote_user: vagrant\n serial: 1\n vars:\n - log_to_syslog: yes\n roles:\n - common\n - docker\n - docker-compose\n - consul\n - registrator\n - consul-template\n - nginx\n - rsyslog\n\n```", "```\n- name: Container is running\n docker:\n image: nginx\n name: nginx\n state: running\n ports: \"{{ ports }}\"\n volumes: \"{{ volumes }}\"\n log_driver: syslog\n log_opt:\n syslog-tag: nginx\n when: log_to_syslog is defined\n tags: [nginx]\n\n```", "```\n- name: Packages are present\n apt:\n name: \"{{ item }}\"\n state: latest\n install_recommends: no\n with_items:\n - rsyslog\n - logrotate\n tags: [rsyslog]\n\n- name: Config file is present\n template:\n src: 10-logstash.conf\n dest: /etc/rsyslog.d/10-logstash.conf\n register: config_result\n tags: [rsyslog]\n\n- name: Service is restarted\n shell: service rsyslog restart\n when: config_result.changed\n tags: [rsyslog]\n\n```", "```\n*.* @@{{ elk_ip }}:25826\n\n```", "```\ndocker -H tcp://prod:2375 \\\n rm -f nginx\n\nansible-playbook /vagrant/ansible/prod4.yml \\\n -i /vagrant/ansible/hosts/prod\n\n```", "```\ndocker -H tcp://logging:2375 \\\n logs logstash\n\n```", "```\n{\n           \"message\" => \"[55784.504413] docker0: port 3(veth4024c56) entered forwarding state\\n\",\n          \"@version\" => \"1\",\n        \"@timestamp\" => \"2016-02-02T21:58:23.000Z\",\n              \"type\" => \"syslog\",\n              \"host\" => \"10.100.198.201\",\n          \"priority\" => 6,\n         \"timestamp\" => \"Feb  2 21:58:23\",\n         \"logsource\" => \"prod\",\n           \"program\" => \"kernel\",\n          \"severity\" => 6,\n          \"facility\" => 0,\n    \"facility_label\" => \"kernel\",\n    \"severity_label\" => \"Informational\"\n}\n```", "```\nexit\n\nvagrant ssh prod\n\ngit clone https://github.com/vfarcic/books-ms.git\n\ncd books-ms\n\n```", "```\napp:\n image: 10.100.198.200:5000/books-ms\n ports:\n - 8080\n links:\n - db:db\n environment:\n - SERVICE_NAME=books-ms\n log_driver: syslog\n log_opt:\n syslog-tag: books-ms\n\ndb:\n image: mongo\n log_driver: syslog\n log_opt:\n syslog-tag: books-ms\n\n```", "```\ndocker-compose -p books-ms \\\n -f docker-compose-logging.yml \\\n up -d app\n\n```", "```\ndocker ps --filter name=booksms\n\n```", "```\ndocker -H tcp://logging:2375 \\\n logs logstash\n\n```", "```\n{\n \"message\" => \"[INFO] [02/03/2016 13:28:35.869] [routingSystem-akka.actor.default-dispatcher-5] [akka://routingSystem/user/IO-HTTP/listener-0] Bound to /0.0.0.0:8080\\n\",\n \"@version\" => \"1\",\n \"@timestamp\" => \"2016-02-03T13:28:35.000Z\",\n \"type\" => \"syslog\",\n \"host\" => \"10.100.198.201\",\n \"priority\" => 30,\n \"timestamp\" => \"Feb  3 13:28:35\",\n \"logsource\" => \"prod\",\n \"program\" => \"docker\",\n \"pid\" => \"11677\",\n \"severity\" => 6,\n \"facility\" => 3,\n \"facility_label\" => \"system\",\n \"severity_label\" => \"Informational\",\n \"container_id\" => \"books-ms\"\n}\n\n```", "```\ncp nginx-includes.conf \\\n /data/nginx/includes/books-ms.conf\n\nconsul-template \\\n -consul localhost:8500 \\\n -template \"nginx-upstreams.ctmpl:\\\n/data/nginx/upstreams/books-ms.conf:\\\ndocker kill -s HUP nginx\" \\\n -once\n\n```", "```\ncurl -I localhost/api/v1/books\n\ncurl -H 'Content-Type: application/json' -X PUT -d \\\n \"{\\\"_id\\\": 1,\n \\\"title\\\": \\\"My First Book\\\",\n \\\"author\\\": \\\"John Doe\\\",\n \\\"description\\\": \\\"Not a very good book\\\"}\" \\\n localhost/api/v1/books | jq '.'\n\ncurl http://prod/api/v1/books | jq '.'\n\n```", "```\ndocker -H tcp://logging:2375 \\\n logs logstash\n\n```", "```\n{\n \"message\" => \"172.17.0.1 - - [03/Feb/2016:13:37:12 +0000] \\\"GET /api/v1/books HTTP/1.1\\\" 200 269 \\\"-\\\" \\\"curl/7.35.0\\\" 10.100.198.201:32768 0.091 \\n\",\n \"@version\" => \"1\",\n \"@timestamp\" => \"2016-02-03T13:37:12.000Z\",\n \"type\" => \"syslog\",\n \"host\" => \"10.100.198.201\",\n \"priority\" => 30,\n \"timestamp\" => [\n [0] \"Feb  3 13:37:12\",\n [1] \"03/Feb/2016:13:37:12 +0000\"\n ],\n \"logsource\" => \"prod\",\n \"program\" => \"docker\",\n \"pid\" => \"11677\",\n \"severity\" => 6,\n \"facility\" => 3,\n \"facility_label\" => \"system\",\n \"severity_label\" => \"Informational\",\n \"container_id\" => \"nginx\",\n \"clientip\" => \"172.17.0.1\",\n \"ident\" => \"-\",\n \"auth\" => \"-\",\n \"verb\" => \"GET\",\n \"request\" => \"/api/v1/books\",\n \"httpversion\" => \"1.1\",\n \"response\" => \"200\",\n \"bytes\" => \"269\",\n \"referrer\" => \"\\\"-\\\"\",\n \"agent\" => \"\\\"curl/7.35.0\\\"\",\n \"upstream_address\" => \"10.100.198.201:32768\",\n \"upstream_response_time\" => 0.091\n}\n\n```", "```\ncurl 'http://logging:9200/logstash-*/_search' \\\n | jq '.'\n\n```", "```\ncurl 'http://logging:9200/logstash-*/_search?q=container_id:nginx' \\\n | jq '.'\n\n```", "```\ncurl 'http://logging:9200/logstash-*/_search?q=container_id:nginx' \\\n -d '{\n \"size\": 0,\n \"aggs\": {\n \"average_response_time\": {\n \"avg\": {\n \"field\": \"upstream_response_time\"\n }\n }\n }\n}' | jq '.'\n\n```", "```\n{\n  \"aggregations\": {\n    \"average_response_time\": {\n      \"value\": 0.20166666666666666\n    }\n  },\n  \"hits\": {\n    \"hits\": [],\n    \"max_score\": 0,\n    \"total\": 3\n  },\n  \"_shards\": {\n    \"failed\": 0,\n    \"successful\": 10,\n    \"total\": 10\n  },\n  \"timed_out\": false,\n  \"took\": 26\n}\n```", "```\nfor i in {1..100}; do\n curl http://prod/api/v1/books | jq '.'\ndone\n\n```", "```\ncurl 'http://logging:9200/logstash-*/_search' \\\n    -d '{\n  \"size\": 0,\n  \"aggs\": { \"last_hour\": {\n    \"filter\": {\n      \"bool\": { \"must\": [ {\n        \"query\": { \"match\": {\n          \"container_id\": {\n            \"query\": \"nginx\",\n            \"type\": \"phrase\"\n          }\n        } }\n      }, {\n        \"query\": { \"match\": {\n          \"request\": {\n            \"query\": \"/api/v1/books\",\n            \"type\": \"phrase\"\n          }\n        } }\n      }, {\n        \"range\": { \"@timestamp\": {\n          \"gte\": \"now-1h\",\n          \"lte\": \"now\"\n        } }\n      } ] }\n    },\n    \"aggs\": {\n      \"average_response_time\": {\n        \"avg\": {\n          \"field\": \"upstream_response_time\"\n        }\n      }\n    }\n  } }\n}' | jq '.'\n```", "```\n{\n  \"aggregations\": {\n    \"last_hour\": {\n      \"average_response_time\": {\n        \"value\": 0.005744897959183675\n      },\n      \"doc_count\": 98\n    }\n  },\n  \"hits\": {\n    \"hits\": [],\n    \"max_score\": 0,\n    \"total\": 413\n  },\n  \"_shards\": {\n    \"failed\": 0,\n    \"successful\": 10,\n    \"total\": 10\n  },\n  \"timed_out\": false,\n  \"took\": 11\n}\n```", "```\ndocker -H tcp://logging:2375 \\\n\n rm -f logstash\n\nexit\n\n```", "```\ninput {\n syslog {\n type => syslog\n port => 25826\n }\n udp {\n port => 25827\n buffer_size => 1452\n codec => collectd { }\n type => collectd\n }\n}\n\n```", "```\nvagrant ssh cd\n\nansible-playbook /vagrant/ansible/elk.yml \\\n -i /vagrant/ansible/hosts/prod \\\n --extra-vars \"logstash_config=syslog-collectd.conf restore_backup=true\"\n\n```", "```\n- name: Packages are installed\n apt:\n name: \"{{ item }}\"\n with_items: packages\n tags: [\"collectd\"]\n\n- name: Configuration is copied\n template:\n src: collectd.conf\n dest: /etc/collectd/collectd.conf\n register: config_result\n tags: [\"collectd\"]\n\n- name: Service is restarted\n service:\n name: collectd\n state: restarted\n when: config_result|changed\n tags: [\"collectd\"]\n\n```", "```\nHostname \"{{ ansible_hostname }}\"\nFQDNLookup false\n\nLoadPlugin cpu\nLoadPlugin df\nLoadPlugin interface\nLoadPlugin network\nLoadPlugin memory\nLoadPlugin swap\n\n<Plugin df>\n        Device \"/dev/sda1\"\n        MountPoint \"/\"\n        FSType \"ext4\"\n        ReportReserved \"true\"\n</Plugin>\n\n<Plugin interface>\n        Interface \"eth1\"\n        IgnoreSelected false\n</Plugin>\n\n<Plugin network>\n        Server \"{{ elk_ip }}\" \"25827\"\n</Plugin>\n\n<Include \"/etc/collectd/collectd.conf.d\">\n        Filter \".conf\"\n</Include>\n```", "```\nansible-playbook /vagrant/ansible/prod5.yml \\\n -i /vagrant/ansible/hosts/prod\n\n```", "```\ndocker -H tcp://logging:2375 \\\n logs logstash\n\n```", "```\n{\n             \"host\" => \"prod\",\n       \"@timestamp\" => \"2016-02-04T18:06:48.843Z\",\n           \"plugin\" => \"memory\",\n    \"collectd_type\" => \"memory\",\n    \"type_instance\" => \"used\",\n            \"value\" => 356433920.0,\n         \"@version\" => \"1\",\n             \"type\" => \"collectd\"\n}\n{\n             \"host\" => \"prod\",\n       \"@timestamp\" => \"2016-02-04T18:06:48.843Z\",\n           \"plugin\" => \"memory\",\n    \"collectd_type\" => \"memory\",\n    \"type_instance\" => \"buffered\",\n            \"value\" => 31326208.0,\n         \"@version\" => \"1\",\n             \"type\" => \"collectd\"\n}\n{\n             \"host\" => \"prod\",\n       \"@timestamp\" => \"2016-02-04T18:06:48.843Z\",\n           \"plugin\" => \"memory\",\n    \"collectd_type\" => \"memory\",\n    \"type_instance\" => \"cached\",\n            \"value\" => 524840960.0,\n         \"@version\" => \"1\",\n             \"type\" => \"collectd\"\n}\n{\n             \"host\" => \"prod\",\n       \"@timestamp\" => \"2016-02-04T18:06:48.843Z\",\n           \"plugin\" => \"memory\",\n    \"collectd_type\" => \"memory\",\n    \"type_instance\" => \"free\",\n            \"value\" => 129638400.0,\n         \"@version\" => \"1\",\n             \"type\" => \"collectd\"\n}\n```", "```\ntype: \"collectd\" AND host: \"prod\" AND plugin: \"memory\"\n\n```", "```\nexit\nvagrant destroy -f\n\n```"]